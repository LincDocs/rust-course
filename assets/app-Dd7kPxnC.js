const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-D4cSqbqs.js","assets/index-B-bTPAo1.js","assets/index-ILoLMTtv.js"])))=>i.map(i=>d[i]);
var O1=Object.defineProperty;var P1=(i,s,e)=>s in i?O1(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var hs=(i,s,e)=>P1(i,typeof s!="symbol"?s+"":s,e);const L1="modulepreload",N1=function(i){return"/rust-course/"+i},$c={},b=function(s,e,n){let a=Promise.resolve();if(e&&e.length>0){document.getElementsByTagName("link");const l=document.querySelector("meta[property=csp-nonce]"),r=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute("nonce"));a=Promise.allSettled(e.map(h=>{if(h=N1(h),h in $c)return;$c[h]=!0;const p=h.endsWith(".css"),k=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${h}"]${k}`))return;const d=document.createElement("link");if(d.rel=p?"stylesheet":L1,p||(d.as="script"),d.crossOrigin="",d.href=h,r&&d.setAttribute("nonce",r),document.head.appendChild(d),p)return new Promise((u,o)=>{d.addEventListener("load",u),d.addEventListener("error",()=>o(new Error(`Unable to preload CSS for ${h}`)))})}))}function t(l){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=l,window.dispatchEvent(r),!r.defaultPrevented)throw l}return a.then(l=>{for(const r of l||[])r.status==="rejected"&&t(r.reason);return s().catch(t)})};/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Ct(i){const s=Object.create(null);for(const e of i.split(","))s[e]=1;return e=>e in s}const Ji={},Ua=[],He=()=>{},M1=()=>!1,Kl=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),su=i=>i.startsWith("onUpdate:"),Fs=Object.assign,eu=(i,s)=>{const e=i.indexOf(s);e>-1&&i.splice(e,1)},$1=Object.prototype.hasOwnProperty,Ui=(i,s)=>$1.call(i,s),xi=Array.isArray,Ga=i=>Yl(i)==="[object Map]",_t=i=>Yl(i)==="[object Set]",Vc=i=>Yl(i)==="[object Date]",wi=i=>typeof i=="function",es=i=>typeof i=="string",Ee=i=>typeof i=="symbol",Zi=i=>i!==null&&typeof i=="object",WA=i=>(Zi(i)||wi(i))&&wi(i.then)&&wi(i.catch),KA=Object.prototype.toString,Yl=i=>KA.call(i),V1=i=>Yl(i).slice(8,-1),YA=i=>Yl(i)==="[object Object]",nu=i=>es(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,Wa=Ct(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Yh=i=>{const s=Object.create(null);return e=>s[e]||(s[e]=i(e))},z1=/-(\w)/g,Ws=Yh(i=>i.replace(z1,(s,e)=>e?e.toUpperCase():"")),q1=/\B([A-Z])/g,na=Yh(i=>i.replace(q1,"-$1").toLowerCase()),Xl=Yh(i=>i.charAt(0).toUpperCase()+i.slice(1)),Hp=Yh(i=>i?`on${Xl(i)}`:""),yn=(i,s)=>!Object.is(i,s),ih=(i,...s)=>{for(let e=0;e<i.length;e++)i[e](...s)},rt=(i,s,e,n=!1)=>{Object.defineProperty(i,s,{configurable:!0,enumerable:!1,writable:n,value:e})},Ah=i=>{const s=parseFloat(i);return isNaN(s)?i:s},H1=i=>{const s=es(i)?Number(i):NaN;return isNaN(s)?i:s};let zc;const Xh=()=>zc||(zc=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function ds(i){if(xi(i)){const s={};for(let e=0;e<i.length;e++){const n=i[e],a=es(n)?W1(n):ds(n);if(a)for(const t in a)s[t]=a[t]}return s}else if(es(i)||Zi(i))return i}const j1=/;(?![^(]*\))/g,U1=/:([^]+)/,G1=/\/\*[^]*?\*\//g;function W1(i){const s={};return i.replace(G1,"").split(j1).forEach(e=>{if(e){const n=e.split(U1);n.length>1&&(s[n[0].trim()]=n[1].trim())}}),s}function K1(i){if(!i)return"";if(es(i))return i;let s="";for(const e in i){const n=i[e];if(es(n)||typeof n=="number"){const a=e.startsWith("--")?e:na(e);s+=`${a}:${n};`}}return s}function Ii(i){let s="";if(es(i))s=i;else if(xi(i))for(let e=0;e<i.length;e++){const n=Ii(i[e]);n&&(s+=n+" ")}else if(Zi(i))for(const e in i)i[e]&&(s+=e+" ");return s.trim()}const XA="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Y1=Ct(XA),qc=Ct(XA+",async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected");function au(i){return!!i||i===""}const X1=Ct("accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap"),Z1=Ct("xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan");function J1(i){if(i==null)return!1;const s=typeof i;return s==="string"||s==="number"||s==="boolean"}const Q1=/[ !"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;function im(i,s){return i.replace(Q1,e=>`\\${e}`)}function sm(i,s){if(i.length!==s.length)return!1;let e=!0;for(let n=0;e&&n<i.length;n++)e=Zl(i[n],s[n]);return e}function Zl(i,s){if(i===s)return!0;let e=Vc(i),n=Vc(s);if(e||n)return e&&n?i.getTime()===s.getTime():!1;if(e=Ee(i),n=Ee(s),e||n)return i===s;if(e=xi(i),n=xi(s),e||n)return e&&n?sm(i,s):!1;if(e=Zi(i),n=Zi(s),e||n){if(!e||!n)return!1;const a=Object.keys(i).length,t=Object.keys(s).length;if(a!==t)return!1;for(const l in i){const r=i.hasOwnProperty(l),h=s.hasOwnProperty(l);if(r&&!h||!r&&h||!Zl(i[l],s[l]))return!1}}return String(i)===String(s)}function tu(i,s){return i.findIndex(e=>Zl(e,s))}const ZA=i=>!!(i&&i.__v_isRef===!0),Li=i=>es(i)?i:i==null?"":xi(i)||Zi(i)&&(i.toString===KA||!wi(i.toString))?ZA(i)?Li(i.value):JSON.stringify(i,JA,2):String(i),JA=(i,s)=>ZA(s)?JA(i,s.value):Ga(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((e,[n,a],t)=>(e[jp(n,t)+" =>"]=a,e),{})}:_t(s)?{[`Set(${s.size})`]:[...s.values()].map(e=>jp(e))}:Ee(s)?jp(s):Zi(s)&&!xi(s)&&!YA(s)?String(s):s,jp=(i,s="")=>{var e;return Ee(i)?`Symbol(${(e=i.description)!=null?e:s})`:i};/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Ls;class QA{constructor(s=!1){this.detached=s,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Ls,!s&&Ls&&(this.index=(Ls.scopes||(Ls.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let s,e;if(this.scopes)for(s=0,e=this.scopes.length;s<e;s++)this.scopes[s].pause();for(s=0,e=this.effects.length;s<e;s++)this.effects[s].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let s,e;if(this.scopes)for(s=0,e=this.scopes.length;s<e;s++)this.scopes[s].resume();for(s=0,e=this.effects.length;s<e;s++)this.effects[s].resume()}}run(s){if(this._active){const e=Ls;try{return Ls=this,s()}finally{Ls=e}}}on(){Ls=this}off(){Ls=this.parent}stop(s){if(this._active){this._active=!1;let e,n;for(e=0,n=this.effects.length;e<n;e++)this.effects[e].stop();for(this.effects.length=0,e=0,n=this.cleanups.length;e<n;e++)this.cleanups[e]();if(this.cleanups.length=0,this.scopes){for(e=0,n=this.scopes.length;e<n;e++)this.scopes[e].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!s){const a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0}}}function iy(i){return new QA(i)}function Zh(){return Ls}function el(i,s=!1){Ls&&Ls.cleanups.push(i)}let Qi;const Up=new WeakSet;class sy{constructor(s){this.fn=s,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,Ls&&Ls.active&&Ls.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Up.has(this)&&(Up.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||ny(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Hc(this),ay(this);const s=Qi,e=Fe;Qi=this,Fe=!0;try{return this.fn()}finally{ty(this),Qi=s,Fe=e,this.flags&=-3}}stop(){if(this.flags&1){for(let s=this.deps;s;s=s.nextDep)hu(s);this.deps=this.depsTail=void 0,Hc(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Up.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){zd(this)&&this.run()}get dirty(){return zd(this)}}let ey=0,nl,al;function ny(i,s=!1){if(i.flags|=8,s){i.next=al,al=i;return}i.next=nl,nl=i}function lu(){ey++}function ru(){if(--ey>0)return;if(al){let s=al;for(al=void 0;s;){const e=s.next;s.next=void 0,s.flags&=-9,s=e}}let i;for(;nl;){let s=nl;for(nl=void 0;s;){const e=s.next;if(s.next=void 0,s.flags&=-9,s.flags&1)try{s.trigger()}catch(n){i||(i=n)}s=e}}if(i)throw i}function ay(i){for(let s=i.deps;s;s=s.nextDep)s.version=-1,s.prevActiveLink=s.dep.activeLink,s.dep.activeLink=s}function ty(i){let s,e=i.depsTail,n=e;for(;n;){const a=n.prevDep;n.version===-1?(n===e&&(e=a),hu(n),em(n)):s=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0,n=a}i.deps=s,i.depsTail=e}function zd(i){for(let s=i.deps;s;s=s.nextDep)if(s.dep.version!==s.version||s.dep.computed&&(ly(s.dep.computed)||s.dep.version!==s.version))return!0;return!!i._dirty}function ly(i){if(i.flags&4&&!(i.flags&16)||(i.flags&=-17,i.globalVersion===gl))return;i.globalVersion=gl;const s=i.dep;if(i.flags|=2,s.version>0&&!i.isSSR&&i.deps&&!zd(i)){i.flags&=-3;return}const e=Qi,n=Fe;Qi=i,Fe=!0;try{ay(i);const a=i.fn(i._value);(s.version===0||yn(a,i._value))&&(i._value=a,s.version++)}catch(a){throw s.version++,a}finally{Qi=e,Fe=n,ty(i),i.flags&=-3}}function hu(i,s=!1){const{dep:e,prevSub:n,nextSub:a}=i;if(n&&(n.nextSub=a,i.prevSub=void 0),a&&(a.prevSub=n,i.nextSub=void 0),e.subs===i&&(e.subs=n,!n&&e.computed)){e.computed.flags&=-5;for(let t=e.computed.deps;t;t=t.nextDep)hu(t,!0)}!s&&!--e.sc&&e.map&&e.map.delete(e.key)}function em(i){const{prevDep:s,nextDep:e}=i;s&&(s.nextDep=e,i.prevDep=void 0),e&&(e.prevDep=s,i.nextDep=void 0)}let Fe=!0;const ry=[];function En(){ry.push(Fe),Fe=!1}function bn(){const i=ry.pop();Fe=i===void 0?!0:i}function Hc(i){const{cleanup:s}=i;if(i.cleanup=void 0,s){const e=Qi;Qi=void 0;try{s()}finally{Qi=e}}}let gl=0;class nm{constructor(s,e){this.sub=s,this.dep=e,this.version=e.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Jh{constructor(s){this.computed=s,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(s){if(!Qi||!Fe||Qi===this.computed)return;let e=this.activeLink;if(e===void 0||e.sub!==Qi)e=this.activeLink=new nm(Qi,this),Qi.deps?(e.prevDep=Qi.depsTail,Qi.depsTail.nextDep=e,Qi.depsTail=e):Qi.deps=Qi.depsTail=e,hy(e);else if(e.version===-1&&(e.version=this.version,e.nextDep)){const n=e.nextDep;n.prevDep=e.prevDep,e.prevDep&&(e.prevDep.nextDep=n),e.prevDep=Qi.depsTail,e.nextDep=void 0,Qi.depsTail.nextDep=e,Qi.depsTail=e,Qi.deps===e&&(Qi.deps=n)}return e}trigger(s){this.version++,gl++,this.notify(s)}notify(s){lu();try{for(let e=this.subs;e;e=e.prevSub)e.sub.notify()&&e.sub.dep.notify()}finally{ru()}}}function hy(i){if(i.dep.sc++,i.sub.flags&4){const s=i.dep.computed;if(s&&!i.dep.subs){s.flags|=20;for(let n=s.deps;n;n=n.nextDep)hy(n)}const e=i.dep.subs;e!==i&&(i.prevSub=e,e&&(e.nextSub=i)),i.dep.subs=i}}const yh=new WeakMap,ma=Symbol(""),qd=Symbol(""),Bl=Symbol("");function Is(i,s,e){if(Fe&&Qi){let n=yh.get(i);n||yh.set(i,n=new Map);let a=n.get(e);a||(n.set(e,a=new Jh),a.map=n,a.key=e),a.track()}}function dn(i,s,e,n,a,t){const l=yh.get(i);if(!l){gl++;return}const r=h=>{h&&h.trigger()};if(lu(),s==="clear")l.forEach(r);else{const h=xi(i),p=h&&nu(e);if(h&&e==="length"){const k=Number(n);l.forEach((d,u)=>{(u==="length"||u===Bl||!Ee(u)&&u>=k)&&r(d)})}else switch((e!==void 0||l.has(void 0))&&r(l.get(e)),p&&r(l.get(Bl)),s){case"add":h?p&&r(l.get("length")):(r(l.get(ma)),Ga(i)&&r(l.get(qd)));break;case"delete":h||(r(l.get(ma)),Ga(i)&&r(l.get(qd)));break;case"set":Ga(i)&&r(l.get(ma));break}}ru()}function am(i,s){const e=yh.get(i);return e&&e.get(s)}function La(i){const s=Pi(i);return s===i?s:(Is(s,"iterate",Bl),ce(i)?s:s.map(Rs))}function Qh(i){return Is(i=Pi(i),"iterate",Bl),i}const tm={__proto__:null,[Symbol.iterator](){return Gp(this,Symbol.iterator,Rs)},concat(...i){return La(this).concat(...i.map(s=>xi(s)?La(s):s))},entries(){return Gp(this,"entries",i=>(i[1]=Rs(i[1]),i))},every(i,s){return en(this,"every",i,s,void 0,arguments)},filter(i,s){return en(this,"filter",i,s,e=>e.map(Rs),arguments)},find(i,s){return en(this,"find",i,s,Rs,arguments)},findIndex(i,s){return en(this,"findIndex",i,s,void 0,arguments)},findLast(i,s){return en(this,"findLast",i,s,Rs,arguments)},findLastIndex(i,s){return en(this,"findLastIndex",i,s,void 0,arguments)},forEach(i,s){return en(this,"forEach",i,s,void 0,arguments)},includes(...i){return Wp(this,"includes",i)},indexOf(...i){return Wp(this,"indexOf",i)},join(i){return La(this).join(i)},lastIndexOf(...i){return Wp(this,"lastIndexOf",i)},map(i,s){return en(this,"map",i,s,void 0,arguments)},pop(){return Lt(this,"pop")},push(...i){return Lt(this,"push",i)},reduce(i,...s){return jc(this,"reduce",i,s)},reduceRight(i,...s){return jc(this,"reduceRight",i,s)},shift(){return Lt(this,"shift")},some(i,s){return en(this,"some",i,s,void 0,arguments)},splice(...i){return Lt(this,"splice",i)},toReversed(){return La(this).toReversed()},toSorted(i){return La(this).toSorted(i)},toSpliced(...i){return La(this).toSpliced(...i)},unshift(...i){return Lt(this,"unshift",i)},values(){return Gp(this,"values",Rs)}};function Gp(i,s,e){const n=Qh(i),a=n[s]();return n!==i&&!ce(i)&&(a._next=a.next,a.next=()=>{const t=a._next();return t.value&&(t.value=e(t.value)),t}),a}const lm=Array.prototype;function en(i,s,e,n,a,t){const l=Qh(i),r=l!==i&&!ce(i),h=l[s];if(h!==lm[s]){const d=h.apply(i,t);return r?Rs(d):d}let p=e;l!==i&&(r?p=function(d,u){return e.call(this,Rs(d),u,i)}:e.length>2&&(p=function(d,u){return e.call(this,d,u,i)}));const k=h.call(l,p,n);return r&&a?a(k):k}function jc(i,s,e,n){const a=Qh(i);let t=e;return a!==i&&(ce(i)?e.length>3&&(t=function(l,r,h){return e.call(this,l,r,h,i)}):t=function(l,r,h){return e.call(this,l,Rs(r),h,i)}),a[s](t,...n)}function Wp(i,s,e){const n=Pi(i);Is(n,"iterate",Bl);const a=n[s](...e);return(a===-1||a===!1)&&du(e[0])?(e[0]=Pi(e[0]),n[s](...e)):a}function Lt(i,s,e=[]){En(),lu();const n=Pi(i)[s].apply(i,e);return ru(),bn(),n}const rm=Ct("__proto__,__v_isRef,__isVue"),py=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(Ee));function hm(i){Ee(i)||(i=String(i));const s=Pi(this);return Is(s,"has",i),s.hasOwnProperty(i)}class ky{constructor(s=!1,e=!1){this._isReadonly=s,this._isShallow=e}get(s,e,n){if(e==="__v_skip")return s.__v_skip;const a=this._isReadonly,t=this._isShallow;if(e==="__v_isReactive")return!a;if(e==="__v_isReadonly")return a;if(e==="__v_isShallow")return t;if(e==="__v_raw")return n===(a?t?ym:cy:t?uy:oy).get(s)||Object.getPrototypeOf(s)===Object.getPrototypeOf(n)?s:void 0;const l=xi(s);if(!a){let h;if(l&&(h=tm[e]))return h;if(e==="hasOwnProperty")return hm}const r=Reflect.get(s,e,ts(s)?s:n);return(Ee(e)?py.has(e):rm(e))||(a||Is(s,"get",e),t)?r:ts(r)?l&&nu(e)?r:r.value:Zi(r)?a?We(r):Xn(r):r}}class dy extends ky{constructor(s=!1){super(!1,s)}set(s,e,n,a){let t=s[e];if(!this._isShallow){const h=_a(t);if(!ce(n)&&!_a(n)&&(t=Pi(t),n=Pi(n)),!xi(s)&&ts(t)&&!ts(n))return h?!1:(t.value=n,!0)}const l=xi(s)&&nu(e)?Number(e)<s.length:Ui(s,e),r=Reflect.set(s,e,n,ts(s)?s:a);return s===Pi(a)&&(l?yn(n,t)&&dn(s,"set",e,n):dn(s,"add",e,n)),r}deleteProperty(s,e){const n=Ui(s,e);s[e];const a=Reflect.deleteProperty(s,e);return a&&n&&dn(s,"delete",e,void 0),a}has(s,e){const n=Reflect.has(s,e);return(!Ee(e)||!py.has(e))&&Is(s,"has",e),n}ownKeys(s){return Is(s,"iterate",xi(s)?"length":ma),Reflect.ownKeys(s)}}class pm extends ky{constructor(s=!1){super(!0,s)}set(s,e){return!0}deleteProperty(s,e){return!0}}const km=new dy,dm=new pm,om=new dy(!0);const Hd=i=>i,Dr=i=>Reflect.getPrototypeOf(i);function um(i,s,e){return function(...n){const a=this.__v_raw,t=Pi(a),l=Ga(t),r=i==="entries"||i===Symbol.iterator&&l,h=i==="keys"&&l,p=a[i](...n),k=e?Hd:s?jd:Rs;return!s&&Is(t,"iterate",h?qd:ma),{next(){const{value:d,done:u}=p.next();return u?{value:d,done:u}:{value:r?[k(d[0]),k(d[1])]:k(d),done:u}},[Symbol.iterator](){return this}}}}function xr(i){return function(...s){return i==="delete"?!1:i==="clear"?void 0:this}}function cm(i,s){const e={get(a){const t=this.__v_raw,l=Pi(t),r=Pi(a);i||(yn(a,r)&&Is(l,"get",a),Is(l,"get",r));const{has:h}=Dr(l),p=s?Hd:i?jd:Rs;if(h.call(l,a))return p(t.get(a));if(h.call(l,r))return p(t.get(r));t!==l&&t.get(a)},get size(){const a=this.__v_raw;return!i&&Is(Pi(a),"iterate",ma),Reflect.get(a,"size",a)},has(a){const t=this.__v_raw,l=Pi(t),r=Pi(a);return i||(yn(a,r)&&Is(l,"has",a),Is(l,"has",r)),a===r?t.has(a):t.has(a)||t.has(r)},forEach(a,t){const l=this,r=l.__v_raw,h=Pi(r),p=s?Hd:i?jd:Rs;return!i&&Is(h,"iterate",ma),r.forEach((k,d)=>a.call(t,p(k),p(d),l))}};return Fs(e,i?{add:xr("add"),set:xr("set"),delete:xr("delete"),clear:xr("clear")}:{add(a){!s&&!ce(a)&&!_a(a)&&(a=Pi(a));const t=Pi(this);return Dr(t).has.call(t,a)||(t.add(a),dn(t,"add",a,a)),this},set(a,t){!s&&!ce(t)&&!_a(t)&&(t=Pi(t));const l=Pi(this),{has:r,get:h}=Dr(l);let p=r.call(l,a);p||(a=Pi(a),p=r.call(l,a));const k=h.call(l,a);return l.set(a,t),p?yn(t,k)&&dn(l,"set",a,t):dn(l,"add",a,t),this},delete(a){const t=Pi(this),{has:l,get:r}=Dr(t);let h=l.call(t,a);h||(a=Pi(a),h=l.call(t,a)),r&&r.call(t,a);const p=t.delete(a);return h&&dn(t,"delete",a,void 0),p},clear(){const a=Pi(this),t=a.size!==0,l=a.clear();return t&&dn(a,"clear",void 0,void 0),l}}),["keys","values","entries",Symbol.iterator].forEach(a=>{e[a]=um(a,i,s)}),e}function pu(i,s){const e=cm(i,s);return(n,a,t)=>a==="__v_isReactive"?!i:a==="__v_isReadonly"?i:a==="__v_raw"?n:Reflect.get(Ui(e,a)&&a in n?e:n,a,t)}const gm={get:pu(!1,!1)},Bm={get:pu(!1,!0)},Am={get:pu(!0,!1)};const oy=new WeakMap,uy=new WeakMap,cy=new WeakMap,ym=new WeakMap;function fm(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function mm(i){return i.__v_skip||!Object.isExtensible(i)?0:fm(V1(i))}function Xn(i){return _a(i)?i:ku(i,!1,km,gm,oy)}function gy(i){return ku(i,!1,om,Bm,uy)}function We(i){return ku(i,!0,dm,Am,cy)}function ku(i,s,e,n,a){if(!Zi(i)||i.__v_raw&&!(s&&i.__v_isReactive))return i;const t=a.get(i);if(t)return t;const l=mm(i);if(l===0)return i;const r=new Proxy(i,l===2?n:e);return a.set(i,r),r}function Ka(i){return _a(i)?Ka(i.__v_raw):!!(i&&i.__v_isReactive)}function _a(i){return!!(i&&i.__v_isReadonly)}function ce(i){return!!(i&&i.__v_isShallow)}function du(i){return i?!!i.__v_raw:!1}function Pi(i){const s=i&&i.__v_raw;return s?Pi(s):i}function Ya(i){return!Ui(i,"__v_skip")&&Object.isExtensible(i)&&rt(i,"__v_skip",!0),i}const Rs=i=>Zi(i)?Xn(i):i,jd=i=>Zi(i)?We(i):i;function ts(i){return i?i.__v_isRef===!0:!1}function Z(i){return By(i,!1)}function Ti(i){return By(i,!0)}function By(i,s){return ts(i)?i:new vm(i,s)}class vm{constructor(s,e){this.dep=new Jh,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=e?s:Pi(s),this._value=e?s:Rs(s),this.__v_isShallow=e}get value(){return this.dep.track(),this._value}set value(s){const e=this._rawValue,n=this.__v_isShallow||ce(s)||_a(s);s=n?s:Pi(s),yn(s,e)&&(this._rawValue=s,this._value=n?s:Rs(s),this.dep.trigger())}}function mi(i){return ts(i)?i.value:i}function vi(i){return wi(i)?i():mi(i)}const Fm={get:(i,s,e)=>s==="__v_raw"?i:mi(Reflect.get(i,s,e)),set:(i,s,e,n)=>{const a=i[s];return ts(a)&&!ts(e)?(a.value=e,!0):Reflect.set(i,s,e,n)}};function Ay(i){return Ka(i)?i:new Proxy(i,Fm)}class Em{constructor(s){this.__v_isRef=!0,this._value=void 0;const e=this.dep=new Jh,{get:n,set:a}=s(e.track.bind(e),e.trigger.bind(e));this._get=n,this._set=a}get value(){return this._value=this._get()}set value(s){this._set(s)}}function ou(i){return new Em(i)}function bm(i){const s=xi(i)?new Array(i.length):{};for(const e in i)s[e]=yy(i,e);return s}class Cm{constructor(s,e,n){this._object=s,this._key=e,this._defaultValue=n,this.__v_isRef=!0,this._value=void 0}get value(){const s=this._object[this._key];return this._value=s===void 0?this._defaultValue:s}set value(s){this._object[this._key]=s}get dep(){return am(Pi(this._object),this._key)}}class _m{constructor(s){this._getter=s,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function Mi(i,s,e){return ts(i)?i:wi(i)?new _m(i):Zi(i)&&arguments.length>1?yy(i,s,e):Z(i)}function yy(i,s,e){const n=i[s];return ts(n)?n:new Cm(i,s,e)}class Dm{constructor(s,e,n){this.fn=s,this.setter=e,this._value=void 0,this.dep=new Jh(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=gl-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!e,this.isSSR=n}notify(){if(this.flags|=16,!(this.flags&8)&&Qi!==this)return ny(this,!0),!0}get value(){const s=this.dep.track();return ly(this),s&&(s.version=this.dep.version),this._value}set value(s){this.setter&&this.setter(s)}}function xm(i,s,e=!1){let n,a;return wi(i)?n=i:(n=i.get,a=i.set),new Dm(n,a,e)}const wr={},fh=new WeakMap;let da;function wm(i,s=!1,e=da){if(e){let n=fh.get(e);n||fh.set(e,n=[]),n.push(i)}}function Tm(i,s,e=Ji){const{immediate:n,deep:a,once:t,scheduler:l,augmentJob:r,call:h}=e,p=v=>a?v:ce(v)||a===!1||a===0?on(v,1):on(v);let k,d,u,o,c=!1,A=!1;if(ts(i)?(d=()=>i.value,c=ce(i)):Ka(i)?(d=()=>p(i),c=!0):xi(i)?(A=!0,c=i.some(v=>Ka(v)||ce(v)),d=()=>i.map(v=>{if(ts(v))return v.value;if(Ka(v))return p(v);if(wi(v))return h?h(v,2):v()})):wi(i)?s?d=h?()=>h(i,2):i:d=()=>{if(u){En();try{u()}finally{bn()}}const v=da;da=k;try{return h?h(i,3,[o]):i(o)}finally{da=v}}:d=He,s&&a){const v=d,C=a===!0?1/0:a;d=()=>on(v(),C)}const g=Zh(),f=()=>{k.stop(),g&&g.active&&eu(g.effects,k)};if(t&&s){const v=s;s=(...C)=>{v(...C),f()}}let m=A?new Array(i.length).fill(wr):wr;const y=v=>{if(!(!(k.flags&1)||!k.dirty&&!v))if(s){const C=k.run();if(a||c||(A?C.some((S,L)=>yn(S,m[L])):yn(C,m))){u&&u();const S=da;da=k;try{const L=[C,m===wr?void 0:A&&m[0]===wr?[]:m,o];h?h(s,3,L):s(...L),m=C}finally{da=S}}}else k.run()};return r&&r(y),k=new sy(d),k.scheduler=l?()=>l(y,!1):y,o=v=>wm(v,!1,k),u=k.onStop=()=>{const v=fh.get(k);if(v){if(h)h(v,4);else for(const C of v)C();fh.delete(k)}},s?n?y(!0):m=k.run():l?l(y.bind(null,!0),!0):k.run(),f.pause=k.pause.bind(k),f.resume=k.resume.bind(k),f.stop=f,f}function on(i,s=1/0,e){if(s<=0||!Zi(i)||i.__v_skip||(e=e||new Set,e.has(i)))return i;if(e.add(i),s--,ts(i))on(i.value,s,e);else if(xi(i))for(let n=0;n<i.length;n++)on(i[n],s,e);else if(_t(i)||Ga(i))i.forEach(n=>{on(n,s,e)});else if(YA(i)){for(const n in i)on(i[n],s,e);for(const n of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,n)&&on(i[n],s,e)}return i}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const tl=[];let Kp=!1;function Sn(i,...s){if(Kp)return;Kp=!0,En();const e=tl.length?tl[tl.length-1].component:null,n=e&&e.appContext.config.warnHandler,a=Sm();if(n)Dt(n,e,11,[i+s.map(t=>{var l,r;return(r=(l=t.toString)==null?void 0:l.call(t))!=null?r:JSON.stringify(t)}).join(""),e&&e.proxy,a.map(({vnode:t})=>`at <${B4(e,t.type)}>`).join(`
`),a]);else{const t=[`[Vue warn]: ${i}`,...s];a.length&&t.push(`
`,...Im(a)),console.warn(...t)}bn(),Kp=!1}function Sm(){let i=tl[tl.length-1];if(!i)return[];const s=[];for(;i;){const e=s[0];e&&e.vnode===i?e.recurseCount++:s.push({vnode:i,recurseCount:0});const n=i.component&&i.component.parent;i=n&&n.vnode}return s}function Im(i){const s=[];return i.forEach((e,n)=>{s.push(...n===0?[]:[`
`],...Rm(e))}),s}function Rm({vnode:i,recurseCount:s}){const e=s>0?`... (${s} recursive calls)`:"",n=i.component?i.component.parent==null:!1,a=` at <${B4(i.component,i.type,n)}`,t=">"+e;return i.props?[a,...Om(i.props),t]:[a+t]}function Om(i){const s=[],e=Object.keys(i);return e.slice(0,3).forEach(n=>{s.push(...fy(n,i[n]))}),e.length>3&&s.push(" ..."),s}function fy(i,s,e){return es(s)?(s=JSON.stringify(s),e?s:[`${i}=${s}`]):typeof s=="number"||typeof s=="boolean"||s==null?e?s:[`${i}=${s}`]:ts(s)?(s=fy(i,Pi(s.value),!0),e?s:[`${i}=Ref<`,s,">"]):wi(s)?[`${i}=fn${s.name?`<${s.name}>`:""}`]:(s=Pi(s),e?s:[`${i}=`,s])}function Dt(i,s,e,n){try{return n?i(...n):i()}catch(a){Jl(a,s,e)}}function be(i,s,e,n){if(wi(i)){const a=Dt(i,s,e,n);return a&&WA(a)&&a.catch(t=>{Jl(t,s,e)}),a}if(xi(i)){const a=[];for(let t=0;t<i.length;t++)a.push(be(i[t],s,e,n));return a}}function Jl(i,s,e,n=!0){const a=s?s.vnode:null,{errorHandler:t,throwUnhandledErrorInProduction:l}=s&&s.appContext.config||Ji;if(s){let r=s.parent;const h=s.proxy,p=`https://vuejs.org/error-reference/#runtime-${e}`;for(;r;){const k=r.ec;if(k){for(let d=0;d<k.length;d++)if(k[d](i,h,p)===!1)return}r=r.parent}if(t){En(),Dt(t,null,10,[i,h,p]),bn();return}}Pm(i,e,a,n,l)}function Pm(i,s,e,n=!0,a=!1){if(a)throw i;console.error(i)}const Ns=[];let Le=-1;const Xa=[];let Pn=null,za=0;const my=Promise.resolve();let mh=null;function Hi(i){const s=mh||my;return i?s.then(this?i.bind(this):i):s}function Lm(i){let s=Le+1,e=Ns.length;for(;s<e;){const n=s+e>>>1,a=Ns[n],t=Al(a);t<i||t===i&&a.flags&2?s=n+1:e=n}return s}function uu(i){if(!(i.flags&1)){const s=Al(i),e=Ns[Ns.length-1];!e||!(i.flags&2)&&s>=Al(e)?Ns.push(i):Ns.splice(Lm(s),0,i),i.flags|=1,vy()}}function vy(){mh||(mh=my.then(Fy))}function Nm(i){xi(i)?Xa.push(...i):Pn&&i.id===-1?Pn.splice(za+1,0,i):i.flags&1||(Xa.push(i),i.flags|=1),vy()}function Uc(i,s,e=Le+1){for(;e<Ns.length;e++){const n=Ns[e];if(n&&n.flags&2){if(i&&n.id!==i.uid)continue;Ns.splice(e,1),e--,n.flags&4&&(n.flags&=-2),n(),n.flags&4||(n.flags&=-2)}}}function vh(i){if(Xa.length){const s=[...new Set(Xa)].sort((e,n)=>Al(e)-Al(n));if(Xa.length=0,Pn){Pn.push(...s);return}for(Pn=s,za=0;za<Pn.length;za++){const e=Pn[za];e.flags&4&&(e.flags&=-2),e.flags&8||e(),e.flags&=-2}Pn=null,za=0}}const Al=i=>i.id==null?i.flags&2?-1:1/0:i.id;function Fy(i){try{for(Le=0;Le<Ns.length;Le++){const s=Ns[Le];s&&!(s.flags&8)&&(s.flags&4&&(s.flags&=-2),Dt(s,s.i,s.i?15:14),s.flags&4||(s.flags&=-2))}}finally{for(;Le<Ns.length;Le++){const s=Ns[Le];s&&(s.flags&=-2)}Le=-1,Ns.length=0,vh(),mh=null,(Ns.length||Xa.length)&&Fy()}}let Ve,Gt=[],Ud=!1;function ip(i,...s){Ve?Ve.emit(i,...s):Ud||Gt.push({event:i,args:s})}function Ey(i,s){var e,n;Ve=i,Ve?(Ve.enabled=!0,Gt.forEach(({event:a,args:t})=>Ve.emit(a,...t)),Gt=[]):typeof window<"u"&&window.HTMLElement&&!((n=(e=window.navigator)==null?void 0:e.userAgent)!=null&&n.includes("jsdom"))?((s.__VUE_DEVTOOLS_HOOK_REPLAY__=s.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(t=>{Ey(t,s)}),setTimeout(()=>{Ve||(s.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Ud=!0,Gt=[])},3e3)):(Ud=!0,Gt=[])}function Mm(i,s){ip("app:init",i,s,{Fragment:_i,Text:Kn,Comment:xs,Static:Za})}function $m(i){ip("app:unmount",i)}const Vm=cu("component:added"),by=cu("component:updated"),zm=cu("component:removed"),qm=i=>{Ve&&typeof Ve.cleanupBuffer=="function"&&!Ve.cleanupBuffer(i)&&zm(i)};/*! #__NO_SIDE_EFFECTS__ */function cu(i){return s=>{ip(i,s.appContext.app,s.uid,s.parent?s.parent.uid:void 0,s)}}function Hm(i,s,e){ip("component:emit",i.appContext.app,i,s,e)}let fs=null,Cy=null;function Fh(i){const s=fs;return fs=i,Cy=i&&i.type.__scopeId||null,s}function $i(i,s=fs,e){if(!s||i._n)return i;const n=(...a)=>{n._d&&tg(-1);const t=Fh(s);let l;try{l=i(...a)}finally{Fh(t),n._d&&tg(1)}return by(s),l};return n._n=!0,n._c=!0,n._d=!0,n}function os(i,s){if(fs===null)return i;const e=ap(fs),n=i.dirs||(i.dirs=[]);for(let a=0;a<s.length;a++){let[t,l,r,h=Ji]=s[a];t&&(wi(t)&&(t={mounted:t,updated:t}),t.deep&&on(l),n.push({dir:t,instance:e,value:l,oldValue:void 0,arg:r,modifiers:h}))}return i}function Ne(i,s,e,n){const a=i.dirs,t=s&&s.dirs;for(let l=0;l<a.length;l++){const r=a[l];t&&(r.oldValue=t[l].value);let h=r.dir[n];h&&(En(),be(h,e,8,[i.el,r,i,s]),bn())}}const jm=Symbol("_vte"),_y=i=>i.__isTeleport,Ln=Symbol("_leaveCb"),Tr=Symbol("_enterCb");function Dy(){const i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Di(()=>{i.isMounted=!0}),xt(()=>{i.isUnmounting=!0}),i}const ke=[Function,Array],xy={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ke,onEnter:ke,onAfterEnter:ke,onEnterCancelled:ke,onBeforeLeave:ke,onLeave:ke,onAfterLeave:ke,onLeaveCancelled:ke,onBeforeAppear:ke,onAppear:ke,onAfterAppear:ke,onAppearCancelled:ke},wy=i=>{const s=i.subTree;return s.component?wy(s.component):s},Um={name:"BaseTransition",props:xy,setup(i,{slots:s}){const e=pe(),n=Dy();return()=>{const a=s.default&&gu(s.default(),!0);if(!a||!a.length)return;const t=Ty(a),l=Pi(i),{mode:r}=l;if(n.isLeaving)return Yp(t);const h=Gc(t);if(!h)return Yp(t);let p=yl(h,l,n,e,d=>p=d);h.type!==xs&&Da(h,p);let k=e.subTree&&Gc(e.subTree);if(k&&k.type!==xs&&!ua(h,k)&&wy(e).type!==xs){let d=yl(k,l,n,e);if(Da(k,d),r==="out-in"&&h.type!==xs)return n.isLeaving=!0,d.afterLeave=()=>{n.isLeaving=!1,e.job.flags&8||e.update(),delete d.afterLeave,k=void 0},Yp(t);r==="in-out"&&h.type!==xs?d.delayLeave=(u,o,c)=>{const A=Sy(n,k);A[String(k.key)]=k,u[Ln]=()=>{o(),u[Ln]=void 0,delete p.delayedLeave,k=void 0},p.delayedLeave=()=>{c(),delete p.delayedLeave,k=void 0}}:k=void 0}else k&&(k=void 0);return t}}};function Ty(i){let s=i[0];if(i.length>1){for(const e of i)if(e.type!==xs){s=e;break}}return s}const Gm=Um;function Sy(i,s){const{leavingVNodes:e}=i;let n=e.get(s.type);return n||(n=Object.create(null),e.set(s.type,n)),n}function yl(i,s,e,n,a){const{appear:t,mode:l,persisted:r=!1,onBeforeEnter:h,onEnter:p,onAfterEnter:k,onEnterCancelled:d,onBeforeLeave:u,onLeave:o,onAfterLeave:c,onLeaveCancelled:A,onBeforeAppear:g,onAppear:f,onAfterAppear:m,onAppearCancelled:y}=s,v=String(i.key),C=Sy(e,i),S=(_,R)=>{_&&be(_,n,9,R)},L=(_,R)=>{const N=R[1];S(_,R),xi(_)?_.every(T=>T.length<=1)&&N():_.length<=1&&N()},w={mode:l,persisted:r,beforeEnter(_){let R=h;if(!e.isMounted)if(t)R=g||h;else return;_[Ln]&&_[Ln](!0);const N=C[v];N&&ua(i,N)&&N.el[Ln]&&N.el[Ln](),S(R,[_])},enter(_){let R=p,N=k,T=d;if(!e.isMounted)if(t)R=f||p,N=m||k,T=y||d;else return;let V=!1;const E=_[Tr]=$=>{V||(V=!0,$?S(T,[_]):S(N,[_]),w.delayedLeave&&w.delayedLeave(),_[Tr]=void 0)};R?L(R,[_,E]):E()},leave(_,R){const N=String(i.key);if(_[Tr]&&_[Tr](!0),e.isUnmounting)return R();S(u,[_]);let T=!1;const V=_[Ln]=E=>{T||(T=!0,R(),E?S(A,[_]):S(c,[_]),_[Ln]=void 0,C[N]===i&&delete C[N])};C[N]=i,o?L(o,[_,V]):V()},clone(_){const R=yl(_,s,e,n,a);return a&&a(R),R}};return w}function Yp(i){if(Ql(i))return i=Zn(i),i.children=null,i}function Gc(i){if(!Ql(i))return _y(i.type)&&i.children?Ty(i.children):i;const{shapeFlag:s,children:e}=i;if(e){if(s&16)return e[0];if(s&32&&wi(e.default))return e.default()}}function Da(i,s){i.shapeFlag&6&&i.component?(i.transition=s,Da(i.component.subTree,s)):i.shapeFlag&128?(i.ssContent.transition=s.clone(i.ssContent),i.ssFallback.transition=s.clone(i.ssFallback)):i.transition=s}function gu(i,s=!1,e){let n=[],a=0;for(let t=0;t<i.length;t++){let l=i[t];const r=e==null?l.key:String(e)+String(l.key!=null?l.key:t);l.type===_i?(l.patchFlag&128&&a++,n=n.concat(gu(l.children,s,r))):(s||l.type!==xs)&&n.push(r!=null?Zn(l,{key:r}):l)}if(a>1)for(let t=0;t<n.length;t++)n[t].patchFlag=-2;return n}/*! #__NO_SIDE_EFFECTS__ */function ti(i,s){return wi(i)?Fs({name:i.name},s,{setup:i}):i}function Bu(i){i.ids=[i.ids[0]+i.ids[2]+++"-",0,0]}function fl(i,s,e,n,a=!1){if(xi(i)){i.forEach((c,A)=>fl(c,s&&(xi(s)?s[A]:s),e,n,a));return}if(va(n)&&!a){n.shapeFlag&512&&n.type.__asyncResolved&&n.component.subTree.component&&fl(i,s,e,n.component.subTree);return}const t=n.shapeFlag&4?ap(n.component):n.el,l=a?null:t,{i:r,r:h}=i,p=s&&s.r,k=r.refs===Ji?r.refs={}:r.refs,d=r.setupState,u=Pi(d),o=d===Ji?()=>!1:c=>Ui(u,c);if(p!=null&&p!==h&&(es(p)?(k[p]=null,o(p)&&(d[p]=null)):ts(p)&&(p.value=null)),wi(h))Dt(h,r,12,[l,k]);else{const c=es(h),A=ts(h);if(c||A){const g=()=>{if(i.f){const f=c?o(h)?d[h]:k[h]:h.value;a?xi(f)&&eu(f,t):xi(f)?f.includes(t)||f.push(t):c?(k[h]=[t],o(h)&&(d[h]=k[h])):(h.value=[t],i.k&&(k[i.k]=h.value))}else c?(k[h]=l,o(h)&&(d[h]=l)):A&&(h.value=l,i.k&&(k[i.k]=l))};l?(g.id=-1,ie(g,e)):g()}}}let Wc=!1;const ra=()=>{Wc||(console.error("Hydration completed but contains mismatches."),Wc=!0)},Wm=i=>i.namespaceURI.includes("svg")&&i.tagName!=="foreignObject",Km=i=>i.namespaceURI.includes("MathML"),Sr=i=>{if(i.nodeType===1){if(Wm(i))return"svg";if(Km(i))return"mathml"}},oa=i=>i.nodeType===8;function Ym(i){const{mt:s,p:e,o:{patchProp:n,createText:a,nextSibling:t,parentNode:l,remove:r,insert:h,createComment:p}}=i,k=(y,v)=>{if(!v.hasChildNodes()){Sn("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),e(null,y,v),vh(),v._vnode=y;return}d(v.firstChild,y,null,null,null),vh(),v._vnode=y},d=(y,v,C,S,L,w=!1)=>{w=w||!!v.dynamicChildren;const _=oa(y)&&y.data==="[",R=()=>A(y,v,C,S,L,_),{type:N,ref:T,shapeFlag:V,patchFlag:E}=v;let $=y.nodeType;v.el=y,rt(y,"__vnode",v,!0),rt(y,"__vueParentComponent",C,!0),E===-2&&(w=!1,v.dynamicChildren=null);let I=null;switch(N){case Kn:$!==3?v.children===""?(h(v.el=a(""),l(y),y),I=y):I=R():(y.data!==v.children&&(Sn("Hydration text mismatch in",y.parentNode,`
  - rendered on server: ${JSON.stringify(y.data)}
  - expected on client: ${JSON.stringify(v.children)}`),ra(),y.data=v.children),I=t(y));break;case xs:m(y)?(I=t(y),f(v.el=y.content.firstChild,y,C)):$!==8||_?I=R():I=t(y);break;case Za:if(_&&(y=t(y),$=y.nodeType),$===1||$===3){I=y;const M=!v.children.length;for(let G=0;G<v.staticCount;G++)M&&(v.children+=I.nodeType===1?I.outerHTML:I.data),G===v.staticCount-1&&(v.anchor=I),I=t(I);return _?t(I):I}else R();break;case _i:_?I=c(y,v,C,S,L,w):I=R();break;default:if(V&1)($!==1||v.type.toLowerCase()!==y.tagName.toLowerCase())&&!m(y)?I=R():I=u(y,v,C,S,L,w);else if(V&6){v.slotScopeIds=L;const M=l(y);if(_?I=g(y):oa(y)&&y.data==="teleport start"?I=g(y,y.data,"teleport end"):I=t(y),s(v,M,null,C,S,Sr(M),w),va(v)&&!v.type.__asyncResolved){let G;_?(G=Bi(_i),G.anchor=I?I.previousSibling:M.lastChild):G=y.nodeType===3?ks(""):Bi("div"),G.el=y,v.component.subTree=G}}else V&64?$!==8?I=R():I=v.type.hydrate(y,v,C,S,L,w,i,o):V&128?I=v.type.hydrate(y,v,C,S,Sr(l(y)),L,w,i,d):Sn("Invalid HostVNode type:",N,`(${typeof N})`)}return T!=null&&fl(T,null,S,v),I},u=(y,v,C,S,L,w)=>{w=w||!!v.dynamicChildren;const{type:_,props:R,patchFlag:N,shapeFlag:T,dirs:V,transition:E}=v,$=_==="input"||_==="option";if($||N!==-1){V&&Ne(v,null,C,"created");let I=!1;if(m(y)){I=e4(null,E)&&C&&C.vnode.props&&C.vnode.props.appear;const G=y.content.firstChild;I&&E.beforeEnter(G),f(G,y,C),v.el=y=G}if(T&16&&!(R&&(R.innerHTML||R.textContent))){let G=o(y.firstChild,v,y,C,S,L,w),Y=!1;for(;G;){Wt(y,1)||(Y||(Sn("Hydration children mismatch on",y,`
Server rendered element contains more child nodes than client vdom.`),Y=!0),ra());const li=G;G=G.nextSibling,r(li)}}else if(T&8){let G=v.children;G[0]===`
`&&(y.tagName==="PRE"||y.tagName==="TEXTAREA")&&(G=G.slice(1)),y.textContent!==G&&(Wt(y,0)||(Sn("Hydration text content mismatch on",y,`
  - rendered on server: ${y.textContent}
  - expected on client: ${v.children}`),ra()),y.textContent=v.children)}if(R){const G=y.tagName.includes("-");for(const Y in R)!(V&&V.some(li=>li.dir.created))&&Xm(y,Y,R[Y],v,C)&&ra(),($&&(Y.endsWith("value")||Y==="indeterminate")||Kl(Y)&&!Wa(Y)||Y[0]==="."||G)&&n(y,Y,null,R[Y],void 0,C)}let M;(M=R&&R.onVnodeBeforeMount)&&de(M,C,v),V&&Ne(v,null,C,"beforeMount"),((M=R&&R.onVnodeMounted)||V||I)&&p4(()=>{M&&de(M,C,v),I&&E.enter(y),V&&Ne(v,null,C,"mounted")},S)}return y.nextSibling},o=(y,v,C,S,L,w,_)=>{_=_||!!v.dynamicChildren;const R=v.children,N=R.length;let T=!1;for(let V=0;V<N;V++){const E=_?R[V]:R[V]=ue(R[V]),$=E.type===Kn;y?($&&!_&&V+1<N&&ue(R[V+1]).type===Kn&&(h(a(y.data.slice(E.children.length)),C,t(y)),y.data=E.children),y=d(y,E,S,L,w,_)):$&&!E.children?h(E.el=a(""),C):(Wt(C,1)||(T||(Sn("Hydration children mismatch on",C,`
Server rendered element contains fewer child nodes than client vdom.`),T=!0),ra()),e(null,E,C,null,S,L,Sr(C),w))}return y},c=(y,v,C,S,L,w)=>{const{slotScopeIds:_}=v;_&&(L=L?L.concat(_):_);const R=l(y),N=o(t(y),v,R,C,S,L,w);return N&&oa(N)&&N.data==="]"?t(v.anchor=N):(ra(),h(v.anchor=p("]"),R,N),N)},A=(y,v,C,S,L,w)=>{if(Wt(y.parentElement,1)||(Sn(`Hydration node mismatch:
- rendered on server:`,y,y.nodeType===3?"(text)":oa(y)&&y.data==="["?"(start of fragment)":"",`
- expected on client:`,v.type),ra()),v.el=null,w){const N=g(y);for(;;){const T=t(y);if(T&&T!==N)r(T);else break}}const _=t(y),R=l(y);return r(y),e(null,v,R,_,C,S,Sr(R),L),C&&(C.vnode.el=v.el,r4(C,v.el)),_},g=(y,v="[",C="]")=>{let S=0;for(;y;)if(y=t(y),y&&oa(y)&&(y.data===v&&S++,y.data===C)){if(S===0)return t(y);S--}return y},f=(y,v,C)=>{const S=v.parentNode;S&&S.replaceChild(y,v);let L=C;for(;L;)L.vnode.el===v&&(L.vnode.el=L.subTree.el=y),L=L.parent},m=y=>y.nodeType===1&&y.tagName==="TEMPLATE";return[k,d]}function Xm(i,s,e,n,a){let t,l,r,h;if(s==="class")r=i.getAttribute("class"),h=Ii(e),Zm(Kc(r||""),Kc(h))||(t=2,l="class");else if(s==="style"){r=i.getAttribute("style")||"",h=es(e)?e:K1(ds(e));const p=Yc(r),k=Yc(h);if(n.dirs)for(const{dir:d,value:u}of n.dirs)d.name==="show"&&!u&&k.set("display","none");a&&Iy(a,n,k),Jm(p,k)||(t=3,l="style")}else(i instanceof SVGElement&&Z1(s)||i instanceof HTMLElement&&(qc(s)||X1(s)))&&(qc(s)?(r=i.hasAttribute(s),h=au(e)):e==null?(r=i.hasAttribute(s),h=!1):(i.hasAttribute(s)?r=i.getAttribute(s):s==="value"&&i.tagName==="TEXTAREA"?r=i.value:r=!1,h=J1(e)?String(e):!1),r!==h&&(t=4,l=s));if(t!=null&&!Wt(i,t)){const p=u=>u===!1?"(not rendered)":`${l}="${u}"`,k=`Hydration ${Ry[t]} mismatch on`,d=`
  - rendered on server: ${p(r)}
  - expected on client: ${p(h)}
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`;return Sn(k,i,d),!0}return!1}function Kc(i){return new Set(i.trim().split(/\s+/))}function Zm(i,s){if(i.size!==s.size)return!1;for(const e of i)if(!s.has(e))return!1;return!0}function Yc(i){const s=new Map;for(const e of i.split(";")){let[n,a]=e.split(":");n=n.trim(),a=a&&a.trim(),n&&a&&s.set(n,a)}return s}function Jm(i,s){if(i.size!==s.size)return!1;for(const[e,n]of i)if(n!==s.get(e))return!1;return!0}function Iy(i,s,e){const n=i.subTree;if(i.getCssVars&&(s===n||n&&n.type===_i&&n.children.includes(s))){const a=i.getCssVars();for(const t in a)e.set(`--${im(t)}`,String(a[t]))}s===n&&i.parent&&Iy(i.parent,i.vnode,e)}const Xc="data-allow-mismatch",Ry={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function Wt(i,s){if(s===0||s===1)for(;i&&!i.hasAttribute(Xc);)i=i.parentElement;const e=i&&i.getAttribute(Xc);if(e==null)return!1;if(e==="")return!0;{const n=e.split(",");return s===0&&n.includes("children")?!0:e.split(",").includes(Ry[s])}}Xh().requestIdleCallback;Xh().cancelIdleCallback;function Qm(i,s){if(oa(i)&&i.data==="["){let e=1,n=i.nextSibling;for(;n;){if(n.nodeType===1){if(s(n)===!1)break}else if(oa(n))if(n.data==="]"){if(--e===0)break}else n.data==="["&&e++;n=n.nextSibling}}else s(i)}const va=i=>!!i.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Oy(i){wi(i)&&(i={loader:i});const{loader:s,loadingComponent:e,errorComponent:n,delay:a=200,hydrate:t,timeout:l,suspensible:r=!0,onError:h}=i;let p=null,k,d=0;const u=()=>(d++,p=null,o()),o=()=>{let c;return p||(c=p=s().catch(A=>{if(A=A instanceof Error?A:new Error(String(A)),h)return new Promise((g,f)=>{h(A,()=>g(u()),()=>f(A),d+1)});throw A}).then(A=>c!==p&&p?p:(A&&(A.__esModule||A[Symbol.toStringTag]==="Module")&&(A=A.default),k=A,A)))};return ti({name:"AsyncComponentWrapper",__asyncLoader:o,__asyncHydrate(c,A,g){const f=t?()=>{const m=t(g,y=>Qm(c,y));m&&(A.bum||(A.bum=[])).push(m)}:g;k?f():o().then(()=>!A.isUnmounted&&f())},get __asyncResolved(){return k},setup(){const c=As;if(Bu(c),k)return()=>Xp(k,c);const A=y=>{p=null,Jl(y,c,13,!n)};if(r&&c.suspense||pt)return o().then(y=>()=>Xp(y,c)).catch(y=>(A(y),()=>n?Bi(n,{error:y}):null));const g=Z(!1),f=Z(),m=Z(!!a);return a&&setTimeout(()=>{m.value=!1},a),l!=null&&setTimeout(()=>{if(!g.value&&!f.value){const y=new Error(`Async component timed out after ${l}ms.`);A(y),f.value=y}},l),o().then(()=>{g.value=!0,c.parent&&Ql(c.parent.vnode)&&c.parent.update()}).catch(y=>{A(y),f.value=y}),()=>{if(g.value&&k)return Xp(k,c);if(f.value&&n)return Bi(n,{error:f.value});if(e&&!m.value)return Bi(e)}}})}function Xp(i,s){const{ref:e,props:n,children:a,ce:t}=s.vnode,l=Bi(i,n,a);return l.ref=e,l.ce=t,delete s.vnode.ce,l}const Ql=i=>i.type.__isKeepAlive;function iv(i,s){Py(i,"a",s)}function sv(i,s){Py(i,"da",s)}function Py(i,s,e=As){const n=i.__wdc||(i.__wdc=()=>{let a=e;for(;a;){if(a.isDeactivated)return;a=a.parent}return i()});if(sp(s,n,e),e){let a=e.parent;for(;a&&a.parent;)Ql(a.parent.vnode)&&ev(n,s,e,a),a=a.parent}}function ev(i,s,e,n){const a=sp(s,i,n,!0);_s(()=>{eu(n[s],a)},e)}function sp(i,s,e=As,n=!1){if(e){const a=e[i]||(e[i]=[]),t=s.__weh||(s.__weh=(...l)=>{En();const r=ir(e),h=be(s,e,i,l);return r(),bn(),h});return n?a.unshift(t):a.push(t),t}}const Cn=i=>(s,e=As)=>{(!pt||i==="sp")&&sp(i,(...n)=>s(...n),e)},Ly=Cn("bm"),Di=Cn("m"),nv=Cn("bu"),Ny=Cn("u"),xt=Cn("bum"),_s=Cn("um"),av=Cn("sp"),tv=Cn("rtg"),lv=Cn("rtc");function rv(i,s=As){sp("ec",i,s)}const My="components";function Wi(i,s){return Vy(My,i,!0,s)||i}const $y=Symbol.for("v-ndc");function hv(i){return es(i)?Vy(My,i,!1)||i:i||$y}function Vy(i,s,e=!0,n=!1){const a=fs||As;if(a){const t=a.type;{const r=g4(t,!1);if(r&&(r===s||r===Ws(s)||r===Xl(Ws(s))))return t}const l=Zc(a[i]||t[i],s)||Zc(a.appContext[i],s);return!l&&n?t:l}}function Zc(i,s){return i&&(i[s]||i[Ws(s)]||i[Xl(Ws(s))])}function bs(i,s,e,n){let a;const t=e&&e[n],l=xi(i);if(l||es(i)){const r=l&&Ka(i);let h=!1;r&&(h=!ce(i),i=Qh(i)),a=new Array(i.length);for(let p=0,k=i.length;p<k;p++)a[p]=s(h?Rs(i[p]):i[p],p,void 0,t&&t[p])}else if(typeof i=="number"){a=new Array(i);for(let r=0;r<i;r++)a[r]=s(r+1,r,void 0,t&&t[r])}else if(Zi(i))if(i[Symbol.iterator])a=Array.from(i,(r,h)=>s(r,h,void 0,t&&t[h]));else{const r=Object.keys(i);a=new Array(r.length);for(let h=0,p=r.length;h<p;h++){const k=r[h];a[h]=s(i[k],k,h,t&&t[h])}}else a=[];return e&&(e[n]=a),a}function ne(i,s,e={},n,a){if(fs.ce||fs.parent&&va(fs.parent)&&fs.parent.ce)return s!=="default"&&(e.name=s),hi(),rs(_i,null,[Bi("slot",e,n&&n())],64);let t=i[s];t&&t._c&&(t._d=!1),hi();const l=t&&zy(t(e)),r=e.key||l&&l.key,h=rs(_i,{key:(r&&!Ee(r)?r:`_${s}`)+(!l&&n?"_fb":"")},l||(n?n():[]),l&&i._===1?64:-2);return h.scopeId&&(h.slotScopeIds=[h.scopeId+"-s"]),t&&t._c&&(t._d=!0),h}function zy(i){return i.some(s=>ml(s)?!(s.type===xs||s.type===_i&&!zy(s.children)):!0)?i:null}const Gd=i=>i?o4(i)?ap(i):Gd(i.parent):null,ll=Fs(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Gd(i.parent),$root:i=>Gd(i.root),$host:i=>i.ce,$emit:i=>i.emit,$options:i=>jy(i),$forceUpdate:i=>i.f||(i.f=()=>{uu(i.update)}),$nextTick:i=>i.n||(i.n=Hi.bind(i.proxy)),$watch:i=>Sv.bind(i)}),Zp=(i,s)=>i!==Ji&&!i.__isScriptSetup&&Ui(i,s),pv={get({_:i},s){if(s==="__v_skip")return!0;const{ctx:e,setupState:n,data:a,props:t,accessCache:l,type:r,appContext:h}=i;let p;if(s[0]!=="$"){const o=l[s];if(o!==void 0)switch(o){case 1:return n[s];case 2:return a[s];case 4:return e[s];case 3:return t[s]}else{if(Zp(n,s))return l[s]=1,n[s];if(a!==Ji&&Ui(a,s))return l[s]=2,a[s];if((p=i.propsOptions[0])&&Ui(p,s))return l[s]=3,t[s];if(e!==Ji&&Ui(e,s))return l[s]=4,e[s];Wd&&(l[s]=0)}}const k=ll[s];let d,u;if(k)return s==="$attrs"&&Is(i.attrs,"get",""),k(i);if((d=r.__cssModules)&&(d=d[s]))return d;if(e!==Ji&&Ui(e,s))return l[s]=4,e[s];if(u=h.config.globalProperties,Ui(u,s))return u[s]},set({_:i},s,e){const{data:n,setupState:a,ctx:t}=i;return Zp(a,s)?(a[s]=e,!0):n!==Ji&&Ui(n,s)?(n[s]=e,!0):Ui(i.props,s)||s[0]==="$"&&s.slice(1)in i?!1:(t[s]=e,!0)},has({_:{data:i,setupState:s,accessCache:e,ctx:n,appContext:a,propsOptions:t}},l){let r;return!!e[l]||i!==Ji&&Ui(i,l)||Zp(s,l)||(r=t[0])&&Ui(r,l)||Ui(n,l)||Ui(ll,l)||Ui(a.config.globalProperties,l)},defineProperty(i,s,e){return e.get!=null?i._.accessCache[s]=0:Ui(e,"value")&&this.set(i,s,e.value,null),Reflect.defineProperty(i,s,e)}};function kv(){return qy().slots}function dv(){return qy().attrs}function qy(){const i=pe();return i.setupContext||(i.setupContext=c4(i))}function Jc(i){return xi(i)?i.reduce((s,e)=>(s[e]=null,s),{}):i}function ov(i,s){const e={};for(const n in i)s.includes(n)||Object.defineProperty(e,n,{enumerable:!0,get:()=>i[n]});return e}let Wd=!0;function uv(i){const s=jy(i),e=i.proxy,n=i.ctx;Wd=!1,s.beforeCreate&&Qc(s.beforeCreate,i,"bc");const{data:a,computed:t,methods:l,watch:r,provide:h,inject:p,created:k,beforeMount:d,mounted:u,beforeUpdate:o,updated:c,activated:A,deactivated:g,beforeDestroy:f,beforeUnmount:m,destroyed:y,unmounted:v,render:C,renderTracked:S,renderTriggered:L,errorCaptured:w,serverPrefetch:_,expose:R,inheritAttrs:N,components:T,directives:V,filters:E}=s;if(p&&cv(p,n,null),l)for(const M in l){const G=l[M];wi(G)&&(n[M]=G.bind(e))}if(a){const M=a.call(e,e);Zi(M)&&(i.data=Xn(M))}if(Wd=!0,t)for(const M in t){const G=t[M],Y=wi(G)?G.bind(e,e):wi(G.get)?G.get.bind(e,e):He,li=!wi(G)&&wi(G.set)?G.set.bind(e):He,pi=z({get:Y,set:li});Object.defineProperty(n,M,{enumerable:!0,configurable:!0,get:()=>pi.value,set:ei=>pi.value=ei})}if(r)for(const M in r)Hy(r[M],n,e,M);if(h){const M=wi(h)?h.call(e):h;Reflect.ownKeys(M).forEach(G=>{Ds(G,M[G])})}k&&Qc(k,i,"c");function I(M,G){xi(G)?G.forEach(Y=>M(Y.bind(e))):G&&M(G.bind(e))}if(I(Ly,d),I(Di,u),I(nv,o),I(Ny,c),I(iv,A),I(sv,g),I(rv,w),I(lv,S),I(tv,L),I(xt,m),I(_s,v),I(av,_),xi(R))if(R.length){const M=i.exposed||(i.exposed={});R.forEach(G=>{Object.defineProperty(M,G,{get:()=>e[G],set:Y=>e[G]=Y})})}else i.exposed||(i.exposed={});C&&i.render===He&&(i.render=C),N!=null&&(i.inheritAttrs=N),T&&(i.components=T),V&&(i.directives=V),_&&Bu(i)}function cv(i,s,e=He){xi(i)&&(i=Kd(i));for(const n in i){const a=i[n];let t;Zi(a)?"default"in a?t=Ni(a.from||n,a.default,!0):t=Ni(a.from||n):t=Ni(a),ts(t)?Object.defineProperty(s,n,{enumerable:!0,configurable:!0,get:()=>t.value,set:l=>t.value=l}):s[n]=t}}function Qc(i,s,e){be(xi(i)?i.map(n=>n.bind(s.proxy)):i.bind(s.proxy),s,e)}function Hy(i,s,e,n){let a=n.includes(".")?t4(e,n):()=>e[n];if(es(i)){const t=s[i];wi(t)&&bi(a,t)}else if(wi(i))bi(a,i.bind(e));else if(Zi(i))if(xi(i))i.forEach(t=>Hy(t,s,e,n));else{const t=wi(i.handler)?i.handler.bind(e):s[i.handler];wi(t)&&bi(a,t,i)}}function jy(i){const s=i.type,{mixins:e,extends:n}=s,{mixins:a,optionsCache:t,config:{optionMergeStrategies:l}}=i.appContext,r=t.get(s);let h;return r?h=r:!a.length&&!e&&!n?h=s:(h={},a.length&&a.forEach(p=>Eh(h,p,l,!0)),Eh(h,s,l)),Zi(s)&&t.set(s,h),h}function Eh(i,s,e,n=!1){const{mixins:a,extends:t}=s;t&&Eh(i,t,e,!0),a&&a.forEach(l=>Eh(i,l,e,!0));for(const l in s)if(!(n&&l==="expose")){const r=gv[l]||e&&e[l];i[l]=r?r(i[l],s[l]):s[l]}return i}const gv={data:ig,props:sg,emits:sg,methods:Kt,computed:Kt,beforeCreate:Ps,created:Ps,beforeMount:Ps,mounted:Ps,beforeUpdate:Ps,updated:Ps,beforeDestroy:Ps,beforeUnmount:Ps,destroyed:Ps,unmounted:Ps,activated:Ps,deactivated:Ps,errorCaptured:Ps,serverPrefetch:Ps,components:Kt,directives:Kt,watch:Av,provide:ig,inject:Bv};function ig(i,s){return s?i?function(){return Fs(wi(i)?i.call(this,this):i,wi(s)?s.call(this,this):s)}:s:i}function Bv(i,s){return Kt(Kd(i),Kd(s))}function Kd(i){if(xi(i)){const s={};for(let e=0;e<i.length;e++)s[i[e]]=i[e];return s}return i}function Ps(i,s){return i?[...new Set([].concat(i,s))]:s}function Kt(i,s){return i?Fs(Object.create(null),i,s):s}function sg(i,s){return i?xi(i)&&xi(s)?[...new Set([...i,...s])]:Fs(Object.create(null),Jc(i),Jc(s??{})):s}function Av(i,s){if(!i)return s;if(!s)return i;const e=Fs(Object.create(null),i);for(const n in s)e[n]=Ps(i[n],s[n]);return e}function Uy(){return{app:null,config:{isNativeTag:M1,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let yv=0;function fv(i,s){return function(n,a=null){wi(n)||(n=Fs({},n)),a!=null&&!Zi(a)&&(a=null);const t=Uy(),l=new WeakSet,r=[];let h=!1;const p=t.app={_uid:yv++,_component:n,_props:a,_container:null,_context:t,_instance:null,version:hg,get config(){return t.config},set config(k){},use(k,...d){return l.has(k)||(k&&wi(k.install)?(l.add(k),k.install(p,...d)):wi(k)&&(l.add(k),k(p,...d))),p},mixin(k){return t.mixins.includes(k)||t.mixins.push(k),p},component(k,d){return d?(t.components[k]=d,p):t.components[k]},directive(k,d){return d?(t.directives[k]=d,p):t.directives[k]},mount(k,d,u){if(!h){const o=p._ceVNode||Bi(n,a);return o.appContext=t,u===!0?u="svg":u===!1&&(u=void 0),d&&s?s(o,k):i(o,k,u),h=!0,p._container=k,k.__vue_app__=p,p._instance=o.component,Mm(p,hg),ap(o.component)}},onUnmount(k){r.push(k)},unmount(){h&&(be(r,p._instance,16),i(null,p._container),p._instance=null,$m(p),delete p._container.__vue_app__)},provide(k,d){return t.provides[k]=d,p},runWithContext(k){const d=Fa;Fa=p;try{return k()}finally{Fa=d}}};return p}}let Fa=null;function Ds(i,s){if(As){let e=As.provides;const n=As.parent&&As.parent.provides;n===e&&(e=As.provides=Object.create(n)),e[i]=s}}function Ni(i,s,e=!1){const n=As||fs;if(n||Fa){const a=Fa?Fa._context.provides:n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(a&&i in a)return a[i];if(arguments.length>1)return e&&wi(s)?s.call(n&&n.proxy):s}}function Gy(){return!!(As||fs||Fa)}const Wy={},Ky=()=>Object.create(Wy),Yy=i=>Object.getPrototypeOf(i)===Wy;function mv(i,s,e,n=!1){const a={},t=Ky();i.propsDefaults=Object.create(null),Xy(i,s,a,t);for(const l in i.propsOptions[0])l in a||(a[l]=void 0);e?i.props=n?a:gy(a):i.type.props?i.props=a:i.props=t,i.attrs=t}function vv(i,s,e,n){const{props:a,attrs:t,vnode:{patchFlag:l}}=i,r=Pi(a),[h]=i.propsOptions;let p=!1;if((n||l>0)&&!(l&16)){if(l&8){const k=i.vnode.dynamicProps;for(let d=0;d<k.length;d++){let u=k[d];if(np(i.emitsOptions,u))continue;const o=s[u];if(h)if(Ui(t,u))o!==t[u]&&(t[u]=o,p=!0);else{const c=Ws(u);a[c]=Yd(h,r,c,o,i,!1)}else o!==t[u]&&(t[u]=o,p=!0)}}}else{Xy(i,s,a,t)&&(p=!0);let k;for(const d in r)(!s||!Ui(s,d)&&((k=na(d))===d||!Ui(s,k)))&&(h?e&&(e[d]!==void 0||e[k]!==void 0)&&(a[d]=Yd(h,r,d,void 0,i,!0)):delete a[d]);if(t!==r)for(const d in t)(!s||!Ui(s,d))&&(delete t[d],p=!0)}p&&dn(i.attrs,"set","")}function Xy(i,s,e,n){const[a,t]=i.propsOptions;let l=!1,r;if(s)for(let h in s){if(Wa(h))continue;const p=s[h];let k;a&&Ui(a,k=Ws(h))?!t||!t.includes(k)?e[k]=p:(r||(r={}))[k]=p:np(i.emitsOptions,h)||(!(h in n)||p!==n[h])&&(n[h]=p,l=!0)}if(t){const h=Pi(e),p=r||Ji;for(let k=0;k<t.length;k++){const d=t[k];e[d]=Yd(a,h,d,p[d],i,!Ui(p,d))}}return l}function Yd(i,s,e,n,a,t){const l=i[e];if(l!=null){const r=Ui(l,"default");if(r&&n===void 0){const h=l.default;if(l.type!==Function&&!l.skipFactory&&wi(h)){const{propsDefaults:p}=a;if(e in p)n=p[e];else{const k=ir(a);n=p[e]=h.call(null,s),k()}}else n=h;a.ce&&a.ce._setProp(e,n)}l[0]&&(t&&!r?n=!1:l[1]&&(n===""||n===na(e))&&(n=!0))}return n}const Fv=new WeakMap;function Zy(i,s,e=!1){const n=e?Fv:s.propsCache,a=n.get(i);if(a)return a;const t=i.props,l={},r=[];let h=!1;if(!wi(i)){const k=d=>{h=!0;const[u,o]=Zy(d,s,!0);Fs(l,u),o&&r.push(...o)};!e&&s.mixins.length&&s.mixins.forEach(k),i.extends&&k(i.extends),i.mixins&&i.mixins.forEach(k)}if(!t&&!h)return Zi(i)&&n.set(i,Ua),Ua;if(xi(t))for(let k=0;k<t.length;k++){const d=Ws(t[k]);eg(d)&&(l[d]=Ji)}else if(t)for(const k in t){const d=Ws(k);if(eg(d)){const u=t[k],o=l[d]=xi(u)||wi(u)?{type:u}:Fs({},u),c=o.type;let A=!1,g=!0;if(xi(c))for(let f=0;f<c.length;++f){const m=c[f],y=wi(m)&&m.name;if(y==="Boolean"){A=!0;break}else y==="String"&&(g=!1)}else A=wi(c)&&c.name==="Boolean";o[0]=A,o[1]=g,(A||Ui(o,"default"))&&r.push(d)}}const p=[l,r];return Zi(i)&&n.set(i,p),p}function eg(i){return i[0]!=="$"&&!Wa(i)}const Jy=i=>i[0]==="_"||i==="$stable",Au=i=>xi(i)?i.map(ue):[ue(i)],Ev=(i,s,e)=>{if(s._n)return s;const n=$i((...a)=>Au(s(...a)),e);return n._c=!1,n},Qy=(i,s,e)=>{const n=i._ctx;for(const a in i){if(Jy(a))continue;const t=i[a];if(wi(t))s[a]=Ev(a,t,n);else if(t!=null){const l=Au(t);s[a]=()=>l}}},i4=(i,s)=>{const e=Au(s);i.slots.default=()=>e},s4=(i,s,e)=>{for(const n in s)(e||n!=="_")&&(i[n]=s[n])},bv=(i,s,e)=>{const n=i.slots=Ky();if(i.vnode.shapeFlag&32){const a=s._;a?(s4(n,s,e),e&&rt(n,"_",a,!0)):Qy(s,n)}else s&&i4(i,s)},Cv=(i,s,e)=>{const{vnode:n,slots:a}=i;let t=!0,l=Ji;if(n.shapeFlag&32){const r=s._;r?e&&r===1?t=!1:s4(a,s,e):(t=!s.$stable,Qy(s,a)),l=s}else s&&(i4(i,s),l={default:1});if(t)for(const r in a)!Jy(r)&&l[r]==null&&delete a[r]},ie=p4;function _v(i){return Dv(i,Ym)}function Dv(i,s){const e=Xh();e.__VUE__=!0,Ey(e.__VUE_DEVTOOLS_GLOBAL_HOOK__,e);const{insert:n,remove:a,patchProp:t,createElement:l,createText:r,createComment:h,setText:p,setElementText:k,parentNode:d,nextSibling:u,setScopeId:o=He,insertStaticContent:c}=i,A=(x,F,D,O=null,P=null,H=null,si=void 0,ni=null,ii=!!F.dynamicChildren)=>{if(x===F)return;x&&!ua(x,F)&&(O=U(x),ei(x,P,H,!0),x=null),F.patchFlag===-2&&(ii=!1,F.dynamicChildren=null);const{type:ai,ref:gi,shapeFlag:di}=F;switch(ai){case Kn:g(x,F,D,O);break;case xs:f(x,F,D,O);break;case Za:x==null&&m(F,D,O,si);break;case _i:T(x,F,D,O,P,H,si,ni,ii);break;default:di&1?C(x,F,D,O,P,H,si,ni,ii):di&6?V(x,F,D,O,P,H,si,ni,ii):(di&64||di&128)&&ai.process(x,F,D,O,P,H,si,ni,ii,ki)}gi!=null&&P&&fl(gi,x&&x.ref,H,F||x,!F)},g=(x,F,D,O)=>{if(x==null)n(F.el=r(F.children),D,O);else{const P=F.el=x.el;F.children!==x.children&&p(P,F.children)}},f=(x,F,D,O)=>{x==null?n(F.el=h(F.children||""),D,O):F.el=x.el},m=(x,F,D,O)=>{[x.el,x.anchor]=c(x.children,F,D,O,x.el,x.anchor)},y=({el:x,anchor:F},D,O)=>{let P;for(;x&&x!==F;)P=u(x),n(x,D,O),x=P;n(F,D,O)},v=({el:x,anchor:F})=>{let D;for(;x&&x!==F;)D=u(x),a(x),x=D;a(F)},C=(x,F,D,O,P,H,si,ni,ii)=>{F.type==="svg"?si="svg":F.type==="math"&&(si="mathml"),x==null?S(F,D,O,P,H,si,ni,ii):_(x,F,P,H,si,ni,ii)},S=(x,F,D,O,P,H,si,ni)=>{let ii,ai;const{props:gi,shapeFlag:di,transition:Ai,dirs:Ci}=x;if(ii=x.el=l(x.type,H,gi&&gi.is,gi),di&8?k(ii,x.children):di&16&&w(x.children,ii,null,O,P,Jp(x,H),si,ni),Ci&&Ne(x,null,O,"created"),L(ii,x,x.scopeId,si,O),gi){for(const Xi in gi)Xi!=="value"&&!Wa(Xi)&&t(ii,Xi,null,gi[Xi],H,O);"value"in gi&&t(ii,"value",null,gi.value,H),(ai=gi.onVnodeBeforeMount)&&de(ai,O,x)}rt(ii,"__vnode",x,!0),rt(ii,"__vueParentComponent",O,!0),Ci&&Ne(x,null,O,"beforeMount");const Si=e4(P,Ai);Si&&Ai.beforeEnter(ii),n(ii,F,D),((ai=gi&&gi.onVnodeMounted)||Si||Ci)&&ie(()=>{ai&&de(ai,O,x),Si&&Ai.enter(ii),Ci&&Ne(x,null,O,"mounted")},P)},L=(x,F,D,O,P)=>{if(D&&o(x,D),O)for(let H=0;H<O.length;H++)o(x,O[H]);if(P){let H=P.subTree;if(F===H||h4(H.type)&&(H.ssContent===F||H.ssFallback===F)){const si=P.vnode;L(x,si,si.scopeId,si.slotScopeIds,P.parent)}}},w=(x,F,D,O,P,H,si,ni,ii=0)=>{for(let ai=ii;ai<x.length;ai++){const gi=x[ai]=ni?Nn(x[ai]):ue(x[ai]);A(null,gi,F,D,O,P,H,si,ni)}},_=(x,F,D,O,P,H,si)=>{const ni=F.el=x.el;ni.__vnode=F;let{patchFlag:ii,dynamicChildren:ai,dirs:gi}=F;ii|=x.patchFlag&16;const di=x.props||Ji,Ai=F.props||Ji;let Ci;if(D&&ha(D,!1),(Ci=Ai.onVnodeBeforeUpdate)&&de(Ci,D,F,x),gi&&Ne(F,x,D,"beforeUpdate"),D&&ha(D,!0),(di.innerHTML&&Ai.innerHTML==null||di.textContent&&Ai.textContent==null)&&k(ni,""),ai?R(x.dynamicChildren,ai,ni,D,O,Jp(F,P),H):si||G(x,F,ni,null,D,O,Jp(F,P),H,!1),ii>0){if(ii&16)N(ni,di,Ai,D,P);else if(ii&2&&di.class!==Ai.class&&t(ni,"class",null,Ai.class,P),ii&4&&t(ni,"style",di.style,Ai.style,P),ii&8){const Si=F.dynamicProps;for(let Xi=0;Xi<Si.length;Xi++){const zi=Si[Xi],Zs=di[zi],Ss=Ai[zi];(Ss!==Zs||zi==="value")&&t(ni,zi,Zs,Ss,P,D)}}ii&1&&x.children!==F.children&&k(ni,F.children)}else!si&&ai==null&&N(ni,di,Ai,D,P);((Ci=Ai.onVnodeUpdated)||gi)&&ie(()=>{Ci&&de(Ci,D,F,x),gi&&Ne(F,x,D,"updated")},O)},R=(x,F,D,O,P,H,si)=>{for(let ni=0;ni<F.length;ni++){const ii=x[ni],ai=F[ni],gi=ii.el&&(ii.type===_i||!ua(ii,ai)||ii.shapeFlag&70)?d(ii.el):D;A(ii,ai,gi,null,O,P,H,si,!0)}},N=(x,F,D,O,P)=>{if(F!==D){if(F!==Ji)for(const H in F)!Wa(H)&&!(H in D)&&t(x,H,F[H],null,P,O);for(const H in D){if(Wa(H))continue;const si=D[H],ni=F[H];si!==ni&&H!=="value"&&t(x,H,ni,si,P,O)}"value"in D&&t(x,"value",F.value,D.value,P)}},T=(x,F,D,O,P,H,si,ni,ii)=>{const ai=F.el=x?x.el:r(""),gi=F.anchor=x?x.anchor:r("");let{patchFlag:di,dynamicChildren:Ai,slotScopeIds:Ci}=F;Ci&&(ni=ni?ni.concat(Ci):Ci),x==null?(n(ai,D,O),n(gi,D,O),w(F.children||[],D,gi,P,H,si,ni,ii)):di>0&&di&64&&Ai&&x.dynamicChildren?(R(x.dynamicChildren,Ai,D,P,H,si,ni),(F.key!=null||P&&F===P.subTree)&&n4(x,F,!0)):G(x,F,D,gi,P,H,si,ni,ii)},V=(x,F,D,O,P,H,si,ni,ii)=>{F.slotScopeIds=ni,x==null?F.shapeFlag&512?P.ctx.activate(F,D,O,si,ii):E(F,D,O,P,H,si,ii):$(x,F,ii)},E=(x,F,D,O,P,H,si)=>{const ni=x.component=qv(x,O,P);if(Ql(x)&&(ni.ctx.renderer=ki),Hv(ni,!1,si),ni.asyncDep){if(P&&P.registerDep(ni,I,si),!x.el){const ii=ni.subTree=Bi(xs);f(null,ii,F,D)}}else I(ni,x,F,D,P,H,si)},$=(x,F,D)=>{const O=F.component=x.component;if(Lv(x,F,D))if(O.asyncDep&&!O.asyncResolved){M(O,F,D);return}else O.next=F,O.update();else F.el=x.el,O.vnode=F},I=(x,F,D,O,P,H,si)=>{const ni=()=>{if(x.isMounted){let{next:di,bu:Ai,u:Ci,parent:Si,vnode:Xi}=x;{const Js=a4(x);if(Js){di&&(di.el=Xi.el,M(x,di,si)),Js.asyncDep.then(()=>{x.isUnmounted||ni()});return}}let zi=di,Zs;ha(x,!1),di?(di.el=Xi.el,M(x,di,si)):di=Xi,Ai&&ih(Ai),(Zs=di.props&&di.props.onVnodeBeforeUpdate)&&de(Zs,Si,di,Xi),ha(x,!0);const Ss=Qp(x),Ae=x.subTree;x.subTree=Ss,A(Ae,Ss,d(Ae.el),U(Ae),x,P,H),di.el=Ss.el,zi===null&&r4(x,Ss.el),Ci&&ie(Ci,P),(Zs=di.props&&di.props.onVnodeUpdated)&&ie(()=>de(Zs,Si,di,Xi),P),by(x)}else{let di;const{el:Ai,props:Ci}=F,{bm:Si,m:Xi,parent:zi,root:Zs,type:Ss}=x,Ae=va(F);if(ha(x,!1),Si&&ih(Si),!Ae&&(di=Ci&&Ci.onVnodeBeforeMount)&&de(di,zi,F),ha(x,!0),Ai&&X){const Js=()=>{x.subTree=Qp(x),X(Ai,x.subTree,x,P,null)};Ae&&Ss.__asyncHydrate?Ss.__asyncHydrate(Ai,x,Js):Js()}else{Zs.ce&&Zs.ce._injectChildStyle(Ss);const Js=x.subTree=Qp(x);A(null,Js,D,O,x,P,H),F.el=Js.el}if(Xi&&ie(Xi,P),!Ae&&(di=Ci&&Ci.onVnodeMounted)){const Js=F;ie(()=>de(di,zi,Js),P)}(F.shapeFlag&256||zi&&va(zi.vnode)&&zi.vnode.shapeFlag&256)&&x.a&&ie(x.a,P),x.isMounted=!0,Vm(x),F=D=O=null}};x.scope.on();const ii=x.effect=new sy(ni);x.scope.off();const ai=x.update=ii.run.bind(ii),gi=x.job=ii.runIfDirty.bind(ii);gi.i=x,gi.id=x.uid,ii.scheduler=()=>uu(gi),ha(x,!0),ai()},M=(x,F,D)=>{F.component=x;const O=x.vnode.props;x.vnode=F,x.next=null,vv(x,F.props,O,D),Cv(x,F.children,D),En(),Uc(x),bn()},G=(x,F,D,O,P,H,si,ni,ii=!1)=>{const ai=x&&x.children,gi=x?x.shapeFlag:0,di=F.children,{patchFlag:Ai,shapeFlag:Ci}=F;if(Ai>0){if(Ai&128){li(ai,di,D,O,P,H,si,ni,ii);return}else if(Ai&256){Y(ai,di,D,O,P,H,si,ni,ii);return}}Ci&8?(gi&16&&ri(ai,P,H),di!==ai&&k(D,di)):gi&16?Ci&16?li(ai,di,D,O,P,H,si,ni,ii):ri(ai,P,H,!0):(gi&8&&k(D,""),Ci&16&&w(di,D,O,P,H,si,ni,ii))},Y=(x,F,D,O,P,H,si,ni,ii)=>{x=x||Ua,F=F||Ua;const ai=x.length,gi=F.length,di=Math.min(ai,gi);let Ai;for(Ai=0;Ai<di;Ai++){const Ci=F[Ai]=ii?Nn(F[Ai]):ue(F[Ai]);A(x[Ai],Ci,D,null,P,H,si,ni,ii)}ai>gi?ri(x,P,H,!0,!1,di):w(F,D,O,P,H,si,ni,ii,di)},li=(x,F,D,O,P,H,si,ni,ii)=>{let ai=0;const gi=F.length;let di=x.length-1,Ai=gi-1;for(;ai<=di&&ai<=Ai;){const Ci=x[ai],Si=F[ai]=ii?Nn(F[ai]):ue(F[ai]);if(ua(Ci,Si))A(Ci,Si,D,null,P,H,si,ni,ii);else break;ai++}for(;ai<=di&&ai<=Ai;){const Ci=x[di],Si=F[Ai]=ii?Nn(F[Ai]):ue(F[Ai]);if(ua(Ci,Si))A(Ci,Si,D,null,P,H,si,ni,ii);else break;di--,Ai--}if(ai>di){if(ai<=Ai){const Ci=Ai+1,Si=Ci<gi?F[Ci].el:O;for(;ai<=Ai;)A(null,F[ai]=ii?Nn(F[ai]):ue(F[ai]),D,Si,P,H,si,ni,ii),ai++}}else if(ai>Ai)for(;ai<=di;)ei(x[ai],P,H,!0),ai++;else{const Ci=ai,Si=ai,Xi=new Map;for(ai=Si;ai<=Ai;ai++){const Qs=F[ai]=ii?Nn(F[ai]):ue(F[ai]);Qs.key!=null&&Xi.set(Qs.key,ai)}let zi,Zs=0;const Ss=Ai-Si+1;let Ae=!1,Js=0;const Pt=new Array(Ss);for(ai=0;ai<Ss;ai++)Pt[ai]=0;for(ai=Ci;ai<=di;ai++){const Qs=x[ai];if(Zs>=Ss){ei(Qs,P,H,!0);continue}let Ie;if(Qs.key!=null)Ie=Xi.get(Qs.key);else for(zi=Si;zi<=Ai;zi++)if(Pt[zi-Si]===0&&ua(Qs,F[zi])){Ie=zi;break}Ie===void 0?ei(Qs,P,H,!0):(Pt[Ie-Si]=ai+1,Ie>=Js?Js=Ie:Ae=!0,A(Qs,F[Ie],D,null,P,H,si,ni,ii),Zs++)}const Nc=Ae?xv(Pt):Ua;for(zi=Nc.length-1,ai=Ss-1;ai>=0;ai--){const Qs=Si+ai,Ie=F[Qs],Mc=Qs+1<gi?F[Qs+1].el:O;Pt[ai]===0?A(null,Ie,D,Mc,P,H,si,ni,ii):Ae&&(zi<0||ai!==Nc[zi]?pi(Ie,D,Mc,2):zi--)}}},pi=(x,F,D,O,P=null)=>{const{el:H,type:si,transition:ni,children:ii,shapeFlag:ai}=x;if(ai&6){pi(x.component.subTree,F,D,O);return}if(ai&128){x.suspense.move(F,D,O);return}if(ai&64){si.move(x,F,D,ki);return}if(si===_i){n(H,F,D);for(let di=0;di<ii.length;di++)pi(ii[di],F,D,O);n(x.anchor,F,D);return}if(si===Za){y(x,F,D);return}if(O!==2&&ai&1&&ni)if(O===0)ni.beforeEnter(H),n(H,F,D),ie(()=>ni.enter(H),P);else{const{leave:di,delayLeave:Ai,afterLeave:Ci}=ni,Si=()=>n(H,F,D),Xi=()=>{di(H,()=>{Si(),Ci&&Ci()})};Ai?Ai(H,Si,Xi):Xi()}else n(H,F,D)},ei=(x,F,D,O=!1,P=!1)=>{const{type:H,props:si,ref:ni,children:ii,dynamicChildren:ai,shapeFlag:gi,patchFlag:di,dirs:Ai,cacheIndex:Ci}=x;if(di===-2&&(P=!1),ni!=null&&fl(ni,null,D,x,!0),Ci!=null&&(F.renderCache[Ci]=void 0),gi&256){F.ctx.deactivate(x);return}const Si=gi&1&&Ai,Xi=!va(x);let zi;if(Xi&&(zi=si&&si.onVnodeBeforeUnmount)&&de(zi,F,x),gi&6)K(x.component,D,O);else{if(gi&128){x.suspense.unmount(D,O);return}Si&&Ne(x,null,F,"beforeUnmount"),gi&64?x.type.remove(x,F,D,ki,O):ai&&!ai.hasOnce&&(H!==_i||di>0&&di&64)?ri(ai,F,D,!1,!0):(H===_i&&di&384||!P&&gi&16)&&ri(ii,F,D),O&&q(x)}(Xi&&(zi=si&&si.onVnodeUnmounted)||Si)&&ie(()=>{zi&&de(zi,F,x),Si&&Ne(x,null,F,"unmounted")},D)},q=x=>{const{type:F,el:D,anchor:O,transition:P}=x;if(F===_i){W(D,O);return}if(F===Za){v(x);return}const H=()=>{a(D),P&&!P.persisted&&P.afterLeave&&P.afterLeave()};if(x.shapeFlag&1&&P&&!P.persisted){const{leave:si,delayLeave:ni}=P,ii=()=>si(D,H);ni?ni(x.el,H,ii):ii()}else H()},W=(x,F)=>{let D;for(;x!==F;)D=u(x),a(x),x=D;a(F)},K=(x,F,D)=>{const{bum:O,scope:P,job:H,subTree:si,um:ni,m:ii,a:ai}=x;ng(ii),ng(ai),O&&ih(O),P.stop(),H&&(H.flags|=8,ei(si,x,F,D)),ni&&ie(ni,F),ie(()=>{x.isUnmounted=!0},F),F&&F.pendingBranch&&!F.isUnmounted&&x.asyncDep&&!x.asyncResolved&&x.suspenseId===F.pendingId&&(F.deps--,F.deps===0&&F.resolve()),qm(x)},ri=(x,F,D,O=!1,P=!1,H=0)=>{for(let si=H;si<x.length;si++)ei(x[si],F,D,O,P)},U=x=>{if(x.shapeFlag&6)return U(x.component.subTree);if(x.shapeFlag&128)return x.suspense.next();const F=u(x.anchor||x.el),D=F&&F[jm];return D?u(D):F};let Q=!1;const J=(x,F,D)=>{x==null?F._vnode&&ei(F._vnode,null,null,!0):A(F._vnode||null,x,F,null,null,null,D),F._vnode=x,Q||(Q=!0,Uc(),vh(),Q=!1)},ki={p:A,um:ei,m:pi,r:q,mt:E,mc:w,pc:G,pbc:R,n:U,o:i};let ci,X;return s&&([ci,X]=s(ki)),{render:J,hydrate:ci,createApp:fv(J,ci)}}function Jp({type:i,props:s},e){return e==="svg"&&i==="foreignObject"||e==="mathml"&&i==="annotation-xml"&&s&&s.encoding&&s.encoding.includes("html")?void 0:e}function ha({effect:i,job:s},e){e?(i.flags|=32,s.flags|=4):(i.flags&=-33,s.flags&=-5)}function e4(i,s){return(!i||i&&!i.pendingBranch)&&s&&!s.persisted}function n4(i,s,e=!1){const n=i.children,a=s.children;if(xi(n)&&xi(a))for(let t=0;t<n.length;t++){const l=n[t];let r=a[t];r.shapeFlag&1&&!r.dynamicChildren&&((r.patchFlag<=0||r.patchFlag===32)&&(r=a[t]=Nn(a[t]),r.el=l.el),!e&&r.patchFlag!==-2&&n4(l,r)),r.type===Kn&&(r.el=l.el)}}function xv(i){const s=i.slice(),e=[0];let n,a,t,l,r;const h=i.length;for(n=0;n<h;n++){const p=i[n];if(p!==0){if(a=e[e.length-1],i[a]<p){s[n]=a,e.push(n);continue}for(t=0,l=e.length-1;t<l;)r=t+l>>1,i[e[r]]<p?t=r+1:l=r;p<i[e[t]]&&(t>0&&(s[n]=e[t-1]),e[t]=n)}}for(t=e.length,l=e[t-1];t-- >0;)e[t]=l,l=s[l];return e}function a4(i){const s=i.subTree.component;if(s)return s.asyncDep&&!s.asyncResolved?s:a4(s)}function ng(i){if(i)for(let s=0;s<i.length;s++)i[s].flags|=8}const wv=Symbol.for("v-scx"),Tv=()=>Ni(wv);function ep(i,s){return yu(i,null,s)}function bi(i,s,e){return yu(i,s,e)}function yu(i,s,e=Ji){const{immediate:n,deep:a,flush:t,once:l}=e,r=Fs({},e),h=s&&n||!s&&t!=="post";let p;if(pt){if(t==="sync"){const o=Tv();p=o.__watcherHandles||(o.__watcherHandles=[])}else if(!h){const o=()=>{};return o.stop=He,o.resume=He,o.pause=He,o}}const k=As;r.call=(o,c,A)=>be(o,k,c,A);let d=!1;t==="post"?r.scheduler=o=>{ie(o,k&&k.suspense)}:t!=="sync"&&(d=!0,r.scheduler=(o,c)=>{c?o():uu(o)}),r.augmentJob=o=>{s&&(o.flags|=4),d&&(o.flags|=2,k&&(o.id=k.uid,o.i=k))};const u=Tm(i,s,r);return pt&&(p?p.push(u):h&&u()),u}function Sv(i,s,e){const n=this.proxy,a=es(i)?i.includes(".")?t4(n,i):()=>n[i]:i.bind(n,n);let t;wi(s)?t=s:(t=s.handler,e=s);const l=ir(this),r=yu(a,t.bind(n),e);return l(),r}function t4(i,s){const e=s.split(".");return()=>{let n=i;for(let a=0;a<e.length&&n;a++)n=n[e[a]];return n}}const Iv=(i,s)=>s==="modelValue"||s==="model-value"?i.modelModifiers:i[`${s}Modifiers`]||i[`${Ws(s)}Modifiers`]||i[`${na(s)}Modifiers`];function Rv(i,s,...e){if(i.isUnmounted)return;const n=i.vnode.props||Ji;let a=e;const t=s.startsWith("update:"),l=t&&Iv(n,s.slice(7));l&&(l.trim&&(a=e.map(k=>es(k)?k.trim():k)),l.number&&(a=e.map(Ah))),Hm(i,s,a);let r,h=n[r=Hp(s)]||n[r=Hp(Ws(s))];!h&&t&&(h=n[r=Hp(na(s))]),h&&be(h,i,6,a);const p=n[r+"Once"];if(p){if(!i.emitted)i.emitted={};else if(i.emitted[r])return;i.emitted[r]=!0,be(p,i,6,a)}}function l4(i,s,e=!1){const n=s.emitsCache,a=n.get(i);if(a!==void 0)return a;const t=i.emits;let l={},r=!1;if(!wi(i)){const h=p=>{const k=l4(p,s,!0);k&&(r=!0,Fs(l,k))};!e&&s.mixins.length&&s.mixins.forEach(h),i.extends&&h(i.extends),i.mixins&&i.mixins.forEach(h)}return!t&&!r?(Zi(i)&&n.set(i,null),null):(xi(t)?t.forEach(h=>l[h]=null):Fs(l,t),Zi(i)&&n.set(i,l),l)}function np(i,s){return!i||!Kl(s)?!1:(s=s.slice(2).replace(/Once$/,""),Ui(i,s[0].toLowerCase()+s.slice(1))||Ui(i,na(s))||Ui(i,s))}function Qp(i){const{type:s,vnode:e,proxy:n,withProxy:a,propsOptions:[t],slots:l,attrs:r,emit:h,render:p,renderCache:k,props:d,data:u,setupState:o,ctx:c,inheritAttrs:A}=i,g=Fh(i);let f,m;try{if(e.shapeFlag&4){const v=a||n,C=v;f=ue(p.call(C,v,k,d,o,u,c)),m=r}else{const v=s;f=ue(v.length>1?v(d,{attrs:r,slots:l,emit:h}):v(d,null)),m=s.props?r:Ov(r)}}catch(v){rl.length=0,Jl(v,i,1),f=Bi(xs)}let y=f;if(m&&A!==!1){const v=Object.keys(m),{shapeFlag:C}=y;v.length&&C&7&&(t&&v.some(su)&&(m=Pv(m,t)),y=Zn(y,m,!1,!0))}return e.dirs&&(y=Zn(y,null,!1,!0),y.dirs=y.dirs?y.dirs.concat(e.dirs):e.dirs),e.transition&&Da(y,e.transition),f=y,Fh(g),f}const Ov=i=>{let s;for(const e in i)(e==="class"||e==="style"||Kl(e))&&((s||(s={}))[e]=i[e]);return s},Pv=(i,s)=>{const e={};for(const n in i)(!su(n)||!(n.slice(9)in s))&&(e[n]=i[n]);return e};function Lv(i,s,e){const{props:n,children:a,component:t}=i,{props:l,children:r,patchFlag:h}=s,p=t.emitsOptions;if(s.dirs||s.transition)return!0;if(e&&h>=0){if(h&1024)return!0;if(h&16)return n?ag(n,l,p):!!l;if(h&8){const k=s.dynamicProps;for(let d=0;d<k.length;d++){const u=k[d];if(l[u]!==n[u]&&!np(p,u))return!0}}}else return(a||r)&&(!r||!r.$stable)?!0:n===l?!1:n?l?ag(n,l,p):!0:!!l;return!1}function ag(i,s,e){const n=Object.keys(s);if(n.length!==Object.keys(i).length)return!0;for(let a=0;a<n.length;a++){const t=n[a];if(s[t]!==i[t]&&!np(e,t))return!0}return!1}function r4({vnode:i,parent:s},e){for(;s;){const n=s.subTree;if(n.suspense&&n.suspense.activeBranch===i&&(n.el=i.el),n===i)(i=s.vnode).el=e,s=s.parent;else break}}const h4=i=>i.__isSuspense;function p4(i,s){s&&s.pendingBranch?xi(i)?s.effects.push(...i):s.effects.push(i):Nm(i)}const _i=Symbol.for("v-fgt"),Kn=Symbol.for("v-txt"),xs=Symbol.for("v-cmt"),Za=Symbol.for("v-stc"),rl=[];let zs=null;function hi(i=!1){rl.push(zs=i?null:[])}function Nv(){rl.pop(),zs=rl[rl.length-1]||null}let ht=1;function tg(i,s=!1){ht+=i,i<0&&zs&&s&&(zs.hasOnce=!0)}function k4(i){return i.dynamicChildren=ht>0?zs||Ua:null,Nv(),ht>0&&zs&&zs.push(i),i}function oi(i,s,e,n,a,t){return k4(j(i,s,e,n,a,t,!0))}function rs(i,s,e,n,a){return k4(Bi(i,s,e,n,a,!0))}function ml(i){return i?i.__v_isVNode===!0:!1}function ua(i,s){return i.type===s.type&&i.key===s.key}const d4=({key:i})=>i??null,sh=({ref:i,ref_key:s,ref_for:e})=>(typeof i=="number"&&(i=""+i),i!=null?es(i)||ts(i)||wi(i)?{i:fs,r:i,k:s,f:!!e}:i:null);function j(i,s=null,e=null,n=0,a=null,t=i===_i?0:1,l=!1,r=!1){const h={__v_isVNode:!0,__v_skip:!0,type:i,props:s,key:s&&d4(s),ref:s&&sh(s),scopeId:Cy,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:t,patchFlag:n,dynamicProps:a,dynamicChildren:null,appContext:null,ctx:fs};return r?(fu(h,e),t&128&&i.normalize(h)):e&&(h.shapeFlag|=es(e)?8:16),ht>0&&!l&&zs&&(h.patchFlag>0||t&6)&&h.patchFlag!==32&&zs.push(h),h}const Bi=Mv;function Mv(i,s=null,e=null,n=0,a=null,t=!1){if((!i||i===$y)&&(i=xs),ml(i)){const r=Zn(i,s,!0);return e&&fu(r,e),ht>0&&!t&&zs&&(r.shapeFlag&6?zs[zs.indexOf(i)]=r:zs.push(r)),r.patchFlag=-2,r}if(Kv(i)&&(i=i.__vccOpts),s){s=$v(s);let{class:r,style:h}=s;r&&!es(r)&&(s.class=Ii(r)),Zi(h)&&(du(h)&&!xi(h)&&(h=Fs({},h)),s.style=ds(h))}const l=es(i)?1:h4(i)?128:_y(i)?64:Zi(i)?4:wi(i)?2:0;return j(i,s,e,n,a,l,t,!0)}function $v(i){return i?du(i)||Yy(i)?Fs({},i):i:null}function Zn(i,s,e=!1,n=!1){const{props:a,ref:t,patchFlag:l,children:r,transition:h}=i,p=s?mu(a||{},s):a,k={__v_isVNode:!0,__v_skip:!0,type:i.type,props:p,key:p&&d4(p),ref:s&&s.ref?e&&t?xi(t)?t.concat(sh(s)):[t,sh(s)]:sh(s):t,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:r,target:i.target,targetStart:i.targetStart,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:s&&i.type!==_i?l===-1?16:l|16:l,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:h,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Zn(i.ssContent),ssFallback:i.ssFallback&&Zn(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return h&&n&&Da(k,h.clone(k)),k}function ks(i=" ",s=0){return Bi(Kn,null,i,s)}function $e(i,s){const e=Bi(Za,null,i);return e.staticCount=s,e}function yi(i="",s=!1){return s?(hi(),rs(xs,null,i)):Bi(xs,null,i)}function ue(i){return i==null||typeof i=="boolean"?Bi(xs):xi(i)?Bi(_i,null,i.slice()):ml(i)?Nn(i):Bi(Kn,null,String(i))}function Nn(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:Zn(i)}function fu(i,s){let e=0;const{shapeFlag:n}=i;if(s==null)s=null;else if(xi(s))e=16;else if(typeof s=="object")if(n&65){const a=s.default;a&&(a._c&&(a._d=!1),fu(i,a()),a._c&&(a._d=!0));return}else{e=32;const a=s._;!a&&!Yy(s)?s._ctx=fs:a===3&&fs&&(fs.slots._===1?s._=1:(s._=2,i.patchFlag|=1024))}else wi(s)?(s={default:s,_ctx:fs},e=32):(s=String(s),n&64?(e=16,s=[ks(s)]):e=8);i.children=s,i.shapeFlag|=e}function mu(...i){const s={};for(let e=0;e<i.length;e++){const n=i[e];for(const a in n)if(a==="class")s.class!==n.class&&(s.class=Ii([s.class,n.class]));else if(a==="style")s.style=ds([s.style,n.style]);else if(Kl(a)){const t=s[a],l=n[a];l&&t!==l&&!(xi(t)&&t.includes(l))&&(s[a]=t?[].concat(t,l):l)}else a!==""&&(s[a]=n[a])}return s}function de(i,s,e,n=null){be(i,s,7,[e,n])}const Vv=Uy();let zv=0;function qv(i,s,e){const n=i.type,a=(s?s.appContext:i.appContext)||Vv,t={uid:zv++,vnode:i,type:n,parent:s,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new QA(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(a.provides),ids:s?s.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Zy(n,a),emitsOptions:l4(n,a),emit:null,emitted:null,propsDefaults:Ji,inheritAttrs:n.inheritAttrs,ctx:Ji,data:Ji,props:Ji,attrs:Ji,slots:Ji,refs:Ji,setupState:Ji,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return t.ctx={_:t},t.root=s?s.root:t,t.emit=Rv.bind(null,t),i.ce&&i.ce(t),t}let As=null;const pe=()=>As||fs;let bh,Xd;{const i=Xh(),s=(e,n)=>{let a;return(a=i[e])||(a=i[e]=[]),a.push(n),t=>{a.length>1?a.forEach(l=>l(t)):a[0](t)}};bh=s("__VUE_INSTANCE_SETTERS__",e=>As=e),Xd=s("__VUE_SSR_SETTERS__",e=>pt=e)}const ir=i=>{const s=As;return bh(i),i.scope.on(),()=>{i.scope.off(),bh(s)}},lg=()=>{As&&As.scope.off(),bh(null)};function o4(i){return i.vnode.shapeFlag&4}let pt=!1;function Hv(i,s=!1,e=!1){s&&Xd(s);const{props:n,children:a}=i.vnode,t=o4(i);mv(i,n,t,s),bv(i,a,e);const l=t?jv(i,s):void 0;return s&&Xd(!1),l}function jv(i,s){const e=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,pv);const{setup:n}=e;if(n){En();const a=i.setupContext=n.length>1?c4(i):null,t=ir(i),l=Dt(n,i,0,[i.props,a]),r=WA(l);if(bn(),t(),(r||i.sp)&&!va(i)&&Bu(i),r){if(l.then(lg,lg),s)return l.then(h=>{rg(i,h)}).catch(h=>{Jl(h,i,0)});i.asyncDep=l}else rg(i,l)}else u4(i)}function rg(i,s,e){wi(s)?i.type.__ssrInlineRender?i.ssrRender=s:i.render=s:Zi(s)&&(i.devtoolsRawSetupState=s,i.setupState=Ay(s)),u4(i)}function u4(i,s,e){const n=i.type;i.render||(i.render=n.render||He);{const a=ir(i);En();try{uv(i)}finally{bn(),a()}}}const Uv={get(i,s){return Is(i,"get",""),i[s]}};function c4(i){const s=e=>{i.exposed=e||{}};return{attrs:new Proxy(i.attrs,Uv),slots:i.slots,emit:i.emit,expose:s}}function ap(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(Ay(Ya(i.exposed)),{get(s,e){if(e in s)return s[e];if(e in ll)return ll[e](i)},has(s,e){return e in s||e in ll}})):i.proxy}const Gv=/(?:^|[-_])(\w)/g,Wv=i=>i.replace(Gv,s=>s.toUpperCase()).replace(/[-_]/g,"");function g4(i,s=!0){return wi(i)?i.displayName||i.name:i.name||s&&i.__name}function B4(i,s,e=!1){let n=g4(s);if(!n&&s.__file){const a=s.__file.match(/([^/\\]+)\.\w+$/);a&&(n=a[1])}if(!n&&i&&i.parent){const a=t=>{for(const l in t)if(t[l]===s)return l};n=a(i.components||i.parent.type.components)||a(i.appContext.components)}return n?Wv(n):e?"App":"Anonymous"}function Kv(i){return wi(i)&&"__vccOpts"in i}const z=(i,s)=>xm(i,s,pt);function B(i,s,e){const n=arguments.length;return n===2?Zi(s)&&!xi(s)?ml(s)?Bi(i,null,[s]):Bi(i,s):Bi(i,null,s):(n>3?e=Array.prototype.slice.call(arguments,2):n===3&&ml(e)&&(e=[e]),Bi(i,s,e))}function Yv(i,s){const e=i.memo;if(e.length!=s.length)return!1;for(let n=0;n<e.length;n++)if(yn(e[n],s[n]))return!1;return ht>0&&zs&&zs.push(i),!0}const hg="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Zd;const pg=typeof window<"u"&&window.trustedTypes;if(pg)try{Zd=pg.createPolicy("vue",{createHTML:i=>i})}catch{}const A4=Zd?i=>Zd.createHTML(i):i=>i,Xv="http://www.w3.org/2000/svg",Zv="http://www.w3.org/1998/Math/MathML",hn=typeof document<"u"?document:null,kg=hn&&hn.createElement("template"),Jv={insert:(i,s,e)=>{s.insertBefore(i,e||null)},remove:i=>{const s=i.parentNode;s&&s.removeChild(i)},createElement:(i,s,e,n)=>{const a=s==="svg"?hn.createElementNS(Xv,i):s==="mathml"?hn.createElementNS(Zv,i):e?hn.createElement(i,{is:e}):hn.createElement(i);return i==="select"&&n&&n.multiple!=null&&a.setAttribute("multiple",n.multiple),a},createText:i=>hn.createTextNode(i),createComment:i=>hn.createComment(i),setText:(i,s)=>{i.nodeValue=s},setElementText:(i,s)=>{i.textContent=s},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>hn.querySelector(i),setScopeId(i,s){i.setAttribute(s,"")},insertStaticContent(i,s,e,n,a,t){const l=e?e.previousSibling:s.lastChild;if(a&&(a===t||a.nextSibling))for(;s.insertBefore(a.cloneNode(!0),e),!(a===t||!(a=a.nextSibling)););else{kg.innerHTML=A4(n==="svg"?`<svg>${i}</svg>`:n==="mathml"?`<math>${i}</math>`:i);const r=kg.content;if(n==="svg"||n==="mathml"){const h=r.firstChild;for(;h.firstChild;)r.appendChild(h.firstChild);r.removeChild(h)}s.insertBefore(r,e)}return[l?l.nextSibling:s.firstChild,e?e.previousSibling:s.lastChild]}},xn="transition",Nt="animation",kt=Symbol("_vtc"),y4={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},f4=Fs({},xy,y4),Qv=i=>(i.displayName="Transition",i.props=f4,i),xa=Qv((i,{slots:s})=>B(Gm,m4(i),s)),pa=(i,s=[])=>{xi(i)?i.forEach(e=>e(...s)):i&&i(...s)},dg=i=>i?xi(i)?i.some(s=>s.length>1):i.length>1:!1;function m4(i){const s={};for(const T in i)T in y4||(s[T]=i[T]);if(i.css===!1)return s;const{name:e="v",type:n,duration:a,enterFromClass:t=`${e}-enter-from`,enterActiveClass:l=`${e}-enter-active`,enterToClass:r=`${e}-enter-to`,appearFromClass:h=t,appearActiveClass:p=l,appearToClass:k=r,leaveFromClass:d=`${e}-leave-from`,leaveActiveClass:u=`${e}-leave-active`,leaveToClass:o=`${e}-leave-to`}=i,c=iF(a),A=c&&c[0],g=c&&c[1],{onBeforeEnter:f,onEnter:m,onEnterCancelled:y,onLeave:v,onLeaveCancelled:C,onBeforeAppear:S=f,onAppear:L=m,onAppearCancelled:w=y}=s,_=(T,V,E,$)=>{T._enterCancelled=$,In(T,V?k:r),In(T,V?p:l),E&&E()},R=(T,V)=>{T._isLeaving=!1,In(T,d),In(T,o),In(T,u),V&&V()},N=T=>(V,E)=>{const $=T?L:m,I=()=>_(V,T,E);pa($,[V,I]),og(()=>{In(V,T?h:t),Pe(V,T?k:r),dg($)||ug(V,n,A,I)})};return Fs(s,{onBeforeEnter(T){pa(f,[T]),Pe(T,t),Pe(T,l)},onBeforeAppear(T){pa(S,[T]),Pe(T,h),Pe(T,p)},onEnter:N(!1),onAppear:N(!0),onLeave(T,V){T._isLeaving=!0;const E=()=>R(T,V);Pe(T,d),T._enterCancelled?(Pe(T,u),Jd()):(Jd(),Pe(T,u)),og(()=>{T._isLeaving&&(In(T,d),Pe(T,o),dg(v)||ug(T,n,g,E))}),pa(v,[T,E])},onEnterCancelled(T){_(T,!1,void 0,!0),pa(y,[T])},onAppearCancelled(T){_(T,!0,void 0,!0),pa(w,[T])},onLeaveCancelled(T){R(T),pa(C,[T])}})}function iF(i){if(i==null)return null;if(Zi(i))return[ik(i.enter),ik(i.leave)];{const s=ik(i);return[s,s]}}function ik(i){return H1(i)}function Pe(i,s){s.split(/\s+/).forEach(e=>e&&i.classList.add(e)),(i[kt]||(i[kt]=new Set)).add(s)}function In(i,s){s.split(/\s+/).forEach(n=>n&&i.classList.remove(n));const e=i[kt];e&&(e.delete(s),e.size||(i[kt]=void 0))}function og(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}let sF=0;function ug(i,s,e,n){const a=i._endId=++sF,t=()=>{a===i._endId&&n()};if(e!=null)return setTimeout(t,e);const{type:l,timeout:r,propCount:h}=v4(i,s);if(!l)return n();const p=l+"end";let k=0;const d=()=>{i.removeEventListener(p,u),t()},u=o=>{o.target===i&&++k>=h&&d()};setTimeout(()=>{k<h&&d()},r+1),i.addEventListener(p,u)}function v4(i,s){const e=window.getComputedStyle(i),n=c=>(e[c]||"").split(", "),a=n(`${xn}Delay`),t=n(`${xn}Duration`),l=cg(a,t),r=n(`${Nt}Delay`),h=n(`${Nt}Duration`),p=cg(r,h);let k=null,d=0,u=0;s===xn?l>0&&(k=xn,d=l,u=t.length):s===Nt?p>0&&(k=Nt,d=p,u=h.length):(d=Math.max(l,p),k=d>0?l>p?xn:Nt:null,u=k?k===xn?t.length:h.length:0);const o=k===xn&&/\b(transform|all)(,|$)/.test(n(`${xn}Property`).toString());return{type:k,timeout:d,propCount:u,hasTransform:o}}function cg(i,s){for(;i.length<s.length;)i=i.concat(i);return Math.max(...s.map((e,n)=>gg(e)+gg(i[n])))}function gg(i){return i==="auto"?0:Number(i.slice(0,-1).replace(",","."))*1e3}function Jd(){return document.body.offsetHeight}function eF(i,s,e){const n=i[kt];n&&(s=(s?[s,...n]:[...n]).join(" ")),s==null?i.removeAttribute("class"):e?i.setAttribute("class",s):i.className=s}const Ch=Symbol("_vod"),F4=Symbol("_vsh"),ga={beforeMount(i,{value:s},{transition:e}){i[Ch]=i.style.display==="none"?"":i.style.display,e&&s?e.beforeEnter(i):Mt(i,s)},mounted(i,{value:s},{transition:e}){e&&s&&e.enter(i)},updated(i,{value:s,oldValue:e},{transition:n}){!s!=!e&&(n?s?(n.beforeEnter(i),Mt(i,!0),n.enter(i)):n.leave(i,()=>{Mt(i,!1)}):Mt(i,s))},beforeUnmount(i,{value:s}){Mt(i,s)}};function Mt(i,s){i.style.display=s?i[Ch]:"none",i[F4]=!s}const nF=Symbol(""),aF=/(^|;)\s*display\s*:/;function tF(i,s,e){const n=i.style,a=es(e);let t=!1;if(e&&!a){if(s)if(es(s))for(const l of s.split(";")){const r=l.slice(0,l.indexOf(":")).trim();e[r]==null&&eh(n,r,"")}else for(const l in s)e[l]==null&&eh(n,l,"");for(const l in e)l==="display"&&(t=!0),eh(n,l,e[l])}else if(a){if(s!==e){const l=n[nF];l&&(e+=";"+l),n.cssText=e,t=aF.test(e)}}else s&&i.removeAttribute("style");Ch in i&&(i[Ch]=t?n.display:"",i[F4]&&(n.display="none"))}const Bg=/\s*!important$/;function eh(i,s,e){if(xi(e))e.forEach(n=>eh(i,s,n));else if(e==null&&(e=""),s.startsWith("--"))i.setProperty(s,e);else{const n=lF(i,s);Bg.test(e)?i.setProperty(na(n),e.replace(Bg,""),"important"):i[n]=e}}const Ag=["Webkit","Moz","ms"],sk={};function lF(i,s){const e=sk[s];if(e)return e;let n=Ws(s);if(n!=="filter"&&n in i)return sk[s]=n;n=Xl(n);for(let a=0;a<Ag.length;a++){const t=Ag[a]+n;if(t in i)return sk[s]=t}return s}const yg="http://www.w3.org/1999/xlink";function fg(i,s,e,n,a,t=Y1(s)){n&&s.startsWith("xlink:")?e==null?i.removeAttributeNS(yg,s.slice(6,s.length)):i.setAttributeNS(yg,s,e):e==null||t&&!au(e)?i.removeAttribute(s):i.setAttribute(s,t?"":Ee(e)?String(e):e)}function mg(i,s,e,n,a){if(s==="innerHTML"||s==="textContent"){e!=null&&(i[s]=s==="innerHTML"?A4(e):e);return}const t=i.tagName;if(s==="value"&&t!=="PROGRESS"&&!t.includes("-")){const r=t==="OPTION"?i.getAttribute("value")||"":i.value,h=e==null?i.type==="checkbox"?"on":"":String(e);(r!==h||!("_value"in i))&&(i.value=h),e==null&&i.removeAttribute(s),i._value=e;return}let l=!1;if(e===""||e==null){const r=typeof i[s];r==="boolean"?e=au(e):e==null&&r==="string"?(e="",l=!0):r==="number"&&(e=0,l=!0)}try{i[s]=e}catch{}l&&i.removeAttribute(a||s)}function jn(i,s,e,n){i.addEventListener(s,e,n)}function rF(i,s,e,n){i.removeEventListener(s,e,n)}const vg=Symbol("_vei");function hF(i,s,e,n,a=null){const t=i[vg]||(i[vg]={}),l=t[s];if(n&&l)l.value=n;else{const[r,h]=pF(s);if(n){const p=t[s]=oF(n,a);jn(i,r,p,h)}else l&&(rF(i,r,l,h),t[s]=void 0)}}const Fg=/(?:Once|Passive|Capture)$/;function pF(i){let s;if(Fg.test(i)){s={};let n;for(;n=i.match(Fg);)i=i.slice(0,i.length-n[0].length),s[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):na(i.slice(2)),s]}let ek=0;const kF=Promise.resolve(),dF=()=>ek||(kF.then(()=>ek=0),ek=Date.now());function oF(i,s){const e=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=e.attached)return;be(uF(n,e.value),s,5,[n])};return e.value=i,e.attached=dF(),e}function uF(i,s){if(xi(s)){const e=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{e.call(i),i._stopped=!0},s.map(n=>a=>!a._stopped&&n&&n(a))}else return s}const Eg=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,cF=(i,s,e,n,a,t)=>{const l=a==="svg";s==="class"?eF(i,n,l):s==="style"?tF(i,e,n):Kl(s)?su(s)||hF(i,s,e,n,t):(s[0]==="."?(s=s.slice(1),!0):s[0]==="^"?(s=s.slice(1),!1):gF(i,s,n,l))?(mg(i,s,n),!i.tagName.includes("-")&&(s==="value"||s==="checked"||s==="selected")&&fg(i,s,n,l,t,s!=="value")):i._isVueCE&&(/[A-Z]/.test(s)||!es(n))?mg(i,Ws(s),n,t,s):(s==="true-value"?i._trueValue=n:s==="false-value"&&(i._falseValue=n),fg(i,s,n,l))};function gF(i,s,e,n){if(n)return!!(s==="innerHTML"||s==="textContent"||s in i&&Eg(s)&&wi(e));if(s==="spellcheck"||s==="draggable"||s==="translate"||s==="form"||s==="list"&&i.tagName==="INPUT"||s==="type"&&i.tagName==="TEXTAREA")return!1;if(s==="width"||s==="height"){const a=i.tagName;if(a==="IMG"||a==="VIDEO"||a==="CANVAS"||a==="SOURCE")return!1}return Eg(s)&&es(e)?!1:s in i}const E4=new WeakMap,b4=new WeakMap,_h=Symbol("_moveCb"),bg=Symbol("_enterCb"),BF=i=>(delete i.props.mode,i),AF=BF({name:"TransitionGroup",props:Fs({},f4,{tag:String,moveClass:String}),setup(i,{slots:s}){const e=pe(),n=Dy();let a,t;return Ny(()=>{if(!a.length)return;const l=i.moveClass||`${i.name||"v"}-move`;if(!vF(a[0].el,e.vnode.el,l))return;a.forEach(yF),a.forEach(fF);const r=a.filter(mF);Jd(),r.forEach(h=>{const p=h.el,k=p.style;Pe(p,l),k.transform=k.webkitTransform=k.transitionDuration="";const d=p[_h]=u=>{u&&u.target!==p||(!u||/transform$/.test(u.propertyName))&&(p.removeEventListener("transitionend",d),p[_h]=null,In(p,l))};p.addEventListener("transitionend",d)})}),()=>{const l=Pi(i),r=m4(l);let h=l.tag||_i;if(a=[],t)for(let p=0;p<t.length;p++){const k=t[p];k.el&&k.el instanceof Element&&(a.push(k),Da(k,yl(k,r,n,e)),E4.set(k,k.el.getBoundingClientRect()))}t=s.default?gu(s.default()):[];for(let p=0;p<t.length;p++){const k=t[p];k.key!=null&&Da(k,yl(k,r,n,e))}return Bi(h,null,t)}}}),C4=AF;function yF(i){const s=i.el;s[_h]&&s[_h](),s[bg]&&s[bg]()}function fF(i){b4.set(i,i.el.getBoundingClientRect())}function mF(i){const s=E4.get(i),e=b4.get(i),n=s.left-e.left,a=s.top-e.top;if(n||a){const t=i.el.style;return t.transform=t.webkitTransform=`translate(${n}px,${a}px)`,t.transitionDuration="0s",i}}function vF(i,s,e){const n=i.cloneNode(),a=i[kt];a&&a.forEach(r=>{r.split(/\s+/).forEach(h=>h&&n.classList.remove(h))}),e.split(/\s+/).forEach(r=>r&&n.classList.add(r)),n.style.display="none";const t=s.nodeType===1?s:s.parentNode;t.appendChild(n);const{hasTransform:l}=v4(n);return t.removeChild(n),l}const dt=i=>{const s=i.props["onUpdate:modelValue"]||!1;return xi(s)?e=>ih(s,e):s};function FF(i){i.target.composing=!0}function Cg(i){const s=i.target;s.composing&&(s.composing=!1,s.dispatchEvent(new Event("input")))}const fn=Symbol("_assign"),EF={created(i,{modifiers:{lazy:s,trim:e,number:n}},a){i[fn]=dt(a);const t=n||a.props&&a.props.type==="number";jn(i,s?"change":"input",l=>{if(l.target.composing)return;let r=i.value;e&&(r=r.trim()),t&&(r=Ah(r)),i[fn](r)}),e&&jn(i,"change",()=>{i.value=i.value.trim()}),s||(jn(i,"compositionstart",FF),jn(i,"compositionend",Cg),jn(i,"change",Cg))},mounted(i,{value:s}){i.value=s??""},beforeUpdate(i,{value:s,oldValue:e,modifiers:{lazy:n,trim:a,number:t}},l){if(i[fn]=dt(l),i.composing)return;const r=(t||i.type==="number")&&!/^0\d/.test(i.value)?Ah(i.value):i.value,h=s??"";r!==h&&(document.activeElement===i&&i.type!=="range"&&(n&&s===e||a&&i.value.trim()===h)||(i.value=h))}},Re={deep:!0,created(i,s,e){i[fn]=dt(e),jn(i,"change",()=>{const n=i._modelValue,a=vl(i),t=i.checked,l=i[fn];if(xi(n)){const r=tu(n,a),h=r!==-1;if(t&&!h)l(n.concat(a));else if(!t&&h){const p=[...n];p.splice(r,1),l(p)}}else if(_t(n)){const r=new Set(n);t?r.add(a):r.delete(a),l(r)}else l(D4(i,t))})},mounted:_g,beforeUpdate(i,s,e){i[fn]=dt(e),_g(i,s,e)}};function _g(i,{value:s,oldValue:e},n){i._modelValue=s;let a;if(xi(s))a=tu(s,n.props.value)>-1;else if(_t(s))a=s.has(n.props.value);else{if(s===e)return;a=Zl(s,D4(i,!0))}i.checked!==a&&(i.checked=a)}const _4={deep:!0,created(i,{value:s,modifiers:{number:e}},n){const a=_t(s);jn(i,"change",()=>{const t=Array.prototype.filter.call(i.options,l=>l.selected).map(l=>e?Ah(vl(l)):vl(l));i[fn](i.multiple?a?new Set(t):t:t[0]),i._assigning=!0,Hi(()=>{i._assigning=!1})}),i[fn]=dt(n)},mounted(i,{value:s}){Dg(i,s)},beforeUpdate(i,s,e){i[fn]=dt(e)},updated(i,{value:s}){i._assigning||Dg(i,s)}};function Dg(i,s){const e=i.multiple,n=xi(s);if(!(e&&!n&&!_t(s))){for(let a=0,t=i.options.length;a<t;a++){const l=i.options[a],r=vl(l);if(e)if(n){const h=typeof r;h==="string"||h==="number"?l.selected=s.some(p=>String(p)===String(r)):l.selected=tu(s,r)>-1}else l.selected=s.has(r);else if(Zl(vl(l),s)){i.selectedIndex!==a&&(i.selectedIndex=a);return}}!e&&i.selectedIndex!==-1&&(i.selectedIndex=-1)}}function vl(i){return"_value"in i?i._value:i.value}function D4(i,s){const e=s?"_trueValue":"_falseValue";return e in i?i[e]:s}const bF=["ctrl","shift","alt","meta"],CF={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,s)=>bF.some(e=>i[`${e}Key`]&&!s.includes(e))},x4=(i,s)=>{const e=i._withMods||(i._withMods={}),n=s.join(".");return e[n]||(e[n]=(a,...t)=>{for(let l=0;l<s.length;l++){const r=CF[s[l]];if(r&&r(a,s))return}return i(a,...t)})},_F=Fs({patchProp:cF},Jv);let nk,xg=!1;function DF(){return nk=xg?nk:_v(_F),xg=!0,nk}const xF=(...i)=>{const s=DF().createApp(...i),{mount:e}=s;return s.mount=n=>{const a=TF(n);if(a)return e(a,!0,wF(a))},s};function wF(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function TF(i){return es(i)?document.querySelector(i):i}var sr=i=>/^[a-z][a-z0-9+.-]*:/.test(i)||i.startsWith("//"),SF=/.md((\?|#).*)?$/,vu=(i,s="/")=>sr(i)||i.startsWith("/")&&!i.startsWith(s)&&!SF.test(i),aa=i=>/^(https?:)?\/\//.test(i),wg=i=>{if(!i||i.endsWith("/"))return i;let s=i.replace(/(^|\/)README.md$/i,"$1index.html");return s.endsWith(".md")?s=`${s.substring(0,s.length-3)}.html`:s.endsWith(".html")||(s=`${s}.html`),s.endsWith("/index.html")&&(s=s.substring(0,s.length-10)),s},IF="http://.",RF=(i,s)=>{if(!i.startsWith("/")&&s){const e=s.slice(0,s.lastIndexOf("/"));return wg(new URL(`${e}/${i}`,IF).pathname)}return wg(i)},OF=(i,s)=>{const e=Object.keys(i).sort((n,a)=>{const t=a.split("/").length-n.split("/").length;return t!==0?t:a.length-n.length});for(const n of e)if(s.startsWith(n))return n;return"/"},PF=/(#|\?)/,w4=i=>{const[s,...e]=i.split(PF);return{pathname:s,hashAndQueries:e.join("")}},LF=["link","meta","script","style","noscript","template"],NF=["title","base"],MF=([i,s,e])=>NF.includes(i)?i:LF.includes(i)?i==="meta"&&s.name?`${i}.${s.name}`:i==="template"&&s.id?`${i}.${s.id}`:JSON.stringify([i,Object.entries(s).map(([n,a])=>typeof a=="boolean"?a?[n,""]:null:[n,a]).filter(n=>n!=null).sort(([n],[a])=>n.localeCompare(a)),e]):null,$F=i=>{const s=new Set,e=[];return i.forEach(n=>{const a=MF(n);a&&!s.has(a)&&(s.add(a),e.push(n))}),e},VF=i=>i.startsWith("/")?i:`/${i}`,Fu=i=>i.endsWith("/")||i.endsWith(".html")?i:`${i}/`,Eu=i=>i.endsWith("/")?i.slice(0,-1):i,T4=i=>i.startsWith("/")?i.slice(1):i,zF=i=>typeof i=="function",er=i=>Object.prototype.toString.call(i)==="[object Object]",ls=i=>typeof i=="string";const qF=JSON.parse("{}"),HF=Object.fromEntries([["/SUMMARY.html",{loader:()=>b(()=>import("./SUMMARY.html-D9NC-o58.js"),[]),meta:{excerpt:`
<p><a href="/rust-course/about-book.html" target="_blank">关于本书</a><br>
<a href="/rust-course/into-rust.html" target="_blank">进入 Rust 编程世界</a><br>
<a href="/rust-course/first-try/sth-you-should-not-do.html" target="_blank">避免从入门到放弃</a></p>
<!-- [快速查询入口](index-list.md) 暂时屏蔽-->
<p><a href="/rust-course/community.html" target="_blank">社区和锈书</a></p>`,readingTime:{minutes:8.61,words:2584},title:"Rust 语言圣经",type:"article"}}],["/about-book.html",{loader:()=>b(()=>import("./about-book.html-CHNdBbZK.js"),[]),meta:{excerpt:`<img src="https://github.com/sunface/rust-course/blob/main/assets/banner.jpg?raw=true">
<p>Rust 语言真的好：连续八年成为全世界最受欢迎的语言、没有 GC 也无需手动内存管理、性能比肩 C++/C 还能直接调用它们的代码、安全性极高 - 总有公司说使用 Rust 后以前的大部分 bug 都将自动消失、全世界最好的包管理工具 Cargo 等等。但...</p>
<p><strong>有人说: "Rust 太难了，学了也没用"</strong></p>
<p>对于后面一句话我们持保留意见，如果以找工作为标准，那国内环境确实还不好，但如果你想成为更优秀的程序员或者是玩转开源，那 Rust 还真是不错的选择，具体原因见<a href="https://course.rs/into-rust.html" target="_blank" rel="noopener noreferrer">下一章</a>。</p>`,readingTime:{minutes:3.27,words:982},title:"",type:"article",s:"about-book"}}],["/beat-ai.html",{loader:()=>b(()=>import("./beat-ai.html-C7MhNnAX.js"),[]),meta:{excerpt:`<h2>Beat AI</h2>
<p>专属于软件开发工程师的 AI 入门圣经。从神经网络到大模型，从高层设计到微观原理，从工程实现到算法，学完后，你会发现 AI 也并不是想象中那么高不可攀、无法战胜，Just beat it !</p>
<ul>
<li>官方地址: <a href="https://github.com/sunface/beat-ai" target="_blank" rel="noopener noreferrer">https://github.com/sunface/beat-ai</a></li>
</ul>
<h2>目前进度</h2>
<p>准备开始动笔，预计在 2024.08 之前会完成基本的章节。</p>`,readingTime:{minutes:1.24,words:371},title:"",type:"article",s:"beat-ai"}}],["/community.html",{loader:()=>b(()=>import("./community.html-Ck9bq6KD.js"),[]),meta:{excerpt:`<h2>Rust语言中文网</h2>
<img src="https://github.com/rustlang-cn/.github/blob/main/assets/cover.jpg?raw=true">
<h4 align="center">跟我来吧，学完 Rust，你的前面就是星辰大海！</h4>
<hr>
<p>这个社区与其它 Rust 社区有点不一样: 我们聚焦于 Rust 语言的学习研究和实战应用上，不搞花活！</p>
<ul>
<li>
<p>RustCn 微信交流群<br>
<img src="https://github.com/sunface/rust-course/assets/7036754/a84ec7e5-30b1-48da-9352-95503aa61a8f" width="200"></p>
</li>
<li>
<p>公众号: <code>Rust语言中文网</code></p>
</li>
</ul>`,readingTime:{minutes:1.1,words:329},title:"",type:"article",s:"community"}}],["/github.html",{loader:()=>b(()=>import("./github.html-CzrvhF54.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:0,words:1},title:"GitHub",type:"article"}}],["/index-list.html",{loader:()=>b(()=>import("./index-list.html-OlCVNMY3.js"),[]),meta:{excerpt:`
<p>&lt;&lt;Rust 语言圣经&gt;&gt; 既然自诩为 Rust 日常开发工具书，那就得有工具书的样子，如果没有了快速索引查询的功能，也就没有了灵魂。</p>
<p>因此我们决定在这里提供一个对全书内容进行快速索引的途径。理论上来说，<strong>你想查的任何东西在这里都可以快速的被找到并能进入相应的章节查看详细的介绍</strong>。</p>
<p>可能大家会有疑问，不是有站内搜索功能嘛？是的，但是尴尬的是：首先它不支持中文，其次就算支持了中文，也一样不好用，我们需要的是快速精准地找到内容而不是模糊的查询内容。</p>
<h1>索引列表 doing</h1>
<p><a id="head"></a></p>`,readingTime:{minutes:16.61,words:4983},title:"快速查询入口",type:"article"}}],["/into-rust.html",{loader:()=>b(()=>import("./into-rust.html-CYyn7SSE.js"),[]),meta:{excerpt:`<img src="https://pic1.zhimg.com/80/v2-e9cfbd08d2ebca51b588d1beaed3c0dd_1440w.jpg">
<div align="center">正在努力学 Rust 的 Ferris</div>
<br>
<h2>Rust 发展历程</h2>
<p>Rust 最早是 Mozilla 雇员 Graydon Hoare 的个人项目。从 2009 年开始，得到了 Mozilla 研究院的资助，2010 年项目对外公布，2010 ～ 2011 年间实现自举。自此以后，Rust 在部分重构 -&gt; 崩溃的边缘反复横跳（历程极其艰辛），终于，在 2015 年 5 月 15 日发布 1.0 版。</p>`,readingTime:{minutes:13.24,words:3973},title:"",type:"article",s:"into-rust"}}],["/practice.html",{loader:()=>b(()=>import("./practice.html-CJ0lkjkr.js"),[]),meta:{excerpt:`<h2>课后习题</h2>
<p><a href="https://practice.rs" target="_blank" rel="noopener noreferrer">https://practice.rs</a></p>
`,readingTime:{minutes:.03,words:8},title:"",type:"article",s:"practice"}}],["/rust-weekly.html",{loader:()=>b(()=>import("./rust-weekly.html-YqFmkvKu.js"),[]),meta:{excerpt:`
<p>Rust语言周刊精选全世界过去一周(或者几周)的优秀文章、新闻、开源项目和语言动态。</p>
<p>本周刊由 RustCn 倾情打造，其中， <code>[Zh]</code> 标识的中文资料由 Rust 翻译计划提供，并且原始的 Markdown 文档已<a href="https://github.com/rustlang-cn/rustt" target="_blank" rel="noopener noreferrer">全部开源</a>，欢迎大家阅读和订阅。</p>
<blockquote>
<p>RustCn：https://hirust.cn, 公众号: Rust语言中文网</p>
</blockquote>`,readingTime:{minutes:5.88,words:1764},title:"「Rust 语言周刊」 第 17 期 · 2022-07-15",type:"article"}}],["/rustt.html",{loader:()=>b(()=>import("./rustt.html-DJrZFRfU.js"),[]),meta:{excerpt:`
<p>🥇Rustt 翻译计划，这里有国内最优质、最实时的 Rust 技术文章、学习资料和新闻资讯，欢迎大家<a href="https://github.com/studyrs/Rustt" target="_blank" rel="noopener noreferrer">前往阅读和订阅</a>。</p>
<h2>最近优秀作品展</h2>
<table>
<thead>
<tr>
<th>中文名</th>
<th>翻译时间</th>
<th>作者</th>
</tr>
</thead>
<tbody>
<tr>
<td>[series]<a href="https://github.com/studyrs/Rustt/tree/main/Articles/%5B2022-04-03%5D%20Rust%20%E5%85%AD%E8%BE%B9%E5%BD%A2%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener noreferrer">Rust 六边形架构</a></td>
<td>2022-04-04</td>
<td><a href="https://github.com/trdthg" target="_blank" rel="noopener noreferrer">trdthg</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-04-02%5D%20%E7%94%A8%20Rust%20%E5%86%99%20DevOps%20%E5%B7%A5%E5%85%B7.md" target="_blank" rel="noopener noreferrer">用 Rust 写 Devops 工具</a></td>
<td>2022-04-03</td>
<td><a href="https://github.com/lxbwolf" target="_blank" rel="noopener noreferrer">Xiaobin.Liu</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-04-02%5D%20Rust%20%E5%A4%A7%E4%BD%AC%E7%BB%99%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%BB%BA%E8%AE%AE.md" target="_blank" rel="noopener noreferrer">Rust 大佬给初学者的学习建议</a></td>
<td>2022-04-02</td>
<td><a href="https://github.com/asur4s" target="_blank" rel="noopener noreferrer">Asura</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-04-01%5D%20Rust%20%E8%83%8C%E5%90%8E%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%85%AC%E5%8F%B8.md" target="_blank" rel="noopener noreferrer">Rust 背后并不是公司</a></td>
<td>2022-04-01</td>
<td><a href="https://github.com/allenli178" target="_blank" rel="noopener noreferrer">子殊</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-03-29%5D%20%E5%9C%A8%20Rust%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20epoll%20%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E7%9A%84%E9%9D%9E%E9%98%BB%E5%A1%9E%20IO.md" target="_blank" rel="noopener noreferrer">在 Rust 中使用 epoll 实现非阻塞 IO</a></td>
<td>2022-03-29</td>
<td><a href="https://github.com/hyuuko" target="_blank" rel="noopener noreferrer">BK0717</a></td>
</tr>
</tbody>
</table>`,readingTime:{minutes:.77,words:230},title:"Rustt 翻译计划",type:"article"}}],["/rusty-book.html",{loader:()=>b(()=>import("./rusty-book.html-d2-uF3nH.js"),[]),meta:{excerpt:`
<div align="center">
    <img width="100%" src="https://github.com/studyrs/rusty-book/blob/main/assets/banner.gif?raw=true">
</div>
<div align="center">
</div>
<p>在 Rust 元宇宙，最优秀的项目可以称之为 <code>rusty</code>，用咱中国话来说，就是够锈( 秀 )。</p>
<p>如果你有以下需求，可以来看看锈书，它绝对不会让你失望：</p>
<ul>
<li>
<p>想要知道现在优秀的、关注度高的 Rust 项目有哪些</p>
</li>
<li>
<p>发现一些好玩、有趣、酷炫的开源库</p>
</li>
<li>
<p>需要寻找某个类型的库，例如，一个 HTTP 客户端或 ProtoBuffer 编码库，要求是好用、更新活跃、高质量</p>
</li>
<li>
<p>想要寻找常用操作的代码片段，用于熟悉 Rust 或者直接复制粘贴到自己的项目中，例如文件操作、数据库操作、HTTP 请求、排序算法、正则等</p>
</li>
</ul>`,readingTime:{minutes:.72,words:215},title:"",type:"article",s:"rusty-book"}}],["/some-thoughts.html",{loader:()=>b(()=>import("./some-thoughts.html-D4DAkZKQ.js"),[]),meta:{excerpt:`
<p>经常关注新技术的同学，这两年应该都听说过可观测性这个概念，它包含了对 <strong>Metrics 指标、Log 日志以及 Trace 链路的监控</strong>，特别是针对这三个指标的<strong>深度关联</strong>，让监控数据不再孤立。</p>
<p>目前整个业界百花齐放，Prometheus、Jaeger、Opentelemetry 各种优秀的世界级开源产品覆盖了可观测性的方方面面，但是在可观测性的可视化方面还缺少一个大杀器，我们期待它能拥有以下特性：</p>
<ul>
<li>覆盖各种可观测性场景</li>
<li>拥有丰富可定制选项的图表组件和数据源</li>
<li>图表、页面之间的深度可定义交互</li>
<li>企业级的多租户、权限管理、导航菜单和全局状态管理</li>
<li>优秀的图表性能和交互体验</li>
<li>现代化的的 UI 设计，支持数据大屏，完美支持移动端</li>
<li>强大的可编程性及二次开发友好性</li>
<li>宽松的开源协议、丰富的文档和快速的社区响应支持</li>
</ul>`,readingTime:{minutes:3.25,words:975},title:"Datav: 可编程的数据可视化平台和可观测性平台",type:"article"}}],["/advance/errors.html",{loader:()=>b(()=>import("./errors.html-ClKhO83A.js"),[]),meta:{excerpt:`
<p>在之前的<a href="https://course.rs/basic/result-error/intro.html" target="_blank" rel="noopener noreferrer">返回值和错误处理</a>章节中，我们学习了几个重要的概念，例如 <code>Result</code> 用于返回结果处理，<code>?</code> 用于错误的传播，若大家对此还较为模糊，强烈建议回头温习下。</p>
<p>在本章节中一起来看看如何对 <code>Result</code> ( <code>Option</code> ) 做进一步的处理，以及如何定义自己的错误类型。</p>`,readingTime:{minutes:14.83,words:4449},title:"错误处理",type:"article"}}],["/advance/global-variable.html",{loader:()=>b(()=>import("./global-variable.html-D3VKUyLw.js"),[]),meta:{excerpt:`
<p>在一些场景，我们可能需要全局变量来简化状态共享的代码，包括全局 ID，全局数据存储等等，下面一起来看看有哪些创建全局变量的方法。</p>
<p>首先，有一点可以肯定，全局变量的生命周期肯定是<code>'static</code>，但是不代表它需要用<code>static</code>来声明，例如常量、字符串字面值等无需使用<code>static</code>进行声明，原因是它们已经被打包到二进制可执行文件中。</p>
<p>下面我们从编译期初始化及运行期初始化两个类别来介绍下全局变量有哪些类型及该如何使用。</p>
<h2>编译期初始化</h2>
<p>我们大多数使用的全局变量都只需要在编译期初始化即可，例如静态配置、计数器、状态值等等。</p>`,readingTime:{minutes:9.11,words:2734},title:"全局变量",type:"article"}}],["/advance/hrtb.html",{loader:()=>b(()=>import("./hrtb.html-DKbcFku0.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/s6g16d/help_with_hrtb_lifetimes/</p>
<h2>for&lt;'a&gt;</h2>
<p>https://www.reddit.com/r/rust/comments/rq43c6/generic_fn_impl_for_iterating_over_mut_items_twice/</p>
<p>https://www.reddit.com/r/rust/comments/6uobit/fora_lifetime_syntax/</p>
`,readingTime:{minutes:.05,words:16},title:"高阶特征约束(HRTB) todo",type:"article"}}],["/advance/intro.html",{loader:()=>b(()=>import("./intro.html-fPKcEs6K.js"),[]),meta:{excerpt:`
<p>恭喜你，学会 Rust 基础后，金丹大道已在向你招手，大部分 Rust 代码对你来说都是家常便饭，简单得很。可是，对于一门难度传言在外的语言，怎么可能如此简单的就被征服，最难的生命周期，咱还没见过长啥样呢。</p>
<p>从本章开始，我们将进入 Rust 的进阶学习环节，与基础环节不同的是，由于你已经对 Rust 有了一定的认识，因此我们<strong>不会再对很多细节进行翻来覆去的详细讲解，甚至会一带而过</strong>。</p>
<p>总之，欢迎来到高级 Rust 的世界，全新的 Boss，全新的装备，你准备好了吗？</p>
`,readingTime:{minutes:.62,words:186},title:"Rust 高级进阶",type:"article"}}],["/advance/macro.html",{loader:()=>b(()=>import("./macro.html-B8FFujWi.js"),[]),meta:{excerpt:`
<p>在编程世界可以说是谈“宏”色变，原因在于 C 语言中的宏是非常危险的东东，但并不是所有语言都像 C 这样，例如对于古老的语言 Lisp 来说，宏就是就是一个非常强大的好帮手。</p>
<p>那话说回来，在 Rust 中宏到底是好是坏呢？本章将带你揭开它的神秘面纱。</p>
<p>事实上，我们虽然没有见过宏，但是已经多次用过它，例如在全书的第一个例子中就用到了：<code>println!("你好，世界")</code>，这里 <code>println!</code> 就是一个最常用的宏，可以看到它和函数最大的区别是：它在调用时多了一个 <code>!</code>，除此之外还有 <code>vec!</code> 、<code>assert_eq!</code> 都是相当常用的，可以说<strong>宏在 Rust 中无处不在</strong>。</p>`,readingTime:{minutes:21.92,words:6576},title:"Macro 宏编程",type:"article"}}],["/advance/simd.html",{loader:()=>b(()=>import("./simd.html-DI4-4lJf.js"),[]),meta:{excerpt:`
<p>由于 Rust 最新也是万众瞩目的 <code>Portable SIMD</code> 还没有完全成熟，只能在 <code>nightly</code> 版本中使用，因此功能上可能还存在变数，鉴于此，本文不会深入介绍在 Rust 中如何编写 SIMD 代码，而是将目光聚集在两个点上：何为 <code>SIMD</code> 以及关于 <code>Portable SIMD</code> 的简单介绍。</p>
`,readingTime:{minutes:.3,words:90},title:"SIMD",type:"article"}}],["/advance-practice/async.html",{loader:()=>b(()=>import("./async.html-BvdkuzL4.js"),[]),meta:{excerpt:`
<p>在经过多个章节的深入学习后，Tokio 对我们来说不再是一座隐于云雾中的高山，它其实蛮简单好用的，甚至还有一丝丝的可爱!?</p>
<p>但从现在开始，如果想要进一步的深入 Tokio ，首先需要深入理解 <code>async</code> 的原理，其实我们在<a href="https://course.rs/async/intro.html" target="_blank" rel="noopener noreferrer">之前的章节</a>已经深入学习过，这里结合 Tokio 再来回顾下。</p>
<h2>Future</h2>
<p>先来回顾一下 <code>async fn</code> 异步函数 :</p>`,readingTime:{minutes:17.15,words:5144},title:"深入 Tokio 背后的异步原理",type:"article"}}],["/advance-practice/bridging-with-sync.html",{loader:()=>b(()=>import("./bridging-with-sync.html-CHcVL_0G.js"),[]),meta:{excerpt:`
<p>一些异步程序例如 tokio 指南 章节中的绝大多数例子，它们整个程序都是异步的，包括程序入口 <code>main</code> 函数：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">main]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.15,words:2446},title:"异步跟同步共存",type:"article"}}],["/advance-practice/channels.html",{loader:()=>b(()=>import("./channels.html-CaiQJzCM.js"),[]),meta:{excerpt:`
<p>迄今为止，你已经学了不少关于 Tokio 的并发编程的内容，是时候见识下真正的挑战了，接下来，我们一起来实现下客户端这块儿的功能。</p>
<p>首先，将之前实现的 <code>src/main.rs </code>文件中的<a href="https://github.com/tokio-rs/website/blob/master/tutorial-code/shared-state/src/main.rs" target="_blank" rel="noopener noreferrer">服务器端代码</a>放入到一个 bin 文件中，等下可以直接通过该文件来运行我们的服务器:</p>`,readingTime:{minutes:11.06,words:3319},title:"消息传递",type:"article"}}],["/advance-practice/design-pattern.html",{loader:()=>b(()=>import("./design-pattern.html-D3XJWxNW.js"),[]),meta:{excerpt:`
<p>https://github.com/rust-unofficial/patterns</p>
`,readingTime:{minutes:.03,words:8},title:"Rust 设计模式",type:"article"}}],["/advance-practice/frame.html",{loader:()=>b(()=>import("./frame.html-CIBYQhVC.js"),[]),meta:{excerpt:`
<p>现在，鉴于大家已经掌握了 Tokio 的基本 I/O 用法，我们可以开始实现 <code>mini-redis</code> 的帧 <code>frame</code>。通过帧可以将字节流转换成帧组成的流。每个帧就是一个数据单元，例如客户端发送的一次请求就是一个帧。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Simple</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Bulk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.82,words:2945},title:"解析数据帧",type:"article"}}],["/advance-practice/getting-startted.html",{loader:()=>b(()=>import("./getting-startted.html-CvDGvF1H.js"),[]),meta:{excerpt:`
<p>又到了喜闻乐见的初印象环节，这个环节决定了你心中的那 24 盏灯最终是全亮还是全灭。</p>
<p>在本文中，我们将看看本专题的学习目标、<code>tokio</code>该怎么引入以及如何实现一个 <code>Hello Tokio</code> 项目，最终亮灯还是灭灯的决定权留给各位看官。但我提前说好，如果你全灭了，但却找不到更好的，未来还是得回来真香 😛</p>
<h2>专题目标</h2>
<p>通过 API 学项目无疑是无聊的，因此我们采用一个与众不同的方式：边学边练，在本专题的最后你将拥有一个 <code>redis</code> 客户端和服务端，当然不会实现一个完整版本的 <code>redis</code> ，只会提供基本的功能和部分常用的命令。</p>`,readingTime:{minutes:7.54,words:2262},title:"tokio 初印象",type:"article"}}],["/advance-practice/graceful-shutdown.html",{loader:()=>b(()=>import("./graceful-shutdown.html-BJSNYcOj.js"),[]),meta:{excerpt:`
<p>如果你的服务是一个小说阅读网站，那大概率用不到优雅关闭的，简单粗暴的关闭服务器，然后用户再次请求时获取一个错误就是了。但如果是一个 web 服务或数据库服务呢？当前的连接很可能在做着重要的事情，一旦关闭会导致数据的丢失甚至错误，此时，我们就需要优雅的关闭(graceful shutdown)了。</p>
<p>要让一个异步应用优雅的关闭往往需要做到 3 点：</p>
<ul>
<li>找出合适的关闭时机</li>
<li>通知程序的每一个子部分开始关闭</li>
<li>在主线程等待各个部分的关闭结果</li>
</ul>
<p>在本文的下面部分，我们一起来看看该如何做到这三点。如果想要进一步了解在真实项目中该如何使用，大家可以看看 mini-redis 的完整代码实现，特别是 <a href="https://github.com/tokio-rs/mini-redis/blob/master/src/server.rs" target="_blank" rel="noopener noreferrer"><code>src/server.rs</code></a> 和 <a href="https://github.com/tokio-rs/mini-redis/blob/master/src/shutdown.rs" target="_blank" rel="noopener noreferrer"><code>src/shutdown.rs</code></a>。</p>`,readingTime:{minutes:4.06,words:1219},title:"优雅的关闭",type:"article"}}],["/advance-practice/intro.html",{loader:()=>b(()=>import("./intro.html-DGhXy7sZ.js"),[]),meta:{excerpt:`
<p>在入门实战，你可以说众览半山不咋小，但是能坚持到这里，甚至当完成后，就真的是一览众山小，余敌皆鱼虾了。</p>
<p>在进阶实战中，我们要来真的了，之前的简单命令行程序，是真的简单，但是这次的简单 redis 是真的不简单，在这里你将被迫使用十八般武艺，特别的，我们还将学会 Rust 异步镇山之宝 <code>tokio</code> 包的使用。</p>
<blockquote>
<p>本章在内容上大量借鉴和翻译了 tokio 官方文档<a href="https://tokio.rs/tokio/tutorial" target="_blank" rel="noopener noreferrer">Tokio Tutorial</a>, 但是重新组织了内容形式并融入了很多自己的见解和感悟，给大家提供更好的可读性和知识扩展性</p>
</blockquote>`,readingTime:{minutes:.66,words:198},title:"进阶实战: 实现一个简单 redis",type:"article"}}],["/advance-practice/io.html",{loader:()=>b(()=>import("./io.html-CjtsHbYP.js"),[]),meta:{excerpt:`
<p>本章节中我们将深入学习 Tokio 中的 I/O 操作，了解它的原理以及该如何使用。</p>
<p>Tokio 中的 I/O 操作和 <code>std</code> 在使用方式上几无区别，最大的区别就是前者是异步的，例如 Tokio 的读写特征分别是 <code>AsyncRead</code> 和 <code>AsyncWrite</code>:</p>
<ul>
<li>有部分类型按照自己的所需实现了它们: <code>TcpStream</code>，<code>File</code>，<code>Stdout</code></li>
<li>还有数据结构也实现了它们：<code>Vec&lt;u8&gt;</code>、<code>&amp;[u8]</code>，这样就可以直接使用这些数据结构作为读写器( reader / writer)</li>
</ul>`,readingTime:{minutes:9.34,words:2802},title:"I/O",type:"article"}}],["/advance-practice/overview.html",{loader:()=>b(()=>import("./overview.html-CDTZ63Ua.js"),[]),meta:{excerpt:`
<p>对于 Async Rust，最最重要的莫过于底层的异步运行时，它提供了执行器、任务调度、异步 API 等核心服务。简单来说，使用 Rust 提供的 <code>async/await</code> 特性编写的异步代码要运行起来，就必须依赖于异步运行时，否则这些代码将毫无用处。</p>
<h2>异步运行时</h2>
<p>Rust 语言本身只提供了异步编程所需的基本特性，例如 <code>async/await</code> 关键字，标准库中的 <code>Future</code> 特征，官方提供的 <code>futures</code> 实用库，这些特性单独使用没有任何用处，因此我们需要一个运行时来将这些特性实现的代码运行起来。</p>`,readingTime:{minutes:7.32,words:2195},title:"tokio 概览",type:"article"}}],["/advance-practice/select.html",{loader:()=>b(()=>import("./select.html-B6kp1oSR.js"),[]),meta:{excerpt:`
<p>在实际使用时，一个重要的场景就是同时等待多个异步操作的结果，并且对其结果进行进一步处理，在本章节，我们来看看，强大的 <code>select!</code> 是如何帮助咱们更好的控制多个异步操作并发执行的。</p>
<h2>tokio::select!</h2>
<p><code>select!</code> 允许同时等待多个计算操作，然后当其中一个操作完成时就退出等待:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::oneshot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">main]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> oneshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> oneshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"two"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">select!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> rx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rx1 completed first with {:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> rx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rx2 completed first with {:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 任何一个 select 分支结束后，都会继续执行接下来的代码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.72,words:4416},title:"select!",type:"article"}}],["/advance-practice/shared-state.html",{loader:()=>b(()=>import("./shared-state.html-XNj0WBO4.js"),[]),meta:{excerpt:`
<p>上一章节中，咱们搭建了一个异步的 redis 服务器，并成功的提供了服务，但是其隐藏了一个巨大的问题：状态(数据)无法在多个连接之间共享，下面一起来看看该如何解决。</p>
<h2>解决方法</h2>
<p>好在 Tokio 十分强大，上面问题对应的解决方法也不止一种：</p>
<ul>
<li>使用 <code>Mutex</code> 来保护数据的共享访问</li>
<li>生成一个异步任务去管理状态，然后各个连接使用消息传递的方式与其进行交互</li>
</ul>
<p>其中，第一种方法适合比较简单的数据，而第二种方法适用于需要异步工作的，例如 I/O 原语。由于我们使用的数据存储类型是 <code>HashMap</code>，使用到的相关操作是 <code>insert</code> 和 <code>get</code> ，又因为这两个操作都不是异步的，因此只要使用 <code>Mutex</code> 即可解决问题。</p>`,readingTime:{minutes:9.84,words:2951},title:"共享状态",type:"article"}}],["/advance-practice/spawning.html",{loader:()=>b(()=>import("./spawning.html-DoWT_e9M.js"),[]),meta:{excerpt:`
<p>同志们，抓稳了，我们即将换挡提速，通向 <code>mini-redis</code> 服务端的高速之路已经开启。</p>
<p>不过在开始之前，先来做点收尾工作：上一章节中，我们实现了一个简易的 <code>mini-redis</code> 客户端并支持了 <code>SET</code>/<code>GET</code> 操作, 现在将该<a href="https://course.rs/advance-practice/getting-startted.html#%E5%88%86%E6%9E%90%E6%9C%AA%E5%88%B0%E4%BB%A3%E7%A0%81%E5%85%88%E8%A1%8C" target="_blank" rel="noopener noreferrer">代码</a>移动到 <code>examples</code> 文件夹下，因为我们这个章节要实现的是服务器，后面可以通过运行 <code>example</code> 的方式，用之前客户端示例对我们的服务器端进行测试:</p>`,readingTime:{minutes:10.66,words:3197},title:"创建异步任务",type:"article"}}],["/advance-practice/stream.html",{loader:()=>b(()=>import("./stream.html-BKhdzB-L.js"),[]),meta:{excerpt:`
<p>大家有没有想过， Rust 中的迭代器在迭代时能否异步进行？若不可以，是不是有相应的解决方案？</p>
<p>以上的问题其实很重要，因为在实际场景中，迭代一个集合，然后异步的去执行是很常见的需求，好在 Tokio 为我们提供了 <code>stream</code>，我们可以在异步函数中对其进行迭代，甚至和迭代器 <code>Iterator</code> 一样，<code>stream</code> 还能使用适配器，例如 <code>map</code> ! Tokio 在 <a href="https://docs.rs/tokio-stream/0.1.8/tokio_stream/trait.StreamExt.html" target="_blank" rel="noopener noreferrer"><code>StreamExt</code></a> 特征上定义了常用的适配器。</p>`,readingTime:{minutes:6.21,words:1862},title:"Stream",type:"article"}}],["/advance-practice1/graceful-shutdown.html",{loader:()=>b(()=>import("./graceful-shutdown.html-CrIC1MnN.js"),[]),meta:{excerpt:`
<p>之前的程序，如果使用 <code>ctrl-c</code> 的方法来关闭，所有的线程都会立即停止，这会造成正在请求的用户感知到一个明显的错误。</p>
<p>因此我们需要添加一些优雅关闭( Graceful Shutdown )，以更好的完成资源清理等收尾工作。</p>
<h2>为线程池实现 Drop</h2>
<p>当线程池被 drop 时，需要等待所有的子线程完成它们的工作，然后再退出，下面是一个初步尝试:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> ThreadPool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> worker</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.workers {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Shutting down worker {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.id);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.thread.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.25,words:1876},title:"优雅关闭和资源清理",type:"article"}}],["/advance-practice1/intro.html",{loader:()=>b(()=>import("./intro.html-CtH65MQq.js"),[]),meta:{excerpt:`
<p>一般来说，现代化的 web 服务器往往都基于更加轻量级的协程或 async/await 等模式实现，但是基于本章的内容，我们还是采取较为传统的多线程的方式来实现，即：一个请求连接分配一个线程去独立处理，当然还有升级版的线程池。</p>
<p>在本章中你将了解：</p>
<ol>
<li>学习一点 TCP 和 HTTP</li>
<li>在套接字 socket 上监听进入的 TCP 连接</li>
<li>解析 HTTP 请求</li>
<li>创建合适的 HTTP 应答</li>
<li>使用线程池来提升 web 服务器的吞吐量</li>
</ol>
<blockquote>
<p>本章的实现方法并不是在 Rust 中实现 Web 服务器的最佳方法，后续章节的 async/await 会更加适合!</p>
</blockquote>`,readingTime:{minutes:.66,words:199},title:"实践应用：多线程Web服务器",type:"article"}}],["/advance-practice1/multi-threads.html",{loader:()=>b(()=>import("./multi-threads.html-CL3JgGlO.js"),[]),meta:{excerpt:`
<p>目前的单线程版本只能依次处理用户的请求：一时间只能处理一个请求连接。随着用户的请求数增多，可以预料的是排在后面的用户可能要等待数十秒甚至超时！</p>
<p>本章我们将解决这个问题，但是首先来模拟一个慢请求场景，看看单线程是否真的如此糟糕。</p>
<h2>基于单线程模拟慢请求</h2>
<p>下面的代码中，使用 sleep 的方式让每次请求持续 5 秒，模拟真实的慢请求:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in main.rs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    fs,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    io</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">prelude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::*, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">BufReader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    net</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TcpListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TcpStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    thread,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// --snip--</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> handle_connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TcpStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // --snip--</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status_line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">request_line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[..] {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "GET / HTTP/1.1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP/1.1 200 OK"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "GET /sleep HTTP/1.1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_secs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP/1.1 200 OK"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP/1.1 404 NOT FOUND"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"404.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // --snip--</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:15.1,words:4531},title:"构建多线程 Web 服务器",type:"article"}}],["/advance-practice1/web-server.html",{loader:()=>b(()=>import("./web-server.html-BxA8Ji9P.js"),[]),meta:{excerpt:`
<p>在开始之前先来简单回顾下构建所需的网络协议: HTTP 和 TCP。这两种协议都是请求-应答模式的网络协议，意味着在客户端发起请求后，服务器会监听并处理进入的请求，最后给予应答，至于这个过程怎么进行，取决于具体的协议定义。</p>
<p>与 HTTP 有所不同， TCP 是一个底层协议，它仅描述客户端传递了信息给服务器，至于这个信息长什么样，怎么解析处理，则不在该协议的职责范畴内。</p>
<p>而 HTTP 协议是更高层的通信协议，一般来说都基于 TCP 来构建 (HTTP/3 是基于 UDP 构建的协议)，更高层的协议也意味着它会对传输的信息进行解析处理。</p>
<p>更加深入的学习网络协议并不属于本书的范畴，因此让我们从如何读取 TCP 传输的字节流开始吧。</p>`,readingTime:{minutes:9.22,words:2767},title:"构建单线程 Web 服务器",type:"article"}}],["/appendix/derive.html",{loader:()=>b(()=>import("./derive.html-DZ3oeRwC.js"),[]),meta:{excerpt:`<h2>附录 D：派生特征 trait</h2>
<p>在本书的各个部分中，我们讨论了可应用于结构体和枚举定义的 <code>derive</code> 属性。被 <code>derive</code> 标记的对象会自动实现对应的默认特征代码，继承相应的功能。</p>
<p>在本附录中,我们列举了所有标准库存在的 <code>derive</code> 特征，每个特征覆盖了以下内容</p>
<ul>
<li>该特征将会派生什么样的操作符和方法</li>
<li>由 <code>derive</code> 提供什么样的特征实现</li>
<li>实现特征对于类型意味着什么</li>
<li>你需要什么条件来实现该特征</li>
<li>特征示例</li>
</ul>`,readingTime:{minutes:7.31,words:2194},title:"",type:"article",s:"derive"}}],["/appendix/difficulties.html",{loader:()=>b(()=>import("./difficulties.html-Doj-FPQq.js"),[]),meta:{excerpt:`
<p>不可否认，Rust 难点很多，而且知识点也很多，随着时间的进行，或多或少都会对一些难点逐渐模糊，这些难点无法通过目录章节名进行索引，因此集中放在此附录中，进行索引，方便读者朋友查阅。</p>
<table>
<thead>
<tr>
<th>难点及链接</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://course.rs/basic/result-error/result.html#%E4%BC%A0%E6%92%AD%E7%95%8C%E7%9A%84%E5%A4%A7%E6%98%8E%E6%98%9F-" target="_blank" rel="noopener noreferrer">?</a></td>
<td>用于简化错误传播</td>
</tr>
<tr>
<td><a href="https://course.rs/basic/base-type/function.html#%E6%97%A0%E8%BF%94%E5%9B%9E%E5%80%BC" target="_blank" rel="noopener noreferrer">()</a></td>
<td>单元类型</td>
</tr>
<tr>
<td><code>!</code> : <a href="https://course.rs/basic/base-type/function.html#%E6%B0%B8%E4%B8%8D%E8%BF%94%E5%9B%9E%E7%9A%84%E5%87%BD%E6%95%B0" target="_blank" rel="noopener noreferrer">1</a>, <a href="https://course.rs/advance/into-types/custom-type.html#%E6%B0%B8%E4%B8%8D%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener noreferrer">2</a></td>
<td>永不返回</td>
</tr>
<tr>
<td><a href="https://course.rs/basic/match-pattern/all-patterns.html#%E7%BB%91%E5%AE%9A" target="_blank" rel="noopener noreferrer">@</a></td>
<td>为一个字段绑定另外一个变量</td>
</tr>
<tr>
<td><a href="https://course.rs/advance/lifetime/advance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%BA%A6%E6%9D%9F-hrtb" target="_blank" rel="noopener noreferrer">'a: 'b</a></td>
<td>生命周期约束</td>
</tr>
</tbody>
</table>`,readingTime:{minutes:.61,words:184},title:"附录 F：难点索引",type:"article"}}],["/appendix/expressions.html",{loader:()=>b(()=>import("./expressions.html-BpadNDF7.js"),[]),meta:{excerpt:`
<p>在<a href="https://course.rs/basic/base-type/statement-expression.html" target="_blank" rel="noopener noreferrer">语句与表达式</a>章节中，我们对表达式有过介绍，下面对这些常用表达式进行一一说明。</p>
<h3>基本表达式</h3>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.67,words:201},title:"附录 C：表达式",type:"article"}}],["/appendix/intro.html",{loader:()=>b(()=>import("./intro.html-GEUq0GFm.js"),[]),meta:{excerpt:`
<p>附录中包含了一些 Rust 常用概念的快速索引，方便你的日常查询使用。</p>
<blockquote>
<p>大部分的附录借鉴了 Rust Book 以及相应的 <a href="https://rustwiki.org/zh-CN/book/" target="_blank" rel="noopener noreferrer">中文翻译书籍</a>，但同时做了一些的修改，增加准确性和阅读流畅度</p>
</blockquote>
`,readingTime:{minutes:.25,words:76},title:"附录",type:"article"}}],["/appendix/keywords.html",{loader:()=>b(()=>import("./keywords.html-B2E4x25P.js"),[]),meta:{excerpt:`<h2>附录 A：关键字</h2>
<p>下面的列表包含 Rust 中正在使用或者以后会用到的关键字。因此，这些关键字不能被用作标识符（除了<a href="#%E5%8E%9F%E7%94%9F%E6%A0%87%E8%AF%86%E7%AC%A6">原生标识符</a>），包括函数、变量、参数、结构体字段、模块、包、常量、宏、静态值、属性、类型、特征或生命周期。</p>
<h3>目前正在使用的关键字</h3>
<p>如下关键字目前有对应其描述的功能。</p>
<ul>
<li><code>as</code> - 强制类型转换，或<code>use</code> 和 <code>extern crate</code>包和模块引入语句中的重命名</li>
<li><code>break</code> - 立刻退出循环</li>
<li><code>const</code> - 定义常量或原生常量指针（constant raw pointer）</li>
<li><code>continue</code> - 继续进入下一次循环迭代</li>
<li><code>crate</code> - 链接外部包</li>
<li><code>dyn</code> - 动态分发特征对象</li>
<li><code>else</code> - 作为 <code>if</code> 和 <code>if let</code> 控制流结构的 fallback</li>
<li><code>enum</code> - 定义一个枚举类型</li>
<li><code>extern</code> - 链接一个外部包,或者一个宏变量(该变量定义在另外一个包中)</li>
<li><code>false</code> - 布尔值 <code>false</code></li>
<li><code>fn</code> - 定义一个函数或 <strong>函数指针类型</strong> (<em>function pointer type</em>)</li>
<li><code>for</code> - 遍历一个迭代器或实现一个 trait 或者指定一个更高级的生命周期</li>
<li><code>if</code> - 基于条件表达式的结果来执行相应的分支</li>
<li><code>impl</code> - 为结构体或者特征实现具体功能</li>
<li><code>in</code> - <code>for</code> 循环语法的一部分</li>
<li><code>let</code> - 绑定一个变量</li>
<li><code>loop</code> - 无条件循环</li>
<li><code>match</code> - 模式匹配</li>
<li><code>mod</code> - 定义一个模块</li>
<li><code>move</code> - 使闭包获取其所捕获项的所有权</li>
<li><code>mut</code> - 在引用、裸指针或模式绑定中使用，表明变量是可变的</li>
<li><code>pub</code> - 表示结构体字段、<code>impl</code> 块或模块的公共可见性</li>
<li><code>ref</code> - 通过引用绑定</li>
<li><code>return</code> - 从函数中返回</li>
<li><code>Self</code> - 实现特征类型的类型别名</li>
<li><code>self</code> - 表示方法本身或当前模块</li>
<li><code>static</code> - 表示全局变量或在整个程序执行期间保持其生命周期</li>
<li><code>struct</code> - 定义一个结构体</li>
<li><code>super</code> - 表示当前模块的父模块</li>
<li><code>trait</code> - 定义一个特征</li>
<li><code>true</code> - 布尔值 <code>true</code></li>
<li><code>type</code> - 定义一个类型别名或关联类型</li>
<li><code>unsafe</code> - 表示不安全的代码、函数、特征或实现</li>
<li><code>use</code> - 在当前代码范围内(模块或者花括号对)引入外部的包、模块等</li>
<li><code>where</code> - 表示一个约束类型的从句</li>
<li><code>while</code> - 基于一个表达式的结果判断是否继续循环</li>
</ul>`,readingTime:{minutes:3.22,words:965},title:"",type:"article",s:"keywords"}}],["/appendix/operators.html",{loader:()=>b(()=>import("./operators.html-CvSJbf0l.js"),[]),meta:{excerpt:`<h2>附录 B：运算符与符号</h2>
<p>该附录包含了 Rust 目前出现过的各种符号，这些符号之前都分散在各个章节中。</p>
<h3>运算符</h3>
<p>表 B-1 包含了 Rust 中的运算符、上下文中的示例、简短解释以及该运算符是否可重载。如果一个运算符是可重载的，则该运算符上用于重载的特征也会列出。</p>
<p>下表中，<code>expr</code> 是表达式，<code>ident</code> 是标识符，<code>type</code> 是类型，<code>var</code> 是变量，<code>trait</code> 是特征，<code>pat</code> 是匹配分支(pattern)。</p>`,readingTime:{minutes:5.94,words:1781},title:"",type:"article",s:"operators"}}],["/appendix/prelude.html",{loader:()=>b(()=>import("./prelude.html-CdpJob_a.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"附录 E：prelude 模块",type:"article"}}],["/appendix/rust-version.html",{loader:()=>b(()=>import("./rust-version.html-OBRaBP62.js"),[]),meta:{excerpt:`
<h2>Rust 版本说明</h2>
<p>早在第一章，我们见过 <code>cargo new</code> 在 <em>Cargo.toml</em> 中增加了一些有关 <code>edition</code> 的元数据。本附录将解释其意义！</p>
<p>与其它语言相比，Rust 的更新迭代较为频繁（得益于精心设计过的发布流程以及 Rust 语言开发者团队管理）：</p>
<ul>
<li>每 6 周发布一个迭代版本</li>
<li>2 - 3 年发布一个新的大版本：每一个版本会结合已经落地的功能，并提供一个清晰的带有完整更新文档和工具的功能包。新版本会作为常规的 6 周发布过程的一部分发布。</li>
</ul>`,readingTime:{minutes:9.2,words:2760},title:"附录 F：Rust 版本发布",type:"article"}}],["/basic/comment.html",{loader:()=>b(()=>import("./comment.html-M7Ge2cPt.js"),[]),meta:{excerpt:`
<p>好的代码会说话，好的程序员不写注释，这些都是烂大街的“编程界俚语”。但是，如果你真的遇到一个不写注释的项目或程序员，那一定会对它/他“刮目相看”。</p>
<p>在之前的章节我们学习了包和模块如何使用，在此章节将进一步学习如何书写文档注释，以及如何使用 <code>cargo doc</code> 生成项目的文档，最后将以一个包、模块和文档的综合性例子，来将这些知识融会贯通。</p>
<h2>注释的种类</h2>
<p>在 Rust 中，注释分为三类：</p>
<ul>
<li>代码注释，用于说明某一块代码的功能，读者往往是同一个项目的协作开发者</li>
<li>文档注释，支持 <code>Markdown</code>，对项目描述、公共 API 等用户关心的功能进行介绍，同时还能提供示例代码，目标读者往往是想要了解你项目的人</li>
<li>包和模块注释，严格来说这也是文档注释中的一种，它主要用于说明当前包和模块的功能，方便用户迅速了解一个项目</li>
</ul>`,readingTime:{minutes:12.29,words:3686},title:"注释和文档",type:"article"}}],["/basic/flow-control.html",{loader:()=>b(()=>import("./flow-control.html-BVDSvg9e.js"),[]),meta:{excerpt:`
<p>80 后应该都对学校的小混混记忆犹新，在那个时代，小混混们往往都认为自己是地下王者，管控着地下事务的流程，在我看来，他们就像代码中的流程控制一样，无处不在，很显眼，但是又让人懒得重视。</p>
<p>言归正传，Rust 程序是从上而下顺序执行的，在此过程中，我们可以通过循环、分支等流程控制方式，更好的实现相应的功能。</p>
<h2>使用 if 来做分支控制</h2>
<blockquote>
<p>if else 无处不在 -- 鲁迅</p>
</blockquote>
<p>但凡你能找到一门编程语言没有 <code>if else</code>，那么一定更要反馈给鲁迅，反正不是我说的 😃 总之，只要你拥有其它语言的编程经验，就一定会有以下认知：<code>if else</code> <strong>表达式</strong>根据条件执行不同的代码分支：</p>`,readingTime:{minutes:8.91,words:2673},title:"流程控制",type:"article"}}],["/basic/formatted-output.html",{loader:()=>b(()=>import("./formatted-output.html-BbervlY5.js"),[]),meta:{excerpt:`
<p>提到格式化输出，可能很多人立刻就想到 <code>"{}"</code>，但是 Rust 能做到的远比这个多的多，本章节我们将深入讲解格式化输出的各个方面。</p>
<h2>满分初印象</h2>
<p>先来一段代码，看看格式化输出的初印象：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);                 </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "Hello"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello, {}!"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "Hello, world!"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The number is {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "The number is 1"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "(3, 4)"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{value}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "4"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "1 2"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:04}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "0042" with leading zeros</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.99,words:2996},title:"格式化输出",type:"article"}}],["/basic/intro.html",{loader:()=>b(()=>import("./intro.html-lzIDXCl2.js"),[]),meta:{excerpt:`
<p>从现在开始，我们正式踏入了 Rust 大陆，这片广袤而神秘的世界，在这个世界中，将接触到很多之前都没有听过的概念：</p>
<ul>
<li>所有权、借用、生命周期</li>
<li>宏编程</li>
<li>模式匹配</li>
</ul>
<p>类似的还有很多，不过不用怕，引用武林外传一句话：咱上面有人。有本书在，一切虚妄终将烟消云散。</p>
<p>本章主要介绍 Rust 的基础语法、数据类型、项目结构等，学完本章，你将对 Rust 代码有一个清晰、完整的认识。</p>
<p>开始之前先通过一段代码来简单浏览下 Rust 的语法：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Rust 程序入口函数，跟其它语言一样，都是 main，该函数目前无返回值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 使用let来声明变量，进行绑定，a是不可变的</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 此处没有指定a的类型，编译器会默认根据a的值为a推断类型：i32，有符号32位整数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 语句的末尾必须以分号结尾</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 主动指定b的类型为i32</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 这里有两点值得注意：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 1. 可以在数值中带上类型:30i32表示数值是30，类型是i32</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. c是可变的，mut是mutable的缩写</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 还能在数值和类型中间添加一个下划线，让可读性更好</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30_</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 跟其它语言一样，可以使用一个函数的返回值来作为另一个函数的参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // println!是宏调用，看起来像是函数但是它返回的是宏定义的代码块</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 该函数将指定的格式化字符串输出到标准输出中(控制台)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // {}是占位符，在具体执行过程中，会把e的值代入进来</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"( a + b ) + ( c + d ) = {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 定义一个函数，输入两个i32类型的32位有符号整数，返回它们的和</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 返回相加值，这里可以省略return</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.23,words:670},title:"Rust 基本概念",type:"article"}}],["/basic/lifetime.html",{loader:()=>b(()=>import("./lifetime.html-Bpe6qCgF.js"),[]),meta:{excerpt:`
<p>各位读者，之前的集合章节挺简单吧？是不是安逸了挺久了？要不咱们加点料？来试试 Rust 中令人闻风丧胆的生命周期？</p>
<p>生命周期，简而言之就是引用的有效作用域。在大多数时候，我们无需手动的声明生命周期，因为编译器可以自动进行推导，用类型来类比下：</p>
<ul>
<li>就像编译器大部分时候可以自动推导类型 &lt;-&gt; 一样，编译器大多数时候也可以自动推导生命周期</li>
<li>在多种类型存在时，编译器往往要求我们手动标明类型 &lt;-&gt; 当多个生命周期存在，且编译器无法推导出某个引用的生命周期时，就需要我们手动标明生命周期</li>
</ul>
<p>Rust 生命周期之所以难，是因为这个概念对于我们来说是全新的，没有其它编程语言的经验可以借鉴。当你觉得难的时候，不用过于担心，这个难对于所有人都是平等的，多点付出就能早点解决此拦路虎，同时本书也会尽力帮助大家减少学习难度（生命周期很可能是 Rust 中最难的部分）。</p>`,readingTime:{minutes:26.89,words:8068},title:"认识生命周期",type:"article"}}],["/basic/method.html",{loader:()=>b(()=>import("./method.html-DhCJqJ3w.js"),[]),meta:{excerpt:`
<p>从面向对象语言过来的同学对于方法肯定不陌生，<code>class</code> 里面就充斥着方法的概念。在 Rust 中，方法的概念也大差不差，往往和对象成对出现：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:8.29,words:2488},title:"方法 Method",type:"article"}}],["/basic/variable.html",{loader:()=>b(()=>import("./variable.html-DM-rtbY6.js"),[]),meta:{excerpt:`
<p>鉴于本书的目标读者（别慌，来到这里就说明你就是目标读者）已经熟练掌握其它任意一门编程语言，因此这里就不再对何为变量进行赘述，让我们开门见山来谈谈，为何 Rust 选择了手动设定变量的可变性。</p>
<h2>为何要手动设置变量的可变性？</h2>
<p>在其它大多数语言中，要么只支持声明可变的变量，要么只支持声明不可变的变量（例如函数式语言），前者为编程提供了灵活性，后者为编程提供了安全性，而 Rust 比较野，选择了两者我都要，既要灵活性又要安全性。</p>
<p>能想要学习 Rust，说明我们的读者都是相当有水平的程序员了，你们应该能理解<strong>一切选择皆是权衡</strong>，那么两者都要的权衡是什么呢？这就是 Rust 开发团队为我们做出的贡献，两者都要意味着 Rust 语言底层代码的实现复杂度大幅提升，因此 Salute to The Rust Team!</p>`,readingTime:{minutes:11.5,words:3451},title:"变量绑定与解构",type:"article"}}],["/basic-practice/base-features.html",{loader:()=>b(()=>import("./base-features.html-BCEJdUYF.js"),[]),meta:{excerpt:`
<p>无论功能设计的再怎么花里胡哨，对于一个文件查找命令而言，首先得指定文件和待查找的字符串，它们需要用户从命令行给予输入，然后我们在程序内进行读取。</p>
<h2>接收命令行参数</h2>
<p>国际惯例，先创建一个新的项目 <code>minigrep</code> ，该名字充分体现了我们的自信：就是不如 <code>grep</code>。</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> minigrep</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">     Created</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> binary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (application) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">minigrep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> project</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> minigrep</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.32,words:1597},title:"实现基本功能",type:"article"}}],["/basic-practice/envs.html",{loader:()=>b(()=>import("./envs.html-mE9ruV1_.js"),[]),meta:{excerpt:`
<p>在上一章节中，留下了一个悬念，该如何实现用户控制的大小写敏感，其实答案很简单，你在其它程序中肯定也遇到过不少，例如如何控制 <code>panic</code> 后的栈展开？ Rust 提供的解决方案是通过命令行参数来控制:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">RUST_BACKTRACE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">1</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:3.47,words:1042},title:"使用环境变量来增强程序",type:"article"}}],["/basic-practice/intro.html",{loader:()=>b(()=>import("./intro.html-BbAE7d9G.js"),[]),meta:{excerpt:`
<p>在前往更高的山峰前，我们应该驻足欣赏下身后的风景，虽然是半览众山不咋小，但总比身在此山中无法窥全貌要强一丢丢。</p>
<p>在本章中，我们将一起构建一个命令行程序，目标是尽可能帮大家融会贯通之前的学到的知识。</p>
<p>linux 系统中的 <code>grep</code> 命令很强大，可以完成各种文件搜索任务，我们肯定做不了那么强大，但是假冒一个伪劣的版本还是可以的，它将从命令行参数中读取指定的文件名和字符串，然后在相应的文件中找到包含该字符串的内容，最终打印出来。</p>
<blockquote>
<p>这里推荐一位大神写的知名 Rust 项目 <a href="https://github.com/BurntSushi/ripgrep" target="_blank" rel="noopener noreferrer">ripgrep</a> ，绝对是 <code>grep</code> 真正的高替品，值得学习和使用</p>
</blockquote>`,readingTime:{minutes:.78,words:233},title:"构建一个简单命令行程序",type:"article"}}],["/basic-practice/iterators.html",{loader:()=>b(()=>import("./iterators.html-CX4NlDqj.js"),[]),meta:{excerpt:`
<blockquote>
<p>本章节是可选内容，请大家在看完<a href="https://course.rs/advance/functional-programing/iterator.html" target="_blank" rel="noopener noreferrer">迭代器章节</a>后，再来阅读</p>
</blockquote>
<p>在之前的 <code>minigrep</code> 中，功能虽然已经 ok，但是一些细节上还值得打磨下，下面一起看看如何使用迭代器来改进 <code>Config::build</code> 和 <code>search</code> 的实现。</p>`,readingTime:{minutes:3.57,words:1072},title:"使用迭代器来改进我们的程序",type:"article"}}],["/basic-practice/refactoring.html",{loader:()=>b(()=>import("./refactoring.html-k-VnYtOx.js"),[]),meta:{excerpt:`
<p>但凡稍微没那么糟糕的程序，都应该具有代码模块化和错误处理，不然连玩具都谈不上。</p>
<p>梳理我们的代码和目标后，可以整理出大致四个改进点:</p>
<ul>
<li><strong>单一且庞大的函数</strong>。对于 <code>minigrep</code> 程序而言， <code>main</code> 函数当前执行两个任务：解析命令行参数和读取文件。但随着代码的增加，<code>main</code> 函数承载的功能也将快速增加。从软件工程角度来看，一个函数具有的功能越多，越是难以阅读和维护。因此最好的办法是将大的函数拆分成更小的功能单元。</li>
<li><strong>配置变量散乱在各处</strong>。还有一点要考虑的是，当前 <code>main</code> 函数中的变量都是独立存在的，这些变量很可能被整个程序所访问，在这个背景下，独立的变量越多，越是难以维护，因此我们还可以将这些用于配置的变量整合到一个结构体中。</li>
<li><strong>细化错误提示</strong>。 目前的实现中，我们使用 <code>expect</code> 方法来输出文件读取失败时的错误信息，这个没问题，但是无论任何情况下，都只输出 <code>Should have been able to read the file</code> 这条错误提示信息，显然是有问题的，毕竟文件不存在、无权限等等都是可能的错误，一条大一统的消息无法给予用户更多的提示。</li>
<li><strong>使用错误而不是异常</strong>。 假如用户不给任何命令行参数，那我们的程序显然会无情崩溃，原因很简单：<code>index out of bounds</code>，一个数组访问越界的 <code>panic</code>，但问题来了，用户能看懂吗？甚至于未来接收的维护者能看懂吗？因此需要增加合适的错误处理代码，来给予使用者给详细友善的提示。还有就是需要在一个统一的位置来处理所有错误，利人利己！</li>
</ul>`,readingTime:{minutes:13.93,words:4180},title:"增加模块化和错误处理",type:"article"}}],["/basic-practice/stderr.html",{loader:()=>b(()=>import("./stderr.html-DUJI_cab.js"),[]),meta:{excerpt:`
<p>迄今为止，所有的输出信息，无论 debug 还是 error 类型，都是通过 <code>println!</code> 宏输出到终端的标准输出( <code>stdout</code> )，但是对于程序来说，错误信息更适合输出到标准错误输出(stderr)。</p>
<p>这样修改后，用户就可以选择将普通的日志类信息输出到日志文件 1，然后将错误信息输出到日志文件 2，甚至还可以输出到终端命令行。</p>
<h2>目前的错误输出位置</h2>
<p>我们先来观察下，目前的输出信息包括错误，是否是如上面所说，都写到标准错误输出。</p>
<p>测试方式很简单，将标准错误输出的内容重定向到文件中，看看是否包含故意生成的错误信息即可。</p>`,readingTime:{minutes:2.25,words:674},title:"重定向错误信息的输出",type:"article"}}],["/basic-practice/tests.html",{loader:()=>b(()=>import("./tests.html-9HukjbDs.js"),[]),meta:{excerpt:`
<blockquote>
<p>开始之前，推荐大家先了解下<a href="https://course.rs/test/intro.html" target="_blank" rel="noopener noreferrer">如何在 Rust 中编写测试代码</a>，这块儿内容不复杂，先了解下有利于本章的继续阅读</p>
</blockquote>
<p>在之前的章节中，我们完成了对项目结构的重构，并将进入逻辑代码编程的环节，但在此之前，我们需要先编写一些测试代码，也是最近颇为流行的测试驱动开发模式(TDD, Test Driven Development)：</p>
<ol>
<li>编写一个注定失败的测试，并且失败的原因和你指定的一样</li>
<li>编写一个成功的测试</li>
<li>编写你的逻辑代码，直到通过测试</li>
</ol>`,readingTime:{minutes:4.96,words:1488},title:"测试驱动开发",type:"article"}}],["/cargo/getting-started.html",{loader:()=>b(()=>import("./getting-started.html-zkq57KUU.js"),[]),meta:{excerpt:`
<p>Cargo 会在安装 Rust 的时候一并进行安装，无需我们手动的操作执行，安装 Rust 参见<a href="https://course.rs/first-try/installation.html" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<p>在开始之前，先来明确一个名词: <code>Package</code>，由于 <code>Crate</code> 被翻译成包，因此 <code>Package</code> 再被翻译成包就很不合适，经过斟酌，我们决定翻译成项目，你也可以理解为工程、软件包，总之，在本书中<code>Package</code> 意味着项目，而项目也意味着 <code>Package</code> 。</p>`,readingTime:{minutes:2.17,words:650},title:"上手使用",type:"article"}}],["/cargo/git-auth.html",{loader:()=>b(()=>import("./git-auth.html-CTm8gR-B.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"附录：Git鉴权",type:"article"}}],["/cargo/intro.html",{loader:()=>b(()=>import("./intro.html-C0OKa2Hv.js"),[]),meta:{excerpt:`
<p>Rust 语言的名气之所以这么大，保守估计 <code>Cargo</code> 的贡献就占了三分之一。</p>
<p><code>Cargo</code> 是包管理工具，可以用于依赖包的下载、编译、更新、分发等，与 <code>Cargo</code> 一样有名的还有 <a href="https://crates.io" target="_blank" rel="noopener noreferrer"><code>crates.io</code></a>，它是社区提供的包注册中心：用户可以将自己的包发布到该注册中心，然后其它用户通过注册中心引入该包。</p>
<blockquote>
<p>本章内容是基于 <a href="https://doc.rust-lang.org/stable/cargo/index.html" target="_blank" rel="noopener noreferrer">Cargo Book</a> 翻译，并做了一些内容优化和目录组织上的调整</p>
</blockquote>`,readingTime:{minutes:.51,words:153},title:"Cargo 使用指南",type:"article"}}],["/compiler/intro.html",{loader:()=>b(()=>import("./intro.html-CxzVdlzk.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"征服编译错误",type:"article"}}],["/difficulties/cow.html",{loader:()=>b(()=>import("./cow.html-CQ6YtFhB.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"写时拷贝Cow todo",type:"article"}}],["/difficulties/eq.html",{loader:()=>b(()=>import("./eq.html-DXO8Tsml.js"),[]),meta:{excerpt:`
<p>在 Rust 中，想要重载操作符，你就需要实现对应的特征。</p>
<p>例如 <code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code> 和 <code>&gt;=</code> 需要实现 <code>PartialOrd</code> 特征:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Pair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Pair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialOrd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Pair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cmp_display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.y {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The largest member is x = {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.x);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The largest member is y = {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.y);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.38,words:1015},title:"Eq 和 PartialEq",type:"article"}}],["/difficulties/intro.html",{loader:()=>b(()=>import("./intro.html-CSzcMml1.js"),[]),meta:{excerpt:`
<p>当大家一路看到这里时，我敢说 90% 的人还是云里雾里的，例如你能说清楚:</p>
<ul>
<li>切片和切片引用的区别吗？</li>
<li>各种字符串之间的区别吗？</li>
<li>各种指针、引用的区别吗？</li>
<li>所有权转移、拷贝、克隆的区别吗？</li>
</ul>
<p>以及到底该用它们之中哪一个吗？</p>
<p>如果不行，就跟随我一起来看看吧，本章的目标就是帮大家彻底理清这些概念，为后面的进一步学习和实战打好坚实的基础。</p>
`,readingTime:{minutes:.48,words:145},title:"Rust 难点攻关",type:"article"}}],["/difficulties/lifetime.html",{loader:()=>b(()=>import("./lifetime.html-Bg2Bzyhr.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.03,words:10},title:"作用域、生命周期和 NLL todo",type:"article"}}],["/difficulties/move-copy.html",{loader:()=>b(()=>import("./move-copy.html-WAOrEoRu.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"move、Copy和Clone todo",type:"article"}}],["/difficulties/pointer.html",{loader:()=>b(()=>import("./pointer.html-Ci6OEjBB.js"),[]),meta:{excerpt:`
<!-- https://blog.csdn.net/kk3909/article/details/106743025 -->`,readingTime:{minutes:.04,words:13},title:"裸指针、引用和智能指针 todo",type:"article"}}],["/difficulties/slice.html",{loader:()=>b(()=>import("./slice.html-DJPqQaaj.js"),[]),meta:{excerpt:`
<p>关于 <code>str</code> / <code>&amp;str</code>，<code>[u8]</code> / <code>&amp;[u8]</code> 区别，你能清晰的说出来嘛？如果答案是 No ，那就跟随我一起来看看切片和切片引用到底有何区别吧。</p>
<blockquote>
<p>在继续之前，查看<a href="https://course.rs/basic/compound-type/string-slice.html#%E5%88%87%E7%89%87slice" target="_blank" rel="noopener noreferrer">这里</a>了解何为切片</p>
</blockquote>`,readingTime:{minutes:3.57,words:1072},title:"切片和切片引用",type:"article"}}],["/difficulties/string.html",{loader:()=>b(()=>import("./string.html-Cb7j8qjk.js"),[]),meta:{excerpt:`
<p>字符串让人疯狂，这句话用在 Rust 中一点都不夸张，不信？那你能否清晰的说出 <code>String</code>、<code>str</code>、<code>&amp;str</code>、<code>&amp;String</code>、<code>Box&lt;str&gt;</code> 或 <code>Box&lt;&amp;str&gt;</code> 的区别？</p>
<p>Rust 语言的类型可以大致分为两种：基本类型和标准库类型，前者是由语言特性直接提供的，而后者是在标准库中定义。即将登场的 <code>str</code> 类型就是唯一定义在语言特性中的字符串。</p>`,readingTime:{minutes:1.99,words:598},title:"疯狂字符串",type:"article"}}],["/first-try/cargo.html",{loader:()=>b(()=>import("./cargo.html-0Hsh0ACp.js"),[]),meta:{excerpt:`<h2>认识 Cargo</h2>
<p>但凡经历过 C/C++ 或 Go 语言 1.10 版本之前的用户都知道，一个好的包管理工具有多么的重要！！我那个时候是如此的渴望类似 <code>nodejs</code> 的 <code>npm</code> 包管理工具，但是却求而不得。</p>
<p>包管理工具最重要的意义就是<strong>任何用户拿到你的代码，都能运行起来</strong>，而不会因为各种包版本依赖焦头烂额。</p>
<p>Go 语言在 1.10 版本之前，所有的包都是在 <code>github.com</code> 下存放，导致了所有的项目都公用一套依赖代码，在本地项目复杂后，这简直是一种灾难。</p>`,readingTime:{minutes:7.33,words:2198},title:"",type:"article",s:"cargo"}}],["/first-try/editor.html",{loader:()=>b(()=>import("./editor.html-BEma47KI.js"),[]),meta:{excerpt:`<h2>墙推 VSCode!</h2>
<p><code>VSCode</code> 从 15 年刚开始推出，我就在使用了。做为第一个吃螃蟹的人，可以说见证了它一路的快速发展，直到现在它已经成为开源世界最火的 IDE 之一（弱弱的说一句，之一也许可以去掉）。</p>
<p>顺便歪楼说一句：我预言过三件事：</p>
<ol>
<li>在 13 年预言 <code>Golang</code> 会火遍全世界。同时创建了 14-19 年最火的 Golang 隐修会社区，可惜因为某些原因被封停了，甚是遗憾。</li>
<li>在 15 年预言 <code>VSCode</code> 会成为世界上最好的 IDE；同时我还是 <code>jaeger tracing</code> 项目的第一个 star 用户（是的，比作者还早），当时就很看好这个项目的后续发展。</li>
<li>现在呢，我在这里正式预言： <strong>未来 <code>Rust</code> 会成为主流编程语言之一，在几乎所有开发领域都将大放光彩</strong>。总之牛逼已吹下，希望不要被打脸。：(</li>
</ol>`,readingTime:{minutes:3.91,words:1173},title:"",type:"article",s:"editor"}}],["/first-try/hello-world.html",{loader:()=>b(()=>import("./hello-world.html-B17-gf05.js"),[]),meta:{excerpt:`
<p>几乎所有教程中安装的最后一个环节都是 <code>hello world</code>，我们也不能免俗。但是，在 <code>hello world</code> 之后，还有一个相亲，啊呸，Rust 初印象环节，希望大家喜欢。</p>
<h2>多国语言的"世界，你好"</h2>
<p>还记得大明湖畔等你的 <a href="https://course.rs/first-try/editor.html" target="_blank" rel="noopener noreferrer">VSCode IDE</a> 和通过 <code>Cargo</code> 创建的 <a href="https://course.rs/first-try/cargo.html" target="_blank" rel="noopener noreferrer">世界，你好</a> 工程吗？</p>`,readingTime:{minutes:5.78,words:1733},title:"不仅仅是 Hello world",type:"article"}}],["/first-try/installation.html",{loader:()=>b(()=>import("./installation.html-CmXDweuz.js"),[]),meta:{excerpt:`
<p><code>rustup</code> 是 Rust 的安装程序，也是它的版本管理程序。<br>
强烈建议使用 <code>rustup</code> 来安装 Rust，当然如果你有异心，请寻找其它安装方式，然后再从下一节开始阅读。</p>
<blockquote>
<p>haha，开个玩笑。读者乃大大，怎么能弃之不顾。</p>
<p>注意：如果你不想用或者不能用 rustup，请参见 <a href="https://forge.rust-lang.org/infra/other-installation-methods.html#other-rust-installation-methods" target="_blank" rel="noopener noreferrer">Rust 其它安装方法</a>。</p>
</blockquote>`,readingTime:{minutes:4.45,words:1335},title:"安装 Rust",type:"article"}}],["/first-try/intro.html",{loader:()=>b(()=>import("./intro.html-YxcsCd4g.js"),[]),meta:{excerpt:`
<p>其实对于写这种章节，我内心是拒绝的，因为真的很无趣。对于一本书而言，这也更像是一种浪费纸张的行为（好在咱无纸化 😄）。不过没有办法，如果不安装 Rust 环境，总不能让大家用空气运行吧，so，我恶趣味的起了一个这样的章节名。</p>
<p>在本章中，你将学习以下内容：</p>
<ol>
<li>在 macOS、Linux、Windows 上安装 Rust 以及相关工具链</li>
<li>搭建 VSCode 所需的环境</li>
<li>简单介绍 Cargo</li>
<li>实现一个酷炫多国语言版本的“世界，你好”的程序，并且谈谈对 Rust 语言的初印象</li>
</ol>
`,readingTime:{minutes:.59,words:177},title:"寻找牛刀，以便小试",type:"article"}}],["/first-try/slowly-downloading.html",{loader:()=>b(()=>import("./slowly-downloading.html-BwfkoxGO.js"),[]),meta:{excerpt:`
<p>在目前，大家还不需要自己搭建的镜像下载服务，因此只需知道下载依赖库的地址是 <a href="https://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a>，是由 Rust 官方搭建的镜像下载和管理服务。</p>
<p>但悲剧的是，它的默认镜像地址是在国外，这就导致了某些时候难免会遇到下载缓慢或者卡住的情况，下面我们一起来看看。</p>
<h2>下载很慢?</h2>
<p>作为国外的语言，下载慢是正常的，隔壁的那位还被墙呢:)</p>
<p>解决下载缓慢有两种途径：</p>
<h3>开启命令行或者全局翻墙</h3>`,readingTime:{minutes:4.9,words:1470},title:"下载依赖很慢或卡住？",type:"article"}}],["/first-try/sth-you-should-not-do.html",{loader:()=>b(()=>import("./sth-you-should-not-do.html-BAm_aMzM.js"),[]),meta:{excerpt:`
<p>很多人都在学 Rust ing，也有很多人在放弃 ing。想要顺利学完 Rust，大家需要谨记本文列出的内容，否则这极有可能是又双叒叕从入门到放弃之旅。</p>
<p>Rust 是一门全新的语言，它会带给你前所未有的体验，提升你的通用编程水平，甚至于赋予你全新的编程思想。在此时此刻，大家可能还半信半疑，但是当学完它再回头看时，你肯定也会认同这些貌似浮夸的赞美。</p>
<h2>避免试一试的心态</h2>
<p>在学习 Go、Python 等编程语言时，你可能会一边工作、一边轻松愉快的学习它们，但是 Rust 不行。原因如文章开头所说，在学习 Rust 的同时你会收获很多语言之外的知识，因此 Rust 在入门阶段比很多编程语言要更难，但是一旦入门，你将收获一个全新的自己，成为一个更加优秀的程序员。</p>`,readingTime:{minutes:6.45,words:1934},title:"避免从入门到放弃",type:"article"}}],["/libraries/intro.html",{loader:()=>b(()=>import("./intro.html-BR_tyKCw.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"常用三方库",type:"article"}}],["/logs/about-log.html",{loader:()=>b(()=>import("./about-log.html-B3wpqzjY.js"),[]),meta:{excerpt:`
<p>相比起监控，日志好理解的多：在某个时间点向指定的地方输出一条信息，里面记录着重要性、时间、地点和发生的事件，这就是日志。</p>
<blockquote>
<p>注意，本文和 Rust 无关，我们争取从一个中立的角度去介绍何为日志</p>
</blockquote>
<h2>日志级别和输出位置</h2>
<h4>日志级别</h4>
<p>日志级别是对基本的“滚动文本”式日志记录的一个重要补充。每条日志消息都会基于其重要性或严重程度分配到一个日志级别。例如，对于某个程序，“你的电脑着火了”是一个非常重要的消息，而“无法找到配置文件”的重要等级可能就低一些；但对于另外一些程序，"无法找到配置文件" 可能才是最严重的错误，会直接导致程序无法正常启动，而“电脑着火”? 我们可能会记录为一条 <code>Debug</code> 日志(参见下文) 😄。</p>`,readingTime:{minutes:6.54,words:1961},title:"详解日志",type:"article"}}],["/logs/intro.html",{loader:()=>b(()=>import("./intro.html-CyEItY33.js"),[]),meta:{excerpt:`
<p>这几年 AIOps 特别火，但是你要是逮着一个运维问一下，他估计很难说出个所以然来，毕竟概念和现实往往是脱节的，前者的发展速度肯定远快于后者。</p>
<p>好在我大概了解这块儿领域，可以说智能化运维的核心就在于日志和监控，换而言之？何为智能，不就是基于已有的海量数据分析后进行决策吗？当然，你要说以前的知识库类型的运维决策也是智能，我也没办法杠: D</p>
<p>总之，不仅仅是对于开发者，对于整个技术链条的参与者，甚至包括老板，<strong>日志和监控都是开发实践中最最重要的一环</strong>。</p>
`,readingTime:{minutes:.67,words:201},title:"日志和监控",type:"article"}}],["/logs/log.html",{loader:()=>b(()=>import("./log.html-B17EoINK.js"),[]),meta:{excerpt:`
<p>就如同 slf4j 是 Java 的日志门面库，<a href="https://github.com/rust-lang/log" target="_blank" rel="noopener noreferrer">log</a> 也是 Rust 的日志门面库( 这不是我自己编的，官方用语: logging facade )，它目前由官方积极维护，因此大家可以放心使用。</p>
<p>使用方式很简单，只要在 <code>Cargo.toml</code> 中引入即可：</p>
<div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0.4"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.13,words:1838},title:"日志门面 log",type:"article"}}],["/logs/tracing-logger.html",{loader:()=>b(()=>import("./tracing-logger.html-Cy97CAQX.js"),[]),meta:{excerpt:`
<p>在 <a href="https://docs.rs/crate/tracing/latest" target="_blank" rel="noopener noreferrer">tracing</a> 包出来前，Rust 的日志也就 <code>log</code> 有一战之力，但是 <code>log</code> 的功能相对来说还是简单一些。在大名鼎鼎的 tokio 开发团队推出 <code>tracing</code> 后，我现在坚定的认为 <code>tracing</code> 就是未来！</p>
<blockquote>
<p>截至目前，rust编译器团队、GraphQL 都在使用 tracing，而且 tokio 在密谋一件大事：基于 tracing 开发一套终端交互式 debug 工具: <a href="https://github.com/tokio-rs/console" target="_blank" rel="noopener noreferrer">console</a>！</p>
</blockquote>`,readingTime:{minutes:12.63,words:3790},title:"使用 tracing 输出自定义的 Rust 日志",type:"article"}}],["/logs/tracing.html",{loader:()=>b(()=>import("./tracing.html-DXrye1cz.js"),[]),meta:{excerpt:`
<p>严格来说，tracing 并不是一个日志库，而是一个分布式跟踪的 SDK，用于采集监控数据的。</p>
<p>随着微服务的流行，现在一个产品有多个系统组成是非常常见的，这种情况下，一条用户请求可能会横跨几个甚至几十个服务。此时再用传统的日志方式去跟踪这条用户请求就变得较为困难，这就是分布式追踪在现代化监控系统中这么炽手可热的原因。</p>
<p>关于分布式追踪，在后面的监控章节进行详细介绍，大家只要知道：分布式追踪的核心就是在请求的开始生成一个 <code>trace_id</code>，然后将该 <code>trace_id</code> 一直往后透穿，请求经过的每个服务都会使用该 <code>trace_id</code> 记录相关信息，最终将整个请求形成一个完整的链路予以记录下来。</p>`,readingTime:{minutes:12.69,words:3806},title:"使用 tracing 记录日志",type:"article"}}],["/practice/best-pratice.html",{loader:()=>b(()=>import("./best-pratice.html-B3h7VLDe.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/rgjsbt/whats_your_top_rust_tip_crate_tool_other_for/</p>
<p>https://www.reddit.com/r/rust/comments/rnmmqz/question_how_to_keep_code_dry_when_many_similar/</p>
<p>https://www.reddit.com/r/rust/comments/rrgho1/what_is_the_recommended_way_to_use_a_library/</p>`,readingTime:{minutes:.9,words:270},title:"最佳实践",type:"article"}}],["/practice/interview.html",{loader:()=>b(()=>import("./interview.html-AMseodNT.js"),[]),meta:{excerpt:`
<p>其实这一章节的处境有些尴尬，Rust 虽然在世界范围有点小名气，但是在国内目前还处于开荒阶段，因此至少就公开招聘而言，岗位并不多。</p>
<p>但是既然号称最佳实践，少了面试，总觉得会缺少些什么，由于现在还没有太多的经验可以参考，我们选择先从网上摘选些文章分享给大家，<strong>但仅供参考，具体还要大家自己来辨别</strong>。</p>
<blockquote>
<p>感谢 <a href="https://github.com/Kasper4649" target="_blank" rel="noopener noreferrer">Kasper4649</a> 的章节提议和资源分享</p>
</blockquote>`,readingTime:{minutes:.69,words:208},title:"面试经验 doing",type:"article"}}],["/practice/intro.html",{loader:()=>b(()=>import("./intro.html-Bb4N86hE.js"),[]),meta:{excerpt:`
<p>对于生产级项目而言，运行稳定性和可维护性是非常重要的，本章就一起来看看 Rust 项目有哪些最佳实践准则。</p>
`,readingTime:{minutes:.17,words:50},title:"Rust最佳实践",type:"article"}}],["/practice/naming.html",{loader:()=>b(()=>import("./naming.html-DguaqLz6.js"),[]),meta:{excerpt:`
<p>基本的 Rust 命名规范在 <a href="https://github.com/rust-lang/rfcs/blob/master/text/0430-finalizing-naming-conventions.md" target="_blank" rel="noopener noreferrer">RFC 430</a> 中有描述。</p>
<p>通常，对于 <strong>type-level</strong> 的构造 Rust 倾向于使用<strong>驼峰命名法</strong>，而对于 <strong>value-level</strong> 的构造使用<strong>蛇形命名法</strong>。详情如下：</p>`,readingTime:{minutes:6.78,words:2033},title:"命名规范",type:"article"}}],["/practice/third-party-libs.html",{loader:()=>b(()=>import("./third-party-libs.html-BPk8lc3t.js"),[]),meta:{excerpt:`
<p>对计算机、编程、架构的理解决定一个程序员的上限，而工具则决定了他的下限，三尺森寒利剑在手，问世间谁敢一战。</p>
<p>本文就分门别类的精心挑选了一些非常适合日常开发使用的三方库，同时针对优缺点、社区活跃等进行了评价，同一个类别的库，按照<strong>推荐度优先级降序排列</strong>，希望大家能喜欢。</p>
<blockquote>
<p>本文节选自<a href="https://cook.rs" target="_blank" rel="noopener noreferrer">Cook Rust</a></p>
</blockquote>
<h2>目录</h2>
<ul>
<li>日常开发常用的Rust库:
<ul>
<li><a href="#webhttp">Web/HTTP</a>,  <a href="#SQL%E5%AE%A2%E6%88%B7%E7%AB%AF">SQL客户端</a>, <a href="#NoSql%E5%AE%A2%E6%88%B7%E7%AB%AF">NoSql客户端</a>， <a href="#%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE">网络通信协议</a>, <a href="#%E5%BC%82%E6%AD%A5%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B">异步网络编程</a></li>
<li><a href="#%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0">服务发现</a>, <a href="#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">消息队列</a>, <a href="#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">搜索引擎</a></li>
<li><a href="#%E7%BC%96%E8%A7%A3%E7%A0%81">编解码</a>, <a href="#Email">Email</a>, <a href="#%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E6%A8%A1%E7%89%88">常用正则模版</a></li>
<li><a href="#%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7">日志监控</a>, <a href="#%E4%BB%A3%E7%A0%81Debug">代码Debug</a>, <a href="#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96">性能优化</a></li>
</ul>
</li>
<li><a href="#%E7%B2%BE%E9%80%89%E4%B8%AD%E6%96%87%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99">精选中文学习资料</a></li>
<li><a href="#%E7%B2%BE%E9%80%89Rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE">精选Rust开源项目</a></li>
</ul>`,readingTime:{minutes:9.97,words:2991},title:"日常开发三方库精选",type:"article"}}],["/profiling/intro.html",{loader:()=>b(()=>import("./intro.html-DBbvF3fN.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"Rust性能剖析 todo",type:"article"}}],["/std/hashmap.html",{loader:()=>b(()=>import("./hashmap.html-v4gdfa-g.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:0,words:1},title:"HashMap",type:"article"}}],["/std/intro.html",{loader:()=>b(()=>import("./intro.html-BuHGhQgR.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"标准库解析",type:"article"}}],["/std/iterator.html",{loader:()=>b(()=>import("./iterator.html-tsLyPebo.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"Iterator常用方法",type:"article"}}],["/std/search.html",{loader:()=>b(()=>import("./search.html-DRiEM9-c.js"),[]),meta:{excerpt:`
<h2>寻找你想要的内容</h2>
<p>https://www.reddit.com/r/rust/comments/rk8lf6/how_do_you_find_all_the_functions_available_for_a/</p>
<h2>如何阅读和使用标准库</h2>
`,readingTime:{minutes:.1,words:29},title:"标准库使用最佳实践",type:"article"}}],["/std/vector.html",{loader:()=>b(()=>import("./vector.html-CFDWXWER.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"Vector常用方法",type:"article"}}],["/templates/intro.html",{loader:()=>b(()=>import("./intro.html-DCwPTjLg.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"场景模版",type:"article"}}],["/test/assertion.html",{loader:()=>b(()=>import("./assertion.html-Ddt44rF9.js"),[]),meta:{excerpt:`
<p>在编写测试函数时，断言决定了我们的测试是通过还是失败，它为结果代言。在前面，大家已经见识过 <code>assert_eq!</code> 的使用，下面一起来看看 Rust 为我们提供了哪些好用的断言。</p>
<h2>断言列表</h2>
<p>在正式开始前，来看看常用的断言有哪些:</p>
<ul>
<li><code>assert!</code>, <code>assert_eq!</code>, <code>assert_ne!</code>, 它们会在所有模式下运行</li>
<li><code>debug_assert!</code>, <code>debug_assert_eq!</code>, <code>debug_assert_ne!</code>, 它们只会在 <code>Debug</code> 模式下运行</li>
</ul>`,readingTime:{minutes:3.16,words:949},title:"断言 assertion",type:"article"}}],["/test/benchmark.html",{loader:()=>b(()=>import("./benchmark.html-vEdtS3Fe.js"),[]),meta:{excerpt:`
<p>几乎所有开发都知道，如果要测量程序的性能，就需要性能测试。</p>
<p>性能测试包含了两种：压力测试和基准测试。前者是针对接口 API，模拟大量用户去访问接口然后生成接口级别的性能数据；而后者是针对代码，可以用来测试某一段代码的运行速度，例如一个排序算法。</p>
<p>而本文将要介绍的就是基准测试 <code>benchmark</code>，在 Rust 中，有两种方式可以实现：</p>
<ul>
<li>官方提供的 <code>benchmark</code></li>
<li>社区实现，例如 <code>criterion.rs</code></li>
</ul>
<p>事实上我们更推荐后者，原因在后文会详细介绍，下面先从官方提供的工具开始。</p>`,readingTime:{minutes:5.33,words:1600},title:"基准测试 benchmark",type:"article"}}],["/test/ci.html",{loader:()=>b(()=>import("./ci.html-D3WMuWZK.js"),[]),meta:{excerpt:`
<p><a href="https://github.com/features/actions" target="_blank" rel="noopener noreferrer">GitHub Actions</a> 是官方于 2018 年推出的持续集成服务，它非常强大，本文将手把手带领大家学习如何使用 <code>GitHub Actions</code> 对 Rust 项目进行持续集成。</p>
<p>持续集成是软件开发中异常重要的一环，大家应该都听说过 <code>Jenkins</code>，它就是一个拥有悠久历史的持续集成工具。简单来说，持续集成会定期拉取同一个项目中所有成员的相关代码，对其进行自动化构建。</p>`,readingTime:{minutes:11.48,words:3445},title:"用 GitHub Actions 进行持续集成",type:"article"}}],["/test/intro.html",{loader:()=>b(()=>import("./intro.html-DlytaC1p.js"),[]),meta:{excerpt:`
<blockquote>
<p>测试可以有效的发现程序存在的缺陷，但是它却无法证明程序不存在缺陷 - Edsger W. Dijkstra, "The Humble Programmer"</p>
</blockquote>
<p>对于程序开发而言，测试可以说是至关重要的一环，虽然它无法完全消除所有的 Bug，但是依然可以在某种程度上保证程序的正确性。</p>
<p>Rust 语言本身就非常关注安全性，但是语言级别的安全性并不能保证代码逻辑上的正确性，因为后者其实是一个相当复杂的问题。也许 Rust 的类型系统可以提供一些帮助，但是依然远远不够。</p>
<p>例如，假设我们有一个函数 <code>add_two</code> 用于将两个整数进行相加并返回一个整数结果。没错，Rust 的类型系统可以通过函数签名确保我们的输入和输出类型都是正确的，譬如你无法传入一个字符串作为输入，但是 Rust 无法保证函数中代码逻辑的正确性：明明目标是相加操作，却给整成了 <code>x - y</code>。</p>`,readingTime:{minutes:1.06,words:319},title:"测试",type:"article"}}],["/test/unit-integration-test.html",{loader:()=>b(()=>import("./unit-integration-test.html-CipWF4eu.js"),[]),meta:{excerpt:`
<p>在了解了如何在 Rust 中写测试用例后，本章节我们将学习如何实现单元测试、集成测试，其实它们用到的技术还是<a href="https://course.rs/test/write-tests.html" target="_blank" rel="noopener noreferrer">上一章节</a>中的测试技术，只不过对如何组织测试代码提出了新的要求。</p>
<h2>单元测试</h2>
<p>单元测试目标是测试某一个代码单元(一般都是函数)，验证该单元是否能按照预期进行工作，例如测试一个 <code>add</code> 函数，验证当给予两个输入时，最终返回的和是否符合预期。</p>`,readingTime:{minutes:8.74,words:2621},title:"单元测试、集成测试",type:"article"}}],["/test/write-tests.html",{loader:()=>b(()=>import("./write-tests.html-BLLB_55N.js"),[]),meta:{excerpt:`
<p>在 Rust 中，测试是通过函数的方式实现的，它可以用于验证被测试代码的正确性。测试函数往往依次执行以下三种行为：</p>
<ol>
<li>设置所需的数据或状态</li>
<li>运行想要测试的代码</li>
<li>判断( assert )返回的结果是否符合预期</li>
</ol>
<p>让我们来看看该如何使用 Rust 提供的特性来按照上述步骤编写测试用例。</p>
<h2>测试函数</h2>
<p>当使用 <code>Cargo</code> 创建一个 <code>lib</code> 类型的包时，它会为我们自动生成一个测试模块。先来创建一个 <code>lib</code> 类型的 <code>adder</code> 包：</p>`,readingTime:{minutes:17.43,words:5230},title:"编写测试及控制执行",type:"article"}}],["/too-many-lists/do-we-need-it.html",{loader:()=>b(()=>import("./do-we-need-it.html-6loIC2n2.js"),[]),meta:{excerpt:`<h2>我们到底需不需要链表</h2>
<p>经常有读者询问该如何实现一个链表，怎么说呢，这个答案主要取决于你的需求，因此并不是很好回答。鉴于此，我决定通过这本书来详尽的介绍该如何实现一个链表，大家应该都能从这本书中找到答案。</p>
<p>书中我们将通过实现 6 种链表来学习基本和进阶 Rust 编程知识，在此过程中，你能学到：</p>
<ul>
<li>指针类型: <code>&amp;</code>, <code>&amp;mut</code>, <code>Box</code>, <code>Rc</code>, <code>Arc</code>, <code>*const</code>, <code>*mut</code>, <code>NonNull</code></li>
<li>所有权、借用、继承可变性、内部可变性、Copy</li>
<li>所有的关键字：struct、enum、fn、pub、impl、use, ...</li>
<li>模式匹配、泛型、解构</li>
<li>测试、安装新的工具链、使用 <code>miri</code></li>
<li>Unsafe: 裸指针、别名、栈借用、<code>UnsafeCell</code>、变体 variance</li>
</ul>`,readingTime:{minutes:6.34,words:1902},title:"",type:"article",s:"do-we-need-it"}}],["/too-many-lists/intro.html",{loader:()=>b(()=>import("./intro.html-B2q2uXen.js"),[]),meta:{excerpt:`
<blockquote>
<p>其它语言：兄弟，语言学了吗？来写一个链表证明你基本掌握了语法。</p>
<p>Rust 语言: 兄弟，语言精通了吗？来写一个链表证明你已经精通了 Rust！</p>
</blockquote>
<p>上面的对话非常真实，我们在之前的章节也讲过<a href="https://course.rs/first-try/sth-you-should-not-do.html#%E5%8D%83%E4%B8%87%E5%88%AB%E4%BB%8E%E9%93%BE%E8%A1%A8%E6%88%96%E5%9B%BE%E5%BC%80%E5%A7%8B%E7%BB%83%E6%89%8B" target="_blank" rel="noopener noreferrer">避免从入门到放弃</a>，其中最重要的就是 - 不要写链表或者类似的数据结构！</p>`,readingTime:{minutes:.89,words:266},title:"手把手带你实现链表",type:"article"}}],["/usecases/aws-rust.html",{loader:()=>b(()=>import("./aws-rust.html-SOdM3iM5.js"),[]),meta:{excerpt:`
<p>夸 Rust 语言的方式至少有 3000 种，但是从环保和可持续发展角度去夸的大家见过嘛？这不，AWS 就给我们带来了一篇非常精彩的文章，一起来看看。</p>
<blockquote>
<p>原文链接： https://aws.amazon.com/cn/blogs/opensource/sustainability-with-rust/ ，由于原文过长，译文进行了适当的精简(例如夸 AWS 的部分 - , -)</p>
</blockquote>
<p>Rust 是一门完全开源的语言，在 2015 年发布了 1.0 版本，但是在 2020 年 才迎来了真正的大发展契机，这是由于 Rust 的开源支持由 Mozilla 移交给了 <a href="https://foundation.rust-lang.org/" target="_blank" rel="noopener noreferrer">Rust基金会</a>，后者是由 亚马逊云AWS、谷歌、华为、微软和 Mozilla 共同创建的非营利性组织。</p>`,readingTime:{minutes:8.17,words:2451},title:"使用 Rust 来节约企业成本",type:"article"}}],["/usecases/intro.html",{loader:()=>b(()=>import("./intro.html-Cd4HMuF1.js"),[]),meta:{excerpt:`
<p>自从 Rust 基金会成立后，一些优秀的落地案例如雨后春笋般冒了出来，这些充分说明了 Rust 语言在全球范围的流行。</p>
<p>这里我们将通过几个精心挑选的使用案例，来帮助大家看看 Rust 能为企业解决哪些痛点，以及该如何在企业内落地。</p>
`,readingTime:{minutes:.33,words:99},title:"Rust的使用案例",type:"article"}}],["/advance/async/async-await.html",{loader:()=>b(()=>import("./async-await.html-DvPs6w4l.js"),[]),meta:{excerpt:`
<p>在入门章节中，我们简单学习了该如何使用 <code>async/.await</code>， 同时在后面也了解了一些底层原理，现在是时候继续深入了。</p>
<p><code>async/.await</code> 是 Rust 语法的一部分，它在遇到阻塞操作时( 例如 IO )会让出当前线程的所有权而不是阻塞当前线程，这样就允许当前线程继续去执行其它代码，最终实现并发。</p>
<p>有两种方式可以使用 <code>async</code>： <code>async fn</code> 用于声明函数，<code>async { ... }</code> 用于声明语句块，它们会返回一个实现 <code>Future</code> 特征的值:</p>`,readingTime:{minutes:6.59,words:1976},title:"async/await 和 Stream 流处理",type:"article"}}],["/advance/async/future-excuting.html",{loader:()=>b(()=>import("./future-excuting.html-gRkdqd0m.js"),[]),meta:{excerpt:`
<p>异步编程背后到底藏有什么秘密？究竟是哪只幕后之手在操纵这一切？如果你对这些感兴趣，就继续看下去，否则可以直接跳过，因为本章节的内容对于一个 API 工程师并没有太多帮助。</p>
<p>但是如果你希望能深入理解 <code>Rust</code> 的 <code>async/.await</code> 代码是如何工作、理解运行时和性能，甚至未来想要构建自己的 <code>async</code> 运行时或相关工具，那么本章节终究不会辜负于你。</p>
<h2>Future 特征</h2>
<p><code>Future</code> 特征是 Rust 异步编程的核心，毕竟异步函数是异步编程的核心，而 <code>Future</code> 恰恰是异步函数的返回值和被执行的关键。</p>`,readingTime:{minutes:16.36,words:4908},title:"底层探秘: Future 执行器与任务调度",type:"article"}}],["/advance/async/getting-started.html",{loader:()=>b(()=>import("./getting-started.html-DUXzQPT4.js"),[]),meta:{excerpt:`
<p>众所周知，Rust 可以让我们写出性能高且安全的软件，那么异步编程这块儿呢？是否依然在高性能的同时保证了安全？</p>
<p>我们先通过一张 web 框架性能对比图来感受下 Rust 异步编程的性能:</p>
<img alt="actix-vs-gin screenshot" width="100%" src="https://pic1.zhimg.com/v2-3cebd732fb56f43713f106fdcfa44a3c_b.png" class="center">
<p>上图并不能说 Rust 写的 <code>actix</code> 框架比 Go 的 <code>gin</code> 更好、更优秀，但是确实可以一定程度上说明 Rust 的异步性能非常的高！</p>`,readingTime:{minutes:21.21,words:6364},title:"Async 编程简介",type:"article"}}],["/advance/async/intro.html",{loader:()=>b(()=>import("./intro.html-C7c1m3RP.js"),[]),meta:{excerpt:`
<p>在艰难的学完 Rust 入门和进阶所有的 70 个章节后，我们终于来到了这里。假如之前攀登的是珠穆朗玛峰，那么现在攀登的就是乔戈里峰( 比珠峰还难攀爬... )。</p>
<p>如果你想开发 Web 服务器、数据库驱动、消息服务等需要高并发的服务，那么本章的内容将值得认真对待和学习。</p>
<p>接下来，我们将深入了解 async/await 的使用方式及背后的原理。</p>
<blockquote>
<p>本章在内容上大量借鉴和翻译了原版英文书籍<a href="https://rust-lang.github.io/async-book/01_getting_started/01_chapter.html" target="_blank" rel="noopener noreferrer">Asynchronous Programming In Rust</a>, 特此感谢</p>
</blockquote>`,readingTime:{minutes:.55,words:166},title:"异步编程",type:"article"}}],["/advance/async/multi-futures-simultaneous.html",{loader:()=>b(()=>import("./multi-futures-simultaneous.html-CxrdPB6n.js"),[]),meta:{excerpt:`
<p>招数单一，杀伤力惊人，说的就是 <code>.await</code> ，但是光用它，还真做不到一招鲜吃遍天。比如我们该如何同时运行多个任务，而不是使用 <code>.await</code> 慢悠悠地排队完成。</p>
<h2>join!</h2>
<p><code>futures</code> 包中提供了很多实用的工具，其中一个就是 <code>join!</code> 宏， 它允许我们同时等待多个不同 <code>Future</code> 的完成，且可以并发地运行这些 <code>Future</code>。</p>
<p>先来看一个不是很给力的、使用<code>.await</code>的版本:</p>`,readingTime:{minutes:7.05,words:2114},title:"使用 join! 和 select! 同时运行多个 Future",type:"article"}}],["/advance/async/pain-points-and-workarounds.html",{loader:()=>b(()=>import("./pain-points-and-workarounds.html-CSEbzYwd.js"),[]),meta:{excerpt:`
<p><code>async</code> 在 Rust 依然比较新，疑难杂症少不了，而它们往往还处于活跃开发状态，短时间内无法被解决，因此才有了本文。下面一起来看看这些问题以及相应的临时解决方案。</p>
<h2>在 async 语句块中使用 ?</h2>
<p><code>async</code> 语句块和 <code>async fn</code> 最大的区别就是前者无法显式的声明返回值，在大多数时候这都不是问题，但是当配合 <code>?</code> 一起使用时，问题就有所不同:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> fut</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">?;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">?;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.54,words:1663},title:"一些疑难问题的解决办法",type:"article"}}],["/advance/async/pin-unpin.html",{loader:()=>b(()=>import("./pin-unpin.html-NoFBCnXe.js"),[]),meta:{excerpt:`
<p>在 Rust 异步编程中，有一个定海神针般的存在，它就是 <code>Pin</code>，作用说简单也简单，说复杂也非常复杂，当初刚出来时就连一些 Rust 大佬都一头雾水，何况瑟瑟发抖的我。好在今非昔比，目前网上的资料已经很全，而我就借花献佛，给大家好好讲讲这个 <code>Pin</code>。</p>
<p>在 Rust 中，所有的类型可以分为两类:</p>
<ul>
<li><strong>类型的值可以在内存中安全地被移动</strong>，例如数值、字符串、布尔值、结构体、枚举，总之你能想到的几乎所有类型都可以落入到此范畴内</li>
<li><strong>自引用类型</strong>，大魔王来了，大家快跑，在之前章节我们已经见识过它的厉害</li>
</ul>`,readingTime:{minutes:11.83,words:3550},title:"定海神针 Pin 和 Unpin",type:"article"}}],["/advance/async/web-server.html",{loader:()=>b(()=>import("./web-server.html-CCoLQiqb.js"),[]),meta:{excerpt:`
<p>知识学得再多，不实际应用也是纸上谈兵，不是忘掉就是废掉，对于技术学习尤为如此。在之前章节中，我们已经学习了 <code>Async Rust</code> 的方方面面，现在来将这些知识融会贯通，最终实现一个并发 Web 服务器。</p>
<h2>多线程版本的 Web 服务器</h2>
<p>在正式开始前，先来看一个单线程版本的 <code>Web</code> 服务器，该例子来源于 <a href="https://doc.rust-lang.org/book/ch20-01-single-threaded.html" target="_blank" rel="noopener noreferrer"><code>Rust Book</code></a> 一书。</p>`,readingTime:{minutes:8.25,words:2475},title:"一个实践项目: Web 服务器",type:"article"}}],["/advance/circle-self-ref/circle-reference.html",{loader:()=>b(()=>import("./circle-reference.html-Drez9m7a.js"),[]),meta:{excerpt:`
<p>Rust 的安全性是众所周知的，但是不代表它不会内存泄漏。一个典型的例子就是同时使用 <code>Rc&lt;T&gt;</code> 和 <code>RefCell&lt;T&gt;</code> 创建循环引用，最终这些引用的计数都无法被归零，因此 <code>Rc&lt;T&gt;</code> 拥有的值也不会被释放清理。</p>
<h2>何为循环引用</h2>
<p>关于内存泄漏，如果你没有充足的 Rust 经验，可能都无法造出一份代码来再现它：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> crate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Cons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Cons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        match</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            Cons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.22,words:2766},title:"Weak 与循环引用",type:"article"}}],["/advance/circle-self-ref/intro.html",{loader:()=>b(()=>import("./intro.html-1-hOijSK.js"),[]),meta:{excerpt:`
<p>实现一个链表是学习各大编程语言的常用技巧，但是在 Rust 中实现链表意味着····Hell，是的，你没看错，Welcome to hell。</p>
<p>链表在 Rust 中之所以这么难，完全是因为循环引用和自引用的问题引起的，这两个问题可以说综合了 Rust 的很多难点，难出了新高度，因此本书专门开辟一章，分为上下两篇，试图彻底解决这两个老大难。</p>
<p>本章难度较高，但是非常值得深入阅读，它会让你对 Rust 的理解上升到一个新的境界。</p>
`,readingTime:{minutes:.55,words:165},title:"循环引用与自引用",type:"article"}}],["/advance/circle-self-ref/self-referential.html",{loader:()=>b(()=>import("./self-referential.html-C_pO7bXI.js"),[]),meta:{excerpt:`<h2>结构体自引用</h2>
<p>结构体自引用在 Rust 中是一个众所周知的难题，而且众说纷纭，也没有一篇文章能把相关的话题讲透，那本文就王婆卖瓜，来试试看能不能讲透这一块儿内容，让读者大大们舒心。</p>
<h2>平平无奇的自引用</h2>
<p>可能也有不少人第一次听说自引用结构体，那咱们先来看看它们长啥样。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SelfRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 该引用指向上面的value</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    pointer_to_value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.23,words:2470},title:"",type:"article",s:"self-referential"}}],["/advance/concurrency-with-threads/concurrency-parallelism.html",{loader:()=>b(()=>import("./concurrency-parallelism.html-BBtxccML.js"),[]),meta:{excerpt:`
<blockquote>
<p>并发是同一时间应对多件事情的能力 - <a href="https://en.wikipedia.org/wiki/Rob_Pike" target="_blank" rel="noopener noreferrer">Rob Pike</a></p>
</blockquote>
<p>并行和并发其实并不难，但是也给一些用户造成了困扰，因此我们专门开辟一个章节，用于讲清楚这两者的区别。</p>
<p><code>Erlang</code> 之父 <a href="https://en.wikipedia.org/wiki/Joe_Armstrong_(programmer)" target="_blank" rel="noopener noreferrer"><code>Joe Armstrong</code></a>（伟大的异步编程先驱，开创一个时代的殿堂级计算机科学家，我还犹记得当年刚学到 <code>Erlang</code> 时的震撼，respect！）用一张 5 岁小孩都能看懂的图片解释了并发与并行的区别：</p>`,readingTime:{minutes:7.65,words:2294},title:"并发和并行",type:"article"}}],["/advance/concurrency-with-threads/intro.html",{loader:()=>b(()=>import("./intro.html-BzwKWyHa.js"),[]),meta:{excerpt:`
<p>安全和高效的处理并发是 Rust 语言的主要目标之一。随着现代处理器的核心数不断增加，并发和并行已经成为日常编程不可或缺的一部分，甚至于 Go 语言已经将并发简化到一个 <code>go</code> 关键字就可以。</p>
<p>可惜的是，在 Rust 中由于语言设计理念、安全、性能的多方面考虑，并没有采用 Go 语言大道至简的方式，而是选择了多线程与 <code>async/await</code> 相结合，优点是可控性更强、性能更高，缺点是复杂度并不低，当然这也是系统级语言的应有选择：<strong>使用复杂度换取可控性和性能</strong>。</p>
<p>不过，大家也不用担心，本书的目标就是降低 Rust 使用门槛，这个门槛自然也包括如何在 Rust 中进行异步并发编程，我们将从多线程以及 <code>async/await</code> 两个方面去深入浅出地讲解，首先，从本章的多线程开始。</p>`,readingTime:{minutes:1.05,words:314},title:"多线程并发编程",type:"article"}}],["/advance/concurrency-with-threads/message-passing.html",{loader:()=>b(()=>import("./message-passing.html-BPRghawk.js"),[]),meta:{excerpt:`
<p>在多线程间有多种方式可以共享、传递数据，最常用的方式就是通过消息传递或者将锁和<code>Arc</code>联合使用，而对于前者，在编程界还有一个大名鼎鼎的<code>Actor线程模型</code>为其背书，典型的有 Erlang 语言，还有 Go 语言中很经典的一句话：</p>
<blockquote>
<p>Do not communicate by sharing memory; instead, share memory by communicating</p>
</blockquote>
<p>而对于后者，我们将在下一节中进行讲述。</p>
<h2>消息通道</h2>
<p>与 Go 语言内置的<code>chan</code>不同，Rust 是在标准库里提供了消息通道(<code>channel</code>)，你可以将其想象成一场直播，多个主播联合起来在搞一场直播，最终内容通过通道传输给屏幕前的我们，其中主播被称之为<strong>发送者</strong>，观众被称之为<strong>接收者</strong>，显而易见的是：一个通道应该支持多个发送者和接收者。</p>`,readingTime:{minutes:13.24,words:3973},title:"线程间的消息传递",type:"article"}}],["/advance/concurrency-with-threads/races.html",{loader:()=>b(()=>import("./races.html-CAhmv9Og.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"数据竞争",type:"article"}}],["/advance/concurrency-with-threads/ref-counter-lock.html",{loader:()=>b(()=>import("./ref-counter-lock.html-BRyMvJRZ.js"),[]),meta:{excerpt:`
<p>https://oribenshir.github.io/afternoon_rusting//blog/deref-smart-pointer</p>
`,readingTime:{minutes:.03,words:9},title:"Rc、Arc、Mutex、Rwlock(todo)",type:"article"}}],["/advance/concurrency-with-threads/send-sync.html",{loader:()=>b(()=>import("./send-sync.html-CuneZC2u.js"),[]),meta:{excerpt:`
<p>为何 Rc、RefCell 和裸指针不可以在多线程间使用？如何让裸指针可以在多线程使用？我们一起来探寻下这些问题的答案。</p>
<h2>无法用于多线程的<code>Rc</code></h2>
<p>先来看一段多线程使用<code>Rc</code>的代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::thread;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">move</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.58,words:1974},title:"基于 Send 和 Sync 的线程安全",type:"article"}}],["/advance/concurrency-with-threads/sync1.html",{loader:()=>b(()=>import("./sync1.html-DpGvBMpN.js"),[]),meta:{excerpt:`
<p>在多线程编程中，同步性极其的重要，当你需要同时访问一个资源、控制不同线程的执行次序时，都需要使用到同步性。</p>
<p>在 Rust 中有多种方式可以实现同步性。在上一节中讲到的消息传递就是同步性的一种实现方式，例如我们可以通过消息传递来控制不同线程间的执行次序。还可以使用共享内存来实现同步性，例如通过锁和原子操作等并发原语来实现多个线程同时且安全地去访问一个资源。</p>
<h2>该如何选择</h2>
<p>共享内存可以说是同步的灵魂，因为消息传递的底层实际上也是通过共享内存来实现，两者的区别如下：</p>
<ul>
<li>共享内存相对消息传递能节省多次内存拷贝的成本</li>
<li>共享内存的实现简洁的多</li>
<li>共享内存的锁竞争更多</li>
</ul>`,readingTime:{minutes:18.91,words:5672},title:"线程同步：锁、Condvar 和信号量",type:"article"}}],["/advance/concurrency-with-threads/sync2.html",{loader:()=>b(()=>import("./sync2.html-A9Gt22s0.js"),[]),meta:{excerpt:`
<p><code>Mutex</code>用起来简单，但是无法并发读，<code>RwLock</code>可以并发读，但是使用场景较为受限且性能不够，那么有没有一种全能性选手呢？ 欢迎我们的<code>Atomic</code>闪亮登场。</p>
<p>从 Rust1.34 版本后，就正式支持原子类型。原子指的是一系列不可被 CPU 上下文交换的机器指令，这些指令组合在一起就形成了原子操作。在多核 CPU 下，当某个 CPU 核心开始运行原子操作时，会先暂停其它 CPU 内核对内存的操作，以保证原子操作不会被其它 CPU 内核所干扰。</p>
<p>由于原子操作是通过指令提供的支持，因此它的性能相比锁和消息传递会好很多。相比较于锁而言，原子类型不需要开发者处理加锁和释放锁的问题，同时支持修改，读取等操作，还具备较高的并发性能，几乎所有的语言都支持原子类型。</p>`,readingTime:{minutes:8.53,words:2560},title:"线程同步：Atomic 原子类型与内存顺序",type:"article"}}],["/advance/concurrency-with-threads/thread.html",{loader:()=>b(()=>import("./thread.html-79szyjKJ.js"),[]),meta:{excerpt:`
<p>放在十年前，多线程编程可能还是一个少数人才掌握的核心概念，但是在今天，随着编程语言的不断发展，多线程、多协程、Actor 等并发编程方式已经深入人心，同时多线程编程的门槛也在不断降低，本章节我们来看看在 Rust 中该如何使用多线程。</p>
<h2>多线程编程的风险</h2>
<p>由于多线程的代码是同时运行的，因此我们无法保证线程间的执行顺序，这会导致一些问题：</p>
<ul>
<li>竞态条件(race conditions)，多个线程以非一致性的顺序同时访问数据资源</li>
<li>死锁(deadlocks)，两个线程都想使用某个资源，但是又都在等待对方释放资源后才能使用，结果最终都无法继续执行</li>
<li>一些因为多线程导致的很隐晦的 BUG，难以复现和解决</li>
</ul>`,readingTime:{minutes:16,words:4800},title:"使用线程",type:"article"}}],["/advance/difficulties/pointer.html",{loader:()=>b(()=>import("./pointer.html-DF-kPnK7.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.04,words:11},title:"裸指针、引用和智能指针 TODO",type:"article"}}],["/advance/functional-programing/closure.html",{loader:()=>b(()=>import("./closure.html-MB4hkIH7.js"),[]),meta:{excerpt:`
<p>闭包这个词语由来已久，自上世纪 60 年代就由 <code>Scheme</code> 语言引进之后，被广泛用于函数式编程语言中，进入 21 世纪后，各种现代化的编程语言也都不约而同地把闭包作为核心特性纳入到语言设计中来。那么到底何为闭包？</p>
<p>闭包是<strong>一种匿名函数，它可以赋值给变量也可以作为参数传递给其它函数，不同于函数的是，它允许捕获调用者作用域中的值</strong>，例如：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:21.97,words:6592},title:"闭包 Closure",type:"article"}}],["/advance/functional-programing/intro.html",{loader:()=>b(()=>import("./intro.html-Caar82Ct.js"),[]),meta:{excerpt:`
<p>罗马不是一天建成的，编程语言亦是如此，每一门编程语言在借鉴前辈的同时，也会提出自己独有的特性，Rust 即是如此。当站在巨人肩膀上时，一个人所能看到的就更高更远，恰好，我们看到了函数式语言的优秀特性，例如：</p>
<ul>
<li>使用函数作为参数进行传递</li>
<li>使用函数作为函数返回值</li>
<li>将函数赋值给变量</li>
</ul>
<p>见猎心喜，我们忍不住就借鉴了过来，于是你能看到本章的内容，天下语言一大。。。跑题了。</p>
<p>关于函数式编程到底是什么的争论由来已久，本章节并不会踏足这个泥潭，因此我们在这里主要关注的是函数式特性：</p>
<ul>
<li>闭包 Closure</li>
<li>迭代器 Iterator</li>
<li>模式匹配</li>
<li>枚举</li>
</ul>`,readingTime:{minutes:1.04,words:312},title:"函数式编程",type:"article"}}],["/advance/functional-programing/iterator.html",{loader:()=>b(()=>import("./iterator.html-Dfx4r50S.js"),[]),meta:{excerpt:`
<p>如果你询问一个 Rust 资深开发：写 Rust 项目最需要掌握什么？相信迭代器往往就是答案之一。无论你是编程新手亦或是高手，实际上大概率都用过迭代器，虽然自己可能并没有意识到这一点:)</p>
<p>迭代器允许我们迭代一个连续的集合，例如数组、动态数组 <code>Vec</code>、<code>HashMap</code> 等，在此过程中，只需关心集合中的元素如何处理，而无需关心如何开始、如何结束、按照什么样的索引去访问等问题。</p>
<h2>For 循环与迭代器</h2>
<p>从用途来看，迭代器跟 <code>for</code> 循环颇为相似，都是去遍历一个集合，但是实际上它们存在不小的差别，其中最主要的差别就是：<strong>是否通过索引来访问集合</strong>。</p>`,readingTime:{minutes:16.1,words:4829},title:"迭代器 Iterator",type:"article"}}],["/advance/into-types/converse.html",{loader:()=>b(()=>import("./converse.html-2qcvbG16.js"),[]),meta:{excerpt:`
<p>Rust 是类型安全的语言，因此在 Rust 中做类型转换不是一件简单的事，这一章节我们将对 Rust 中的类型转换进行详尽讲解。</p>
<blockquote>
<p>高能预警：本章节有些难，可以考虑学了进阶后回头再看</p>
</blockquote>
<h2><code>as</code>转换</h2>
<p>先来看一段代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u16</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Ten is less than one hundred."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.66,words:4398},title:"类型转换",type:"article"}}],["/advance/into-types/custom-type.html",{loader:()=>b(()=>import("./custom-type.html-DBQVAEHw.js"),[]),meta:{excerpt:`
<p>弱弱地、不负责任地说，Rust 的学习难度之恶名，可能有一半来源于 Rust 的类型系统，而其中一半的一半则来自于本章节的内容。在本章，我们将重点学习如何创建自定义类型，以及了解何为动态大小的类型。</p>
<h2>newtype</h2>
<p>何为 <code>newtype</code>？简单来说，就是使用<a href="https://course.rs/basic/compound-type/struct.html#%E5%85%83%E7%BB%84%E7%BB%93%E6%9E%84%E4%BD%93tuple-struct" target="_blank" rel="noopener noreferrer">元组结构体</a>的方式将已有的类型包裹起来：<code>struct Meters(u32);</code>，那么此处 <code>Meters</code> 就是一个 <code>newtype</code>。</p>`,readingTime:{minutes:6.68,words:2004},title:"深入 Rust 类型",type:"article"}}],["/advance/into-types/enum-int.html",{loader:()=>b(()=>import("./enum-int.html-DphKjWR3.js"),[]),meta:{excerpt:`
<p>在 Rust 中，从枚举到整数的转换很容易，但是反过来，就没那么容易，甚至部分实现还挺邪恶, 例如使用<code>transmute</code>。</p>
<h2>一个真实场景的需求</h2>
<p>在实际场景中，从整数到枚举的转换有时还是非常需要的，例如你有一个枚举类型，然后需要从外面传入一个整数，用于控制后续的流程走向，此时就需要用整数去匹配相应的枚举(你也可以用整数匹配整数-, -，看看会不会被喷)。</p>
<p>既然有了需求，剩下的就是看看该如何实现，这篇文章的水远比你想象的要深，且看八仙过海各显神通。</p>
<h2>C 语言的实现</h2>
<p>对于 C 语言来说，万物皆邪恶，因此我们不讨论安全，只看实现，不得不说很简洁：</p>`,readingTime:{minutes:3.64,words:1091},title:"整数转换为枚举",type:"article"}}],["/advance/into-types/intro.html",{loader:()=>b(()=>import("./intro.html-DMWW5o3q.js"),[]),meta:{excerpt:`
<p>Rust 是强类型语言，同时也是强安全语言，这些特性导致了 Rust 的类型注定比一般语言要更深入也更困难。</p>
<p>本章将深入讲解一些进阶的 Rust 类型以及类型转换，希望大家喜欢。</p>
`,readingTime:{minutes:.24,words:73},title:"深入类型",type:"article"}}],["/advance/into-types/sized.html",{loader:()=>b(()=>import("./sized.html-BaF9UcMY.js"),[]),meta:{excerpt:`
<p>在 Rust 中类型有多种抽象的分类方式，例如本书之前章节的：基本类型、集合类型、复合类型等。再比如说，如果从编译器何时能获知类型大小的角度出发，可以分成两类:</p>
<ul>
<li>定长类型( sized )，这些类型的大小在编译时是已知的</li>
<li>不定长类型( unsized )，与定长类型相反，它的大小只有到了程序运行时才能动态获知，这种类型又被称之为 DST</li>
</ul>
<p>首先，我们来深入看看何为 DST。</p>
<h2>动态大小类型 DST</h2>
<p>读者大大们之前学过的几乎所有类型，都是固定大小的类型，包括集合 <code>Vec</code>、<code>String</code> 和 <code>HashMap</code> 等，而动态大小类型刚好与之相反：<strong>编译器无法在编译期得知该类型值的大小，只有到了程序运行时，才能动态获知</strong>。对于动态类型，我们使用 <code>DST</code>(dynamically sized types)或者 <code>unsized</code> 类型来称呼它。</p>`,readingTime:{minutes:7.5,words:2249},title:"Sized 和不定长类型 DST",type:"article"}}],["/advance/lifetime/advance.html",{loader:()=>b(()=>import("./advance.html-C6IIU25C.js"),[]),meta:{excerpt:`
<p>其实关于生命周期的常用特性，在上一节中，我们已经概括得差不多了，本章主要讲解生命周期的一些高级或者不为人知的特性。对于新手，完全可以跳过本节内容，进行下一章节的学习。</p>
<h2>不太聪明的生命周期检查</h2>
<p>在 Rust 语言学习中，一个很重要的部分就是阅读一些你可能不经常遇到，但是一旦遇到就难以理解的代码，这些代码往往最令人头疼的就是生命周期，这里我们就来看看一些本以为可以编译，但是却因为生命周期系统不够聪明导致编译失败的代码。</p>
<h4>例子 1</h4>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mutate_and_share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> loan</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mutate_and_share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">loan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:15.81,words:4744},title:"深入生命周期",type:"article"}}],["/advance/lifetime/intro.html",{loader:()=>b(()=>import("./intro.html-PgM_C4I-.js"),[]),meta:{excerpt:`
<p>何为高阶？一个字：难，二个字：很难，七个字：其实也没那么难。至于到底难不难，还是交给各位看官评判吧 😄</p>
<p>大家都知道，生命周期在 Rust 中是最难的部分之一，因此相关内容被分成了两个章节：基础和进阶，其中基础部分已经在之前学习过，下面一起来看看真正的<code>难</code>字怎么写。</p>
`,readingTime:{minutes:.38,words:114},title:"生命周期",type:"article"}}],["/advance/lifetime/misconceptions.html",{loader:()=>b(()=>import("./misconceptions.html-DwLW7VY6.js"),[]),meta:{excerpt:`
<p>https://github.com/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md</p>
`,readingTime:{minutes:.06,words:17},title:"一些关于生命周期的误解",type:"article"}}],["/advance/lifetime/static.html",{loader:()=>b(()=>import("./static.html-CABQPY7z.js"),[]),meta:{excerpt:`
<p>Rust 的难点之一就在于它有不少容易混淆的概念，例如 <code>&amp;str</code> 、<code>str</code> 与 <code>String</code>， 再比如本文标题那两位。不过与字符串也有不同，这两位对于普通用户来说往往是无需进行区分的，但是当大家想要深入学习或使用 Rust 时，它们就会成为成功路上的拦路虎了。</p>
<p>与生命周期的其它章节不同，本文短小精悍，阅读过程可谓相当轻松愉快，话不多说，let's go。</p>
<p><code>'static</code> 在 Rust 中是相当常见的，例如字符串字面值就具有 <code>'static</code> 生命周期:</p>`,readingTime:{minutes:5.3,words:1590},title:"&'static 和 T: 'static",type:"article"}}],["/advance/smart-pointer/box.html",{loader:()=>b(()=>import("./box.html-DRaQtQnv.js"),[]),meta:{excerpt:`
<p>关于作者帅不帅，估计争议还挺多的，但是如果说 <code>Box&lt;T&gt;</code> 是不是 Rust 中最常见的智能指针，那估计没有任何争议。因为 <code>Box&lt;T&gt;</code> 允许你将一个值分配到堆上，然后在栈上保留一个智能指针指向堆上的数据。</p>
<p>之前我们在<a href="https://course.rs/basic/ownership/ownership.html#%E6%A0%88stack%E4%B8%8E%E5%A0%86heap" target="_blank" rel="noopener noreferrer">所有权章节</a>简单讲过堆栈的概念，这里再补充一些。</p>`,readingTime:{minutes:11.41,words:3422},title:"Box<T> 堆对象分配",type:"article"}}],["/advance/smart-pointer/cell-refcell.html",{loader:()=>b(()=>import("./cell-refcell.html-upVrgK14.js"),[]),meta:{excerpt:`
<p>Rust 的编译器之严格，可以说是举世无双。特别是在所有权方面，Rust 通过严格的规则来保证所有权和借用的正确性，最终为程序的安全保驾护航。</p>
<p>但是严格是一把双刃剑，带来安全提升的同时，损失了灵活性，有时甚至会让用户痛苦不堪、怨声载道。因此 Rust 提供了 <code>Cell</code> 和 <code>RefCell</code> 用于内部可变性，简而言之，可以在拥有不可变引用的同时修改目标数据，对于正常的代码实现来说，这个是不可能做到的（要么一个可变借用，要么多个不可变借用）。</p>
<blockquote>
<p>内部可变性的实现是因为 Rust 使用了 <code>unsafe</code> 来做到这一点，但是对于使用者来说，这些都是透明的，因为这些不安全代码都被封装到了安全的 API 中</p>
</blockquote>`,readingTime:{minutes:12.97,words:3890},title:"Cell 和 RefCell",type:"article"}}],["/advance/smart-pointer/deref.html",{loader:()=>b(()=>import("./deref.html-LRyqTmcg.js"),[]),meta:{excerpt:`
<p>在开始之前，我们先来看一段代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.97,words:3290},title:"Deref 解引用",type:"article"}}],["/advance/smart-pointer/drop.html",{loader:()=>b(()=>import("./drop.html-DooW0lA3.js"),[]),meta:{excerpt:`
<p>在 Rust 中，我们之所以可以一拳打跑 GC 的同时一脚踢翻手动资源回收，主要就归功于 <code>Drop</code> 特征，同时它也是智能指针的必备特征之一。</p>
<h2>学习目标</h2>
<p>如何自动和手动释放资源及执行指定的收尾工作</p>
<h2>Rust 中的资源回收</h2>
<p>在一些无 GC 语言中，程序员在一个变量无需再被使用时，需要手动释放它占用的内存资源，如果忘记了，那么就会发生内存泄漏，最终臭名昭著的 <code>OOM</code> 问题可能就会发生。</p>
<p>而在 Rust 中，你可以指定在一个变量超出作用域时，执行一段特定的代码，最终编译器将帮你自动插入这段收尾代码。这样，就无需在每一个使用该变量的地方，都写一段代码来进行收尾工作和资源释放。不禁让人感叹，Rust 的大腿真粗，香！</p>`,readingTime:{minutes:6.04,words:1812},title:"Drop 释放资源",type:"article"}}],["/advance/smart-pointer/intro.html",{loader:()=>b(()=>import("./intro.html-tKHA-VbS.js"),[]),meta:{excerpt:`
<p>在各个编程语言中，指针的概念几乎都是相同的：<strong>指针是一个包含了内存地址的变量，该内存地址引用或者指向了另外的数据</strong>。</p>
<p>在 Rust 中，最常见的指针类型是引用，引用通过 <code>&amp;</code> 符号表示。不同于其它语言，引用在 Rust 中被赋予了更深层次的含义，那就是：借用其它变量的值。引用本身很简单，除了指向某个值外并没有其它的功能，也不会造成性能上的额外损耗，因此是 Rust 中使用最多的指针类型。</p>
<p>而智能指针则不然，它虽然也号称指针，但是它是一个复杂的家伙：通过比引用更复杂的数据结构，包含比引用更多的信息，例如元数据，当前长度，最大可用长度等。总之，Rust 的智能指针并不是独创，在 C++ 或者其他语言中也存在相似的概念。</p>`,readingTime:{minutes:2.48,words:743},title:"智能指针",type:"article"}}],["/advance/smart-pointer/rc-arc.html",{loader:()=>b(()=>import("./rc-arc.html-kxM37mEG.js"),[]),meta:{excerpt:`
<p>Rust 所有权机制要求一个值只能有一个所有者，在大多数情况下，都没有问题，但是考虑以下情况：</p>
<ul>
<li>在图数据结构中，多个边可能会拥有同一个节点，该节点直到没有边指向它时，才应该被释放清理</li>
<li>在多线程中，多个线程可能会持有同一个数据，但是你受限于 Rust 的安全机制，无法同时获取该数据的可变引用</li>
</ul>
<p>以上场景不是很常见，但是一旦遇到，就非常棘手，为了解决此类问题，Rust 在所有权机制之外又引入了额外的措施来简化相应的实现：通过引用计数的方式，允许一个数据资源在同一时刻拥有多个所有者。</p>
<p>这种实现机制就是 <code>Rc</code> 和 <code>Arc</code>，前者适用于单线程，后者适用于多线程。由于二者大部分情况下都相同，因此本章将以 <code>Rc</code> 作为讲解主体，对于 <code>Arc</code> 的不同之处，另外进行单独讲解。</p>`,readingTime:{minutes:9.09,words:2728},title:"Rc 与 Arc",type:"article"}}],["/advance/unsafe/inline-asm.html",{loader:()=>b(()=>import("./inline-asm.html-ALgpD_G2.js"),[]),meta:{excerpt:`
<blockquote>
<p>本章内容对于学习 Rust 不是必须的，而且难度很高，大家简单知道有这回事就好，不必非要学会 😄</p>
</blockquote>
<p>Rust 提供了 <code>asm!</code> 宏，可以让大家在 Rust 代码中嵌入汇编代码，对于一些极致高性能或者底层的场景还是非常有用的，例如操作系统内核开发。但通常来说，大家并不应该在自己的项目中使用到该项技术，它为极客而生！</p>
<p>本章的例子是基于 <code>x86/x86-64</code> 汇编的，但是其它架构也是支持的，目前支持的包括：</p>
<ul>
<li>x86 和 x86-64</li>
<li>ARM</li>
<li>AArch64</li>
<li>RISC-V</li>
</ul>`,readingTime:{minutes:8.81,words:2644},title:"内联汇编",type:"article"}}],["/advance/unsafe/intro.html",{loader:()=>b(()=>import("./intro.html-snTTNYnJ.js"),[]),meta:{excerpt:`
<p>圣人论迹不论心，论心世上无圣人，对于编程语言而言，亦是如此。</p>
<p>虽然在本章之前，我们学到的代码都是在编译期就得到了 Rust 的安全保障，但是在其内心深处也隐藏了一些阴暗面，在这些阴暗面里，内存安全就存在一些变数了：当不娴熟的开发者接触到这些阴暗面，就可能写出不安全的代码，因此我们称这种代码为 <code>unsafe</code> 代码块。</p>
<h2>为何会有 unsafe</h2>
<p>几乎每个语言都有 <code>unsafe</code> 关键字，但 Rust 语言使用 <code>unsafe</code> 的原因可能与其它编程语言还有所不同。</p>
<h4>过强的编译器</h4>`,readingTime:{minutes:5.21,words:1564},title:"unsafe 简介",type:"article"}}],["/advance/unsafe/superpowers.html",{loader:()=>b(()=>import("./superpowers.html-i_TLc9LE.js"),[]),meta:{excerpt:`
<p>古龙有一部小说，名为"七种兵器"，其中每一种都精妙绝伦，令人闻风丧胆，而 <code>unsafe</code> 也有五种兵器，它们可以让你拥有其它代码无法实现的能力，同时它们也像七种兵器一样令人闻风丧胆，下面一起来看看庐山真面目。</p>
<h2>解引用裸指针</h2>
<p>裸指针(raw pointer，又称原生指针) 在功能上跟引用类似，同时它也需要显式地注明可变性。但是又和引用有所不同，裸指针长这样: <code>*const T</code> 和 <code>*mut T</code>，它们分别代表了不可变和可变。</p>
<p>大家在之前学过 <code>*</code> 操作符，知道它可以用于解引用，但是在裸指针 <code>*const T</code> 中，这里的 <code>*</code> 只是类型名称的一部分，并没有解引用的含义。</p>`,readingTime:{minutes:17.43,words:5228},title:"五种兵器",type:"article"}}],["/advance/unsafe/ub.html",{loader:()=>b(()=>import("./ub.html-CPczOoOV.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/rp44u5/request_for_unsafe_review/</p>
`,readingTime:{minutes:.04,words:11},title:"那些会导致UB的代码",type:"article"}}],["/appendix/rust-versions/1.58.html",{loader:()=>b(()=>import("./1.58.html-cdc07Uyq.js"),[]),meta:{excerpt:`
<p>众所周知，Rust 小版本发布非常频繁，6 周就发布一次，因此通常不会有特别值得普通用户关注的内容，但是这次 1.58 版本不同，新增了(stable 化了)一个非常好用的功能： <strong>在格式化字符串时捕获环境中的值</strong>。</p>
<blockquote>
<p>Rust 1.58 官方 release doc: <a href="https://blog.rust-lang.org/2022/01/13/Rust-1.58.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.58.0 | Rust Blog</a></p>
</blockquote>`,readingTime:{minutes:2.19,words:658},title:"Rust 新版解读 | 1.58 | 重点: 格式化字符串捕获环境中的值",type:"article"}}],["/appendix/rust-versions/1.59.html",{loader:()=>b(()=>import("./1.59.html-Ws_wls8g.js"),[]),meta:{excerpt:`
<p>Rust 团队于今天凌晨( 2022-02-25 )发布了最新的 1.59 版本，其中最引人瞩目的特性应该就是支持在代码中内联汇编了，一起来看看。</p>
<h2>内联汇编( inline assembly )</h2>
<p>该特性对于需要底层控制的应用非常有用，例如想要控制底层执行、访问特定的机器指令等。</p>
<p>例如，如果目标平台是 <code>x86-64</code> 时，你可以这么写：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">arch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::asm;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 使用 shifts 和 adds 实现 x 乘以 6</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u64</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {\`\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    asm!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "mov {tmp}, {x}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "shl {tmp}, 1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "shl {x}, 2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "add {x}, {tmp}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> inout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.29,words:987},title:"Rust 新版解读 | 1.59 | 重点: 内联汇编、解构式赋值",type:"article"}}],["/appendix/rust-versions/1.60.html",{loader:()=>b(()=>import("./1.60.html-Dmo1vFbX.js"),[]),meta:{excerpt:`
<blockquote>
<p>原文链接: https://blog.rust-lang.org/2022/04/07/Rust-1.60.0.html</p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.60 版本:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stable</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:5.73,words:1718},title:"Rust 新版解读 | 1.60 | 重点: 查看 Cargo 构建耗时详情、Cargo Feature 增加新语法",type:"article"}}],["/appendix/rust-versions/1.61.html",{loader:()=>b(()=>import("./1.61.html-CgBJs20K.js"),[]),meta:{excerpt:`
<blockquote>
<p>原文链接: https://blog.rust-lang.org/2022/05/19/Rust-1.61.0.html<br>
翻译 by ：<a href="https://github.com/AllanDowney" target="_blank" rel="noopener noreferrer">AllanDowney</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.61 版本:</p>`,readingTime:{minutes:2.56,words:768},title:"Rust 新版解读 | 1.61 | 重点: 自定义 main 函数 ExitCode、const fn 增强、为锁定的 stdio 提供静态句柄",type:"article"}}],["/appendix/rust-versions/1.62.html",{loader:()=>b(()=>import("./1.62.html-CgdfwDjV.js"),[]),meta:{excerpt:`
<blockquote>
<p>原文链接: https://blog.rust-lang.org/2022/06/30/Rust-1.62.0.html<br>
翻译 by ：<a href="https://github.com/AllanDowney" target="_blank" rel="noopener noreferrer">AllanDowney</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.62 版本:</p>`,readingTime:{minutes:1.92,words:577},title:"Rust 新版解读 | 1.62 | 重点: Cargo add，#[default] 枚举变量，Linux 上更薄更快的 Mutex，裸机 x86_64 构架",type:"article"}}],["/appendix/rust-versions/1.63.html",{loader:()=>b(()=>import("./1.63.html-Bb0M2c-3.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.63 官方 release doc: <a href="https://blog.rust-lang.org/2022/08/11/Rust-1.63.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.63.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.63 版本:</p>`,readingTime:{minutes:2.96,words:888},title:"Rust 新版解读 | 1.63 | 重点: Scoped threads",type:"article"}}],["/appendix/rust-versions/1.64.html",{loader:()=>b(()=>import("./1.64.html-D8HU8ys7.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.64 官方 release doc: <a href="https://blog.rust-lang.org/2022/09/22/Rust-1.64.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.64.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.64 版本:</p>`,readingTime:{minutes:3.63,words:1088},title:"Rust 新版解读 | 1.64 | 重点: IntoFuture , Cargo 优化",type:"article"}}],["/appendix/rust-versions/1.65.html",{loader:()=>b(()=>import("./1.65.html-DCAHiKUH.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.65 官方 release doc: <a href="https://blog.rust-lang.org/2022/11/03/Rust-1.65.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.65.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.65 版本:</p>`,readingTime:{minutes:2.98,words:893},title:"Rust 新版解读 | 1.65 | 重点: 泛型关联类型，新绑定语法！",type:"article"}}],["/appendix/rust-versions/1.66.html",{loader:()=>b(()=>import("./1.66.html-BXvt4vhv.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.66 官方 release doc: <a href="https://blog.rust-lang.org/2022/12/15/Rust-1.66.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.66.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.66 版本:</p>`,readingTime:{minutes:3.04,words:913},title:"Rust 新版解读 | 1.66 | 重点: 有字段枚举的显示判别",type:"article"}}],["/appendix/rust-versions/1.67.html",{loader:()=>b(()=>import("./1.67.html-CpJbyhYn.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.67 官方 release doc: <a href="https://blog.rust-lang.org/2023/01/26/Rust-1.67.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.67.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.67 版本:</p>`,readingTime:{minutes:1.04,words:313},title:"Rust 新版解读 | 1.67 | #[must_use] in async fn",type:"article"}}],["/appendix/rust-versions/1.68.html",{loader:()=>b(()=>import("./1.68.html-Dr5pSKaS.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.68 官方 release doc: <a href="https://blog.rust-lang.org/2023/03/09/Rust-1.68.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.68.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.68 版本:</p>`,readingTime:{minutes:2.3,words:689},title:"Rust 新版解读 | 1.68 | crates index 优化",type:"article"}}],["/appendix/rust-versions/1.69.html",{loader:()=>b(()=>import("./1.69.html-CWfDj6hH.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.69 官方 release doc: <a href="https://blog.rust-lang.org/2023/04/20/Rust-1.69.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.69.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.69 版本:</p>`,readingTime:{minutes:1.34,words:403},title:"Rust 新版解读 | 1.69 | cargo fix",type:"article"}}],["/appendix/rust-versions/1.70.html",{loader:()=>b(()=>import("./1.70.html-D-1lf6rD.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.70 官方 release doc: <a href="https://blog.rust-lang.org/2023/06/01/Rust-1.70.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.70.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.70 版本:</p>`,readingTime:{minutes:2.92,words:876},title:"Rust 新版解读 | 1.70 | OnceCell && IsTerminal",type:"article"}}],["/appendix/rust-versions/1.71.html",{loader:()=>b(()=>import("./1.71.html-DYUQ9PQx.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.71 官方 release doc: <a href="https://blog.rust-lang.org/2023/07/13/Rust-1.71.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.71.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.71 版本:</p>`,readingTime:{minutes:2.5,words:750},title:"Rust 新版解读 | 1.71 | C-unwind API",type:"article"}}],["/appendix/rust-versions/1.72.html",{loader:()=>b(()=>import("./1.72.html-CEUT9pWm.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.72 官方 release doc: <a href="https://blog.rust-lang.org/2023/08/24/Rust-1.72.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.72.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.72 版本:</p>`,readingTime:{minutes:2.9,words:871},title:"Rust 新版解读 | 1.72 | feature启用提示",type:"article"}}],["/appendix/rust-versions/1.73.html",{loader:()=>b(()=>import("./1.73.html-BMWPYIcn.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.73 官方 release doc: <a href="https://blog.rust-lang.org/2023/10/05/Rust-1.73.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.73.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.73 版本:</p>`,readingTime:{minutes:1.43,words:430},title:"Rust 新版解读 | 1.73 | panic 报错展示优化",type:"article"}}],["/appendix/rust-versions/1.74.html",{loader:()=>b(()=>import("./1.74.html-Bvrf-9Jo.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.74 官方 release doc: <a href="https://blog.rust-lang.org/2023/11/16/Rust-1.74.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.74.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.74 版本:</p>`,readingTime:{minutes:2.29,words:687},title:"Rust 新版解读 | 1.74 | 通过 Cargo 配置 Lint",type:"article"}}],["/appendix/rust-versions/1.75.html",{loader:()=>b(()=>import("./1.75.html-7NizjkJh.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.75 官方 release doc: <a href="https://blog.rust-lang.org/2023/12/28/Rust-1.75.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.75.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.75 版本:</p>`,readingTime:{minutes:1.76,words:528},title:"Rust 新版解读 | 1.75 | async trait 和 RPITIT",type:"article"}}],["/appendix/rust-versions/1.76.html",{loader:()=>b(()=>import("./1.76.html-D0BXZ4-H.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.76 官方 release doc: <a href="https://blog.rust-lang.org/2024/02/08/Rust-1.76.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.76.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.76 版本:</p>`,readingTime:{minutes:1.31,words:394},title:"Rust 新版解读 | 1.76 | ABI 兼容性更新",type:"article"}}],["/appendix/rust-versions/1.77.html",{loader:()=>b(()=>import("./1.77.html-FEEaKYxy.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.77 官方 release doc: <a href="https://blog.rust-lang.org/2024/03/21/Rust-1.77.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.77.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.77 版本:</p>`,readingTime:{minutes:1.96,words:587},title:"Rust 新版解读 | 1.77 | 异步函数支持递归",type:"article"}}],["/appendix/rust-versions/1.78.html",{loader:()=>b(()=>import("./1.78.html-DKb8d3bC.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.78 官方 release doc: <a href="https://blog.rust-lang.org/2024/05/02/Rust-1.78.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.78.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.78 版本:</p>`,readingTime:{minutes:3.95,words:1184},title:"Rust 新版解读 | 1.78 | 诊断属性宏",type:"article"}}],["/appendix/rust-versions/1.79.html",{loader:()=>b(()=>import("./1.79.html-DUIwB-o5.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.79 官方 release doc: <a href="https://blog.rust-lang.org/2024/06/13/Rust-1.79.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.79.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.79 版本:</p>`,readingTime:{minutes:2.55,words:766},title:"Rust 新版解读 | 1.79 | 内联 const，临时变量生命周期延长",type:"article"}}],["/appendix/rust-versions/1.80.html",{loader:()=>b(()=>import("./1.80.html-C2GHHOrU.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.80 官方 release doc: <a href="https://blog.rust-lang.org/2024/07/25/Rust-1.80.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.80.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.80 版本:</p>`,readingTime:{minutes:3.34,words:1001},title:"Rust 新版解读 | 1.80 | “懒”类型、开区间范围模式",type:"article"}}],["/appendix/rust-versions/1.81.html",{loader:()=>b(()=>import("./1.81.html-DHD-nMd4.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.81 官方 release doc: <a href="https://blog.rust-lang.org/2024/09/05/Rust-1.81.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.81.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.81 版本:</p>`,readingTime:{minutes:2.33,words:700},title:"Rust 新版解读 | 1.81 | expect lint",type:"article"}}],["/appendix/rust-versions/1.82.html",{loader:()=>b(()=>import("./1.82.html-BtslYhMg.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.82 官方 release doc: <a href="https://blog.rust-lang.org/2024/09/05/Rust-1.82.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.82.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.82 版本:</p>`,readingTime:{minutes:12.92,words:3876},title:"Rust 新版解读 | 1.82 | 超大更新",type:"article"}}],["/appendix/rust-versions/1.83.html",{loader:()=>b(()=>import("./1.83.html-Bw5En9L3.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.83 官方 release doc: <a href="https://blog.rust-lang.org/2024/11/28/Rust-1.83.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.83.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.83 版本:</p>`,readingTime:{minutes:2.07,words:622},title:"Rust 新版解读 | 1.83 | Const 能力拓展",type:"article"}}],["/appendix/rust-versions/1.84.html",{loader:()=>b(()=>import("./1.84.html-D_gKkorf.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.84 官方 release doc: <a href="https://blog.rust-lang.org/2025/01/09/Rust-1.84.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.84.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.84 版本:</p>`,readingTime:{minutes:4.24,words:1272},title:"Rust 新版解读 | 1.84 | Const 能力拓展",type:"article"}}],["/appendix/rust-versions/1.85.html",{loader:()=>b(()=>import("./1.85.html-LbYeEzI5.js"),[]),meta:{excerpt:`
<blockquote>
<p>Rust 1.85 官方 release doc: <a href="https://blog.rust-lang.org/2025/02/20/Rust-1.85.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.85.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.85 版本:</p>`,readingTime:{minutes:7.28,words:2183},title:"Rust 新版解读 | 1.85 | Rust 2024 稳定版、async 闭包",type:"article"}}],["/appendix/rust-versions/intro.html",{loader:()=>b(()=>import("./intro.html-i8BRmfe0.js"),[]),meta:{excerpt:`
<p>本目录包含了 Rust 历次版本更新的重要内容解读，需要注意，每个版本实际更新的内容要比这里记录的更多，全部内容请访问每节开头的官方链接查看。</p>
`,readingTime:{minutes:.24,words:72},title:"附录 G：Rust 更新版本列表",type:"article"}}],["/basic/base-type/char-bool.html",{loader:()=>b(()=>import("./char-bool.html-BRZeEGp9.js"),[]),meta:{excerpt:`
<p>这三个类型所处的地位比较尴尬，你说它们重要吧，确实出现的身影不是很多，说它们不重要吧，有时候也是不可或缺，而且这三个类型都有一个共同点：简单，因此我们统一放在一起讲。</p>
<h2>字符类型(char)</h2>
<p>字符，对于没有其它编程经验的新手来说可能不太好理解（没有编程经验敢来学 Rust 的绝对是好汉），但是你可以把它理解为英文中的字母，中文中的汉字。</p>
<p>下面的代码展示了几个颇具异域风情的字符：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'z'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> z</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ℤ'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> g</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '国'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> heart_eyed_cat</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '😻'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.77,words:832},title:"字符、布尔、单元类型",type:"article"}}],["/basic/base-type/function.html",{loader:()=>b(()=>import("./function.html-DpzoZXns.js"),[]),meta:{excerpt:`
<p>Rust 的函数我们在之前已经见过不少，跟其他语言几乎没有什么区别。因此本章的学习之路将轻松和愉快，骚年们，请珍惜这种愉快，下一章你将体验到不一样的 Rust。</p>
<p>在函数界，有一个函数只闻其名不闻其声，可以止小孩啼！在程序界只有 <code>hello,world!</code> 可以与之媲美，它就是 <code>add</code> 函数：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.03,words:1509},title:"函数",type:"article"}}],["/basic/base-type/",{loader:()=>b(()=>import("./index.html-DWNyGizX.js"),[]),meta:{excerpt:`
<p>当一门语言不谈类型时，你得小心，这大概率是动态语言（别拍我，我承认是废话）。但是把类型大张旗鼓的用多个章节去讲的，Rust 是其中之一。</p>
<p>Rust 每个值都有其确切的数据类型，总的来说可以分为两类：基本类型和复合类型。 基本类型意味着它们往往是一个最小化原子类型，无法解构为其它类型（一般意义上来说），由以下组成：</p>
<ul>
<li>数值类型：有符号整数 (<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>isize</code>)、 无符号整数 (<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>, <code>usize</code>) 、浮点数 (<code>f32</code>, <code>f64</code>)、以及有理数、复数</li>
<li>字符串：字符串字面量和字符串切片 <code>&amp;str</code></li>
<li>布尔类型：<code>true</code> 和 <code>false</code></li>
<li>字符类型：表示单个 Unicode 字符，存储为 4 个字节</li>
<li>单元类型：即 <code>()</code> ，其唯一的值也是 <code>()</code></li>
</ul>`,readingTime:{minutes:1.8,words:541},title:"基本类型",type:"article"}}],["/basic/base-type/numbers.html",{loader:()=>b(()=>import("./numbers.html-C5S3rrXb.js"),[]),meta:{excerpt:`
<p>我朋友有一个领导（读者：你朋友？黑人问号）说过一句话：所有代码就是 0 和 1 ，简单的很。咱不评价这句话的正确性，但是计算机底层由 01 组成倒是真的。</p>
<p>计算机和数值关联在一起的时间，远比我们想象的要长，因此数值类型可以说是有计算机以来就有的类型，下面内容将深入讨论 Rust 的数值类型以及相关的运算符。</p>
<p>Rust 使用一个相对传统的语法来创建整数（<code>1</code>，<code>2</code>，...）和浮点数（<code>1.0</code>，<code>1.1</code>，...）。整数、浮点数的运算和你在其它语言上见过的一致，都是通过常见的运算符来完成。</p>`,readingTime:{minutes:13.43,words:4030},title:"数值类型",type:"article"}}],["/basic/base-type/statement-expression.html",{loader:()=>b(()=>import("./statement-expression.html-xNQlx_Ve.js"),[]),meta:{excerpt:`
<p>Rust 的函数体是由一系列语句组成，最后由一个表达式来返回值，例如：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_with_extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 语句</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 语句</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 表达式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.19,words:957},title:"语句和表达式",type:"article"}}],["/basic/collections/hashmap.html",{loader:()=>b(()=>import("./hashmap.html-BanfK8Rl.js"),[]),meta:{excerpt:`
<p>和动态数组一样，<code>HashMap</code> 也是 Rust 标准库中提供的集合类型，但是又与动态数组不同，<code>HashMap</code> 中存储的是一一映射的 <code>KV</code> 键值对，并提供了平均复杂度为 <code>O(1)</code> 的查询方法，当我们希望通过一个 <code>Key</code> 去查询值时，该类型非常有用，以致于 Go 语言将该类型设置成了语言级别的内置特性。</p>
<p>Rust 中哈希类型（哈希映射）为 <code>HashMap&lt;K,V&gt;</code>，在其它语言中，也有类似的数据结构，例如 <code>hash map</code>，<code>map</code>，<code>object</code>，<code>hash table</code>，<code>字典</code> 等等，引用小品演员孙涛的一句台词：大家都是本地狐狸，别搁那装貂 😃。</p>`,readingTime:{minutes:10.52,words:3157},title:"KV 存储 HashMap",type:"article"}}],["/basic/collections/intro.html",{loader:()=>b(()=>import("./intro.html-DXO0TMf7.js"),[]),meta:{excerpt:`
<p>在 Rust 标准库中有这样一批原住民，它们天生贵族，当你看到的一瞬间，就能爱上它们，上面是我瞎编的，其实主要是离了它们不行，不信等会我介绍后，你放个狠话，偏不用它们试试？</p>
<p>集合在 Rust 中是一类比较特殊的类型，因为 Rust 中大多数数据类型都只能代表一个特定的值，但是集合却可以代表一大堆值。而且与语言级别的数组、字符串类型不同，标准库里的这些家伙是分配在堆上，因此都可以进行动态的增加和减少。</p>
<p>瞧，第一个集合排着整齐的队列登场了，它里面的每个元素都雄赳赳气昂昂跟在另外一个元素后面，大小、宽度、高度竟然全部一致，真是令人惊叹。 它就是 <code>Vector</code> 类型，允许你创建一个动态数组，它里面的元素是一个紧挨着另一个排列的。</p>`,readingTime:{minutes:1.61,words:484},title:"集合类型",type:"article"}}],["/basic/collections/vector.html",{loader:()=>b(()=>import("./vector.html-CM4Af9VR.js"),[]),meta:{excerpt:`
<p>动态数组类型用 <code>Vec&lt;T&gt;</code> 表示，事实上，在之前的章节，它的身影多次出现，我们一直没有细讲，只是简单的把它当作数组处理。</p>
<p>动态数组允许你存储多个值，这些值在内存中一个紧挨着另一个排列，因此访问其中某个元素的成本非常低。动态数组只能存储相同类型的元素，如果你想存储不同类型的元素，可以使用之前讲过的枚举类型或者特征对象。</p>
<p>总之，当我们想拥有一个列表，里面都是相同类型的数据时，动态数组将会非常有用。</p>
<h2>创建动态数组</h2>
<p>在 Rust 中，有多种方式可以创建动态数组。</p>
<h3>Vec::new</h3>`,readingTime:{minutes:13.39,words:4016},title:"动态数组 Vector",type:"article"}}],["/basic/compound-type/array.html",{loader:()=>b(()=>import("./array.html-DIWobkbH.js"),[]),meta:{excerpt:`
<p>在日常开发中，使用最广的数据结构之一就是数组，在 Rust 中，最常用的数组有两种，第一种是速度很快但是长度固定的 <code>array</code>，第二种是可动态增长的但是有性能损耗的 <code>Vector</code>，在本书中，我们称 <code>array</code> 为数组，<code>Vector</code> 为动态数组。</p>
<p>不知道你们发现没，这两个数组的关系跟 <code>&amp;str</code> 与 <code>String</code> 的关系很像，前者是长度固定的字符串切片，后者是可动态增长的字符串。其实，在 Rust 中无论是 <code>String</code> 还是 <code>Vector</code>，它们都是 Rust 的高级类型：集合类型，在后面章节会有详细介绍。</p>`,readingTime:{minutes:8.4,words:2521},title:"数组",type:"article"}}],["/basic/compound-type/enum.html",{loader:()=>b(()=>import("./enum.html-CHOdMI3G.js"),[]),meta:{excerpt:`
<p>枚举(enum 或 enumeration)允许你通过列举可能的成员来定义一个<strong>枚举类型</strong>，例如扑克牌花色：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PokerSuit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Clubs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Spades</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Diamonds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Hearts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.99,words:2997},title:"枚举",type:"article"}}],["/basic/compound-type/intro.html",{loader:()=>b(()=>import("./intro.html-BP1GeI_K.js"),[]),meta:{excerpt:`
<p>行百里者半九十，欢迎大家来到这里，虽然还不到中点，但是已经不远了。如果说之前学的基础数据类型是原子，那么本章将讲的数据类型可以认为是分子。</p>
<p>本章的重点在复合类型上，顾名思义，复合类型是由其它类型组合而成的，最典型的就是结构体 <code>struct</code> 和枚举 <code>enum</code>。例如平面上的一个点 <code>point(x, y)</code>，它由两个数值类型的值 <code>x</code> 和 <code>y</code> 组合而来。我们无法单独去维护这两个数值，因为单独一个 <code>x</code> 或者 <code>y</code> 是含义不完整的，无法标识平面上的一个点，应该把它们看作一个整体去理解和处理。</p>`,readingTime:{minutes:2.46,words:737},title:"复合类型",type:"article"}}],["/basic/compound-type/string-slice.html",{loader:()=>b(()=>import("./string-slice.html-DxE_kL30.js"),[]),meta:{excerpt:`
<p>在其他语言中，字符串往往是送分题，因为实在是太简单了，例如 <code>"hello, world"</code> 就是字符串章节的几乎全部内容了，但是如果你带着同样的想法来学 Rust，我保证，绝对会栽跟头，<strong>因此这一章大家一定要重视，仔细阅读，这里有很多其它 Rust 书籍中没有的内容</strong>。</p>
<p>首先来看段很简单的代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> my_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Pascal"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  greet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">my_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> greet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello, {}!"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:20.25,words:6076},title:"字符串",type:"article"}}],["/basic/compound-type/struct.html",{loader:()=>b(()=>import("./struct.html-BjEmvM3Y.js"),[]),meta:{excerpt:`
<p>上一节中提到需要一个更高级的数据结构来帮助我们更好的抽象问题，结构体 <code>struct</code> 恰恰就是这样的复合数据结构，它是由其它数据类型组合而来。 其它语言也有类似的数据结构，不过可能有不同的名称，例如 <code>object</code>、 <code>record</code> 等。</p>
<p>结构体跟之前讲过的<a href="https://course.rs/basic/compound-type/tuple.html" target="_blank" rel="noopener noreferrer">元组</a>有些相像：都是由多种类型组合而成。但是与元组不同的是，结构体可以为内部的每个字段起一个富有含义的名称。因此结构体更加灵活更加强大，你无需依赖这些字段的顺序来访问和解析它们。</p>`,readingTime:{minutes:11.06,words:3318},title:"结构体",type:"article"}}],["/basic/compound-type/tuple.html",{loader:()=>b(()=>import("./tuple.html-3V-gvyVB.js"),[]),meta:{excerpt:`
<p>元组是由多种类型组合到一起形成的，因此它是复合类型，元组的长度是固定的，元组中元素的顺序也是固定的。</p>
<p>可以通过以下语法创建一个元组：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.2,words:661},title:"元组",type:"article"}}],["/basic/crate-module/crate.html",{loader:()=>b(()=>import("./crate.html-D66uX2Jq.js"),[]),meta:{excerpt:`
<p>当读者按照章节顺序读到本章时，意味着你已经几乎具备了参与真实项目开发的能力。但是真实项目远比我们之前的 <code>cargo new</code> 的默认目录结构要复杂，好在，Rust 为我们提供了强大的包管理工具：</p>
<ul>
<li><strong>项目(Package)</strong>：可以用来构建、测试和分享包</li>
<li><strong>工作空间(WorkSpace)</strong>：对于大型项目，可以进一步将多个包联合在一起，组织成工作空间</li>
<li><strong>包(Crate)</strong>：一个由多个模块组成的树形结构，可以作为三方库进行分发，也可以生成可执行文件进行运行</li>
<li><strong>模块(Module)</strong>：可以一个文件多个模块，也可以一个文件一个模块，模块可以被认为是真实项目中的代码组织单元</li>
</ul>`,readingTime:{minutes:4.72,words:1417},title:"包和 Package",type:"article"}}],["/basic/crate-module/intro.html",{loader:()=>b(()=>import("./intro.html-POzz4Ca-.js"),[]),meta:{excerpt:`
<p>当工程规模变大时，把代码写到一个甚至几个文件中，都是不太聪明的做法，可能存在以下问题：</p>
<ol>
<li>单个文件过大，导致打开、翻页速度大幅变慢</li>
<li>查询和定位效率大幅降低，类比下，你会把所有知识内容放在一个几十万字的文档中吗？</li>
<li>只有一个代码层次：函数，难以维护和协作，想象一下你的操作系统只有一个根目录，剩下的都是单层子目录会如何：<code>disaster</code></li>
<li>容易滋生 Bug</li>
</ol>
<p>同时，将大的代码文件拆分成包和模块，还允许我们实现代码抽象和复用：将你的代码封装好后提供给用户，那么用户只需要调用公共接口即可，无需知道内部该如何实现。</p>`,readingTime:{minutes:1.27,words:382},title:"包和模块",type:"article"}}],["/basic/crate-module/module.html",{loader:()=>b(()=>import("./module.html-BGqv6IwS.js"),[]),meta:{excerpt:`
<p>在本章节，我们将深入讲讲 Rust 的代码构成单元：模块。使用模块可以将包中的代码按照功能性进行重组，最终实现更好的可读性及易用性。同时，我们还能非常灵活地去控制代码的可见性，进一步强化 Rust 的安全性。</p>
<h2>创建嵌套模块</h2>
<p>小旅馆，sorry，是小餐馆，相信大家都挺熟悉的，学校外的估计也没少去，那么咱就用小餐馆为例，来看看 Rust 的模块该如何使用。</p>
<p>使用 <code>cargo new --lib restaurant</code> 创建一个小餐馆，注意，这里创建的是一个库类型的 <code>Package</code>，然后将以下代码放入 <code>src/lib.rs</code> 中：</p>`,readingTime:{minutes:12.17,words:3651},title:"模块 Module",type:"article"}}],["/basic/crate-module/use.html",{loader:()=>b(()=>import("./use.html-Wry1eGCW.js"),[]),meta:{excerpt:`
<p>如果代码中，通篇都是 <code>crate::front_of_house::hosting::add_to_waitlist</code> 这样的函数调用形式，我不知道有谁会喜欢，也许靠代码行数赚工资的人会很喜欢，但是强迫症肯定受不了，悲伤的是程序员大多都有强迫症。。。</p>
<p>因此我们需要一个办法来简化这种使用方式，在 Rust 中，可以使用 <code>use</code> 关键字把路径提前引入到当前作用域中，随后的调用就可以省略该路径，极大地简化了代码。</p>
<h2>基本引入方式</h2>
<p>在 Rust 中，引入模块中的项有两种方式：<a href="https://course.rs/basic/crate-module/module.html#%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E6%A8%A1%E5%9D%97" target="_blank" rel="noopener noreferrer">绝对路径和相对路径</a>，这两者在前面章节都有讲过，就不再赘述，先来看看使用绝对路径的引入方式。</p>`,readingTime:{minutes:11.62,words:3485},title:"使用 use 及受限可见性",type:"article"}}],["/basic/match-pattern/all-patterns.html",{loader:()=>b(()=>import("./all-patterns.html-Bp42isbi.js"),[]),meta:{excerpt:`
<p>在本书中我们已领略过许多不同类型模式的例子，本节的目标就是把这些模式语法都罗列出来，方便大家检索查阅（模式匹配在我们的开发中会经常用到）。</p>
<h3>匹配字面值</h3>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"two"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"three"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"anything"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:17.76,words:5327},title:"全模式列表",type:"article"}}],["/basic/match-pattern/intro.html",{loader:()=>b(()=>import("./intro.html-BolIyB7h.js"),[]),meta:{excerpt:`
<p>模式匹配，这个词，对于非函数语言编程来说，真的还蛮少听到，因为它经常出现在函数式编程里，用于为复杂的类型系统提供一个轻松的解构能力。</p>
<p>曾记否？在枚举和流程控制那章，我们遗留了两个问题，都是关于 <code>match</code> 的，第一个是如何对 <code>Option</code> 枚举进行进一步处理，另外一个是如何用 <code>match</code> 来替代 <code>else if</code> 这种丑陋的多重分支使用方式。那么让我们先一起来揭开 <code>match</code> 的神秘面纱。</p>
`,readingTime:{minutes:.51,words:153},title:"模式匹配",type:"article"}}],["/basic/match-pattern/match-if-let.html",{loader:()=>b(()=>import("./match-if-let.html-DYfI8UF5.js"),[]),meta:{excerpt:`
<p>在 Rust 中，模式匹配最常用的就是 <code>match</code> 和 <code>if let</code>，本章节将对两者及相关的概念进行详尽介绍。</p>
<p>先来看一个关于 <code>match</code> 的简单例子：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    East</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    West</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    North</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    South</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dire</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">South</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">East</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"East"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">North</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">South</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"South or North"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"West"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.61,words:2582},title:"match 和 if let",type:"article"}}],["/basic/match-pattern/option.html",{loader:()=>b(()=>import("./option.html-BiuP6u2_.js"),[]),meta:{excerpt:`
<p>在枚举那章，提到过 <code>Option</code> 枚举，它用来解决 Rust 中变量是否有值的问题，定义如下：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.18,words:655},title:"解构 Option",type:"article"}}],["/basic/match-pattern/pattern-match.html",{loader:()=>b(()=>import("./pattern-match.html-DX4vcIo-.js"),[]),meta:{excerpt:`
<h2>模式</h2>
<p>模式是 Rust 中的特殊语法，它用来匹配类型中的结构和数据，它往往和 <code>match</code> 表达式联用，以实现强大的模式匹配能力。模式一般由以下内容组合而成：</p>
<ul>
<li>字面值</li>
<li>解构的数组、枚举、结构体或者元组</li>
<li>变量</li>
<li>通配符</li>
<li>占位符</li>
</ul>
<h3>所有可能用到模式的地方</h3>
<h4>match 分支</h4>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> VALUE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PATTERN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">EXPRESSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PATTERN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">EXPRESSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PATTERN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">EXPRESSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.13,words:1238},title:"模式适用场景",type:"article"}}],["/basic/ownership/borrowing.html",{loader:()=>b(()=>import("./borrowing.html-Drousbbj.js"),[]),meta:{excerpt:`
<p>上节中提到，如果仅仅支持通过转移所有权的方式获取一个值，那会让程序变得复杂。 Rust 能否像其它编程语言一样，使用某个变量的指针或者引用呢？答案是可以。</p>
<p>Rust 通过 <code>借用(Borrowing)</code> 这个概念来达成上述的目的，<strong>获取变量的引用，称之为借用(borrowing)</strong>。正如现实生活中，如果一个人拥有某样东西，你可以从他那里借来，当使用完毕后，也必须要物归原主。</p>
<h2>引用与解引用</h2>
<p>常规引用是一个指针类型，指向了对象存储的内存地址。在下面代码中，我们创建一个 <code>i32</code> 值的引用 <code>y</code>，然后使用解引用运算符来解出 <code>y</code> 所使用的值:</p>`,readingTime:{minutes:9.78,words:2933},title:"引用与借用",type:"article"}}],["/basic/ownership/",{loader:()=>b(()=>import("./index.html-BpcrTDTf.js"),[]),meta:{excerpt:`
<p>Rust 之所以能成为万众瞩目的语言，就是因为其内存安全性。在以往，内存安全几乎都是通过 GC 的方式实现，但是 GC 会引来性能、内存占用以及 Stop the world 等问题，在高性能场景和系统编程上是不可接受的，因此 Rust 采用了与 ( 不 ) 众 ( 咋 ) 不 ( 好 ) 同 ( 学 )的方式：<strong>所有权系统</strong>。</p>
<p>理解<strong>所有权</strong>和<strong>借用</strong>，对于 Rust 学习是至关重要的，因此我们把本章提到了非常靠前的位置，So，在座的各位，有一个算一个，准备好了嘛？</p>
<p>从现在开始，鉴于大家已经掌握了非常基本的语法，有些时候，在示例代码中，将省略 <code>fn main() {}</code> 的模版代码，只要将相应的示例放在 <code>fn main() {}</code> 中，即可运行。</p>`,readingTime:{minutes:.73,words:220},title:"所有权和借用",type:"article"}}],["/basic/ownership/ownership.html",{loader:()=>b(()=>import("./ownership.html-Bjd-BJc9.js"),[]),meta:{excerpt:`
<p>所有的程序都必须和计算机内存打交道，如何从内存中申请空间来存放程序的运行内容，如何在不需要的时候释放这些空间，成了重中之重，也是所有编程语言设计的难点之一。在计算机语言不断演变过程中，出现了三种流派：</p>
<ul>
<li><strong>垃圾回收机制(GC)</strong>，在程序运行时不断寻找不再使用的内存，典型代表：Java、Go</li>
<li><strong>手动管理内存的分配和释放</strong>, 在程序中，通过函数调用的方式来申请和释放内存，典型代表：C++</li>
<li><strong>通过所有权来管理内存</strong>，编译器在编译时会根据一系列规则进行检查</li>
</ul>`,readingTime:{minutes:17.57,words:5272},title:"所有权",type:"article"}}],["/basic/result-error/intro.html",{loader:()=>b(()=>import("./intro.html-3dgGZFx5.js"),[]),meta:{excerpt:`
<p>飞鸽传书、八百里加急，自古以来，掌权者最需要的就是及时获得对某个事物的信息反馈，在此过程中，也定义了相应的应急处理措施。</p>
<p>社会演变至今，这种思想依然没变，甚至来到计算中的微观世界，也是如此。及时、准确的获知系统在发生什么，是程序设计的重中之重。因此能够准确的分辨函数返回值是正确的还是错误的、以及在发生错误时该怎么快速处理，成了程序设计语言的必备功能。</p>
<p>Go 语言为人诟病的其中一点就是 <strong><em>if err != nil {}</em></strong> 的大量使用，缺乏一些程序设计的美感，不过我倒是觉得这种简单的方式也有其好处，就是阅读代码时的流畅感很强，你不需要过多的思考各种语法是什么意思。与 Go 语言不同，Rust 博采众家之长，实现了颇具自身色彩的返回值和错误处理体系，本章我们就高屋建瓴地来学习，更加深入的讲解见<a href="https://course.rs/advance/errors.html" target="_blank" rel="noopener noreferrer">错误处理</a>。</p>`,readingTime:{minutes:2.05,words:614},title:"返回值和错误处理",type:"article"}}],["/basic/result-error/panic.html",{loader:()=>b(()=>import("./panic.html-lBh78-C-.js"),[]),meta:{excerpt:`
<p>在正式开始之前，先来思考一个问题：假设我们想要从文件读取数据，如果失败，你有没有好的办法通知调用者为何失败？如果成功，你有没有好的办法把读取的结果返还给调用者？</p>
<h2>panic! 与不可恢复错误</h2>
<p>上面的问题在真实场景会经常遇到，其实处理起来挺复杂的，让我们先做一个假设：文件读取操作发生在系统启动阶段。那么可以轻易得出一个结论，一旦文件读取失败，那么系统启动也将失败，这意味着该失败是不可恢复的错误，无论是因为文件不存在还是操作系统硬盘的问题，这些只是错误的原因不同，但是归根到底都是不可恢复的错误（梳理清楚当前场景的错误类型非常重要）。</p>
<p>对于这些严重到影响程序运行的错误，触发 <code>panic</code> 是很好的解决方式。在 Rust 中触发 <code>panic</code> 有两种方式：被动触发和主动调用，下面依次来看看。</p>`,readingTime:{minutes:11.74,words:3521},title:"panic 深入剖析",type:"article"}}],["/basic/result-error/result.html",{loader:()=>b(()=>import("./result.html-DMYy5mUT.js"),[]),meta:{excerpt:`
<p>还记得上一节中，提到的关于文件读取的思考题吧？当时我们解决了读取文件时遇到不可恢复错误该怎么处理的问题，现在来看看，读取过程中，正常返回和遇到可以恢复的错误时该如何处理。</p>
<p>假设，我们有一台消息服务器，每个用户都通过 websocket 连接到该服务器来接收和发送消息，该过程就涉及到 socket 文件的读写，那么此时，如果一个用户的读写发生了错误，显然不能直接 <code>panic</code>，否则服务器会直接崩溃，所有用户都会断开连接，因此我们需要一种更温和的错误处理方式：<code>Result&lt;T, E&gt;</code>。</p>
<p>之前章节有提到过，<code>Result&lt;T, E&gt;</code> 是一个枚举类型，定义如下：</p>`,readingTime:{minutes:13.41,words:4022},title:"可恢复的错误 Result",type:"article"}}],["/basic/trait/advance-trait.html",{loader:()=>b(()=>import("./advance-trait.html-C9TZvsYo.js"),[]),meta:{excerpt:`
<p>特征之于 Rust 更甚于接口之于其他语言，因此特征在 Rust 中很重要也相对较为复杂，我们决定把特征分为两篇进行介绍，<a href="https://course.rs/basic/trait/trait.html" target="_blank" rel="noopener noreferrer">第一篇</a>在之前已经讲过，现在就是第二篇：关于特征的进阶篇，会讲述一些不常用到但是你该了解的特性。</p>
<h2>关联类型</h2>
<p>在方法一章中，我们讲到了<a href="https://course.rs/basic/method#%E5%85%B3%E8%81%94%E5%87%BD%E6%95%B0" target="_blank" rel="noopener noreferrer">关联函数</a>，但是实际上关联类型和关联函数并没有任何交集，虽然它们的名字有一半的交集。</p>`,readingTime:{minutes:13.17,words:3950},title:"深入了解特征",type:"article"}}],["/basic/trait/generic.html",{loader:()=>b(()=>import("./generic.html-C8Wd9MOu.js"),[]),meta:{excerpt:`
<p>Go 语言在 2022 年，就要正式引入泛型，被视为在 1.0 版本后，语言特性发展迈出的一大步，为什么泛型这么重要？到底什么是泛型？Rust 的泛型有几种？<br>
本章将一一为你讲解。</p>
<p>我们在编程中，经常有这样的需求：用同一功能的函数处理不同类型的数据，例如两个数的加法，无论是整数还是浮点数，甚至是自定义类型，都能进行支持。在不支持泛型的编程语言中，通常需要为每一种类型编写一个函数：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"add i8: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"add i32: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"add f64: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:16.87,words:5060},title:"泛型 Generics",type:"article"}}],["/basic/trait/intro.html",{loader:()=>b(()=>import("./intro.html-5QZrfaY6.js"),[]),meta:{excerpt:`
<p>泛型和特征是 Rust 中最最重要的抽象类型，也是你在学习 Rust 路上的拦路虎，但是挑战往往与乐趣并存，一旦学会，在后面学习 Rust 的路上，你将一往无前。</p>
`,readingTime:{minutes:.22,words:65},title:"泛型和特征",type:"article"}}],["/basic/trait/trait-object.html",{loader:()=>b(()=>import("./trait-object.html-B-NH7ToJ.js"),[]),meta:{excerpt:`
<p>在上一节中有一段代码无法通过编译：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> returns_summarizable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Summary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Weibo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:13.36,words:4008},title:"特征对象",type:"article"}}],["/basic/trait/trait.html",{loader:()=>b(()=>import("./trait.html-B9peEgsq.js"),[]),meta:{excerpt:`
<p>如果我们想定义一个文件系统，那么把该系统跟底层存储解耦是很重要的。文件操作主要包含四个：<code>open</code> 、<code>write</code>、<code>read</code>、<code>close</code>，这些操作可以发生在硬盘，可以发生在内存，还可以发生在网络 IO 甚至（...我实在编不下去了，大家来帮帮我）。总之如果你要为每一种情况都单独实现一套代码，那这种实现将过于繁杂，而且也没那个必要。</p>
<p>要解决上述问题，需要把这些行为抽象出来，就要使用 Rust 中的特征 <code>trait</code> 概念。可能你是第一次听说这个名词，但是不要怕，如果学过其他语言，那么大概率你听说过接口，没错，特征跟接口很类似。</p>`,readingTime:{minutes:17.01,words:5104},title:"特征 Trait",type:"article"}}],["/cargo/guide/build-cache.html",{loader:()=>b(()=>import("./build-cache.html-CFXB0XYx.js"),[]),meta:{excerpt:`
<p><code>cargo build</code> 的结果会被放入项目根目录下的 <code>target</code> 文件夹中，当然，这个位置可以三种方式更改：设置 <code>CARGO_TARGET_DIR</code> <a href="https://doc.rust-lang.org/stable/cargo/reference/environment-variables.html" target="_blank" rel="noopener noreferrer">环境变量</a>、<a href="https://course.rs/cargo/reference/configuration.html#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A6%82%E8%A7%88" target="_blank" rel="noopener noreferrer"><code>build.target-dir</code></a> 配置项以及 <code>--target-dir</code> 命令行参数。</p>`,readingTime:{minutes:3.27,words:982},title:"构建( Build )缓存",type:"article"}}],["/cargo/guide/cargo-cache.html",{loader:()=>b(()=>import("./cargo-cache.html-Cm1Y6nES.js"),[]),meta:{excerpt:`
<p>Cargo 使用了缓存的方式提升构建效率，当构建时，Cargo 会将已下载的依赖包放在 <code>CARGO_HOME</code> 目录下，下面一起来看看。</p>
<h2>Cargo Home</h2>
<p>默认情况下，Cargo Home 所在的目录是 <code>$HOME/.cargo/</code>，例如在 <code>macos</code> ，对应的目录是:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $HOME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/.cargo/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/Users/sunfei/.cargo/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.45,words:1035},title:"Cargo 缓存",type:"article"}}],["/cargo/guide/cargo-toml-lock.html",{loader:()=>b(()=>import("./cargo-toml-lock.html-DZnFY7g-.js"),[]),meta:{excerpt:`
<p><code>Cargo.toml</code> 和 <code>Cargo.lock</code> 是 <code>Cargo</code> 的两个元配置文件，但是它们拥有不同的目的:</p>
<ul>
<li>前者从用户的角度出发来描述项目信息和依赖管理，因此它是由用户来编写</li>
<li>后者包含了依赖的精确描述信息，它是由 <code>Cargo</code> 自行维护，因此不要去手动修改</li>
</ul>
<p>它们的关系跟 <code>package.json</code> 和 <code>package-lock.json</code> 非常相似，从 JavaScript 过来的同学应该会比较好理解。</p>`,readingTime:{minutes:4.24,words:1271},title:"Cargo.toml vs Cargo.lock",type:"article"}}],["/cargo/guide/dependencies.html",{loader:()=>b(()=>import("./dependencies.html-Bnf9CNPD.js"),[]),meta:{excerpt:`
<p><a href="https://crates.io" target="_blank" rel="noopener noreferrer"><code>crates.io</code></a> 是 Rust 社区维护的中心化注册服务，用户可以在其中寻找和下载所需的包。对于 <code>cargo</code> 来说，默认就是从这里下载依赖。</p>
<p>下面我们来添加一个 <code>time</code> 依赖包，若你的 <code>Cargo.toml</code> 文件中没有 <code>[dependencies]</code> 部分，就手动添加一个，并添加目标包名和版本号:</p>`,readingTime:{minutes:1.49,words:447},title:"添加依赖",type:"article"}}],["/cargo/guide/download-package.html",{loader:()=>b(()=>import("./download-package.html-BQcmGD0Z.js"),[]),meta:{excerpt:`
<p>如果看中 <code>GitHub</code> 上的某个开源 Rust 项目，那下载并构建它将是非常简单的。</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/rust-lang/regex.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> regex</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.51,words:153},title:"下载并构建 Package",type:"article"}}],["/cargo/guide/intro.html",{loader:()=>b(()=>import("./intro.html-C5o7XNyS.js"),[]),meta:{excerpt:`
<p>在本章中，我们将学习 <code>Cargo</code> 的详细使用方式，例如 <code>Package</code> 的创建与管理、依赖拉取、<code>Package</code> 结构描述等。</p>
`,readingTime:{minutes:.13,words:40},title:"使用手册",type:"article"}}],["/cargo/guide/package-layout.html",{loader:()=>b(()=>import("./package-layout.html-DJK9ojM0.js"),[]),meta:{excerpt:`
<p>一个典型的 <code>Package</code> 目录结构如下：</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cargo.lock</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> src/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> lib.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bin/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> named-executable.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> another-executable.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-executable/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">           ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">           └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> some_module.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> benches/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> large-input.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-bench/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bench_module.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> examples/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> simple.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-example/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ex_module.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tests/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> some-integration-tests.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-test/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test_module.rs</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.73,words:220},title:"标准的 Package 目录结构",type:"article"}}],["/cargo/guide/tests-ci.html",{loader:()=>b(()=>import("./tests-ci.html-CzbA2V7V.js"),[]),meta:{excerpt:`
<p>Cargo 可以通过 <code>cargo test</code> 命令运行项目中的测试文件：它会在 <code>src/</code> 底下的文件寻找单元测试，也会在 <code>tests/</code> 目录下寻找集成测试。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">$ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cargo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> test</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">   Compiling</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> regex</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">https</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//github.com/rust-lang/regex.git#9f9f693)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">   Compiling</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> hello_world</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///path/to/package/hello_world)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">     Running</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">hello_world</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">9c2b65bbb79eabce</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">running</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">. </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> passed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ignored</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> measured</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> filtered</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> out</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.25,words:676},title:"测试和 CI",type:"article"}}],["/cargo/guide/why-exist.html",{loader:()=>b(()=>import("./why-exist.html-oax495do.js"),[]),meta:{excerpt:`
<p>根据之前学习的知识，Rust 有两种类型的包: 库包和二进制包，前者是我们经常使用的依赖包，用于被其它包所引入，而后者是一个应用服务，可以编译成二进制可执行文件进行运行。</p>
<p>包是通过 Rust 编译器 <code>rustc</code> 进行编译的:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">$ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rustc</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">$ ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">hello</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">world!</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.79,words:538},title:"为何会有 Cargo",type:"article"}}],["/cargo/reference/cargo-target.html",{loader:()=>b(()=>import("./cargo-target.html-CMEtBhEO.js"),[]),meta:{excerpt:`
<p><strong>Cargo 项目中包含有一些对象，它们包含的源代码文件可以被编译成相应的包，这些对象被称之为 Cargo Target</strong>。例如<a href="https://course.rs/cargo/guide/package-layout.html" target="_blank" rel="noopener noreferrer">之前章节</a>提到的库对象 <code>Library</code> 、二进制对象 <code>Binary</code>、示例对象 <code>Examples</code>、测试对象 <code>Tests</code> 和 基准性能对象 <code>Benches</code> 都是 Cargo Target。</p>`,readingTime:{minutes:6.44,words:1932},title:"Cargo Target",type:"article"}}],["/cargo/reference/configuration.html",{loader:()=>b(()=>import("./configuration.html-qQEZC6Ni.js"),[]),meta:{excerpt:`
<p>Cargo 相关的配置有两种，第一种是对自身进行配置，第二种是对指定的项目进行配置，关于后者请查看 <a href="https://course.rs/cargo/reference/manifest.html" target="_blank" rel="noopener noreferrer">Cargo.toml 清单</a>。对于普通用户而言第二种才是我们最常使用的。</p>
<p>本文讲述的是如何对 Cargo 相关的工具进行配置，该配置中的部分内容可能会覆盖掉 <code>Cargo.toml</code> 中对应的部分，例如关于 <code>profile</code> 的内容。</p>`,readingTime:{minutes:4.87,words:1460},title:"通过 config.toml 对 Cargo 进行配置",type:"article"}}],["/cargo/reference/deps-overriding.html",{loader:()=>b(()=>import("./deps-overriding.html-DzvWPfOF.js"),[]),meta:{excerpt:`
<p>依赖覆盖对于本地开发来说，是很常见的，大部分原因都是我们希望在某个包发布到 <code>crates.io</code> 之前使用它，例如：</p>
<ul>
<li>你正在同时开发一个包和一个项目，而后者依赖于前者，你希望能在该项目中对正在开发的包进行测试</li>
<li>你引入的一个依赖包在 <code>master</code> 分支发布了新的代码，恰好修复了某个 bug，因此你希望能单独对该分支进行下测试</li>
<li>你即将发布一个包的新版本，为了确保新版本正常工作，你需要对其进行集成测试</li>
<li>你为项目的某个依赖包提了一个 PR 并解决了一个重要 bug，在等待合并到 <code>master</code> 分支，但是时间不等人，因此你决定先使用自己修改的版本，等未来合并后，再继续使用官方版本</li>
</ul>`,readingTime:{minutes:7.35,words:2206},title:"依赖覆盖",type:"article"}}],["/cargo/reference/env.html",{loader:()=>b(()=>import("./env.html-CCARqbBE.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"环境变量",type:"article"}}],["/cargo/reference/intro.html",{loader:()=>b(()=>import("./intro.html-B66bRZQu.js"),[]),meta:{excerpt:`
<p>进阶指南包含了 Cargo 的参考级内容，大家可以先看一遍了解下大概有什么，然后在后面需要时，再回来查询如何使用。</p>
`,readingTime:{minutes:.17,words:51},title:"进阶指南",type:"article"}}],["/cargo/reference/manifest.html",{loader:()=>b(()=>import("./manifest.html-_VyM3zcA.js"),[]),meta:{excerpt:`
<p><code>Cargo.toml</code> 又被称为清单( <code>manifest</code> )，文件格式是 <code>TOML</code>，每一个清单文件都由以下部分组成：</p>
<ul>
<li><a href="/rust-course/cargo/reference/unstable.html" target="_blank"><code>cargo-features</code></a> — 只能用于 <code>nightly</code>版本的 <code>feature</code></li>
<li><a href="#package"><code>[package]</code></a> — 定义项目( <code>package</code> )的元信息
<ul>
<li><a href="#name"><code>name</code></a> — 名称</li>
<li><a href="#version"><code>version</code></a> — 版本</li>
<li><a href="#authors"><code>authors</code></a> — 开发作者</li>
<li><a href="#edition"><code>edition</code></a> — Rust edition.</li>
<li><a href="#rust-version"><code>rust-version</code></a> — 支持的最小化 Rust 版本</li>
<li><a href="#description"><code>description</code></a> — 描述</li>
<li><a href="#documentation"><code>documentation</code></a> — 文档 URL</li>
<li><a href="#readme"><code>readme</code></a> — README 文件的路径</li>
<li><a href="#homepage"><code>homepage</code></a> - 主页 URL</li>
<li><a href="#repository"><code>repository</code></a> — 源代码仓库的 URL</li>
<li><a href="#license%E5%92%8Clicense-file"><code>license</code></a> — 开源协议 License.</li>
<li><a href="#license%E5%92%8Clicense-file"><code>license-file</code></a> — License 文件的路径.</li>
<li><a href="#keywords"><code>keywords</code></a> — 项目的关键词</li>
<li><a href="#categories"><code>categories</code></a> — 项目分类</li>
<li><a href="#workspace"><code>workspace</code></a> — 工作空间 workspace 的路径</li>
<li><a href="#build"><code>build</code></a> — 构建脚本的路径</li>
<li><a href="#links"><code>links</code></a> — 本地链接库的名称</li>
<li><a href="#exclude%E5%92%8Cinclude"><code>exclude</code></a> — 发布时排除的文件</li>
<li><a href="#exclude%E5%92%8Cinclude"><code>include</code></a> — 发布时包含的文件</li>
<li><a href="#the-publish-field"><code>publish</code></a> — 用于阻止项目的发布</li>
<li><a href="#metadata"><code>metadata</code></a> — 额外的配置信息，用于提供给外部工具</li>
<li><a href="#default-run"><code>default-run</code></a> — [<code>cargo run</code>] 所使用的默认可执行文件( binary )</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autobins</code></a> — 禁止可执行文件的自动发现</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autoexamples</code></a> — 禁止示例文件的自动发现</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autotests</code></a> — 禁止测试文件的自动发现</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autobenches</code></a> — 禁止 bench 文件的自动发现</li>
<li><a href="/rust-course/cargo/reference/resolver.html#resolver-versions" target="_blank"><code>resolver</code></a> — 设置依赖解析器( dependency resolver)</li>
</ul>
</li>
<li>Cargo Target 列表: (查看 <a href="https://course.rs/cargo/reference/cargo-target.html#Target%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">Target 配置</a> 获取详细设置)
<ul>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%BA%93%E5%AF%B9%E8%B1%A1library" target="_blank" rel="noopener noreferrer"><code>[lib]</code></a> — Library target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AF%B9%E8%B1%A1binaries" target="_blank" rel="noopener noreferrer"><code>[[bin]]</code></a> — Binary target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E7%A4%BA%E4%BE%8B%E5%AF%B9%E8%B1%A1examples" target="_blank" rel="noopener noreferrer"><code>[[example]]</code></a> — Example target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E6%B5%8B%E8%AF%95%E5%AF%B9%E8%B1%A1tests" target="_blank" rel="noopener noreferrer"><code>[[test]]</code></a> — Test target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%9F%BA%E5%87%86%E6%80%A7%E8%83%BD%E5%AF%B9%E8%B1%A1benches" target="_blank" rel="noopener noreferrer"><code>[[bench]]</code></a> — Benchmark target 设置.</li>
</ul>
</li>
<li>Dependency tables:
<ul>
<li><a href="https://course.rs/cargo/reference/specify-deps.html" target="_blank" rel="noopener noreferrer"><code>[dependencies]</code></a> — 项目依赖包</li>
<li><a href="https://course.rs/cargo/reference/specify-deps.html#dev-dependencies" target="_blank" rel="noopener noreferrer"><code>[dev-dependencies]</code></a> — 用于 examples、tests 和 benchmarks 的依赖包</li>
<li><a href="https://course.rs/cargo/reference/specify-deps.html#build-dependencies" target="_blank" rel="noopener noreferrer"><code>[build-dependencies]</code></a> — 用于构建脚本的依赖包</li>
<li><a href="https://course.rs/cargo/reference/specify-deps.html#%E6%A0%B9%E6%8D%AE%E5%B9%B3%E5%8F%B0%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96" target="_blank" rel="noopener noreferrer"><code>[target]</code></a> — 平台特定的依赖包</li>
</ul>
</li>
<li><a href="#badges"><code>[badges]</code></a> — 用于在注册服务(例如 crates.io ) 上显示项目的一些状态信息，例如当前的维护状态：活跃中、寻找维护者、deprecated</li>
<li><a href="https://course.rs/cargo/reference/features/intro.html" target="_blank" rel="noopener noreferrer"><code>[features]</code></a> — <code>features</code> 可以用于条件编译</li>
<li><a href="https://course.rs/cargo/reference/deps-overriding.html" target="_blank" rel="noopener noreferrer"><code>[patch]</code></a> — 推荐使用的依赖覆盖方式</li>
<li><a href="https://course.rs/cargo/reference/deps-overriding.html#%E4%B8%8D%E6%8E%A8%E8%8D%90%E7%9A%84replace" target="_blank" rel="noopener noreferrer"><code>[replace]</code></a> — 不推荐使用的依赖覆盖方式 (deprecated).</li>
<li><a href="https://course.rs/cargo/reference/profiles.html" target="_blank" rel="noopener noreferrer"><code>[profile]</code></a> — 编译器设置和优化</li>
<li><a href="https://course.rs/cargo/reference/workspaces.html" target="_blank" rel="noopener noreferrer"><code>[workspace]</code></a> — 工作空间的定义</li>
</ul>`,readingTime:{minutes:12.54,words:3761},title:"Cargo.toml 格式讲解",type:"article"}}],["/cargo/reference/package-id.html",{loader:()=>b(()=>import("./package-id.html-CYNpzzOw.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"Package ID 说明",type:"article"}}],["/cargo/reference/profile.html",{loader:()=>b(()=>import("./profile.html-DCENUw1H.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"发布配置 profile todo",type:"article"}}],["/cargo/reference/profiles.html",{loader:()=>b(()=>import("./profiles.html-uHCD2tfu.js"),[]),meta:{excerpt:`
<p>细心的同学可能发现了迄今为止我们已经为 Cargo 引入了不少新的名词，而且这些名词有一个共同的特点，不容易或不适合翻译成中文，因为难以表达的很准确，例如 Cargo Target, Feature 等，这不现在又多了一个 Profile。</p>
<h2>默认的 profile</h2>
<p>Profile 其实是一种发布配置，例如它默认包含四种: <code>dev</code>、 <code>release</code>、 <code>test</code> 和 <code>bench</code>，正常情况下，我们无需去指定，<code>Cargo</code> 会根据我们使用的命令来自动进行选择</p>`,readingTime:{minutes:9.66,words:2897},title:"发布配置 Profile",type:"article"}}],["/cargo/reference/publishing-on-crates.io.html",{loader:()=>b(()=>import("./publishing-on-crates.io.html-BglwWP8Y.js"),[]),meta:{excerpt:`
<p>如果你想要把自己的开源项目分享给全世界，那最好的办法自然是 GitHub。但如果是 Rust 的库，那除了发布到 GitHub 外，我们还可以将其发布到 <a href="https://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a> 上，然后其它用户就可以很简单的对其进行引用。</p>
<blockquote>
<p>注意：发布包到 <code>crates.io</code> 后，特定的版本无法被覆盖，要发布就必须使用新的版本号，代码也无法被删除!</p>
</blockquote>
<h2>首次发布之前</h2>`,readingTime:{minutes:5.22,words:1566},title:"发布到 crates.io",type:"article"}}],["/cargo/reference/specify-deps.html",{loader:()=>b(()=>import("./specify-deps.html-BBPEdRyb.js"),[]),meta:{excerpt:`
<p>我们的项目可以引用在 <code>crates.io</code> 或 <code>GitHub</code> 上的依赖包，也可以引用存放在本地文件系统中的依赖包。</p>
<p>大家可能会想，直接从前两个引用即可，为何还提供了本地方式？可以设想下，如果你要有一个正处于开发中的包，然后需要在本地的另一个项目中引用测试，那是将该包先传到网上，然后再引用简单，还是直接从本地路径的方式引用简单呢？答案显然不言而喻。</p>
<p>本章节，我们一起来看看有哪些方式可以指定和引用三方依赖包。</p>
<h2>从 <code>crates.io</code> 引入依赖包</h2>
<p>默认设置下，<code>Cargo</code> 就从 <a href="https://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a> 上下载依赖包，只需要一个包名和版本号即可：</p>`,readingTime:{minutes:10.26,words:3077},title:"指定依赖项",type:"article"}}],["/cargo/reference/workspaces.html",{loader:()=>b(()=>import("./workspaces.html-Cdw7tcJt.js"),[]),meta:{excerpt:`
<p>一个工作空间是由多个 <code>package</code> 组成的集合，它们共享同一个 <code>Cargo.lock</code> 文件、输出目录和一些设置(例如 profiles : 编译器设置和优化)。组成工作空间的 <code>packages</code> 被称之为工作空间的成员。</p>
<h2>工作空间的两种类型</h2>
<p>工作空间有两种类型：<code>root package</code> 和虚拟清单( virtual manifest )。</p>
<h4>根 package</h4>
<p><strong>若一个 <code>package</code> 的 <code>Cargo.toml</code> 包含了<code>[package]</code> 的同时又包含了 <code>[workspace]</code> 部分，则该 <code>package</code> 被称为工作空间的根 <code>package</code></strong>。</p>`,readingTime:{minutes:4.49,words:1346},title:"工作空间 Workspace",type:"article"}}],["/compiler/fight-with-compiler/intro.html",{loader:()=>b(()=>import("./intro.html-D-i8n19s.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"对抗编译检查",type:"article"}}],["/compiler/fight-with-compiler/phantom-data.html",{loader:()=>b(()=>import("./phantom-data.html-CZtAVUwr.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"幽灵数据",type:"article"}}],["/compiler/fight-with-compiler/unconstrained.html",{loader:()=>b(()=>import("./unconstrained.html-DwZQZPpD.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"类型未限制",type:"article"}}],["/compiler/pitfalls/arithmetic-overflow.html",{loader:()=>b(()=>import("./arithmetic-overflow.html-CLHeH7h4.js"),[]),meta:{excerpt:`
<p>在 Rust 中，溢出后的数值被截断是很正常的:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u16</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 65535</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.25,words:375},title:"算术溢出导致的 panic",type:"article"}}],["/compiler/pitfalls/closure-with-lifetime.html",{loader:()=>b(()=>import("./closure-with-lifetime.html-C6Sme6mV.js"),[]),meta:{excerpt:`
<p>Rust 一道独特的靓丽风景就是生命周期，也是反复折磨新手的最大黑手，就连老手，可能一不注意就会遇到一些生命周期上的陷阱，例如闭包上使用引用。</p>
<h2>一段简单的代码</h2>
<p>先来看一段简单的代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fn_elision</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> closure_slision</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> };</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.54,words:1062},title:"闭包上奇怪的生命周期",type:"article"}}],["/compiler/pitfalls/",{loader:()=>b(()=>import("./index.html-B5I0qlFb.js"),[]),meta:{excerpt:`
<p>本章收录一些 Rust 常见的陷阱，一不小心就会坑你的那种(当然，这不是 Rust 语言的问题，而是一些边边角角的知识点)。</p>
`,readingTime:{minutes:.17,words:51},title:"Rust 陷阱系列",type:"article"}}],["/compiler/pitfalls/iterator-everywhere.html",{loader:()=>b(()=>import("./iterator-everywhere.html-Cs6-gR7K.js"),[]),meta:{excerpt:`
<p>Rust 的迭代器无处不在，直至你在它上面栽了跟头，经过深入调查才发现：哦，原来是迭代器的锅。不信的话，看看这个报错你能想到是迭代器的问题吗: <code>borrow of moved value: words</code>.</p>
<h2>报错的代码</h2>
<p>以下的代码非常简单，用来统计文本中字词的数量，并打印出来：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "hello world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> words</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> words</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">words</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.33,words:1300},title:"无处不在的迭代器",type:"article"}}],["/compiler/pitfalls/lazy-iterators.html",{loader:()=>b(()=>import("./lazy-iterators.html-CAKly2tW.js"),[]),meta:{excerpt:`
<p>迭代器，在 Rust 中是一个非常耀眼的存在，它光鲜亮丽，它让 Rust 大道至简，它备受用户的喜爱。可是，它也是懒惰的，不信？一起来看看。</p>
<h2>for 循环 vs 迭代器</h2>
<p>在迭代器学习中，我们提到过迭代器在功能上可以替代循环，性能上略微优于循环(避免边界检查),安全性上优于循环，因此在 Rust 中，迭代器往往都是更优的选择，前提是迭代器得发挥作用。</p>
<p>在下面代码中，分别是使用<code>for</code>循环和迭代器去生成一个<code>HashMap</code>。</p>
<p>使用循环:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accounts</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> resolvers</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accounts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        resolvers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.id).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">or_insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resolvers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.27,words:982},title:"不太勤快的迭代器",type:"article"}}],["/compiler/pitfalls/main-with-channel-blocked.html",{loader:()=>b(()=>import("./main-with-channel-blocked.html-i7zWcr4S.js"),[]),meta:{excerpt:`
<p>本篇陷阱较短，主要解决新手在多线程间传递消息时可能会遇到的一个问题：主线程会一直阻塞，无法结束。</p>
<p>Rust 标准库中提供了一个消息通道，非常好用，也相当简单明了，但是但是在使用起来还是可能存在坑：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::mpsc;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::thread;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">recv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> mpsc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> num_threads</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">num_threads</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> thread_send</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">move</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            thread_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"thread {:?} finished"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> recv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Got: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"finished iterating"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.09,words:626},title:"线程间传递消息导致主线程无法结束",type:"article"}}],["/compiler/pitfalls/multiple-mutable-references.html",{loader:()=>b(()=>import("./multiple-mutable-references.html-Bc9z3iMk.js"),[]),meta:{excerpt:`
<p>相信大家都听说过<strong>重构一时爽，一直重构一直爽</strong>的说法，私以为这种说法是很有道理的，不然技术团队绩效从何而来？但是，在 Rust 中，重构可能就不是那么爽快的事了，不信？咱们来看看。</p>
<h2>欣赏下报错</h2>
<p>很多时候，错误也是一种美，但是当这种错误每天都能见到时(呕):</p>
<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">error[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e0499</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">]: cannot borrow \` </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">*</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> self\` as mutable more than once at </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> time;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:7.71,words:2314},title:"代码重构导致的可变借用错误",type:"article"}}],["/compiler/pitfalls/stack-overflow.html",{loader:()=>b(()=>import("./stack-overflow.html-Cug_GPa-.js"),[]),meta:{excerpt:`
<p>在 Rust 中，我们不太容易遇到栈溢出，因为默认栈还挺大的，而且大的数据往往存在堆上(动态增长)，但是一旦遇到该如何处理？先来看段代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#![feature(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">extern</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> crate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tests {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bencher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[bench]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> it_works</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Bencher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stack</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [[[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">512</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">512</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.88,words:565},title:"线程类型导致的栈溢出",type:"article"}}],["/compiler/pitfalls/the-disabled-mutability.html",{loader:()=>b(()=>import("./the-disabled-mutability.html-C4J_XKoE.js"),[]),meta:{excerpt:`
<p>众所周知 Rust 是一门安全性非常强的系统级语言，其中，显式的设置变量可变性，是安全性的重要组成部分。按理来说，变量可变不可变在设置时就已经决定了，但是你遇到过可变变量在某些情况失效，变成不可变吗？</p>
<p>先来看段正确的代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">A</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // b不可变</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">B</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 但是b中的字段a可以变</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.a.f1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"b is {:?} "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.13,words:938},title:"失效的可变性",type:"article"}}],["/compiler/pitfalls/use-vec-in-for.html",{loader:()=>b(()=>import("./use-vec-in-for.html-DyhOlMgH.js"),[]),meta:{excerpt:`
<p>一般来说，<code>for</code>循环能做到的，<code>while</code>也可以，反之亦然，但是有一种情况，还真不行，先来看代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.04,words:312},title:"for 循环中使用外部数组",type:"article"}}],["/compiler/pitfalls/utf8-performance.html",{loader:()=>b(()=>import("./utf8-performance.html-L2RhlPOI.js"),[]),meta:{excerpt:`
<p>大家应该都知道, 虽然 Rust 的字符串 <code>&amp;str</code>、<code>String</code> 在底层是通过 <code>Vec&lt;u8&gt;</code> 实现的：字符串数据以字节数组的形式存在堆上，但在使用时，它们都是 UTF-8 编码的，例如:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "中国人"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">chars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 依次输出：中 、 国 、 人</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 1. "中" 在 UTF-8 中占用 3 个字节 2. Rust 不支持字符串索引，因此只能通过切片的方式获取 "中"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"中"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.03,words:610},title:"警惕 UTF-8 引发的性能隐患",type:"article"}}],["/compiler/pitfalls/weird-ranges.html",{loader:()=>b(()=>import("./weird-ranges.html-B6iDU07I.js"),[]),meta:{excerpt:`
<p>@todo</p>
<p>https://www.reddit.com/r/rust/comments/rrgxr0/a_critique_of_rusts_range_types/</p>
`,readingTime:{minutes:.03,words:9},title:"奇怪的序列x..y",type:"article"}}],["/libraries/command/intro.html",{loader:()=>b(()=>import("./intro.html-CvBNLIvf.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"命令行解析",type:"article"}}],["/libraries/command/structopt.html",{loader:()=>b(()=>import("./structopt.html-BHdx4F-2.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:2},title:"structopt(todo)",type:"article"}}],["/libraries/http/intro.html",{loader:()=>b(()=>import("./intro.html-kEN_myZm.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:0,words:1},title:"Http",type:"article"}}],["/libraries/http/reqwest.html",{loader:()=>b(()=>import("./reqwest.html-CmiQLNAy.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:2},title:"reqwest(todo)",type:"article"}}],["/libraries/json/intro.html",{loader:()=>b(()=>import("./intro.html-B071i5A8.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:0,words:1},title:"Json",type:"article"}}],["/libraries/json/serde.html",{loader:()=>b(()=>import("./serde.html-Ct_RU6R0.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:2},title:"serde(todo)",type:"article"}}],["/logs/observe/about-observe.html",{loader:()=>b(()=>import("./about-observe.html-DYybbK9s.js"),[]),meta:{excerpt:`
<p>在监控章节的<a href="https://course.rs/logs/observe/intro.html" target="_blank" rel="noopener noreferrer">引言</a>中，我们提到了老板、前端、后端眼中的监控是各不相同的，那么有没有办法将监控模型进行抽象、统一呢？</p>
<p>来简单分析一下：</p>
<ul>
<li>业务指标实时展示，这是一个指标型的数据( metric )</li>
<li>手机 APP 上传的数据，包含了日志( log )和指标类型( metric )，如果考虑到 APP 作为一次 HTTP 请求的发起端，那还涉及到请求链路的跟踪( trace)</li>
<li>后端链路跟踪是 trace，请求错误率、QPS 是 metric，异常日志是 log</li>
</ul>`,readingTime:{minutes:6.16,words:1847},title:"可观测性",type:"article"}}],["/logs/observe/intro.html",{loader:()=>b(()=>import("./intro.html-bhF2xho8.js"),[]),meta:{excerpt:`
<p>监控是一个很大的领域，大到老板、前端开发、后端开发理解的监控可能都不相同。</p>
<ul>
<li>老板眼中的监控：业务大数据实时展示</li>
<li>前端眼中的监控：手机 APP 收集上来的异常、崩溃、用户操作日志等</li>
<li>后端眼中的监控：请求链路跟踪、一段时间内的请求错误率、QPS 过高、异常日志等</li>
</ul>
<p>正是因为这些复杂性，导致很多同学难以准确的说出监控到底是什么。</p>
<p>下面，我们将试图解释清楚监控的概念，并引入一个全新的概念：可观测性。</p>
`,readingTime:{minutes:.56,words:168},title:"监控",type:"article"}}],["/logs/observe/trace.html",{loader:()=>b(()=>import("./trace.html-D4ieihaA.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:5},title:"分布式追踪",type:"article"}}],["/profiling/compiler/attributes.html",{loader:()=>b(()=>import("./attributes.html-DQG3OnYF.js"),[]),meta:{excerpt:`
<h2>强制内存对齐</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[repr(align(64))]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CachePadded</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">AtomicU64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.12,words:36},title:"常见属性标记",type:"article"}}],["/profiling/compiler/intro.html",{loader:()=>b(()=>import("./intro.html-DkRtSybK.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"对抗编译检查",type:"article"}}],["/profiling/compiler/llvm.html",{loader:()=>b(()=>import("./llvm.html-dGYmCajX.js"),[]),meta:{excerpt:`
<p>https://ttalk.im/2021/12/llvm-infrastructure-and-rust.html</p>
`,readingTime:{minutes:.02,words:7},title:"LLVM todo",type:"article"}}],["/profiling/compiler/phantom-data.html",{loader:()=>b(()=>import("./phantom-data.html-CaVKu6w5.js"),[]),meta:{excerpt:`
<p>在编写非安全代码时，我们常常遇见这种情况：类型或生命周期逻辑上与一个结构体关联起来了，但是却不属于结构体的任何一个成员。这种情况对于生命周期尤为常见。比如，<code>&amp;'a [T]</code>的<code>Iter</code>大概是这么定义的：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: '</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.55,words:764},title:"PhantomData（幽灵数据）",type:"article"}}],["/profiling/compiler/speed-up.html",{loader:()=>b(()=>import("./speed-up.html-DvGZO-kf.js"),[]),meta:{excerpt:`
<!-- 
https://www.reddit.com/r/rust/comments/rnkyc0/why_does_my_code_compile_faster_on_nightly/

https://www.reddit.com/r/rust/comments/rv8126/speedup_compilation_time/

https://www.reddit.com/r/rust/comments/rsfcgb/why_is_my_rust_build_so_slow/

https://www.reddit.com/r/rust/comments/sqi1ba/is_it_just_me_or_rustanalyzer_is_unreliableslow/ -->`,readingTime:{minutes:.05,words:14},title:"优化编译速度",type:"article"}}],["/profiling/memory/allocation.html",{loader:()=>b(()=>import("./allocation.html-DDHleWNP.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/s4pknf/investigating_memory_allocations_in_rust/</p>
`,readingTime:{minutes:.02,words:7},title:"内存分配(todo)",type:"article"}}],["/profiling/memory/intro.html",{loader:()=>b(()=>import("./intro.html-CdpxEjqZ.js"),[]),meta:{excerpt:`
<p>部分内容借鉴了Rust in action和Rust高级编程</p>
<p>https://www.youtube.com/watch?v=rDoqT-a6UFg</p>
`,readingTime:{minutes:.08,words:25},title:"深入内存",type:"article"}}],["/profiling/memory/layout.html",{loader:()=>b(()=>import("./layout.html-BmrUhqCT.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/rwta4h/why_arent_rust_structs_laid_out_in_memory_like_c/</p>
`,readingTime:{minutes:.02,words:7},title:"内存布局(todo)",type:"article"}}],["/profiling/memory/pointer-ref.html",{loader:()=>b(()=>import("./pointer-ref.html-DN1qgoEJ.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"指针和引用(todo)",type:"article"}}],["/profiling/memory/uninit.html",{loader:()=>b(()=>import("./uninit.html-CW-Qs-kh.js"),[]),meta:{excerpt:`
<p>https://lucumr.pocoo.org/2022/1/30/unsafe-rust/</p>
`,readingTime:{minutes:.03,words:9},title:"未初始化内存",type:"article"}}],["/profiling/memory/virtual.html",{loader:()=>b(()=>import("./virtual.html-xBIbbryR.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"虚拟内存",type:"article"}}],["/profiling/performance/allocator.html",{loader:()=>b(()=>import("./allocator.html-CUn8rC15.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/s28g4x/allocating_many_boxes_at_once/</p>
<p>https://www.reddit.com/r/rust/comments/szza43/memory_freed_but_not_immediately/</p>
`,readingTime:{minutes:.03,words:8},title:"内存allocator todo",type:"article"}}],["/profiling/performance/calculate.html",{loader:()=>b(()=>import("./calculate.html-DfGkwcTM.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/rn7ozz/find_perfect_number_comparison_go_java_rust/</p>
<div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">	"fmt"</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">	"math"</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">	"time"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	n</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 320000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	nums</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	start</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">	calPerfs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"runtime: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Since</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calPerfs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">n</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">nums</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		d</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> divs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">		if</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">			nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> divs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{} {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	r</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{})</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}{}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	mid</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Sqrt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">		if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> num</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">			r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}{}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">			r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}{}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> r</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ds</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> range</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		n</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> +=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ds</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}) []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> range</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		a</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.05,words:316},title:"计算性能优化",type:"article"}}],["/profiling/performance/clone-copy.html",{loader:()=>b(()=>import("./clone-copy.html-EuUeByal.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:3},title:"Clone和Copy",type:"article"}}],["/profiling/performance/cpu-cache.html",{loader:()=>b(()=>import("./cpu-cache.html-Bwh03Cgl.js"),[]),meta:{excerpt:`
<p>https://github.com/TC5027/blog/blob/master/false_sharing.md</p>
<h1>On a use of the "repr" attribute in Rust</h1>
<p>Consider we work with the following struct representing a counter,</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Counter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:4.22,words:1266},title:"CPU缓存性能优化",type:"article"}}],["/profiling/performance/deep-into-move.html",{loader:()=>b(()=>import("./deep-into-move.html-CSxJoWXE.js"),[]),meta:{excerpt:`
<p>深拷贝可以说是Rust性能优化的禁忌之词，但是在最不该发生深拷贝的地方却发生了, 本文带领大家来深入分析下原因。</p>
<p>在所有权章节中，我们详细介绍过<a href="https://course.rs/basic/ownership/ownership.html#%E8%BD%AC%E7%A7%BB%E6%89%80%E6%9C%89%E6%9D%83" target="_blank" rel="noopener noreferrer">所有权转移(move)</a>, 里面提到过一个重点：当类型实现<code>Copy</code>特征时，不会转移所有权，而是直接对值进行拷贝：</p>`,readingTime:{minutes:7.91,words:2372},title:"Rust所有权转移时发生了奇怪的深拷贝",type:"article"}}],["/profiling/performance/early-optimise.html",{loader:()=>b(()=>import("./early-optimise.html-BPwrmMa9.js"),[]),meta:{excerpt:`
<h2>函数调用</h2>
<p>由于Rust的编译器和LLVM很强大，因此就算你使用了多层函数调用去完成一件事(嵌套函数调用往往出于设计上的考虑)，依然不会有性能上的影响，因为最终生成的机器码会消除这些多余的函数调用。</p>
<p>总之用Rust时，你不必操心多余的函数调用，只要写合理的代码，然后Rust会帮助你运行的更快!</p>
`,readingTime:{minutes:.43,words:129},title:"糟糕的提前优化",type:"article"}}],["/profiling/performance/enum.html",{loader:()=>b(()=>import("./enum.html-DcpYdbNT.js"),[]),meta:{excerpt:`
<p>https://blog.zhuangty.com/rust-enum-layout/</p>
`,readingTime:{minutes:.03,words:10},title:"Enum内存优化 todo",type:"article"}}],["/profiling/performance/heap-stack.html",{loader:()=>b(()=>import("./heap-stack.html-z5s5wBe1.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/rkddg3/stackheap_question_regarding_performance/</p>
`,readingTime:{minutes:.02,words:5},title:"堆和栈",type:"article"}}],["/profiling/performance/intro.html",{loader:()=>b(()=>import("./intro.html-BomAeFoo.js"),[]),meta:{excerpt:`
<p>https://nnethercote.github.io/perf-book/profiling.html</p>
<h2>How do I profile a Rust web application in production?</h2>
<p>https://www.reddit.com/r/rust/comments/rupcux/how_do_i_profile_a_rust_web_application_in/</p>
<p>https://zhuanlan.zhihu.com/p/191655266</p>
<h2>内存对齐</h2>
<p>https://www.reddit.com/r/rust/comments/s793x7/force_4byte_memory_alignment/</p>`,readingTime:{minutes:.13,words:39},title:"performance",type:"article"}}],["/profiling/performance/runtime-check.html",{loader:()=>b(()=>import("./runtime-check.html-DQTcZP-J.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/rust/comments/sx8b7m/how_is_rust_able_to_elide_bounds_checks/</p>
<h2>减少集合访问的边界检查</h2>
<p>以下代码，我们实现了两种循环方式：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 第一种</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 第二种</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.77,words:231},title:"减少runtime check",type:"article"}}],["/profiling/performance/string.html",{loader:()=>b(()=>import("./string.html-CT8m71L0.js"),[]),meta:{excerpt:`<p>https://www.reddit.com/r/rust/comments/t06hk7/string_concatenations_benchmarks_updated/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"string"}}],["/profiling/performance/tools.html",{loader:()=>b(()=>import("./tools.html-DPmAz4dZ.js"),[]),meta:{excerpt:`
<p>https://era.co/blog/unbuffered-io-slows-rust-programs</p>
<h1>profiling</h1>
<p>https://www.reddit.com/r/rust/comments/rxj81f/rust_profiling/</p>
`,readingTime:{minutes:.06,words:17},title:"常用性能测试工具",type:"article"}}],["/templates/files/dir.html",{loader:()=>b(()=>import("./dir.html-BH64o0zW.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:2},title:"目录",type:"article"}}],["/templates/files/intro.html",{loader:()=>b(()=>import("./intro.html-CJFxE3-h.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:4},title:"文件操作",type:"article"}}],["/templates/http/intro.html",{loader:()=>b(()=>import("./intro.html-DwdJj-on.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.01,words:3},title:"Http请求",type:"article"}}],["/too-many-lists/advanced-lists/double-singly.html",{loader:()=>b(()=>import("./double-singly.html-BduiZ3hK.js"),[]),meta:{excerpt:`
<p>在之前的双向链表章节中，我们一度非常纠结，原因来自同样纠结成一团的所有权依赖。还有一个重要原因就是：先入为主的链表定义。</p>
<p>谁说所有的链接一定要一个方向呢？这里一起来尝试下新的东东：链表的其中一半朝左，另一半朝右。</p>
<p>新规矩( 老规矩是创建文件 )，创建一个新的模块:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// lib.rs</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> silly1;     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// NEW!</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.94,words:882},title:"双单向链表",type:"article"}}],["/too-many-lists/advanced-lists/intro.html",{loader:()=>b(()=>import("./intro.html-BYo21KkP.js"),[]),meta:{excerpt:`
<p>说句实话，我们之前实现的链表都达不到生产级可用的程度，而且也没有用到一些比较时髦的技巧。</p>
<p>本章我们一起来看一些更时髦的链表实现:</p>
<ol>
<li>双重单向链表</li>
<li>栈分配的链表</li>
<li>自引用和Arena分配器实现( 原文作者还未实现，所以... Todo )</li>
<li>GhostCell 实现( 同上 )</li>
</ol>
`,readingTime:{minutes:.37,words:112},title:"使用高级技巧实现链表",type:"article"}}],["/too-many-lists/advanced-lists/stack-allocated.html",{loader:()=>b(()=>import("./stack-allocated.html-CHmc8FxI.js"),[]),meta:{excerpt:`
<p>在之前的章节中，无一例外，我们创建的都是数据存储在堆上的链表，这种链表最常见也最实用：堆内存在动态分配的场景非常好用。</p>
<p>但是，既然是高级技巧章节，那栈链表也应该拥有一席之地。但与堆内存的简单分配相比，栈内存就没那么友好了，你们猜大名鼎鼎的 C 语言的 <code>alloca</code> 是因为什么而出名的 😃</p>
<p>限于章节篇幅，这里我们使用一个简单的栈分配方法：调用一个函数，获取一个新的、拥有更多空间的栈帧。说实话，该解决方法要多愚蠢有多愚蠢，但是它确实相当实用，甚至...有用。</p>
<p>任何时候，当我们在做一些递归的任务时，都可以将当前步骤状态的指针传递给下一个步骤。如果指针本身就是状态的一部分，那恭喜你：你在创建一个栈上分配的链表！</p>`,readingTime:{minutes:7.95,words:2385},title:"栈上的链表",type:"article"}}],["/too-many-lists/advanced-lists/unsafe-deque.html",{loader:()=>b(()=>import("./unsafe-deque.html-CPaP4oSN.js"),[]),meta:{excerpt:`
<p>打开<a href="https://rust-unofficial.github.io/too-many-lists/sixth.html" target="_blank" rel="noopener noreferrer">原文</a>，发现这一篇只有两行，我以为自己看花了眼，揉了揉眼，定睛一看，还是两行。</p>
<p>没错，貌似作者想要偷懒，而且为了掩饰，他还提供了标准库的实现:) 如果大家想要学习，看<a href="https://github.com/rust-lang/rust/blob/master/library/alloc/src/collections/linked_list.rs" target="_blank" rel="noopener noreferrer">标准库</a>吧 😄</p>`,readingTime:{minutes:.41,words:122},title:"生产级可用的双向链表",type:"article"}}],["/too-many-lists/bad-stack/basic-operations.html",{loader:()=>b(()=>import("./basic-operations.html-40LNhbLz.js"),[]),meta:{excerpt:`
<p>这个章节我们一起来为新创建的 <code>List</code> 定义一些基本操作，首先从创建链表开始。</p>
<h2>New</h2>
<p>为了将实际的代码跟类型关联在一起，我们需要使用 <code>impl</code> 语句块：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // TODO</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.6,words:1681},title:"定义基本操作",type:"article"}}],["/too-many-lists/bad-stack/final-code.html",{loader:()=>b(()=>import("./final-code.html-zZxSyazg.js"),[]),meta:{excerpt:`
<p>在之前的章节中，我们完成了 Bad 单链表栈的数据定义和基本操作，下面一起来写一些测试代码。</p>
<h2>单元测试</h2>
<blockquote>
<p>关于如何编写测试，请参见<a href="https://course.rs/test/write-tests.html" target="_blank" rel="noopener noreferrer">自动化测试章节</a></p>
</blockquote>
<p>首先，单元测试代码要放在待测试的目标代码旁边，也就是同一个文件中:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in first.rs</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> basics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.3,words:1589},title:"一些收尾工作以及最终代码",type:"article"}}],["/too-many-lists/bad-stack/intro.html",{loader:()=>b(()=>import("./intro.html-BR_yyXID.js"),[]),meta:{excerpt:`
<p>本章，让我们用一个不咋样的单向链表来实现一个栈数据结构，因为不咋样，实现起来倒是很简单。</p>
<p>首先，创建一个文件 <code>src/first.rs</code> 用于存放本章节的链表代码，虽然糟糕，也不能用完就扔，大家说是不 😛 然后在 <code>lib.rs</code> 中添加这一行代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.35,words:105},title:"糟糕的单向链表栈",type:"article"}}],["/too-many-lists/bad-stack/layout.html",{loader:()=>b(()=>import("./layout.html-5pMl3LPm.js"),[]),meta:{excerpt:`
<p>发现一件尴尬的事情，之前介绍了这么多，但是竟然没有介绍链表是什么...亡羊补牢未为晚也，链表就是一系列存储在堆上的连续数据，大家是不是发现这个定义跟动态数据 <code>Vector</code> 非常相似，那么区别在于什么呢？</p>
<p>区别就在于链表中的每一个元素都指向下一个元素，最终形成 - 顾名思义的链表: <code>A1 -&gt; A2 -&gt; A3 -&gt; Null</code>。 而数组中的元素只是连续排列，并不存在前一个元素指向后一个元素的情况，而是每个元素通过下标索引来访问。</p>
<p>既然函数式语言的程序员最常使用链表，那么我们来看看他们给出的定义长什么样:</p>`,readingTime:{minutes:7.01,words:2103},title:"基本数据布局( Layout )",type:"article"}}],["/too-many-lists/deque/final-code.html",{loader:()=>b(()=>import("./final-code.html-DtPP1jvx.js"),[]),meta:{excerpt:`
<p>这一章真不好写( 也很难翻译... )，最终我们实现了一个 100% 安全但是功能残缺的双向链表。</p>
<p>同时在实现中，还有大量 <code>Rc</code> 和 <code>RefCell</code> 引起的运行时检查，最终会影响链表的性能。整个双向链表实现史就是一部别名和所有权的奋斗史。</p>
<p>总之，不管爱与不爱，它就这样了，特别是如果我们不在意内部的细节暴露给外面用户时。</p>
<p>而从下一章开始，我们将实现一个真正能够全盘掌控的链表，当然...通过 unsafe 代码实现！</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#![allow(unused)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt;&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        match</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        match</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">try_unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_inner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">try_unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_inner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> basics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // ---- back -----</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.41,words:723},title:"最终代码",type:"article"}}],["/too-many-lists/deque/intro.html",{loader:()=>b(()=>import("./intro.html-D78h6QTO.js"),[]),meta:{excerpt:`
<p>在实现了之前的队列后，我们不禁浮想联翩，如果 <code>Rc</code> 是可变的，那是不是可以实现一个双向链表？</p>
<p>心动不如行动，先来创建新的链表文件 <code>fourth.rs</code>，并在 <code>src/lib.rs</code> 中添加以下内容：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> second;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> third;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fourth;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.55,words:165},title:"不太优秀的双端队列",type:"article"}}],["/too-many-lists/deque/iterator.html",{loader:()=>b(()=>import("./iterator.html-J5oEZjs4.js"),[]),meta:{excerpt:`
<p>坏男孩最令人头疼，而链表实现中，迭代器就是这样的坏男孩，所以我们放在最后来处理。</p>
<h2>IntoIter</h2>
<p>由于是转移所有权，因此 <code>IntoIter</code> 一直都是最好实现的:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.28,words:1583},title:"迭代器",type:"article"}}],["/too-many-lists/deque/layout.html",{loader:()=>b(()=>import("./layout.html-BPzEMkJy.js"),[]),meta:{excerpt:`
<p>聪明的读者应该已经想到了：让 <code>Rc</code> 可变，就需要使用 <code>RefCell</code> 的配合。关于 <code>RefCell</code> 的一切，在之前的章节都有介绍，还不熟悉的同学请移步<a href="https://course.rs/advance/smart-pointer/cell-refcell.html" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<p>好了，绝世神兵在手，接下来...我们将见识一个绝世啰嗦的数据结构...如果你来自 GC 语言，那很可能就没有见识过这种阵仗。</p>`,readingTime:{minutes:5.85,words:1756},title:"数据布局和构建",type:"article"}}],["/too-many-lists/deque/peek.html",{loader:()=>b(()=>import("./peek.html-DiLYzX1K.js"),[]),meta:{excerpt:`
<p><code>push</code> 和 <code>pop</code> 的防不胜防的编译报错着实让人出了些冷汗，下面来看看轻松的，至少在之前的链表中是很轻松的 😃</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.09,words:926},title:"Peek",type:"article"}}],["/too-many-lists/deque/symmetric.html",{loader:()=>b(()=>import("./symmetric.html-C_nucib1.js"),[]),meta:{excerpt:`
<p>之前我们仅实现了头部的 <code>push</code>、<code>pop</code> ，现在来补全一下，大自然的对称之美咱的双向链表也不能少了。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;-&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;-&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.79,words:538},title:"基本操作的对称镜像",type:"article"}}],["/too-many-lists/ok-stack/intro.html",{loader:()=>b(()=>import("./intro.html-DCC_R4yD.js"),[]),meta:{excerpt:`
<p>在之前我们写了一个最小可用的单向链表，下面一起来完善下，首先创建一个新的文件 <code>src/second.rs</code>，然后在 <code>lib.rs</code> 中引入：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> second;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.25,words:76},title:"还可以的单向链表",type:"article"}}],["/too-many-lists/ok-stack/iter.html",{loader:()=>b(()=>import("./iter.html-DnzOC-Bn.js"),[]),meta:{excerpt:`<h2>迭代器</h2>
<p>集合类型可以通过 <code>Iterator</code> 特征进行迭代，该特征看起来比 <code>Drop</code> 要复杂点：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> trait</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.06,words:2418},title:"",type:"article",s:"iter"}}],["/too-many-lists/ok-stack/itermut.html",{loader:()=>b(()=>import("./itermut.html-B7K4pL-c.js"),[]),meta:{excerpt:`
<p>上一章节中我们讲到了要为 <code>List</code> 实现三种类型的迭代器并实现了其中两种: <code>IntoIter</code> 和 <code>Iter</code>。下面再来看看最后一种 <code>IterMut</code>。</p>
<p>再来回顾下 <code>Iter</code> 的实现：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* stuff */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4,words:1200},title:"IterMut以及完整代码",type:"article"}}],["/too-many-lists/ok-stack/peek.html",{loader:()=>b(()=>import("./peek.html-Dv8xq2K9.js"),[]),meta:{excerpt:`
<p>在之前章节中，我们定义了 <code>push</code>、<code>pop</code> 等基础操作，下面一起添加几个进阶操作，让我们的链表有用起来。</p>
<p>首先实现的就是 <code>peek</code> 函数，它会返回链表的表头元素的引用:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.36,words:709},title:"Peek 函数",type:"article"}}],["/too-many-lists/ok-stack/type-optimizing.html",{loader:()=>b(()=>import("./type-optimizing.html-1SBNluv7.js"),[]),meta:{excerpt:`
<p>首先，我们需要优化下类型的定义，可能一部分同学已经觉得之前的类型定义相当不错了，但是如果大家仔细观察下 <code>Link</code>:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    More</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.1,words:930},title:"优化类型定义",type:"article"}}],["/too-many-lists/persistent-stack/drop-arc.html",{loader:()=>b(()=>import("./drop-arc.html-dps5lLzf.js"),[]),meta:{excerpt:`
<h2>Drop</h2>
<p>与之前链表存在的问题相似，新的链表也有递归的问题。下面是之前的解决方法:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cur_link</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cur_link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            cur_link</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.29,words:987},title:"Drop、Arc 及完整代码",type:"article"}}],["/too-many-lists/persistent-stack/intro.html",{loader:()=>b(()=>import("./intro.html-kogiWoRz.js"),[]),meta:{excerpt:`
<p>迄今为止，我们已经掌握了如何实现一个可变的单向链表。但是之前的链表都是单所有权的，在实际使用中，共享所有权才是更实用的方式，下面一起来看看该如何实现一个不可变的、共享所有权的持久化链表( persistent )。</p>
<p>开始之前，还需要创建一个新文件 <code>third.rs</code> ，并在 <code>lib.rs</code> 中添加以下内容:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> second;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> third;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.56,words:169},title:"持久化单向链表",type:"article"}}],["/too-many-lists/persistent-stack/layout.html",{loader:()=>b(()=>import("./layout.html-BWD8hhdn.js"),[]),meta:{excerpt:`
<p>对于新的链表来说，最重要的就是我们可以自由地操控列表的尾部( tail )。</p>
<h2>数据布局</h2>
<p>例如以下是一个不太常见的持久化列表布局:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">D</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">D</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list2,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">D</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.55,words:1364},title:"数据布局和基本操作",type:"article"}}],["/too-many-lists/production-unsafe-deque/basics.html",{loader:()=>b(()=>import("./basics.html-j5ZzJq-B.js"),[]),meta:{excerpt:`
<p>好了，这就是本书最烂的部分，也是我花了 7 年时间才写完这一章的原因！是时候把我们已经做过 5 次的枯燥乏味的东西再写一遍了，但因为我们必须使用 <code>Option&lt;NonNull&lt;Node&lt;T&gt;&gt;</code> 把每件事都做两遍，所以显得格外冗长！</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.47,words:740},title:"Basics",type:"article"}}],["/too-many-lists/production-unsafe-deque/boring-combinatorics.html",{loader:()=>b(()=>import("./boring-combinatorics.html-DdyjkIjE.js"),[]),meta:{excerpt:`
<p>好了，回到我们的常规链接列表！</p>
<p>首先，让我们来解决 <code>Drop</code> 的问题：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Pop until we have to stop</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.11,words:1834},title:"Boring Combinatorics",type:"article"}}],["/too-many-lists/production-unsafe-deque/drop-and-panic-safety.html",{loader:()=>b(()=>import("./drop-and-panic-safety.html-CdQUSPDk.js"),[]),meta:{excerpt:`
<p>嘿，你注意到这些注释了吗：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Note that we don't need to mess around with \`take\` anymore</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// because everything is Copy and there are no dtors that will</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// run if we mess up... right? :) Riiiight? :)))</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.73,words:1420},title:"Drop and Panic Safety",type:"article"}}],["/too-many-lists/production-unsafe-deque/filling-in-random-bits.html",{loader:()=>b(()=>import("./filling-in-random-bits.html-BlAD5ztM.js"),[]),meta:{excerpt:`
<p>嘿，你不是说要做成精品吗？</p>
<p>为了成为一个 "好 "系列，这里还有一些乱七八糟的东西：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Oh look it's drop again</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.05,words:1815},title:"Filling In Random Bits",type:"article"}}],["/too-many-lists/production-unsafe-deque/final-code.html",{loader:()=>b(()=>import("./final-code.html-fCz5DRNy.js"),[]),meta:{excerpt:`
<p>我真不敢相信，我居然让你坐在那里，听我从头开始重新实现 std</p>
<p>我做到了，书写完了，我终于可以休息了。</p>
<p>好了，下面是我们完整重写的 1200 行代码的全部内容。这应该与 <a href="https://github.com/contain-rs/linked-list/commit/5b69cc29454595172a5167a09277660342b78092" target="_blank" rel="noopener noreferrer">this commit</a> 的文本相同。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ordering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">FromIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">marker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // SAFETY: it's a linked-list, what do you want?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new_unchecked</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Put the new front before the old one</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // If there's no front, then we're the empty list and need</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // to set the back too.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // These things always happen!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // SAFETY: it's a linked-list, what do you want?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new_unchecked</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Put the new back before the old one</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // If there's no back, then we're the empty list and need</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // to set the front too.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // These things always happen!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Only have to do stuff if there is a front node to pop.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Bring the Box back to life so we can move out its value and</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Drop it (Box continues to magically understand this for us).</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Make the next node into the new front.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // Cleanup its reference to the removed node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // If the front is now null, then this list is now empty!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                result</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Box gets implicitly freed here, knows there is no T.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Only have to do stuff if there is a back node to pop.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Bring the Box front to life so we can move out its value and</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Drop it (Box continues to magically understand this for us).</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Make the next node into the new back.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // Cleanup its reference to the removed node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // If the back is now null, then this list is now empty!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                result</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Box gets implicitly freed here, knows there is no T.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Oh look it's drop again</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Pop until we have to stop</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Default</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            new_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        new_list</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">FromIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> from_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Formatter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">entries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">finish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialEq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialEq</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Eq</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialOrd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialOrd</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> partial_cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ordering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">partial_cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ord</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ordering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hash</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">H</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> H</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // While self.front == self.back is a tempting condition to check here,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // it won't do the right for yielding the last element! That sort of</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // thing only works for arrays because of "one-past-the-end" pointers.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We could unwrap front, but this is safer and easier</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">ExactSizeIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // While self.front == self.back is a tempting condition to check here,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // it won't do the right for yielding the last element! That sort of</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // thing only works for arrays because of "one-past-the-end" pointers.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We could unwrap front, but this is safer and easier</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">ExactSizeIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">ExactSizeIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on a real element, go to its next (back)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // We just walked to the ghost, no more index</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, and there is a real front, so move to it!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, but that's the only element... do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on a real element, go to its previous (front)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // We just walked to the ghost, no more index</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, and there is a real back, so move to it!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, but that's the only element... do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Normal case, try to follow the cur node's back pointer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Ghost case, try to use the list's front pointer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Yield the element if the next node exists</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Normal case, try to follow the cur node's front pointer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Ghost case, try to use the list's back pointer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Yield the element if the prev node exists</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> split_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;-&gt; D &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                               ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                              cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // And we want to produce this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; C &lt;-&gt; D &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                   ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                  cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //    return.front -&gt; A &lt;-&gt; B &lt;- return.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We are pointing at a real element, so the list is non-empty.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Current state</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What self will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What the output will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Break the links between cur and prev</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Produce the result:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">                LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, just replace our list with an empty one.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // No other state needs to be changed.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> split_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;-&gt; D &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                         ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                        cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // And we want to produce this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; A &lt;-&gt; B &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                         ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                        cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //    return.front -&gt; C &lt;-&gt; D &lt;- return.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We are pointing at a real element, so the list is non-empty.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Current state</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What self will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What the output will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Break the links between cur and next</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Produce the result:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">                LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, just replace our list with an empty one.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // No other state needs to be changed.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // input.front -&gt; 1 &lt;-&gt; 2 &lt;- input.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                     ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                    cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Becoming this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; 1 &lt;-&gt; 2 &lt;-&gt; B &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                                 ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                                cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We can either \`take\` the input's pointers or \`mem::forget\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // it. Using \`take\` is more responsible in case we ever do custom</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // allocators or something that also needs to be cleaned up!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Input is empty, do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Both lists are non-empty</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // General Case, no boundaries, just internal fixups</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // No prev, we're appending to the front</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Index moves forward by input length</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on the ghost but non-empty, append to the back</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're empty, become the input, remain on the ghost</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">swap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Not necessary but Polite To Do</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Input dropped here</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // input.front -&gt; 1 &lt;-&gt; 2 &lt;- input.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                     ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                    cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Becoming this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; B &lt;-&gt; 1 &lt;-&gt; 2 &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                     ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                    cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We can either \`take\` the input's pointers or \`mem::forget\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // it. Using \`take\` is more responsible in case we ever do custom</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // allocators or something that also needs to be cleaned up!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Input is empty, do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Both lists are non-empty</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // General Case, no boundaries, just internal fixups</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // No next, we're appending to the back</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Index doesn't change</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on the ghost but non-empty, append to the front</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're empty, become the input, remain on the ghost</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">swap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Not necessary but Polite To Do</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Input dropped here</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[allow(dead_code)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> assert_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> linked_list_covariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">static</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_covariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, '</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">static</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter_covariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">static</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// \`\`\`compile_fail,E0308</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// use linked_list::IterMut;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    ///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// fn iter_mut_covariant&lt;'i, 'a, T&gt;(x: IterMut&lt;'i, &amp;'static T&gt;) -&gt; IterMut&lt;'i, &amp;'a T&gt; { x }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut_invariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;[</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break an empty list</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break a one item list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Mess around</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_rev_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_mut_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_mut_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord_nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nan</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"just"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"more"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">copied</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">r#"["just", "one", "test", "more"]"#</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_hashmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check that HashMap works with this as a key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_move_peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_mut_insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* remove_current not impl'd</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        let mut cursor = m.cursor_mut();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), None);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(7));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(9));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(10));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(m.iter().cloned().collect::&lt;Vec&lt;_&gt;&gt;(), &amp;[1, 8, 2, 3, 4, 5, 6]);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> from_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> from_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> re_reved</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> from_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">from_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">re_reved</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:13.01,words:3904},title:"Final Code",type:"article"}}],["/too-many-lists/production-unsafe-deque/implementing-cursors.html",{loader:()=>b(()=>import("./implementing-cursors.html-Dnz1J5Na.js"),[]),meta:{excerpt:`
<p>好了，我们现在讨论 CursorMut。就像我最初的设计一样，它有一个包含 None 的 "幽灵 "元素，用来指示列表的开始/结束，你可以 "跨过它"，绕到列表的另一边。要实现它，我们需要</p>
<ul>
<li>指向当前节点的指针</li>
<li>指向列表的指针</li>
<li>当前索引</li>
</ul>
<p>等等，当我们指向 "幽灵 "时，索引是多少？</p>
<p>好吧，游标 (cursors)上的索引返回一个 <code>Option&lt;usize&gt;</code>，这很合理。Std 的实现做了一堆垃圾来避免将其存储为一个 Option，但是...... 我们是一个链接列表，这很好。此外，std 还有 cursor_front/cursor_back 功能，它可以在前/后元素上启动光标，感觉很直观，但当列表为空时，又要做一些奇怪的事情。</p>`,readingTime:{minutes:12.25,words:3674},title:"Implementing Cursors",type:"article"}}],["/too-many-lists/production-unsafe-deque/intro.html",{loader:()=>b(()=>import("./intro.html-CgNLbmfz.js"),[]),meta:{excerpt:`
<p>我们终于成功了。我最大的克星：<strong><a href="https://github.com/rust-lang/rust/blob/master/library/alloc/src/collections/linked_list.rs" target="_blank" rel="noopener noreferrer">std</a>，双向链接的 Deque</strong>。</p>
<p>我尝试过但未能击败的那个。</p>
<p>来吧，我将向你展示你需要知道的一切，帮助我一劳永逸地摧毁它--实现一个 <strong>unsafe</strong> 的生产质量双向链接 Deque 所需要知道的一切。</p>`,readingTime:{minutes:.51,words:154},title:"A Production-Quality Unsafe Doubly-Linked Deque",type:"article"}}],["/too-many-lists/production-unsafe-deque/layout.html",{loader:()=>b(()=>import("./layout.html-B9JdOupx.js"),[]),meta:{excerpt:`
<p>首先，让我们来研究一下敌人的结构。双向链接列表在概念上很简单，但它就是这样欺骗和操纵你的。这是我们反复研究过的同一种链接列表，但链接是双向的。双倍链接，双倍邪恶。</p>
<p>相比于单向（删掉了 Some/None 这类东西以保持简洁）：</p>
<div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>... -&gt; (A, ptr) -&gt; (B, ptr) -&gt; ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:3.76,words:1128},title:"数据布局",type:"article"}}],["/too-many-lists/production-unsafe-deque/send-sync-and-compile-tests.html",{loader:()=>b(()=>import("./send-sync-and-compile-tests.html-C88-q2kZ.js"),[]),meta:{excerpt:`
<p>好吧，其实我们还有一对特征需要考虑，但它们很特别。我们必须对付 Rust 的神圣罗马帝国： unsafe 的 Opt-in Built-out 特征（OIBITs）： Send 和 Sync，它们实际上是（opt-out）和（built-out）（3 个中有 1 个已经很不错了！）。</p>
<p>与 Copy 一样，这些特征完全没有相关代码，只是标记您的类型具有特定属性。Send 表示你的类型可以安全地发送到另一个线程。Sync 表示你的类型可以在线程间安全共享（&amp;Self: Send）。</p>
<p>关于 LinkedList <em>covariant(协变的)</em> 论点在这里同样适用：一般来说，不使用花哨的内部可变技巧的普通集合可以安全地进行 Send 和 Sync。</p>`,readingTime:{minutes:5.42,words:1625},title:"Send, Sync, and Compile Tests",type:"article"}}],["/too-many-lists/production-unsafe-deque/testing-cursors.html",{loader:()=>b(()=>import("./testing-cursors.html-CkTIklmk.js"),[]),meta:{excerpt:`
<p>是时候找出我在上一节中犯了多少令人尴尬的错误了！</p>
<p>哦，天哪，我们的 API 既不像标准版，也不像旧版。好吧，那我打算从这两个地方拼凑一些东西吧。是的，让我们 "借用 " 标准版中的这些测试：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_move_peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_mut_insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* remove_current not impl'd</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        let mut cursor = m.cursor_mut();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), None);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(7));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(9));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(10));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(m.iter().cloned().collect::&lt;Vec&lt;_&gt;&gt;(), &amp;[1, 8, 2, 3, 4, 5, 6]);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">       let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // would be good to do this!</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.39,words:1917},title:"Testing Cursors",type:"article"}}],["/too-many-lists/production-unsafe-deque/testing.html",{loader:()=>b(()=>import("./testing.html-BqzomvXF.js"),[]),meta:{excerpt:`
<p>好吧，我推迟了一段时间测试，因为我们都知道，我们现在是 Rust 的主人，不会再犯错了！另外，这是对一个旧 crate 的重写，所以我已经有了所有的测试。你已经看过很多测试了。它们就在这里：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;[</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break an empty list</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break a one item list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Mess around</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_rev_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_mut_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_mut_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord_nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nan</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"just"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"more"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">copied</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">r#"["just", "one", "test", "more"]"#</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_hashmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check that HashMap works with this as a key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.77,words:1132},title:"Testing",type:"article"}}],["/too-many-lists/production-unsafe-deque/variance-and-phantomData.html",{loader:()=>b(()=>import("./variance-and-phantomData.html-ChiXJaSc.js"),[]),meta:{excerpt:`
<p>如果现在不做，等以后再修，会很麻烦，所以我们现在要做的是硬核布局。</p>
<p>建造 Rust collections 时，有这五个可怕的难题：</p>
<ol>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/subtyping.html" target="_blank" rel="noopener noreferrer">Variance</a></li>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/dropck.html" target="_blank" rel="noopener noreferrer">Drop Check</a></li>
<li><a href="https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html" target="_blank" rel="noopener noreferrer">NonNull Optimizations</a></li>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/vec/vec-alloc.html" target="_blank" rel="noopener noreferrer">The isize::MAX Allocation Rule</a></li>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/vec/vec-zsts.html" target="_blank" rel="noopener noreferrer">Zero-Sized Types</a></li>
</ol>`,readingTime:{minutes:5.74,words:1722},title:"Variance and PhantomData",type:"article"}}],["/too-many-lists/unsafe-queue/basics.html",{loader:()=>b(()=>import("./basics.html-BTESi91e.js"),[]),meta:{excerpt:`
<blockquote>
<p>本章节的代码中有一个隐藏的 bug，因为它藏身于 unsafe 中，因此不会导致报错，我们会在后续章节解决这个问题，所以，请不要在生产环境使用此处的代码</p>
</blockquote>
<p>在开始之前，大家需要先了解 unsafe 的<a href="https://course.rs/advance/unsafe/intro.html" target="_blank" rel="noopener noreferrer">相关知识</a>。那么，言归正传，该如何构建一个链表？在之前我们是这么做的：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.18,words:1255},title:"基本操作",type:"article"}}],["/too-many-lists/unsafe-queue/extra-junk.html",{loader:()=>b(()=>import("./extra-junk.html-B-qnDxw3.js"),[]),meta:{excerpt:`
<p>在搞定 <code>push</code>、<code>pop</code> 后，剩下的基本跟栈链表的实现没有啥区别。只有会改变链表长度的操作才会使用<ruby>尾<rt>tail</rt></ruby>指针。</p>
<p>当然，现在一切都是裸指针，因此我们要重写代码来使用它们，在此过程中必须要确保没有遗漏地修改所有地方。</p>
<p>首先，先从栈链表实现中拷贝以下代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.3,words:1890},title:"额外的操作",type:"article"}}],["/too-many-lists/unsafe-queue/final-code.html",{loader:()=>b(()=>import("./final-code.html-BuKe2kHY.js"),[]),meta:{excerpt:`
<p>得益于不安全代码的引入，新的实现可以获得线性的性能提升，同时我们还设法复用了栈链表的很多代码。</p>
<p>当然，这个过程中，我们还引入了新的概念，例如借用栈，相信直到现在有些同学还晕乎乎的。不管如何，我们不用再去写一大堆嵌套来嵌套去的 <code>Rc</code> 和 <code>RefCell</code>。</p>
<p>下面来看看咱们这个不安全链表的全貌吧。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::ptr;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail).next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> basics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check the exhaustion case fixed the pointer right</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> miri_food</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> elem</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Drop it on the ground and let the dtor exercise itself</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.36,words:707},title:"最终代码",type:"article"}}],["/too-many-lists/unsafe-queue/intro.html",{loader:()=>b(()=>import("./intro.html-tsZm6R4o.js"),[]),meta:{excerpt:`
<p>在之前章节中，基于内部可变性和引用计数的双向链表有些失控了，原因在于 <code>Rc</code> 和 <code>RefCell</code> 对于简单的任务而言，它们是非常称职的，但是对于复杂的任务，它们可能会变得相当笨拙，特别是当我们试图隐藏一些细节时。</p>
<p>总之，一定有更好的办法！下面来看看该如何使用裸指针和 unsafe 代码实现一个单向链表。</p>
<blockquote>
<p>大家可能想等着看我犯错误，unsafe 嘛，不犯错误不可能的，但是呢，俺偏就不犯错误：）</p>
</blockquote>
<p>国际惯例，添加第五个链表所需的文件 <code>fifth.rs</code>:</p>`,readingTime:{minutes:.81,words:244},title:"不错的unsafe队列",type:"article"}}],["/too-many-lists/unsafe-queue/layout.html",{loader:()=>b(()=>import("./layout.html-Bwv_JU_e.js"),[]),meta:{excerpt:`
<p>那么单向链表的队列长什么样？对于栈来说，我们向一端推入( push )元素，然后再从同一端弹出( pop )。对于栈和队列而言，唯一的区别在于队列从末端弹出。</p>
<p>栈的实现类似于下图：</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Some(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)] -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">B,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Some(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)] -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">X,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">B,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pop:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Some(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)] -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">B,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.47,words:1642},title:"数据布局",type:"article"}}],["/too-many-lists/unsafe-queue/layout2.html",{loader:()=>b(()=>import("./layout2.html-C7lFGPSV.js"),[]),meta:{excerpt:`
<blockquote>
<p>TL;DR 在之前部分中，将安全的指针 <code>&amp;</code> 、<code>&amp;mut</code> 和 <code>Box</code> 跟不安全的裸指针 <code>*mut</code> 和 <code>*const</code> 混用是 UB 的根源之一，原因是安全指针会引入额外的约束，但是裸指针并不会遵守这些约束。</p>
</blockquote>
<p>一个好消息，一个坏消息。坏消息是我们又要开始写链表了，悲剧 = , = 好消息呢是之前我们已经讨论过该如何设计了，之前做的工作基本都是正确的，除了混用安全指针和不安全指针的部分。</p>`,readingTime:{minutes:5,words:1499},title:"数据布局2: 再裸一些吧",type:"article"}}],["/too-many-lists/unsafe-queue/miri.html",{loader:()=>b(()=>import("./miri.html-DF-ixL1d.js"),[]),meta:{excerpt:`
<p>看到这里，大家是不是暗中松了口气？unsafe 不过如此嘛，不知道为何其它人都谈之色变。</p>
<p>怎么说呢？你以为的编译器已经不是以前的编译器了，它不报错不代表没有错误。包括测试用例也是，正常地运行不能意味着代码没有任何错误。</p>
<p>在周星驰电影功夫中，还有一个奇怪大叔 10 元一本主动上门卖如来神掌，那么有没有 10 元一本的 Rust 秘笈呢？( 喂，Rust语言圣经都免费让你读了，有了摩托车，还要什么拖拉机... 哈哈，开个玩笑 )</p>
<p>有的，奇怪大叔正在赶来，他告诉我们先来安装一个命令:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +nightly-2022-01-21</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> miri</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> syncing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> channel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> updates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'nightly-2022-01-21-x86_64-pc-windows-msvc'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> latest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 2022-01-21,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rust</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 1.60.0-nightly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (777bb86bc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">2022-01-20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'cargo'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'clippy'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-docs'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-std'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustc'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustfmt'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'cargo'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'clippy'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-docs'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-std'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustc'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustfmt'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'miri'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'miri'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.29,words:1286},title:"Miri",type:"article"}}],["/too-many-lists/unsafe-queue/stacked-borrow.html",{loader:()=>b(()=>import("./stacked-borrow.html-BfPumfCc.js"),[]),meta:{excerpt:`
<p>上一章节中我们运行 miri 时遇到了一个栈借用错误，还给了文档链接，但这些文档主要是给编译器开发者和 Rust 研究者看的，因此就不进行讲解了。</p>
<p>而这里，我们将从一个更高层次的角度来看看何为栈借用。</p>
<blockquote>
<p>目前栈借用在 Rust 语义模型中还是试验阶段，因此破坏这些规则不一定说明你的程序错了。但是除非你在做编译器开发，否则最好还是修复这些错误。事前的麻烦总比事后的不安全要好，特别是当涉及到 UB 未定义行为时</p>
</blockquote>
<h2>指针混叠( Pointer Aliasing )</h2>
<p>在开始了解我们破坏的规则之前，首先应该了解为何会有这些规则的存在。这里有多个动机，但是我认为最重要的动机是： 指针混叠.</p>`,readingTime:{minutes:6.78,words:2033},title:"栈借用( Stacked Borrorw)",type:"article"}}],["/too-many-lists/unsafe-queue/testing-stacked-borrow.html",{loader:()=>b(()=>import("./testing-stacked-borrow.html-CIrC7PaR.js"),[]),meta:{excerpt:`
<blockquote>
<p>关于上一章节的简单总结:</p>
<ul>
<li>Rust 通过借用栈来处理再借用</li>
<li>只有栈顶的元素是处于 <code>live</code> 状态的( 被借用 )</li>
<li>当访问栈顶下面的元素时，该元素会变为 <code>live</code>，而栈顶元素会被弹出( <code>pop</code> )</li>
<li>从借用栈中弹出的元素无法再被借用</li>
<li>借用检查器会保证我们的安全代码遵守以上规则</li>
<li>Miri 可以在一定程度上保证裸指针在运行时也遵循以上规则</li>
</ul>
</blockquote>`,readingTime:{minutes:14.61,words:4384},title:"测试栈借用",type:"article"}}],["/cargo/reference/build-script/examples.html",{loader:()=>b(()=>import("./examples.html-N3tTCByR.js"),[]),meta:{excerpt:`
<p>下面我们通过一些例子来说明构建脚本该如何使用。社区中也提供了一些构建脚本的<a href="https://crates.io/keywords/build-dependencies" target="_blank" rel="noopener noreferrer">常用功能</a>，例如：</p>
<ul>
<li><a href="https://crates.io/crates/bindgen" target="_blank" rel="noopener noreferrer">bindgen</a>, 自动生成 Rust -&gt; C 的 FFI 绑定</li>
<li><a href="https://crates.io/crates/cc" target="_blank" rel="noopener noreferrer">cc</a>, 编译 C/C++/汇编</li>
<li><a href="https://crates.io/crates/pkg-config" target="_blank" rel="noopener noreferrer">pkg-config</a>, 使用 <code>pkg-config</code> 工具检测系统库</li>
<li><a href="https://crates.io/crates/cmake" target="_blank" rel="noopener noreferrer">cmake</a>, 运行 <code>cmake</code> 来构建一个本地库</li>
<li><a href="https://crates.io/crates/autocfg" target="_blank" rel="noopener noreferrer">autocfg</a>, <a href="https://crates.io/crates/rustc_version" target="_blank" rel="noopener noreferrer">rustc_version</a>, <a href="https://crates.io/crates/version_check" target="_blank" rel="noopener noreferrer">version_check</a>，这些包提供基于 <code>rustc</code> 的当前版本来实现条件编译的方法</li>
</ul>`,readingTime:{minutes:9.13,words:2738},title:"构建脚本示例",type:"article"}}],["/cargo/reference/build-script/intro.html",{loader:()=>b(()=>import("./intro.html-COu-sXU4.js"),[]),meta:{excerpt:`
<p>一些项目希望编译第三方的非 Rust 代码，例如 C 依赖库；一些希望链接本地或者基于源码构建的 C 依赖库；还有一些项目需要功能性的工具，例如在构建之间执行一些代码生成的工作等。</p>
<p>对于这些目标，社区已经提供了一些工具来很好的解决，Cargo 并不想替代它们，但是为了给用户带来一些便利，Cargo 提供了自定义构建脚本的方式，来帮助用户更好的解决类似的问题。</p>
<h2>build.rs</h2>
<p>若要创建构建脚本，我们只需在项目的根目录下添加一个 <code>build.rs</code> 文件即可。这样一来， Cargo 就会先编译和执行该构建脚本，然后再去构建整个项目。</p>`,readingTime:{minutes:7.56,words:2268},title:"构建脚本( Build Scripts)",type:"article"}}],["/cargo/reference/features/examples.html",{loader:()=>b(()=>import("./examples.html-DQddvQt9.js"),[]),meta:{excerpt:`
<p>以下我们一起来看看一些来自真实世界的示例。</p>
<h3>最小化构建时间和文件大小</h3>
<p>如果一些包的部分特性不再启用，就可以减少该包占用的大小以及编译时间:</p>
<ul>
<li><a href="https://crates.io/crates/syn" target="_blank" rel="noopener noreferrer"><code>syn</code></a> 包可以用来解析 Rust 代码，由于它很受欢迎，大量的项目都在引用，因此它给出了<a href="https://docs.rs/syn/1.0.54/syn/#optional-features" target="_blank" rel="noopener noreferrer">非常清晰的文档</a>关于如何最小化使用它包含的 <code>features</code></li>
<li><a href="https://crates.io/crates/regex" target="_blank" rel="noopener noreferrer"><code>regex</code></a> 也有关于 features 的<a href="https://docs.rs/regex/1.4.2/regex/#crate-features" target="_blank" rel="noopener noreferrer">描述文档</a>，例如移除 Unicode 支持的 feature 可以降低最终生成可执行文件的大小</li>
<li><a href="https://crates.io/crates/winapi" target="_blank" rel="noopener noreferrer"><code>winapi</code></a> 拥有<a href="https://github.com/retep998/winapi-rs/blob/0.3.9/Cargo.toml#L25-L431" target="_blank" rel="noopener noreferrer">众多 features</a>，这些 <code>feature</code> 对用了各种 Windows API，你可以只引入代码中用到的 API 所对应的 feature.</li>
</ul>`,readingTime:{minutes:4.37,words:1311},title:"Features 示例",type:"article"}}],["/cargo/reference/features/intro.html",{loader:()=>b(()=>import("./intro.html-lH9_0EPT.js"),[]),meta:{excerpt:`
<p><code>Cargo Feature</code> 是非常强大的机制，可以为大家提供<a href="https://doc.rust-lang.org/stable/reference/conditional-compilation.html" target="_blank" rel="noopener noreferrer">条件编译</a>和可选依赖的高级特性。</p>
<h2>[features]</h2>
<p><code>Feature</code> 可以通过 <code>Cargo.toml</code> 中的 <code>[features]</code> 部分来定义：其中每个 <code>feature</code> 通过列表的方式指定了它所能启用的其他 <code>feature</code> 或可选依赖。</p>`,readingTime:{minutes:11.68,words:3505},title:"条件编译 Features",type:"article"}}],["/compiler/fight-with-compiler/borrowing/borrow-distinct-fields-of-struct.html",{loader:()=>b(()=>import("./borrow-distinct-fields-of-struct.html-COxqmoZ-.js"),[]),meta:{excerpt:`
<p>本文将彻底解决一个困扰广大 Rust 用户已久的常见错误： 当智能指针和结构体一起使用时导致的借用错误: <code>cannot borrow</code>mut_s<code> as mutable because it is also borrowed as immutable</code>.</p>
<p>相信看过<a href="https://course.rs/fight-with-compiler/intro.html" target="_blank" rel="noopener noreferrer">&lt;&lt;对抗 Rust 编译检查系列&gt;&gt;</a>的读者都知道结构体中的不同字段可以独立借用吧？</p>`,readingTime:{minutes:5.59,words:1678},title:"智能指针引起的重复借用错误",type:"article"}}],["/compiler/fight-with-compiler/borrowing/intro.html",{loader:()=>b(()=>import("./intro.html-UwE1o4Qs.js"),[]),meta:{excerpt:`
<p>本章讲述如何解决类似<code>cannot borrow *self as mutable because it is also borrowed as immutable</code>这种重复借用的错误。</p>
`,readingTime:{minutes:.12,words:35},title:"重复借用",type:"article"}}],["/compiler/fight-with-compiler/borrowing/ref-exist-in-out-fn.html",{loader:()=>b(()=>import("./ref-exist-in-out-fn.html-BRZA8gOB.js"),[]),meta:{excerpt:`
<p>本文将彻底解决一个困扰广大 Rust 用户已久的常见错误：因为在函数内外同时借用一个引用，导致了重复借用错误<code>cannot borrow *self as mutable because it is also borrowed as immutable</code>.</p>
<blockquote>
<p>本文大部分内容节选自<a href="https://course.rs/pitfalls/index.html" target="_blank" rel="noopener noreferrer">Rust 常见陷阱</a>专题，由于借用是新手绕不过去的坎，因此将其提取出来形成一个新的系列</p>
</blockquote>`,readingTime:{minutes:6.42,words:1926},title:"同时在函数内外使用引用导致的重复借用错误",type:"article"}}],["/compiler/fight-with-compiler/lifetime/closure-with-static.html",{loader:()=>b(()=>import("./closure-with-static.html-YGEhCjdh.js"),[]),meta:{excerpt:`
<p>特征对象是一个好东西，闭包也是一个好东西，但是如果两者你都想要时，可能就会火星撞地球，boom! 至于这两者为何会勾搭到一起？考虑一个常用场景：使用闭包作为回调函数.</p>
<h2>学习目标</h2>
<p>如何使用闭包作为特征对象，并解决以下错误：<code>the parameter type </code> \`impl Fn(&amp;str) -&gt; Res\` <code> may not live long enough</code></p>
<h2>报错的代码</h2>
<p>在下面代码中，我们通过闭包实现了一个简单的回调函数(错误代码已经标注)：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">dyn</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.callback </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Inline"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    inl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Inline: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"inline"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.callback {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello, world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.76,words:1428},title:"当闭包碰到特征对象 1",type:"article"}}],["/compiler/fight-with-compiler/lifetime/intro.html",{loader:()=>b(()=>import("./intro.html-DCg6NI99.js"),[]),meta:{excerpt:`
<p>本章并不讲太多的概念，主要是用例子来引导大家去思考该如何对抗编译检查。</p>
`,readingTime:{minutes:.12,words:37},title:"生命周期",type:"article"}}],["/compiler/fight-with-compiler/lifetime/loop.html",{loader:()=>b(()=>import("./loop.html-yYY9HC_B.js"),[]),meta:{excerpt:`
<p>当涉及生命周期时，Rust 编译器有时会变得不太聪明，如果再配合循环，蠢笨都不足以形容它，不信？那继续跟着我一起看看。</p>
<h2>循环中的生命周期错误</h2>
<p>Talk is cheap, 一起来看个例子：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> rand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{thread_rng, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rng</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialEq</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> random_empty_tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) -&gt; &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    loop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> thread_rng</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">gen_range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tile</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Empty</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.83,words:2049},title:"蠢笨编译器之循环生命周期",type:"article"}}],["/compiler/fight-with-compiler/lifetime/too-long1.html",{loader:()=>b(()=>import("./too-long1.html-B_xHJUeG.js"),[]),meta:{excerpt:`
<p>在大多时候，Rust 的生命周期你只要标识了，即可以通过编译，但是总是存在一些情况，会导致编译无法通过，本文就讲述这样一种情况：因为生命周期声明的范围过大，导致了编译无法通过，希望大家喜欢</p>
<h2>例子 1</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> noop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"interface consumed"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> get_interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.manager</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get_interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">noop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Interface should be dropped here and the borrow released"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // this fails because inmutable/mutable borrow</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // but Interface should be already dropped here and the borrow released</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    use_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> use_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.manager.text);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.4,words:720},title:"生命周期声明的范围过大",type:"article"}}],["/compiler/fight-with-compiler/lifetime/too-long2.html",{loader:()=>b(()=>import("./too-long2.html-p8eaco0T.js"),[]),meta:{excerpt:`
<p>继上篇文章后，我们再来看一段<strong>可能</strong>涉及生命周期过大导致的无法编译问题:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    baz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> baz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.indent + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.indent {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' '</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.14,words:943},title:"生命周期过大-02",type:"article"}}],["/profiling/compiler/optimization/intro.html",{loader:()=>b(()=>import("./intro.html-BGZ8Acpp.js"),[]),meta:{excerpt:`
<p>在Rust中，一段很不起眼的代码中可能也隐藏着玄机，编译器在细无声的为我们做着各种优化，本章将记录这些优化，帮助大家更好的理解程序的性能。</p>
`,readingTime:{minutes:.22,words:66},title:"编译器优化",type:"article"}}],["/profiling/compiler/optimization/option.html",{loader:()=>b(()=>import("./option.html-CEsQT-91.js"),[]),meta:{excerpt:`
<p>https://www.reddit.com/r/learnrust/comments/rz34ht/where_does_the_data_go_if_you_replace_some_with/</p>
`,readingTime:{minutes:.02,words:5},title:"Option枚举",type:"article"}}],["/profiling/profiling/performance/benchmark.html",{loader:()=>b(()=>import("./benchmark.html-BZHOsD6a.js"),[]),meta:{excerpt:`
`,readingTime:{minutes:.02,words:6},title:"Benchmark性能测试(todo)",type:"article"}}],["/404.html",{loader:()=>b(()=>import("./404.html-CdI0bV3I.js"),[]),meta:{title:"",s:"404"}}],["/",{loader:()=>b(()=>import("./index.html-CGNgInR4.js"),[]),meta:{title:"",s:"/"}}],["/advance/",{loader:()=>b(()=>import("./index.html-DYmeeYws.js"),[]),meta:{title:"Advance"}}],["/advance-practice/",{loader:()=>b(()=>import("./index.html-CcOYhurr.js"),[]),meta:{title:"Advance Practice"}}],["/advance-practice1/",{loader:()=>b(()=>import("./index.html-DFW6cjl6.js"),[]),meta:{title:"Advance Practice1"}}],["/appendix/",{loader:()=>b(()=>import("./index.html-By5Oq83V.js"),[]),meta:{title:"Appendix"}}],["/basic/",{loader:()=>b(()=>import("./index.html-HyXXHq5z.js"),[]),meta:{title:"Basic"}}],["/basic-practice/",{loader:()=>b(()=>import("./index.html-lttwK-q2.js"),[]),meta:{title:"Basic Practice"}}],["/cargo/",{loader:()=>b(()=>import("./index.html-DvtAuZaa.js"),[]),meta:{title:"Cargo"}}],["/compiler/",{loader:()=>b(()=>import("./index.html-CVTbXYzg.js"),[]),meta:{title:"Compiler"}}],["/difficulties/",{loader:()=>b(()=>import("./index.html-BjssISoY.js"),[]),meta:{title:"Difficulties"}}],["/first-try/",{loader:()=>b(()=>import("./index.html-D5XXkYHn.js"),[]),meta:{title:"First Try"}}],["/libraries/",{loader:()=>b(()=>import("./index.html-rrHNLDqc.js"),[]),meta:{title:"Libraries"}}],["/logs/",{loader:()=>b(()=>import("./index.html-DI-aI90F.js"),[]),meta:{title:"Logs"}}],["/practice/",{loader:()=>b(()=>import("./index.html-Cac8jb1l.js"),[]),meta:{title:"Practice"}}],["/profiling/",{loader:()=>b(()=>import("./index.html-Cssz9KZW.js"),[]),meta:{title:"Profiling"}}],["/std/",{loader:()=>b(()=>import("./index.html-Dh_mb8VM.js"),[]),meta:{title:"Std"}}],["/templates/",{loader:()=>b(()=>import("./index.html-Bb3MH3EI.js"),[]),meta:{title:"Templates"}}],["/test/",{loader:()=>b(()=>import("./index.html-DbYZbmBl.js"),[]),meta:{title:"Test"}}],["/too-many-lists/",{loader:()=>b(()=>import("./index.html-DqA7R2IN.js"),[]),meta:{title:"Too Many Lists"}}],["/usecases/",{loader:()=>b(()=>import("./index.html-CGgzQcSe.js"),[]),meta:{title:"Usecases"}}],["/advance/async/",{loader:()=>b(()=>import("./index.html-BbzZD2AR.js"),[]),meta:{title:"Async"}}],["/advance/circle-self-ref/",{loader:()=>b(()=>import("./index.html-1_7_keI0.js"),[]),meta:{title:"Circle Self Ref"}}],["/advance/concurrency-with-threads/",{loader:()=>b(()=>import("./index.html-CGTdPJ9U.js"),[]),meta:{title:"Concurrency with Threads"}}],["/advance/difficulties/",{loader:()=>b(()=>import("./index.html-BS0fUSx2.js"),[]),meta:{title:"Difficulties"}}],["/advance/functional-programing/",{loader:()=>b(()=>import("./index.html-DD74VaNz.js"),[]),meta:{title:"Functional Programing"}}],["/advance/into-types/",{loader:()=>b(()=>import("./index.html-Dm3G32BK.js"),[]),meta:{title:"Into Types"}}],["/advance/lifetime/",{loader:()=>b(()=>import("./index.html-DtukrI0C.js"),[]),meta:{title:"Lifetime"}}],["/advance/smart-pointer/",{loader:()=>b(()=>import("./index.html-DJUqPN1t.js"),[]),meta:{title:"Smart Pointer"}}],["/advance/unsafe/",{loader:()=>b(()=>import("./index.html-DuWlw5gr.js"),[]),meta:{title:"Unsafe"}}],["/appendix/rust-versions/",{loader:()=>b(()=>import("./index.html-DmISgVnp.js"),[]),meta:{title:"Rust Versions"}}],["/basic/collections/",{loader:()=>b(()=>import("./index.html-fP3yVwhw.js"),[]),meta:{title:"Collections"}}],["/basic/compound-type/",{loader:()=>b(()=>import("./index.html-BWPsXY48.js"),[]),meta:{title:"Compound Type"}}],["/basic/crate-module/",{loader:()=>b(()=>import("./index.html-2jnhcWT5.js"),[]),meta:{title:"Crate Module"}}],["/basic/match-pattern/",{loader:()=>b(()=>import("./index.html-CS72IWCc.js"),[]),meta:{title:"Match Pattern"}}],["/basic/result-error/",{loader:()=>b(()=>import("./index.html-YOjUZ-PC.js"),[]),meta:{title:"Result Error"}}],["/basic/trait/",{loader:()=>b(()=>import("./index.html-DOn_IuaF.js"),[]),meta:{title:"Trait"}}],["/cargo/guide/",{loader:()=>b(()=>import("./index.html-CjPXfX8M.js"),[]),meta:{title:"Guide"}}],["/cargo/reference/",{loader:()=>b(()=>import("./index.html-DTLY16IE.js"),[]),meta:{title:"Reference"}}],["/compiler/fight-with-compiler/",{loader:()=>b(()=>import("./index.html-C7tVlK9U.js"),[]),meta:{title:"Fight with Compiler"}}],["/libraries/command/",{loader:()=>b(()=>import("./index.html-B3JpaRhw.js"),[]),meta:{title:"Command"}}],["/libraries/http/",{loader:()=>b(()=>import("./index.html-Lu_o7IDR.js"),[]),meta:{title:"Http"}}],["/libraries/json/",{loader:()=>b(()=>import("./index.html-DP62jelv.js"),[]),meta:{title:"Json"}}],["/logs/observe/",{loader:()=>b(()=>import("./index.html-CtP7-vo-.js"),[]),meta:{title:"Observe"}}],["/profiling/compiler/",{loader:()=>b(()=>import("./index.html-ZFZB3al_.js"),[]),meta:{title:"Compiler"}}],["/profiling/memory/",{loader:()=>b(()=>import("./index.html-C8NJOYQc.js"),[]),meta:{title:"Memory"}}],["/profiling/performance/",{loader:()=>b(()=>import("./index.html-DJzZrGTb.js"),[]),meta:{title:"Performance"}}],["/templates/files/",{loader:()=>b(()=>import("./index.html-D7g03Cdh.js"),[]),meta:{title:"Files"}}],["/templates/http/",{loader:()=>b(()=>import("./index.html-CKAnP7i6.js"),[]),meta:{title:"Http"}}],["/too-many-lists/advanced-lists/",{loader:()=>b(()=>import("./index.html-DvQdK7bz.js"),[]),meta:{title:"Advanced Lists"}}],["/too-many-lists/bad-stack/",{loader:()=>b(()=>import("./index.html-DOo_ooZU.js"),[]),meta:{title:"Bad Stack"}}],["/too-many-lists/deque/",{loader:()=>b(()=>import("./index.html-BoqrOiHd.js"),[]),meta:{title:"Deque"}}],["/too-many-lists/ok-stack/",{loader:()=>b(()=>import("./index.html-ZNRog0_U.js"),[]),meta:{title:"Ok Stack"}}],["/too-many-lists/persistent-stack/",{loader:()=>b(()=>import("./index.html-BOtSXM3v.js"),[]),meta:{title:"Persistent Stack"}}],["/too-many-lists/production-unsafe-deque/",{loader:()=>b(()=>import("./index.html-C0_hjEXz.js"),[]),meta:{title:"Production Unsafe Deque"}}],["/too-many-lists/unsafe-queue/",{loader:()=>b(()=>import("./index.html-p-ZPfFA_.js"),[]),meta:{title:"Unsafe Queue"}}],["/cargo/reference/build-script/",{loader:()=>b(()=>import("./index.html-CyJficLb.js"),[]),meta:{title:"Build Script"}}],["/cargo/reference/features/",{loader:()=>b(()=>import("./index.html-j4kukspi.js"),[]),meta:{title:"Features"}}],["/compiler/fight-with-compiler/borrowing/",{loader:()=>b(()=>import("./index.html-DEx44H65.js"),[]),meta:{title:"Borrowing"}}],["/compiler/fight-with-compiler/lifetime/",{loader:()=>b(()=>import("./index.html-B8CIeoBj.js"),[]),meta:{title:"Lifetime"}}],["/profiling/compiler/optimization/",{loader:()=>b(()=>import("./index.html-oX3-h_qr.js"),[]),meta:{title:"Optimization"}}],["/profiling/profiling/performance/",{loader:()=>b(()=>import("./index.html-D2GB63dM.js"),[]),meta:{title:"Performance"}}],["/profiling/profiling/",{loader:()=>b(()=>import("./index.html-CBrvNAiH.js"),[]),meta:{title:"Profiling"}}],["/category/",{loader:()=>b(()=>import("./index.html-C7-G5MF5.js"),[]),meta:{title:"分类",index:!1}}],["/tag/",{loader:()=>b(()=>import("./index.html-LtcGIGJK.js"),[]),meta:{title:"标签",index:!1}}],["/Blog/",{loader:()=>b(()=>import("./index.html-Cz-TidYd.js"),[]),meta:{title:"文章",index:!1}}],["/star/",{loader:()=>b(()=>import("./index.html-Bld0wmEv.js"),[]),meta:{title:"星标",index:!1}}],["/timeline/",{loader:()=>b(()=>import("./index.html-CHCaX2NC.js"),[]),meta:{title:"时间轴",index:!1}}],["/public_docs/",{loader:()=>b(()=>import("./index.html-D9cVvrWU.js"),[]),meta:{title:"Pdf Pages"}}]]);function jF(){return S4().__VUE_DEVTOOLS_GLOBAL_HOOK__}function S4(){return typeof navigator<"u"&&typeof window<"u"?window:typeof globalThis<"u"?globalThis:{}}const UF=typeof Proxy=="function",GF="devtools-plugin:setup",WF="plugin:settings:set";let Na,Qd;function KF(){var i;return Na!==void 0||(typeof window<"u"&&window.performance?(Na=!0,Qd=window.performance):typeof globalThis<"u"&&(!((i=globalThis.perf_hooks)===null||i===void 0)&&i.performance)?(Na=!0,Qd=globalThis.perf_hooks.performance):Na=!1),Na}function YF(){return KF()?Qd.now():Date.now()}class XF{constructor(s,e){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=s,this.hook=e;const n={};if(s.settings)for(const l in s.settings){const r=s.settings[l];n[l]=r.defaultValue}const a=`__vue-devtools-plugin-settings__${s.id}`;let t=Object.assign({},n);try{const l=localStorage.getItem(a),r=JSON.parse(l);Object.assign(t,r)}catch{}this.fallbacks={getSettings(){return t},setSettings(l){try{localStorage.setItem(a,JSON.stringify(l))}catch{}t=l},now(){return YF()}},e&&e.on(WF,(l,r)=>{l===this.plugin.id&&this.fallbacks.setSettings(r)}),this.proxiedOn=new Proxy({},{get:(l,r)=>this.target?this.target.on[r]:(...h)=>{this.onQueue.push({method:r,args:h})}}),this.proxiedTarget=new Proxy({},{get:(l,r)=>this.target?this.target[r]:r==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(r)?(...h)=>(this.targetQueue.push({method:r,args:h,resolve:()=>{}}),this.fallbacks[r](...h)):(...h)=>new Promise(p=>{this.targetQueue.push({method:r,args:h,resolve:p})})})}async setRealTarget(s){this.target=s;for(const e of this.onQueue)this.target.on[e.method](...e.args);for(const e of this.targetQueue)e.resolve(await this.target[e.method](...e.args))}}function ZF(i,s){const e=i,n=S4(),a=jF(),t=UF&&e.enableEarlyProxy;if(a&&(n.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!t))a.emit(GF,i,s);else{const l=t?new XF(e,a):null;(n.__VUE_DEVTOOLS_PLUGINS__=n.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:e,setupFn:s,proxy:l}),l&&s(l.proxiedTarget)}}/*!
  * vue-router v4.5.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const kn=typeof document<"u";function I4(i){return typeof i=="object"||"displayName"in i||"props"in i||"__vccOpts"in i}function JF(i){return i.__esModule||i[Symbol.toStringTag]==="Module"||i.default&&I4(i.default)}const qi=Object.assign;function ak(i,s){const e={};for(const n in s){const a=s[n];e[n]=ae(a)?a.map(i):i(a)}return e}const hl=()=>{},ae=Array.isArray,R4=/#/g,QF=/&/g,iE=/\//g,sE=/=/g,eE=/\?/g,O4=/\+/g,nE=/%5B/g,aE=/%5D/g,P4=/%5E/g,tE=/%60/g,L4=/%7B/g,lE=/%7C/g,N4=/%7D/g,rE=/%20/g;function bu(i){return encodeURI(""+i).replace(lE,"|").replace(nE,"[").replace(aE,"]")}function hE(i){return bu(i).replace(L4,"{").replace(N4,"}").replace(P4,"^")}function io(i){return bu(i).replace(O4,"%2B").replace(rE,"+").replace(R4,"%23").replace(QF,"%26").replace(tE,"`").replace(L4,"{").replace(N4,"}").replace(P4,"^")}function pE(i){return io(i).replace(sE,"%3D")}function kE(i){return bu(i).replace(R4,"%23").replace(eE,"%3F")}function dE(i){return i==null?"":kE(i).replace(iE,"%2F")}function ot(i){try{return decodeURIComponent(""+i)}catch{}return""+i}const oE=/\/$/,uE=i=>i.replace(oE,"");function tk(i,s,e="/"){let n,a={},t="",l="";const r=s.indexOf("#");let h=s.indexOf("?");return r<h&&r>=0&&(h=-1),h>-1&&(n=s.slice(0,h),t=s.slice(h+1,r>-1?r:s.length),a=i(t)),r>-1&&(n=n||s.slice(0,r),l=s.slice(r,s.length)),n=AE(n??s,e),{fullPath:n+(t&&"?")+t+l,path:n,query:a,hash:ot(l)}}function cE(i,s){const e=s.query?i(s.query):"";return s.path+(e&&"?")+e+(s.hash||"")}function Tg(i,s){return!s||!i.toLowerCase().startsWith(s.toLowerCase())?i:i.slice(s.length)||"/"}function gE(i,s,e){const n=s.matched.length-1,a=e.matched.length-1;return n>-1&&n===a&&Jn(s.matched[n],e.matched[a])&&M4(s.params,e.params)&&i(s.query)===i(e.query)&&s.hash===e.hash}function Jn(i,s){return(i.aliasOf||i)===(s.aliasOf||s)}function M4(i,s){if(Object.keys(i).length!==Object.keys(s).length)return!1;for(const e in i)if(!BE(i[e],s[e]))return!1;return!0}function BE(i,s){return ae(i)?Sg(i,s):ae(s)?Sg(s,i):i===s}function Sg(i,s){return ae(s)?i.length===s.length&&i.every((e,n)=>e===s[n]):i.length===1&&i[0]===s}function AE(i,s){if(i.startsWith("/"))return i;if(!i)return s;const e=s.split("/"),n=i.split("/"),a=n[n.length-1];(a===".."||a===".")&&n.push("");let t=e.length-1,l,r;for(l=0;l<n.length;l++)if(r=n[l],r!==".")if(r==="..")t>1&&t--;else break;return e.slice(0,t).join("/")+"/"+n.slice(l).join("/")}const rn={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var Fl;(function(i){i.pop="pop",i.push="push"})(Fl||(Fl={}));var pl;(function(i){i.back="back",i.forward="forward",i.unknown=""})(pl||(pl={}));function yE(i){if(!i)if(kn){const s=document.querySelector("base");i=s&&s.getAttribute("href")||"/",i=i.replace(/^\w+:\/\/[^\/]+/,"")}else i="/";return i[0]!=="/"&&i[0]!=="#"&&(i="/"+i),uE(i)}const fE=/^[^#]+#/;function mE(i,s){return i.replace(fE,"#")+s}function vE(i,s){const e=document.documentElement.getBoundingClientRect(),n=i.getBoundingClientRect();return{behavior:s.behavior,left:n.left-e.left-(s.left||0),top:n.top-e.top-(s.top||0)}}const tp=()=>({left:window.scrollX,top:window.scrollY});function FE(i){let s;if("el"in i){const e=i.el,n=typeof e=="string"&&e.startsWith("#"),a=typeof e=="string"?n?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!a)return;s=vE(a,i)}else s=i;"scrollBehavior"in document.documentElement.style?window.scrollTo(s):window.scrollTo(s.left!=null?s.left:window.scrollX,s.top!=null?s.top:window.scrollY)}function Ig(i,s){return(history.state?history.state.position-s:-1)+i}const so=new Map;function EE(i,s){so.set(i,s)}function bE(i){const s=so.get(i);return so.delete(i),s}let CE=()=>location.protocol+"//"+location.host;function $4(i,s){const{pathname:e,search:n,hash:a}=s,t=i.indexOf("#");if(t>-1){let r=a.includes(i.slice(t))?i.slice(t).length:1,h=a.slice(r);return h[0]!=="/"&&(h="/"+h),Tg(h,"")}return Tg(e,i)+n+a}function _E(i,s,e,n){let a=[],t=[],l=null;const r=({state:u})=>{const o=$4(i,location),c=e.value,A=s.value;let g=0;if(u){if(e.value=o,s.value=u,l&&l===c){l=null;return}g=A?u.position-A.position:0}else n(o);a.forEach(f=>{f(e.value,c,{delta:g,type:Fl.pop,direction:g?g>0?pl.forward:pl.back:pl.unknown})})};function h(){l=e.value}function p(u){a.push(u);const o=()=>{const c=a.indexOf(u);c>-1&&a.splice(c,1)};return t.push(o),o}function k(){const{history:u}=window;u.state&&u.replaceState(qi({},u.state,{scroll:tp()}),"")}function d(){for(const u of t)u();t=[],window.removeEventListener("popstate",r),window.removeEventListener("beforeunload",k)}return window.addEventListener("popstate",r),window.addEventListener("beforeunload",k,{passive:!0}),{pauseListeners:h,listen:p,destroy:d}}function Rg(i,s,e,n=!1,a=!1){return{back:i,current:s,forward:e,replaced:n,position:window.history.length,scroll:a?tp():null}}function DE(i){const{history:s,location:e}=window,n={value:$4(i,e)},a={value:s.state};a.value||t(n.value,{back:null,current:n.value,forward:null,position:s.length-1,replaced:!0,scroll:null},!0);function t(h,p,k){const d=i.indexOf("#"),u=d>-1?(e.host&&document.querySelector("base")?i:i.slice(d))+h:CE()+i+h;try{s[k?"replaceState":"pushState"](p,"",u),a.value=p}catch(o){console.error(o),e[k?"replace":"assign"](u)}}function l(h,p){const k=qi({},s.state,Rg(a.value.back,h,a.value.forward,!0),p,{position:a.value.position});t(h,k,!0),n.value=h}function r(h,p){const k=qi({},a.value,s.state,{forward:h,scroll:tp()});t(k.current,k,!0);const d=qi({},Rg(n.value,h,null),{position:k.position+1},p);t(h,d,!1),n.value=h}return{location:n,state:a,push:r,replace:l}}function xE(i){i=yE(i);const s=DE(i),e=_E(i,s.state,s.location,s.replace);function n(t,l=!0){l||e.pauseListeners(),history.go(t)}const a=qi({location:"",base:i,go:n,createHref:mE.bind(null,i)},s,e);return Object.defineProperty(a,"location",{enumerable:!0,get:()=>s.location.value}),Object.defineProperty(a,"state",{enumerable:!0,get:()=>s.state.value}),a}function V4(i){return typeof i=="string"||i&&typeof i=="object"}function z4(i){return typeof i=="string"||typeof i=="symbol"}const q4=Symbol("");var Og;(function(i){i[i.aborted=4]="aborted",i[i.cancelled=8]="cancelled",i[i.duplicated=16]="duplicated"})(Og||(Og={}));function ut(i,s){return qi(new Error,{type:i,[q4]:!0},s)}function nn(i,s){return i instanceof Error&&q4 in i&&(s==null||!!(i.type&s))}const Pg="[^/]+?",wE={sensitive:!1,strict:!1,start:!0,end:!0},TE=/[.+*?^${}()[\]/\\]/g;function SE(i,s){const e=qi({},wE,s),n=[];let a=e.start?"^":"";const t=[];for(const p of i){const k=p.length?[]:[90];e.strict&&!p.length&&(a+="/");for(let d=0;d<p.length;d++){const u=p[d];let o=40+(e.sensitive?.25:0);if(u.type===0)d||(a+="/"),a+=u.value.replace(TE,"\\$&"),o+=40;else if(u.type===1){const{value:c,repeatable:A,optional:g,regexp:f}=u;t.push({name:c,repeatable:A,optional:g});const m=f||Pg;if(m!==Pg){o+=10;try{new RegExp(`(${m})`)}catch(v){throw new Error(`Invalid custom RegExp for param "${c}" (${m}): `+v.message)}}let y=A?`((?:${m})(?:/(?:${m}))*)`:`(${m})`;d||(y=g&&p.length<2?`(?:/${y})`:"/"+y),g&&(y+="?"),a+=y,o+=20,g&&(o+=-8),A&&(o+=-20),m===".*"&&(o+=-50)}k.push(o)}n.push(k)}if(e.strict&&e.end){const p=n.length-1;n[p][n[p].length-1]+=.7000000000000001}e.strict||(a+="/?"),e.end?a+="$":e.strict&&!a.endsWith("/")&&(a+="(?:/|$)");const l=new RegExp(a,e.sensitive?"":"i");function r(p){const k=p.match(l),d={};if(!k)return null;for(let u=1;u<k.length;u++){const o=k[u]||"",c=t[u-1];d[c.name]=o&&c.repeatable?o.split("/"):o}return d}function h(p){let k="",d=!1;for(const u of i){(!d||!k.endsWith("/"))&&(k+="/"),d=!1;for(const o of u)if(o.type===0)k+=o.value;else if(o.type===1){const{value:c,repeatable:A,optional:g}=o,f=c in p?p[c]:"";if(ae(f)&&!A)throw new Error(`Provided param "${c}" is an array but it is not repeatable (* or + modifiers)`);const m=ae(f)?f.join("/"):f;if(!m)if(g)u.length<2&&(k.endsWith("/")?k=k.slice(0,-1):d=!0);else throw new Error(`Missing required param "${c}"`);k+=m}}return k||"/"}return{re:l,score:n,keys:t,parse:r,stringify:h}}function IE(i,s){let e=0;for(;e<i.length&&e<s.length;){const n=s[e]-i[e];if(n)return n;e++}return i.length<s.length?i.length===1&&i[0]===80?-1:1:i.length>s.length?s.length===1&&s[0]===80?1:-1:0}function H4(i,s){let e=0;const n=i.score,a=s.score;for(;e<n.length&&e<a.length;){const t=IE(n[e],a[e]);if(t)return t;e++}if(Math.abs(a.length-n.length)===1){if(Lg(n))return 1;if(Lg(a))return-1}return a.length-n.length}function Lg(i){const s=i[i.length-1];return i.length>0&&s[s.length-1]<0}const RE={type:0,value:""},OE=/[a-zA-Z0-9_]/;function PE(i){if(!i)return[[]];if(i==="/")return[[RE]];if(!i.startsWith("/"))throw new Error(`Invalid path "${i}"`);function s(o){throw new Error(`ERR (${e})/"${p}": ${o}`)}let e=0,n=e;const a=[];let t;function l(){t&&a.push(t),t=[]}let r=0,h,p="",k="";function d(){p&&(e===0?t.push({type:0,value:p}):e===1||e===2||e===3?(t.length>1&&(h==="*"||h==="+")&&s(`A repeatable param (${p}) must be alone in its segment. eg: '/:ids+.`),t.push({type:1,value:p,regexp:k,repeatable:h==="*"||h==="+",optional:h==="*"||h==="?"})):s("Invalid state to consume buffer"),p="")}function u(){p+=h}for(;r<i.length;){if(h=i[r++],h==="\\"&&e!==2){n=e,e=4;continue}switch(e){case 0:h==="/"?(p&&d(),l()):h===":"?(d(),e=1):u();break;case 4:u(),e=n;break;case 1:h==="("?e=2:OE.test(h)?u():(d(),e=0,h!=="*"&&h!=="?"&&h!=="+"&&r--);break;case 2:h===")"?k[k.length-1]=="\\"?k=k.slice(0,-1)+h:e=3:k+=h;break;case 3:d(),e=0,h!=="*"&&h!=="?"&&h!=="+"&&r--,k="";break;default:s("Unknown state");break}}return e===2&&s(`Unfinished custom RegExp for param "${p}"`),d(),l(),a}function LE(i,s,e){const n=SE(PE(i.path),e),a=qi(n,{record:i,parent:s,children:[],alias:[]});return s&&!a.record.aliasOf==!s.record.aliasOf&&s.children.push(a),a}function NE(i,s){const e=[],n=new Map;s=Vg({strict:!1,end:!0,sensitive:!1},s);function a(d){return n.get(d)}function t(d,u,o){const c=!o,A=Mg(d);A.aliasOf=o&&o.record;const g=Vg(s,d),f=[A];if("alias"in d){const v=typeof d.alias=="string"?[d.alias]:d.alias;for(const C of v)f.push(Mg(qi({},A,{components:o?o.record.components:A.components,path:C,aliasOf:o?o.record:A})))}let m,y;for(const v of f){const{path:C}=v;if(u&&C[0]!=="/"){const S=u.record.path,L=S[S.length-1]==="/"?"":"/";v.path=u.record.path+(C&&L+C)}if(m=LE(v,u,g),o?o.alias.push(m):(y=y||m,y!==m&&y.alias.push(m),c&&d.name&&!$g(m)&&l(d.name)),j4(m)&&h(m),A.children){const S=A.children;for(let L=0;L<S.length;L++)t(S[L],m,o&&o.children[L])}o=o||m}return y?()=>{l(y)}:hl}function l(d){if(z4(d)){const u=n.get(d);u&&(n.delete(d),e.splice(e.indexOf(u),1),u.children.forEach(l),u.alias.forEach(l))}else{const u=e.indexOf(d);u>-1&&(e.splice(u,1),d.record.name&&n.delete(d.record.name),d.children.forEach(l),d.alias.forEach(l))}}function r(){return e}function h(d){const u=VE(d,e);e.splice(u,0,d),d.record.name&&!$g(d)&&n.set(d.record.name,d)}function p(d,u){let o,c={},A,g;if("name"in d&&d.name){if(o=n.get(d.name),!o)throw ut(1,{location:d});g=o.record.name,c=qi(Ng(u.params,o.keys.filter(y=>!y.optional).concat(o.parent?o.parent.keys.filter(y=>y.optional):[]).map(y=>y.name)),d.params&&Ng(d.params,o.keys.map(y=>y.name))),A=o.stringify(c)}else if(d.path!=null)A=d.path,o=e.find(y=>y.re.test(A)),o&&(c=o.parse(A),g=o.record.name);else{if(o=u.name?n.get(u.name):e.find(y=>y.re.test(u.path)),!o)throw ut(1,{location:d,currentLocation:u});g=o.record.name,c=qi({},u.params,d.params),A=o.stringify(c)}const f=[];let m=o;for(;m;)f.unshift(m.record),m=m.parent;return{name:g,path:A,params:c,matched:f,meta:$E(f)}}i.forEach(d=>t(d));function k(){e.length=0,n.clear()}return{addRoute:t,resolve:p,removeRoute:l,clearRoutes:k,getRoutes:r,getRecordMatcher:a}}function Ng(i,s){const e={};for(const n of s)n in i&&(e[n]=i[n]);return e}function Mg(i){const s={path:i.path,redirect:i.redirect,name:i.name,meta:i.meta||{},aliasOf:i.aliasOf,beforeEnter:i.beforeEnter,props:ME(i),children:i.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in i?i.components||null:i.component&&{default:i.component}};return Object.defineProperty(s,"mods",{value:{}}),s}function ME(i){const s={},e=i.props||!1;if("component"in i)s.default=e;else for(const n in i.components)s[n]=typeof e=="object"?e[n]:e;return s}function $g(i){for(;i;){if(i.record.aliasOf)return!0;i=i.parent}return!1}function $E(i){return i.reduce((s,e)=>qi(s,e.meta),{})}function Vg(i,s){const e={};for(const n in i)e[n]=n in s?s[n]:i[n];return e}function VE(i,s){let e=0,n=s.length;for(;e!==n;){const t=e+n>>1;H4(i,s[t])<0?n=t:e=t+1}const a=zE(i);return a&&(n=s.lastIndexOf(a,n-1)),n}function zE(i){let s=i;for(;s=s.parent;)if(j4(s)&&H4(i,s)===0)return s}function j4({record:i}){return!!(i.name||i.components&&Object.keys(i.components).length||i.redirect)}function qE(i){const s={};if(i===""||i==="?")return s;const n=(i[0]==="?"?i.slice(1):i).split("&");for(let a=0;a<n.length;++a){const t=n[a].replace(O4," "),l=t.indexOf("="),r=ot(l<0?t:t.slice(0,l)),h=l<0?null:ot(t.slice(l+1));if(r in s){let p=s[r];ae(p)||(p=s[r]=[p]),p.push(h)}else s[r]=h}return s}function zg(i){let s="";for(let e in i){const n=i[e];if(e=pE(e),n==null){n!==void 0&&(s+=(s.length?"&":"")+e);continue}(ae(n)?n.map(t=>t&&io(t)):[n&&io(n)]).forEach(t=>{t!==void 0&&(s+=(s.length?"&":"")+e,t!=null&&(s+="="+t))})}return s}function HE(i){const s={};for(const e in i){const n=i[e];n!==void 0&&(s[e]=ae(n)?n.map(a=>a==null?null:""+a):n==null?n:""+n)}return s}const jE=Symbol(""),qg=Symbol(""),lp=Symbol(""),Cu=Symbol(""),eo=Symbol("");function $t(){let i=[];function s(n){return i.push(n),()=>{const a=i.indexOf(n);a>-1&&i.splice(a,1)}}function e(){i=[]}return{add:s,list:()=>i.slice(),reset:e}}function Mn(i,s,e,n,a,t=l=>l()){const l=n&&(n.enterCallbacks[a]=n.enterCallbacks[a]||[]);return()=>new Promise((r,h)=>{const p=u=>{u===!1?h(ut(4,{from:e,to:s})):u instanceof Error?h(u):V4(u)?h(ut(2,{from:s,to:u})):(l&&n.enterCallbacks[a]===l&&typeof u=="function"&&l.push(u),r())},k=t(()=>i.call(n&&n.instances[a],s,e,p));let d=Promise.resolve(k);i.length<3&&(d=d.then(p)),d.catch(u=>h(u))})}function lk(i,s,e,n,a=t=>t()){const t=[];for(const l of i)for(const r in l.components){let h=l.components[r];if(!(s!=="beforeRouteEnter"&&!l.instances[r]))if(I4(h)){const k=(h.__vccOpts||h)[s];k&&t.push(Mn(k,e,n,l,r,a))}else{let p=h();t.push(()=>p.then(k=>{if(!k)throw new Error(`Couldn't resolve component "${r}" at "${l.path}"`);const d=JF(k)?k.default:k;l.mods[r]=k,l.components[r]=d;const o=(d.__vccOpts||d)[s];return o&&Mn(o,e,n,l,r,a)()}))}}return t}function Hg(i){const s=Ni(lp),e=Ni(Cu),n=z(()=>{const h=mi(i.to);return s.resolve(h)}),a=z(()=>{const{matched:h}=n.value,{length:p}=h,k=h[p-1],d=e.matched;if(!k||!d.length)return-1;const u=d.findIndex(Jn.bind(null,k));if(u>-1)return u;const o=jg(h[p-2]);return p>1&&jg(k)===o&&d[d.length-1].path!==o?d.findIndex(Jn.bind(null,h[p-2])):u}),t=z(()=>a.value>-1&&YE(e.params,n.value.params)),l=z(()=>a.value>-1&&a.value===e.matched.length-1&&M4(e.params,n.value.params));function r(h={}){if(KE(h)){const p=s[mi(i.replace)?"replace":"push"](mi(i.to)).catch(hl);return i.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>p),p}return Promise.resolve()}if(kn){const h=pe();if(h){const p={route:n.value,isActive:t.value,isExactActive:l.value,error:null};h.__vrl_devtools=h.__vrl_devtools||[],h.__vrl_devtools.push(p),ep(()=>{p.route=n.value,p.isActive=t.value,p.isExactActive=l.value,p.error=V4(mi(i.to))?null:'Invalid "to" value'},{flush:"post"})}}return{route:n,href:z(()=>n.value.href),isActive:t,isExactActive:l,navigate:r}}function UE(i){return i.length===1?i[0]:i}const GE=ti({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Hg,setup(i,{slots:s}){const e=Xn(Hg(i)),{options:n}=Ni(lp),a=z(()=>({[Ug(i.activeClass,n.linkActiveClass,"router-link-active")]:e.isActive,[Ug(i.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive}));return()=>{const t=s.default&&UE(s.default(e));return i.custom?t:B("a",{"aria-current":e.isExactActive?i.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:a.value},t)}}}),WE=GE;function KE(i){if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget&&i.currentTarget.getAttribute){const s=i.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(s))return}return i.preventDefault&&i.preventDefault(),!0}}function YE(i,s){for(const e in s){const n=s[e],a=i[e];if(typeof n=="string"){if(n!==a)return!1}else if(!ae(a)||a.length!==n.length||n.some((t,l)=>t!==a[l]))return!1}return!0}function jg(i){return i?i.aliasOf?i.aliasOf.path:i.path:""}const Ug=(i,s,e)=>i??s??e,XE=ti({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(i,{attrs:s,slots:e}){const n=Ni(eo),a=z(()=>i.route||n.value),t=Ni(qg,0),l=z(()=>{let p=mi(t);const{matched:k}=a.value;let d;for(;(d=k[p])&&!d.components;)p++;return p}),r=z(()=>a.value.matched[l.value]);Ds(qg,z(()=>l.value+1)),Ds(jE,r),Ds(eo,a);const h=Z();return bi(()=>[h.value,r.value,i.name],([p,k,d],[u,o,c])=>{k&&(k.instances[d]=p,o&&o!==k&&p&&p===u&&(k.leaveGuards.size||(k.leaveGuards=o.leaveGuards),k.updateGuards.size||(k.updateGuards=o.updateGuards))),p&&k&&(!o||!Jn(k,o)||!u)&&(k.enterCallbacks[d]||[]).forEach(A=>A(p))},{flush:"post"}),()=>{const p=a.value,k=i.name,d=r.value,u=d&&d.components[k];if(!u)return Gg(e.default,{Component:u,route:p});const o=d.props[k],c=o?o===!0?p.params:typeof o=="function"?o(p):o:null,g=B(u,qi({},c,s,{onVnodeUnmounted:f=>{f.component.isUnmounted&&(d.instances[k]=null)},ref:h}));if(kn&&g.ref){const f={depth:l.value,name:d.name,path:d.path,meta:d.meta};(ae(g.ref)?g.ref.map(y=>y.i):[g.ref.i]).forEach(y=>{y.__vrv_devtools=f})}return Gg(e.default,{Component:g,route:p})||g}}});function Gg(i,s){if(!i)return null;const e=i(s);return e.length===1?e[0]:e}const ZE=XE;function Vt(i,s){const e=qi({},i,{matched:i.matched.map(n=>hb(n,["instances","children","aliasOf"]))});return{_custom:{type:null,readOnly:!0,display:i.fullPath,tooltip:s,value:e}}}function Ir(i){return{_custom:{display:i}}}let JE=0;function QE(i,s,e){if(s.__hasDevtools)return;s.__hasDevtools=!0;const n=JE++;ZF({id:"org.vuejs.router"+(n?"."+n:""),label:"Vue Router",packageName:"vue-router",homepage:"https://router.vuejs.org",logo:"https://router.vuejs.org/logo.png",componentStateTypes:["Routing"],app:i},a=>{typeof a.now!="function"&&console.warn("[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),a.on.inspectComponent((k,d)=>{k.instanceData&&k.instanceData.state.push({type:"Routing",key:"$route",editable:!1,value:Vt(s.currentRoute.value,"Current Route")})}),a.on.visitComponentTree(({treeNode:k,componentInstance:d})=>{if(d.__vrv_devtools){const u=d.__vrv_devtools;k.tags.push({label:(u.name?`${u.name.toString()}: `:"")+u.path,textColor:0,tooltip:"This component is rendered by &lt;router-view&gt;",backgroundColor:U4})}ae(d.__vrl_devtools)&&(d.__devtoolsApi=a,d.__vrl_devtools.forEach(u=>{let o=u.route.path,c=K4,A="",g=0;u.error?(o=u.error,c=ab,g=tb):u.isExactActive?(c=W4,A="This is exactly active"):u.isActive&&(c=G4,A="This link is active"),k.tags.push({label:o,textColor:g,tooltip:A,backgroundColor:c})}))}),bi(s.currentRoute,()=>{h(),a.notifyComponentUpdate(),a.sendInspectorTree(r),a.sendInspectorState(r)});const t="router:navigations:"+n;a.addTimelineLayer({id:t,label:`Router${n?" "+n:""} Navigations`,color:4237508}),s.onError((k,d)=>{a.addTimelineEvent({layerId:t,event:{title:"Error during Navigation",subtitle:d.fullPath,logType:"error",time:a.now(),data:{error:k},groupId:d.meta.__navigationId}})});let l=0;s.beforeEach((k,d)=>{const u={guard:Ir("beforeEach"),from:Vt(d,"Current Location during this navigation"),to:Vt(k,"Target location")};Object.defineProperty(k.meta,"__navigationId",{value:l++}),a.addTimelineEvent({layerId:t,event:{time:a.now(),title:"Start of navigation",subtitle:k.fullPath,data:u,groupId:k.meta.__navigationId}})}),s.afterEach((k,d,u)=>{const o={guard:Ir("afterEach")};u?(o.failure={_custom:{type:Error,readOnly:!0,display:u?u.message:"",tooltip:"Navigation Failure",value:u}},o.status=Ir("❌")):o.status=Ir("✅"),o.from=Vt(d,"Current Location during this navigation"),o.to=Vt(k,"Target location"),a.addTimelineEvent({layerId:t,event:{title:"End of navigation",subtitle:k.fullPath,time:a.now(),data:o,logType:u?"warning":"default",groupId:k.meta.__navigationId}})});const r="router-inspector:"+n;a.addInspector({id:r,label:"Routes"+(n?" "+n:""),icon:"book",treeFilterPlaceholder:"Search routes"});function h(){if(!p)return;const k=p;let d=e.getRoutes().filter(u=>!u.parent||!u.parent.record.components);d.forEach(Z4),k.filter&&(d=d.filter(u=>no(u,k.filter.toLowerCase()))),d.forEach(u=>X4(u,s.currentRoute.value)),k.rootNodes=d.map(Y4)}let p;a.on.getInspectorTree(k=>{p=k,k.app===i&&k.inspectorId===r&&h()}),a.on.getInspectorState(k=>{if(k.app===i&&k.inspectorId===r){const u=e.getRoutes().find(o=>o.record.__vd_id===k.nodeId);u&&(k.state={options:sb(u)})}}),a.sendInspectorTree(r),a.sendInspectorState(r)})}function ib(i){return i.optional?i.repeatable?"*":"?":i.repeatable?"+":""}function sb(i){const{record:s}=i,e=[{editable:!1,key:"path",value:s.path}];return s.name!=null&&e.push({editable:!1,key:"name",value:s.name}),e.push({editable:!1,key:"regexp",value:i.re}),i.keys.length&&e.push({editable:!1,key:"keys",value:{_custom:{type:null,readOnly:!0,display:i.keys.map(n=>`${n.name}${ib(n)}`).join(" "),tooltip:"Param keys",value:i.keys}}}),s.redirect!=null&&e.push({editable:!1,key:"redirect",value:s.redirect}),i.alias.length&&e.push({editable:!1,key:"aliases",value:i.alias.map(n=>n.record.path)}),Object.keys(i.record.meta).length&&e.push({editable:!1,key:"meta",value:i.record.meta}),e.push({key:"score",editable:!1,value:{_custom:{type:null,readOnly:!0,display:i.score.map(n=>n.join(", ")).join(" | "),tooltip:"Score used to sort routes",value:i.score}}}),e}const U4=15485081,G4=2450411,W4=8702998,eb=2282478,K4=16486972,nb=6710886,ab=16704226,tb=12131356;function Y4(i){const s=[],{record:e}=i;e.name!=null&&s.push({label:String(e.name),textColor:0,backgroundColor:eb}),e.aliasOf&&s.push({label:"alias",textColor:0,backgroundColor:K4}),i.__vd_match&&s.push({label:"matches",textColor:0,backgroundColor:U4}),i.__vd_exactActive&&s.push({label:"exact",textColor:0,backgroundColor:W4}),i.__vd_active&&s.push({label:"active",textColor:0,backgroundColor:G4}),e.redirect&&s.push({label:typeof e.redirect=="string"?`redirect: ${e.redirect}`:"redirects",textColor:16777215,backgroundColor:nb});let n=e.__vd_id;return n==null&&(n=String(lb++),e.__vd_id=n),{id:n,label:e.path,tags:s,children:i.children.map(Y4)}}let lb=0;const rb=/^\/(.*)\/([a-z]*)$/;function X4(i,s){const e=s.matched.length&&Jn(s.matched[s.matched.length-1],i.record);i.__vd_exactActive=i.__vd_active=e,e||(i.__vd_active=s.matched.some(n=>Jn(n,i.record))),i.children.forEach(n=>X4(n,s))}function Z4(i){i.__vd_match=!1,i.children.forEach(Z4)}function no(i,s){const e=String(i.re).match(rb);if(i.__vd_match=!1,!e||e.length<3)return!1;if(new RegExp(e[1].replace(/\$$/,""),e[2]).test(s))return i.children.forEach(l=>no(l,s)),i.record.path!=="/"||s==="/"?(i.__vd_match=i.re.test(s),!0):!1;const a=i.record.path.toLowerCase(),t=ot(a);return!s.startsWith("/")&&(t.includes(s)||a.includes(s))||t.startsWith(s)||a.startsWith(s)||i.record.name&&String(i.record.name).includes(s)?!0:i.children.some(l=>no(l,s))}function hb(i,s){const e={};for(const n in i)s.includes(n)||(e[n]=i[n]);return e}function pb(i){const s=NE(i.routes,i),e=i.parseQuery||qE,n=i.stringifyQuery||zg,a=i.history,t=$t(),l=$t(),r=$t(),h=Ti(rn);let p=rn;kn&&i.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const k=ak.bind(null,U=>""+U),d=ak.bind(null,dE),u=ak.bind(null,ot);function o(U,Q){let J,ki;return z4(U)?(J=s.getRecordMatcher(U),ki=Q):ki=U,s.addRoute(ki,J)}function c(U){const Q=s.getRecordMatcher(U);Q&&s.removeRoute(Q)}function A(){return s.getRoutes().map(U=>U.record)}function g(U){return!!s.getRecordMatcher(U)}function f(U,Q){if(Q=qi({},Q||h.value),typeof U=="string"){const F=tk(e,U,Q.path),D=s.resolve({path:F.path},Q),O=a.createHref(F.fullPath);return qi(F,D,{params:u(D.params),hash:ot(F.hash),redirectedFrom:void 0,href:O})}let J;if(U.path!=null)J=qi({},U,{path:tk(e,U.path,Q.path).path});else{const F=qi({},U.params);for(const D in F)F[D]==null&&delete F[D];J=qi({},U,{params:d(F)}),Q.params=d(Q.params)}const ki=s.resolve(J,Q),ci=U.hash||"";ki.params=k(u(ki.params));const X=cE(n,qi({},U,{hash:hE(ci),path:ki.path})),x=a.createHref(X);return qi({fullPath:X,hash:ci,query:n===zg?HE(U.query):U.query||{}},ki,{redirectedFrom:void 0,href:x})}function m(U){return typeof U=="string"?tk(e,U,h.value.path):qi({},U)}function y(U,Q){if(p!==U)return ut(8,{from:Q,to:U})}function v(U){return L(U)}function C(U){return v(qi(m(U),{replace:!0}))}function S(U){const Q=U.matched[U.matched.length-1];if(Q&&Q.redirect){const{redirect:J}=Q;let ki=typeof J=="function"?J(U):J;return typeof ki=="string"&&(ki=ki.includes("?")||ki.includes("#")?ki=m(ki):{path:ki},ki.params={}),qi({query:U.query,hash:U.hash,params:ki.path!=null?{}:U.params},ki)}}function L(U,Q){const J=p=f(U),ki=h.value,ci=U.state,X=U.force,x=U.replace===!0,F=S(J);if(F)return L(qi(m(F),{state:typeof F=="object"?qi({},ci,F.state):ci,force:X,replace:x}),Q||J);const D=J;D.redirectedFrom=Q;let O;return!X&&gE(n,ki,J)&&(O=ut(16,{to:D,from:ki}),pi(ki,ki,!0,!1)),(O?Promise.resolve(O):R(D,ki)).catch(P=>nn(P)?nn(P,2)?P:li(P):G(P,D,ki)).then(P=>{if(P){if(nn(P,2))return L(qi({replace:x},m(P.to),{state:typeof P.to=="object"?qi({},ci,P.to.state):ci,force:X}),Q||D)}else P=T(D,ki,!0,x,ci);return N(D,ki,P),P})}function w(U,Q){const J=y(U,Q);return J?Promise.reject(J):Promise.resolve()}function _(U){const Q=W.values().next().value;return Q&&typeof Q.runWithContext=="function"?Q.runWithContext(U):U()}function R(U,Q){let J;const[ki,ci,X]=kb(U,Q);J=lk(ki.reverse(),"beforeRouteLeave",U,Q);for(const F of ki)F.leaveGuards.forEach(D=>{J.push(Mn(D,U,Q))});const x=w.bind(null,U,Q);return J.push(x),ri(J).then(()=>{J=[];for(const F of t.list())J.push(Mn(F,U,Q));return J.push(x),ri(J)}).then(()=>{J=lk(ci,"beforeRouteUpdate",U,Q);for(const F of ci)F.updateGuards.forEach(D=>{J.push(Mn(D,U,Q))});return J.push(x),ri(J)}).then(()=>{J=[];for(const F of X)if(F.beforeEnter)if(ae(F.beforeEnter))for(const D of F.beforeEnter)J.push(Mn(D,U,Q));else J.push(Mn(F.beforeEnter,U,Q));return J.push(x),ri(J)}).then(()=>(U.matched.forEach(F=>F.enterCallbacks={}),J=lk(X,"beforeRouteEnter",U,Q,_),J.push(x),ri(J))).then(()=>{J=[];for(const F of l.list())J.push(Mn(F,U,Q));return J.push(x),ri(J)}).catch(F=>nn(F,8)?F:Promise.reject(F))}function N(U,Q,J){r.list().forEach(ki=>_(()=>ki(U,Q,J)))}function T(U,Q,J,ki,ci){const X=y(U,Q);if(X)return X;const x=Q===rn,F=kn?history.state:{};J&&(ki||x?a.replace(U.fullPath,qi({scroll:x&&F&&F.scroll},ci)):a.push(U.fullPath,ci)),h.value=U,pi(U,Q,J,x),li()}let V;function E(){V||(V=a.listen((U,Q,J)=>{if(!K.listening)return;const ki=f(U),ci=S(ki);if(ci){L(qi(ci,{replace:!0,force:!0}),ki).catch(hl);return}p=ki;const X=h.value;kn&&EE(Ig(X.fullPath,J.delta),tp()),R(ki,X).catch(x=>nn(x,12)?x:nn(x,2)?(L(qi(m(x.to),{force:!0}),ki).then(F=>{nn(F,20)&&!J.delta&&J.type===Fl.pop&&a.go(-1,!1)}).catch(hl),Promise.reject()):(J.delta&&a.go(-J.delta,!1),G(x,ki,X))).then(x=>{x=x||T(ki,X,!1),x&&(J.delta&&!nn(x,8)?a.go(-J.delta,!1):J.type===Fl.pop&&nn(x,20)&&a.go(-1,!1)),N(ki,X,x)}).catch(hl)}))}let $=$t(),I=$t(),M;function G(U,Q,J){li(U);const ki=I.list();return ki.length?ki.forEach(ci=>ci(U,Q,J)):console.error(U),Promise.reject(U)}function Y(){return M&&h.value!==rn?Promise.resolve():new Promise((U,Q)=>{$.add([U,Q])})}function li(U){return M||(M=!U,E(),$.list().forEach(([Q,J])=>U?J(U):Q()),$.reset()),U}function pi(U,Q,J,ki){const{scrollBehavior:ci}=i;if(!kn||!ci)return Promise.resolve();const X=!J&&bE(Ig(U.fullPath,0))||(ki||!J)&&history.state&&history.state.scroll||null;return Hi().then(()=>ci(U,Q,X)).then(x=>x&&FE(x)).catch(x=>G(x,U,Q))}const ei=U=>a.go(U);let q;const W=new Set,K={currentRoute:h,listening:!0,addRoute:o,removeRoute:c,clearRoutes:s.clearRoutes,hasRoute:g,getRoutes:A,resolve:f,options:i,push:v,replace:C,go:ei,back:()=>ei(-1),forward:()=>ei(1),beforeEach:t.add,beforeResolve:l.add,afterEach:r.add,onError:I.add,isReady:Y,install(U){const Q=this;U.component("RouterLink",WE),U.component("RouterView",ZE),U.config.globalProperties.$router=Q,Object.defineProperty(U.config.globalProperties,"$route",{enumerable:!0,get:()=>mi(h)}),kn&&!q&&h.value===rn&&(q=!0,v(a.location).catch(ci=>{}));const J={};for(const ci in rn)Object.defineProperty(J,ci,{get:()=>h.value[ci],enumerable:!0});U.provide(lp,Q),U.provide(Cu,gy(J)),U.provide(eo,h);const ki=U.unmount;W.add(U),U.unmount=function(){W.delete(U),W.size<1&&(p=rn,V&&V(),V=null,h.value=rn,q=!1,M=!1),ki()},kn&&QE(U,Q,s)}};function ri(U){return U.reduce((Q,J)=>Q.then(()=>_(J)),Promise.resolve())}return K}function kb(i,s){const e=[],n=[],a=[],t=Math.max(s.matched.length,i.matched.length);for(let l=0;l<t;l++){const r=s.matched[l];r&&(i.matched.find(p=>Jn(p,r))?n.push(r):e.push(r));const h=i.matched[l];h&&(s.matched.find(p=>Jn(p,h))||a.push(h))}return[e,n,a]}function De(){return Ni(lp)}function Ke(i){return Ni(Cu)}var _u=Symbol(""),xe=()=>{const i=Ni(_u);if(!i)throw new Error("useClientData() is called without provider.");return i},db=()=>xe().pageComponent,Bs=()=>xe().pageData,ji=()=>xe().pageFrontmatter,ob=()=>xe().pageHead,Du=()=>xe().pageLang,ub=()=>xe().pageLayout,Be=()=>xe().routeLocale,nr=()=>xe().routePath,cb=()=>xe().routes,xu=()=>xe().siteData,wt=()=>xe().siteLocaleData,nh=Ti([]),_n=i=>{nh.value.push(i),_s(()=>{nh.value=nh.value.filter(s=>s!==i)})},gb=Symbol(""),ao=Ti(qF),Ja=Ti(HF),J4=(i,s)=>{const e=RF(i,s);if(Ja.value[e])return e;const n=encodeURI(e);if(Ja.value[n])return n;const a=ao.value[e]||ao.value[n];return a||e},Ks=(i,s)=>{const{pathname:e,hashAndQueries:n}=w4(i),a=J4(e,s),t=a+n;return Ja.value[a]?{...Ja.value[a],path:t,notFound:!1}:{...Ja.value["/404.html"],path:t,notFound:!0}},Bb=(i,s)=>{const{pathname:e,hashAndQueries:n}=w4(i);return J4(e,s)+n},Ab=i=>{if(!(i.metaKey||i.altKey||i.ctrlKey||i.shiftKey)&&!i.defaultPrevented&&!(i.button!==void 0&&i.button!==0)){if(i.currentTarget){const s=i.currentTarget.getAttribute("target");if(s!=null&&s.match(/\b_blank\b/i))return}return i.preventDefault(),!0}},ms=ti({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(i,{slots:s}){const e=De(),n=Ke(),a=z(()=>i.to.startsWith("#")||i.to.startsWith("?")?i.to:`/rust-course/${Bb(i.to,n.path).substring(1)}`);return()=>B("a",{class:["route-link",{[i.activeClass]:i.active}],href:a.value,onClick:(t={})=>{Ab(t)&&e.push(i.to).catch()}},s.default())}}),yb=ti({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(i,{slots:s}){const e=Mi(i,"config"),n=Ke(),a=xu(),t=z(()=>sr(e.value.link)),l=z(()=>e.value.target||(t.value?"_blank":void 0)),r=z(()=>l.value==="_blank"),h=z(()=>!t.value&&!r.value),p=z(()=>e.value.rel||(r.value?"noopener noreferrer":null)),k=z(()=>e.value.ariaLabel??e.value.text),d=z(()=>{if(e.value.exact)return!1;const o=Object.keys(a.value.locales);return o.length?o.every(c=>c!==e.value.link):e.value.link!=="/"}),u=z(()=>h.value?e.value.activeMatch?(e.value.activeMatch instanceof RegExp?e.value.activeMatch:new RegExp(e.value.activeMatch,"u")).test(n.path):d.value?n.path.startsWith(e.value.link):n.path===e.value.link:!1);return()=>{const{before:o,after:c,default:A}=s,g=(A==null?void 0:A(e.value))??[o==null?void 0:o(e.value),e.value.text,c==null?void 0:c(e.value)];return h.value?B(ms,{class:"auto-link",to:e.value.link,active:u.value,"aria-label":k.value},()=>g):B("a",{class:"auto-link external-link",href:e.value.link,"aria-label":k.value,rel:p.value,target:l.value},g)}}}),wu=ti({name:"ClientOnly",setup(i,s){const e=Z(!1);return Di(()=>{e.value=!0}),()=>{var n,a;return e.value?(a=(n=s.slots).default)==null?void 0:a.call(n):null}}}),Rr=i=>{nh.value.forEach(s=>s(i))},Q4=ti({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(i){const s=db(),e=z(()=>{if(!i.path)return s.value;const a=Ks(i.path);return Oy(async()=>a.loader().then(({comp:t})=>t))}),n=ji();return bi(n,()=>{Rr("updated")},{deep:!0,flush:"post"}),()=>B(e.value,{onVnodeMounted:()=>{Rr("mounted")},onVnodeUpdated:()=>{Rr("updated")},onVnodeBeforeUnmount:()=>{Rr("beforeUnmount")}})}}),fb="Layout",mb="en-US",ka=Xn({resolveLayouts:i=>i.reduce((s,e)=>({...s,...e.layouts}),{}),resolvePageHead:(i,s,e)=>{const n=ls(s.description)?s.description:e.description,a=[...Array.isArray(s.head)?s.head:[],...e.head,["title",{},i],["meta",{name:"description",content:n}]];return $F(a)},resolvePageHeadTitle:(i,s)=>[i.title,s.title].filter(e=>!!e).join(" | "),resolvePageLang:(i,s)=>i.lang||s.lang||mb,resolvePageLayout:(i,s)=>{const e=ls(i.frontmatter.layout)?i.frontmatter.layout:fb;if(!s[e])throw new Error(`[vuepress] Cannot resolve layout: ${e}`);return s[e]},resolveRouteLocale:(i,s)=>OF(i,decodeURI(s)),resolveSiteLocaleData:({base:i,locales:s,...e},n)=>{var a;return{...e,...s[n],head:[...((a=s[n])==null?void 0:a.head)??[],...e.head]}}}),Ts=(i={})=>i,Gi=i=>aa(i)?i:`/rust-course/${T4(i)}`,vb=Object.defineProperty,Fb=(i,s)=>{for(var e in s)vb(i,e,{get:s[e],enumerable:!0})};const Eb=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),bb=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),Cb=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));function Ra(i){return Zh()?(el(i),!0):!1}const rk=new WeakMap,_b=(...i)=>{var s;const e=i[0],n=(s=pe())==null?void 0:s.proxy;if(n==null&&!Gy())throw new Error("injectLocal must be called in setup");return n&&rk.has(n)&&e in rk.get(n)?rk.get(n)[e]:Ni(...i)},ar=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Db=i=>i!=null,xb=Object.prototype.toString,wb=i=>xb.call(i)==="[object Object]",Ms=()=>{},to=Tb();function Tb(){var i,s;return ar&&((i=window==null?void 0:window.navigator)==null?void 0:i.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((s=window==null?void 0:window.navigator)==null?void 0:s.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function Tu(i,s){function e(...n){return new Promise((a,t)=>{Promise.resolve(i(()=>s.apply(this,n),{fn:s,thisArg:this,args:n})).then(a).catch(t)})}return e}const i3=i=>i();function Sb(i,s={}){let e,n,a=Ms;const t=h=>{clearTimeout(h),a(),a=Ms};let l;return h=>{const p=vi(i),k=vi(s.maxWait);return e&&t(e),p<=0||k!==void 0&&k<=0?(n&&(t(n),n=null),Promise.resolve(h())):new Promise((d,u)=>{a=s.rejectOnCancel?u:d,l=h,k&&!n&&(n=setTimeout(()=>{e&&t(e),n=null,d(l())},k)),e=setTimeout(()=>{n&&t(n),n=null,d(h())},p)})}}function Ib(...i){let s=0,e,n=!0,a=Ms,t,l,r,h,p;!ts(i[0])&&typeof i[0]=="object"?{delay:l,trailing:r=!0,leading:h=!0,rejectOnCancel:p=!1}=i[0]:[l,r=!0,h=!0,p=!1]=i;const k=()=>{e&&(clearTimeout(e),e=void 0,a(),a=Ms)};return u=>{const o=vi(l),c=Date.now()-s,A=()=>t=u();return k(),o<=0?(s=Date.now(),A()):(c>o&&(h||!n)?(s=Date.now(),A()):r&&(t=new Promise((g,f)=>{a=p?f:g,e=setTimeout(()=>{s=Date.now(),n=!0,g(A()),k()},Math.max(0,o-c))})),!h&&!e&&(e=setTimeout(()=>n=!0,o)),n=!1,t)}}function Rb(i=i3,s={}){const{initialState:e="active"}=s,n=e3(e==="active");function a(){n.value=!1}function t(){n.value=!0}const l=(...r)=>{n.value&&i(...r)};return{isActive:We(n),pause:a,resume:t,eventFilter:l}}function Ob(i){let s;function e(){return s||(s=i()),s}return e.reset=async()=>{const n=s;s=void 0,n&&await n},e}function Wg(i){return i.endsWith("rem")?Number.parseFloat(i)*16:Number.parseFloat(i)}function s3(i){return pe()}function kl(i){return Array.isArray(i)?i:[i]}function e3(...i){if(i.length!==1)return Mi(...i);const s=i[0];return typeof s=="function"?We(ou(()=>({get:s,set:Ms}))):Z(s)}function rp(i,s=200,e={}){return Tu(Sb(s,e),i)}function n3(i,s=200,e=!1,n=!0,a=!1){return Tu(Ib(s,e,n,a),i)}function Pb(i,s,e={}){const{eventFilter:n=i3,...a}=e;return bi(i,Tu(n,s),a)}function Lb(i,s,e={}){const{eventFilter:n,initialState:a="active",...t}=e,{eventFilter:l,pause:r,resume:h,isActive:p}=Rb(n,{initialState:a});return{stop:Pb(i,s,{...t,eventFilter:l}),pause:r,resume:h,isActive:p}}function tr(i,s=!0,e){s3()?Di(i,e):s?i():Hi(i)}function Nb(i,s){s3()&&_s(i,s)}function Mb(i,s,e={}){const{immediate:n=!0,immediateCallback:a=!1}=e,t=Ti(!1);let l=null;function r(){l&&(clearTimeout(l),l=null)}function h(){t.value=!1,r()}function p(...k){a&&i(),r(),t.value=!0,l=setTimeout(()=>{t.value=!1,l=null,i(...k)},vi(s))}return n&&(t.value=!0,ar&&p()),Ra(h),{isPending:We(t),start:p,stop:h}}function El(i=!1,s={}){const{truthyValue:e=!0,falsyValue:n=!1}=s,a=ts(i),t=Z(i);function l(r){if(arguments.length)return t.value=r,t.value;{const h=vi(e);return t.value=t.value===h?vi(n):h,t.value}}return a?l:[t,l]}function te(i,s,e){return bi(i,s,{...e,immediate:!0})}const Os=ar?window:void 0,a3=ar?window.document:void 0,t3=ar?window.navigator:void 0;function ws(i){var s;const e=vi(i);return(s=e==null?void 0:e.$el)!=null?s:e}function Ri(...i){const s=[],e=()=>{s.forEach(r=>r()),s.length=0},n=(r,h,p,k)=>(r.addEventListener(h,p,k),()=>r.removeEventListener(h,p,k)),a=z(()=>{const r=kl(vi(i[0])).filter(h=>h!=null);return r.every(h=>typeof h!="string")?r:void 0}),t=te(()=>{var r,h;return[(h=(r=a.value)==null?void 0:r.map(p=>ws(p)))!=null?h:[Os].filter(p=>p!=null),kl(vi(a.value?i[1]:i[0])),kl(mi(a.value?i[2]:i[1])),vi(a.value?i[3]:i[2])]},([r,h,p,k])=>{if(e(),!(r!=null&&r.length)||!(h!=null&&h.length)||!(p!=null&&p.length))return;const d=wb(k)?{...k}:k;s.push(...r.flatMap(u=>h.flatMap(o=>p.map(c=>n(u,o,c,d)))))},{flush:"post"}),l=()=>{t(),e()};return Ra(e),l}let Kg=!1;function $b(i,s,e={}){const{window:n=Os,ignore:a=[],capture:t=!0,detectIframe:l=!1,controls:r=!1}=e;if(!n)return r?{stop:Ms,cancel:Ms,trigger:Ms}:Ms;if(to&&!Kg){Kg=!0;const g={passive:!0};Array.from(n.document.body.children).forEach(f=>Ri(f,"click",Ms,g)),Ri(n.document.documentElement,"click",Ms,g)}let h=!0;const p=g=>vi(a).some(f=>{if(typeof f=="string")return Array.from(n.document.querySelectorAll(f)).some(m=>m===g.target||g.composedPath().includes(m));{const m=ws(f);return m&&(g.target===m||g.composedPath().includes(m))}});function k(g){const f=vi(g);return f&&f.$.subTree.shapeFlag===16}function d(g,f){const m=vi(g),y=m.$.subTree&&m.$.subTree.children;return y==null||!Array.isArray(y)?!1:y.some(v=>v.el===f.target||f.composedPath().includes(v.el))}const u=g=>{const f=ws(i);if(g.target!=null&&!(!(f instanceof Element)&&k(i)&&d(i,g))&&!(!f||f===g.target||g.composedPath().includes(f))){if("detail"in g&&g.detail===0&&(h=!p(g)),!h){h=!0;return}s(g)}};let o=!1;const c=[Ri(n,"click",g=>{o||(o=!0,setTimeout(()=>{o=!1},0),u(g))},{passive:!0,capture:t}),Ri(n,"pointerdown",g=>{const f=ws(i);h=!p(g)&&!!(f&&!g.composedPath().includes(f))},{passive:!0}),l&&Ri(n,"blur",g=>{setTimeout(()=>{var f;const m=ws(i);((f=n.document.activeElement)==null?void 0:f.tagName)==="IFRAME"&&!(m!=null&&m.contains(n.document.activeElement))&&s(g)},0)},{passive:!0})].filter(Boolean),A=()=>c.forEach(g=>g());return r?{stop:A,cancel:()=>{h=!1},trigger:g=>{h=!0,u(g),h=!1}}:A}function Vb(){const i=Ti(!1),s=pe();return s&&Di(()=>{i.value=!0},s),i}function Oa(i){const s=Vb();return z(()=>(s.value,!!i()))}function l3(i,s,e={}){const{window:n=Os,...a}=e;let t;const l=Oa(()=>n&&"MutationObserver"in n),r=()=>{t&&(t.disconnect(),t=void 0)},h=z(()=>{const u=vi(i),o=kl(u).map(ws).filter(Db);return new Set(o)}),p=bi(()=>h.value,u=>{r(),l.value&&u.size&&(t=new MutationObserver(s),u.forEach(o=>t.observe(o,a)))},{immediate:!0,flush:"post"}),k=()=>t==null?void 0:t.takeRecords(),d=()=>{p(),r()};return Ra(d),{isSupported:l,stop:d,takeRecords:k}}function zb(i,s,e={}){const{window:n=Os,document:a=n==null?void 0:n.document,flush:t="sync"}=e;if(!n||!a)return Ms;let l;const r=k=>{l==null||l(),l=k},h=ep(()=>{const k=ws(i);if(k){const{stop:d}=l3(a,u=>{u.map(c=>[...c.removedNodes]).flat().some(c=>c===k||c.contains(k))&&s(u)},{window:n,childList:!0,subtree:!0});r(d)}},{flush:t}),p=()=>{h(),r()};return Ra(p),p}const qb=Symbol("vueuse-ssr-width");function Hb(){const i=Gy()?_b(qb,null):null;return typeof i=="number"?i:void 0}function Su(i,s={}){const{window:e=Os,ssrWidth:n=Hb()}=s,a=Oa(()=>e&&"matchMedia"in e&&typeof e.matchMedia=="function"),t=Z(typeof n=="number"),l=Ti(),r=Ti(!1),h=p=>{r.value=p.matches};return ep(()=>{if(t.value){t.value=!a.value;const p=vi(i).split(",");r.value=p.some(k=>{const d=k.includes("not all"),u=k.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),o=k.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let c=!!(u||o);return u&&c&&(c=n>=Wg(u[1])),o&&c&&(c=n<=Wg(o[1])),d?!c:c});return}a.value&&(l.value=e.matchMedia(vi(i)),r.value=l.value.matches)}),Ri(l,"change",h,{passive:!0}),z(()=>r.value)}function Yg(i,s={}){const{controls:e=!1,navigator:n=t3}=s,a=Oa(()=>n&&"permissions"in n),t=Ti(),l=typeof i=="string"?{name:i}:i,r=Ti(),h=()=>{var k,d;r.value=(d=(k=t.value)==null?void 0:k.state)!=null?d:"prompt"};Ri(t,"change",h,{passive:!0});const p=Ob(async()=>{if(a.value){if(!t.value)try{t.value=await n.permissions.query(l)}catch{t.value=void 0}finally{h()}if(e)return Pi(t.value)}});return p(),e?{state:r,isSupported:a,query:p}:r}function jb(i={}){const{navigator:s=t3,read:e=!1,source:n,copiedDuring:a=1500,legacy:t=!1}=i,l=Oa(()=>s&&"clipboard"in s),r=Yg("clipboard-read"),h=Yg("clipboard-write"),p=z(()=>l.value||t),k=Ti(""),d=Ti(!1),u=Mb(()=>d.value=!1,a,{immediate:!1});function o(){let m=!(l.value&&f(r.value));if(!m)try{s.clipboard.readText().then(y=>{k.value=y})}catch{m=!0}m&&(k.value=g())}p.value&&e&&Ri(["copy","cut"],o,{passive:!0});async function c(m=vi(n)){if(p.value&&m!=null){let y=!(l.value&&f(h.value));if(!y)try{await s.clipboard.writeText(m)}catch{y=!0}y&&A(m),k.value=m,d.value=!0,u.start()}}function A(m){const y=document.createElement("textarea");y.value=m??"",y.style.position="absolute",y.style.opacity="0",document.body.appendChild(y),y.select(),document.execCommand("copy"),y.remove()}function g(){var m,y,v;return(v=(y=(m=document==null?void 0:document.getSelection)==null?void 0:m.call(document))==null?void 0:y.toString())!=null?v:""}function f(m){return m==="granted"||m==="prompt"}return{isSupported:p,text:k,copied:d,copy:c}}const Or=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Pr="__vueuse_ssr_handlers__",Ub=Gb();function Gb(){return Pr in Or||(Or[Pr]=Or[Pr]||{}),Or[Pr]}function Wb(i,s){return Ub[i]||s}function Kb(i){return Su("(prefers-color-scheme: dark)",i)}function Yb(i){return i==null?"any":i instanceof Set?"set":i instanceof Map?"map":i instanceof Date?"date":typeof i=="boolean"?"boolean":typeof i=="string"?"string":typeof i=="object"?"object":Number.isNaN(i)?"any":"number"}const Xb={boolean:{read:i=>i==="true",write:i=>String(i)},object:{read:i=>JSON.parse(i),write:i=>JSON.stringify(i)},number:{read:i=>Number.parseFloat(i),write:i=>String(i)},any:{read:i=>i,write:i=>String(i)},string:{read:i=>i,write:i=>String(i)},map:{read:i=>new Map(JSON.parse(i)),write:i=>JSON.stringify(Array.from(i.entries()))},set:{read:i=>new Set(JSON.parse(i)),write:i=>JSON.stringify(Array.from(i))},date:{read:i=>new Date(i),write:i=>i.toISOString()}},Xg="vueuse-storage";function lr(i,s,e,n={}){var a;const{flush:t="pre",deep:l=!0,listenToStorageChanges:r=!0,writeDefaults:h=!0,mergeDefaults:p=!1,shallow:k,window:d=Os,eventFilter:u,onError:o=N=>{console.error(N)},initOnMounted:c}=n,A=(k?Ti:Z)(typeof s=="function"?s():s),g=z(()=>vi(i));if(!e)try{e=Wb("getDefaultStorage",()=>{var N;return(N=Os)==null?void 0:N.localStorage})()}catch(N){o(N)}if(!e)return A;const f=vi(s),m=Yb(f),y=(a=n.serializer)!=null?a:Xb[m],{pause:v,resume:C}=Lb(A,()=>L(A.value),{flush:t,deep:l,eventFilter:u});bi(g,()=>_(),{flush:t}),d&&r&&tr(()=>{e instanceof Storage?Ri(d,"storage",_,{passive:!0}):Ri(d,Xg,R),c&&_()}),c||_();function S(N,T){if(d){const V={key:g.value,oldValue:N,newValue:T,storageArea:e};d.dispatchEvent(e instanceof Storage?new StorageEvent("storage",V):new CustomEvent(Xg,{detail:V}))}}function L(N){try{const T=e.getItem(g.value);if(N==null)S(T,null),e.removeItem(g.value);else{const V=y.write(N);T!==V&&(e.setItem(g.value,V),S(T,V))}}catch(T){o(T)}}function w(N){const T=N?N.newValue:e.getItem(g.value);if(T==null)return h&&f!=null&&e.setItem(g.value,y.write(f)),f;if(!N&&p){const V=y.read(T);return typeof p=="function"?p(V,f):m==="object"&&!Array.isArray(V)?{...f,...V}:V}else return typeof T!="string"?T:y.read(T)}function _(N){if(!(N&&N.storageArea!==e)){if(N&&N.key==null){A.value=f;return}if(!(N&&N.key!==g.value)){v();try{(N==null?void 0:N.newValue)!==y.write(A.value)&&(A.value=w(N))}catch(T){o(T)}finally{N?Hi(C):C()}}}}function R(N){_(N.detail)}return A}function Zb(i,s,e={}){const{window:n=Os,...a}=e;let t;const l=Oa(()=>n&&"ResizeObserver"in n),r=()=>{t&&(t.disconnect(),t=void 0)},h=z(()=>{const d=vi(i);return Array.isArray(d)?d.map(u=>ws(u)):[ws(d)]}),p=bi(h,d=>{if(r(),l.value&&n){t=new ResizeObserver(s);for(const u of d)u&&t.observe(u,a)}},{immediate:!0,flush:"post"}),k=()=>{r(),p()};return Ra(k),{isSupported:l,stop:k}}function Jb(i,s={}){const{delayEnter:e=0,delayLeave:n=0,triggerOnRemoval:a=!1,window:t=Os}=s,l=Ti(!1);let r;const h=p=>{const k=p?e:n;r&&(clearTimeout(r),r=void 0),k?r=setTimeout(()=>l.value=p,k):l.value=p};return t&&(Ri(i,"mouseenter",()=>h(!0),{passive:!0}),Ri(i,"mouseleave",()=>h(!1),{passive:!0}),a&&zb(z(()=>ws(i)),()=>h(!1))),l}function Qb(i,s={width:0,height:0},e={}){const{window:n=Os,box:a="content-box"}=e,t=z(()=>{var d,u;return(u=(d=ws(i))==null?void 0:d.namespaceURI)==null?void 0:u.includes("svg")}),l=Z(s.width),r=Z(s.height),{stop:h}=Zb(i,([d])=>{const u=a==="border-box"?d.borderBoxSize:a==="content-box"?d.contentBoxSize:d.devicePixelContentBoxSize;if(n&&t.value){const o=ws(i);if(o){const c=o.getBoundingClientRect();l.value=c.width,r.value=c.height}}else if(u){const o=kl(u);l.value=o.reduce((c,{inlineSize:A})=>c+A,0),r.value=o.reduce((c,{blockSize:A})=>c+A,0)}else l.value=d.contentRect.width,r.value=d.contentRect.height},e);tr(()=>{const d=ws(i);d&&(l.value="offsetWidth"in d?d.offsetWidth:s.width,r.value="offsetHeight"in d?d.offsetHeight:s.height)});const p=bi(()=>ws(i),d=>{l.value=d?s.width:0,r.value=d?s.height:0});function k(){h(),p()}return{width:l,height:r,stop:k}}const Zg=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function hp(i,s={}){const{document:e=a3,autoExit:n=!1}=s,a=z(()=>{var m;return(m=ws(i))!=null?m:e==null?void 0:e.documentElement}),t=Ti(!1),l=z(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(m=>e&&m in e||a.value&&m in a.value)),r=z(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(m=>e&&m in e||a.value&&m in a.value)),h=z(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(m=>e&&m in e||a.value&&m in a.value)),p=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(m=>e&&m in e),k=Oa(()=>a.value&&e&&l.value!==void 0&&r.value!==void 0&&h.value!==void 0),d=()=>p?(e==null?void 0:e[p])===a.value:!1,u=()=>{if(h.value){if(e&&e[h.value]!=null)return e[h.value];{const m=a.value;if((m==null?void 0:m[h.value])!=null)return!!m[h.value]}}return!1};async function o(){if(!(!k.value||!t.value)){if(r.value)if((e==null?void 0:e[r.value])!=null)await e[r.value]();else{const m=a.value;(m==null?void 0:m[r.value])!=null&&await m[r.value]()}t.value=!1}}async function c(){if(!k.value||t.value)return;u()&&await o();const m=a.value;l.value&&(m==null?void 0:m[l.value])!=null&&(await m[l.value](),t.value=!0)}async function A(){await(t.value?o():c())}const g=()=>{const m=u();(!m||m&&d())&&(t.value=m)},f={capture:!1,passive:!0};return Ri(e,Zg,g,f),Ri(()=>ws(a),Zg,g,f),n&&Ra(o),{isSupported:k,isFullscreen:t,enter:c,exit:o,toggle:A}}function hk(i){return typeof Window<"u"&&i instanceof Window?i.document.documentElement:typeof Document<"u"&&i instanceof Document?i.documentElement:i}const Jg=1;function i7(i,s={}){const{throttle:e=0,idle:n=200,onStop:a=Ms,onScroll:t=Ms,offset:l={left:0,right:0,top:0,bottom:0},eventListenerOptions:r={capture:!1,passive:!0},behavior:h="auto",window:p=Os,onError:k=L=>{console.error(L)}}=s,d=Ti(0),u=Ti(0),o=z({get(){return d.value},set(L){A(L,void 0)}}),c=z({get(){return u.value},set(L){A(void 0,L)}});function A(L,w){var _,R,N,T;if(!p)return;const V=vi(i);if(!V)return;(N=V instanceof Document?p.document.body:V)==null||N.scrollTo({top:(_=vi(w))!=null?_:c.value,left:(R=vi(L))!=null?R:o.value,behavior:vi(h)});const E=((T=V==null?void 0:V.document)==null?void 0:T.documentElement)||(V==null?void 0:V.documentElement)||V;o!=null&&(d.value=E.scrollLeft),c!=null&&(u.value=E.scrollTop)}const g=Ti(!1),f=Xn({left:!0,right:!1,top:!0,bottom:!1}),m=Xn({left:!1,right:!1,top:!1,bottom:!1}),y=L=>{g.value&&(g.value=!1,m.left=!1,m.right=!1,m.top=!1,m.bottom=!1,a(L))},v=rp(y,e+n),C=L=>{var w;if(!p)return;const _=((w=L==null?void 0:L.document)==null?void 0:w.documentElement)||(L==null?void 0:L.documentElement)||ws(L),{display:R,flexDirection:N,direction:T}=getComputedStyle(_),V=T==="rtl"?-1:1,E=_.scrollLeft;m.left=E<d.value,m.right=E>d.value;const $=E*V<=(l.left||0),I=E*V+_.clientWidth>=_.scrollWidth-(l.right||0)-Jg;R==="flex"&&N==="row-reverse"?(f.left=I,f.right=$):(f.left=$,f.right=I),d.value=E;let M=_.scrollTop;L===p.document&&!M&&(M=p.document.body.scrollTop),m.top=M<u.value,m.bottom=M>u.value;const G=M<=(l.top||0),Y=M+_.clientHeight>=_.scrollHeight-(l.bottom||0)-Jg;R==="flex"&&N==="column-reverse"?(f.top=Y,f.bottom=G):(f.top=G,f.bottom=Y),u.value=M},S=L=>{var w;if(!p)return;const _=(w=L.target.documentElement)!=null?w:L.target;C(_),g.value=!0,v(L),t(L)};return Ri(i,"scroll",e?n3(S,e,!0,!1):S,r),tr(()=>{try{const L=vi(i);if(!L)return;C(L)}catch(L){k(L)}}),Ri(i,"scrollend",y,r),{x:o,y:c,isScrolling:g,arrivedState:f,directions:m,measure(){const L=vi(i);p&&L&&C(L)}}}function s7(i,s,e={}){const{window:n=Os}=e;return lr(i,s,n==null?void 0:n.localStorage,e)}function e7(i={}){const{window:s=Os}=i;if(!s)return Z(["en"]);const e=s.navigator,n=Z(e.languages);return Ri(s,"languagechange",()=>{n.value=e.languages},{passive:!0}),n}function n7(i,s=Ms,e={}){const{immediate:n=!0,manual:a=!1,type:t="text/javascript",async:l=!0,crossOrigin:r,referrerPolicy:h,noModule:p,defer:k,document:d=a3,attrs:u={}}=e,o=Z(null);let c=null;const A=m=>new Promise((y,v)=>{const C=_=>(o.value=_,y(_),_);if(!d){y(!1);return}let S=!1,L=d.querySelector(`script[src="${vi(i)}"]`);L?L.hasAttribute("data-loaded")&&C(L):(L=d.createElement("script"),L.type=t,L.async=l,L.src=vi(i),k&&(L.defer=k),r&&(L.crossOrigin=r),p&&(L.noModule=p),h&&(L.referrerPolicy=h),Object.entries(u).forEach(([_,R])=>L==null?void 0:L.setAttribute(_,R)),S=!0);const w={passive:!0};Ri(L,"error",_=>v(_),w),Ri(L,"abort",_=>v(_),w),Ri(L,"load",()=>{L.setAttribute("data-loaded","true"),s(L),C(L)},w),S&&(L=d.head.appendChild(L)),m||C(L)}),g=(m=!0)=>(c||(c=A(m)),c),f=()=>{if(!d)return;c=null,o.value&&(o.value=null);const m=d.querySelector(`script[src="${vi(i)}"]`);m&&d.head.removeChild(m)};return n&&!a&&tr(g),a||Nb(f),{scriptTag:o,load:g,unload:f}}function r3(i){const s=window.getComputedStyle(i);if(s.overflowX==="scroll"||s.overflowY==="scroll"||s.overflowX==="auto"&&i.clientWidth<i.scrollWidth||s.overflowY==="auto"&&i.clientHeight<i.scrollHeight)return!0;{const e=i.parentNode;return!e||e.tagName==="BODY"?!1:r3(e)}}function a7(i){const s=i||window.event,e=s.target;return r3(e)?!1:s.touches.length>1?!0:(s.preventDefault&&s.preventDefault(),!1)}const pk=new WeakMap;function rr(i,s=!1){const e=Z(s);let n=null,a="";bi(e3(i),r=>{const h=hk(vi(r));if(h){const p=h;if(pk.get(p)||pk.set(p,p.style.overflow),p.style.overflow!=="hidden"&&(a=p.style.overflow),p.style.overflow==="hidden")return e.value=!0;if(e.value)return p.style.overflow="hidden"}},{immediate:!0});const t=()=>{const r=hk(vi(i));!r||e.value||(to&&(n=Ri(r,"touchmove",h=>{a7(h)},{passive:!1})),r.style.overflow="hidden",e.value=!0)},l=()=>{const r=hk(vi(i));!r||!e.value||(to&&(n==null||n()),r.style.overflow=a,pk.delete(r),e.value=!1)};return Ra(l),z({get(){return e.value},set(r){r?t():l()}})}function t7(i,s,e={}){const{window:n=Os}=e;return lr(i,s,n==null?void 0:n.sessionStorage,e)}function l7(i={}){const{window:s=Os,...e}=i;return i7(s,e)}function r7(i={}){const{window:s=Os,initialWidth:e=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:a=!0,includeScrollbar:t=!0,type:l="inner"}=i,r=Z(e),h=Z(n),p=()=>{if(s)if(l==="outer")r.value=s.outerWidth,h.value=s.outerHeight;else if(l==="visual"&&s.visualViewport){const{width:d,height:u,scale:o}=s.visualViewport;r.value=Math.round(d*o),h.value=Math.round(u*o)}else t?(r.value=s.innerWidth,h.value=s.innerHeight):(r.value=s.document.documentElement.clientWidth,h.value=s.document.documentElement.clientHeight)};p(),tr(p);const k={passive:!0};if(Ri("resize",p,k),s&&l==="visual"&&s.visualViewport&&Ri(s.visualViewport,"resize",p,k),a){const d=Su("(orientation: portrait)");bi(d,()=>p())}return{width:r,height:h}}var Rn={};Fb(Rn,{COMPONENT_STATE_TYPE:()=>h7,INSPECTOR_ID:()=>p7,INSPECTOR_LABEL:()=>k7,INSPECTOR_NODES:()=>d7,INSPECTOR_STATE_SECTION_NAME:()=>o7,PLUGIN_ID:()=>h3,PLUGIN_LABEL:()=>Iu});var h3="org.vuejs.vuepress",Iu="VuePress",h7=Iu,p7=h3,k7=Iu,Qg={id:"INTERNAL",label:"Internal",keys:["layouts","routes","redirects"]},i2={id:"SITE",label:"Site",keys:["siteData","siteLocaleData"]},s2={id:"ROUTE",label:"Route",keys:["routePath","routeLocale"]},e2={id:"PAGE",label:"Page",keys:["pageData","pageFrontmatter","pageLang","pageHead","pageHeadTitle","pageLayout","pageComponent"]},d7={[Qg.id]:Qg,[i2.id]:i2,[s2.id]:s2,[e2.id]:e2},o7="State";const u7=Ts({setup(){Ri("beforeprint",()=>{document.querySelectorAll("details").forEach(i=>{i.open=!0})})}}),c7=Object.freeze(Object.defineProperty({__proto__:null,default:u7},Symbol.toStringTag,{value:"Module"})),g7=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),B7="VUEPRESS_CODE_TAB_STORE",Lr=lr(B7,{}),A7=ti({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:String},slots:Object,setup(i,{slots:s}){const e=Z(i.active),n=Ti([]),a=()=>{i.tabId&&(Lr.value[i.tabId]=i.data[e.value].id)},t=(p=e.value)=>{e.value=p<n.value.length-1?p+1:0,n.value[e.value].focus()},l=(p=e.value)=>{e.value=p>0?p-1:n.value.length-1,n.value[e.value].focus()},r=(p,k)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),e.value=k):p.key==="ArrowRight"?(p.preventDefault(),t()):p.key==="ArrowLeft"&&(p.preventDefault(),l()),i.tabId&&(Lr.value[i.tabId]=i.data[e.value].id)},h=()=>{if(i.tabId){const p=i.data.findIndex(({id:k})=>Lr.value[i.tabId]===k);if(p!==-1)return p}return i.active};return Di(()=>{e.value=h(),bi(()=>i.tabId&&Lr.value[i.tabId],(p,k)=>{if(i.tabId&&p!==k){const d=i.data.findIndex(({id:u})=>u===p);d!==-1&&(e.value=d)}})}),()=>i.data.length?B("div",{class:"vp-code-tabs"},[B("div",{class:"vp-code-tabs-nav",role:"tablist"},i.data.map(({id:p},k)=>{const d=k===e.value;return B("button",{type:"button",ref:u=>{u&&(n.value[k]=u)},class:["vp-code-tab-nav",{active:d}],role:"tab","aria-controls":`codetab-${i.id}-${k}`,"aria-selected":d,onClick:()=>{e.value=k,a()},onKeydown:u=>{r(u,k)}},s[`title${k}`]({value:p,isActive:d}))})),i.data.map(({id:p},k)=>{const d=k===e.value;return B("div",{class:["vp-code-tab",{active:d}],id:`codetab-${i.id}-${k}`,role:"tabpanel","aria-expanded":d},[B("div",{class:"vp-code-tab-title"},s[`title${k}`]({value:p,isActive:d})),s[`tab${k}`]({value:p,isActive:d})])})]):null}}),y7="VUEPRESS_TAB_STORE",kk=lr(y7,{}),f7=ti({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:String},slots:Object,setup(i,{slots:s}){const e=Z(i.active),n=Ti([]),a=()=>{i.tabId&&(kk.value[i.tabId]=i.data[e.value].id)},t=(p=e.value)=>{e.value=p<n.value.length-1?p+1:0,n.value[e.value].focus()},l=(p=e.value)=>{e.value=p>0?p-1:n.value.length-1,n.value[e.value].focus()},r=(p,k)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),e.value=k):p.key==="ArrowRight"?(p.preventDefault(),t()):p.key==="ArrowLeft"&&(p.preventDefault(),l()),a()},h=()=>{if(i.tabId){const p=i.data.findIndex(({id:k})=>kk.value[i.tabId]===k);if(p!==-1)return p}return i.active};return Di(()=>{e.value=h(),bi(()=>i.tabId&&kk.value[i.tabId],(p,k)=>{if(i.tabId&&p!==k){const d=i.data.findIndex(({id:u})=>u===p);d!==-1&&(e.value=d)}})}),()=>i.data.length?B("div",{class:"vp-tabs"},[B("div",{class:"vp-tabs-nav",role:"tablist"},i.data.map(({id:p},k)=>{const d=k===e.value;return B("button",{type:"button",ref:u=>{u&&(n.value[k]=u)},class:["vp-tab-nav",{active:d}],role:"tab","aria-controls":`tab-${i.id}-${k}`,"aria-selected":d,onClick:()=>{e.value=k,a()},onKeydown:u=>{r(u,k)}},s[`title${k}`]({value:p,isActive:d}))})),i.data.map(({id:p},k)=>{const d=k===e.value;return B("div",{class:["vp-tab",{active:d}],id:`tab-${i.id}-${k}`,role:"tabpanel","aria-expanded":d},[B("div",{class:"vp-tab-title"},s[`title${k}`]({value:p,isActive:d})),s[`tab${k}`]({value:p,isActive:d})])})]):null}}),m7={enhance:({app:i})=>{i.component("CodeTabs",A7),i.component("Tabs",f7)}},v7=Object.freeze(Object.defineProperty({__proto__:null,default:m7},Symbol.toStringTag,{value:"Module"})),n2=i=>typeof i=="number"?`${i}px`:i,pp=({size:i=48,stroke:s=4,wrapper:e=!0,height:n=2*i})=>{const a=B("span",{style:`--loading-icon: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='xMidYMid' viewBox='25 25 50 50'%3E%3CanimateTransform attributeName='transform' type='rotate' dur='2s' keyTimes='0;1' repeatCount='indefinite' values='0;360'%3E%3C/animateTransform%3E%3Ccircle cx='50' cy='50' r='20' fill='none' stroke='currentColor' stroke-width='${s}' stroke-linecap='round'%3E%3Canimate attributeName='stroke-dasharray' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='1,200;90,200;1,200'%3E%3C/animate%3E%3Canimate attributeName='stroke-dashoffset' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='0;-35px;-125px'%3E%3C/animate%3E%3C/circle%3E%3C/svg%3E");
--icon-size: ${n2(i)};
display: inline-block;
width: var(--icon-size);
height: var(--icon-size);
background-color: currentcolor;
-webkit-mask-image: var(--loading-icon);
mask-image: var(--loading-icon);
`});return e?B("div",{style:`display: flex;
align-items: center;
justify-content: center;
height: ${n2(n)}`},a):a};pp.displayName="LoadingIcon";var ee=Uint8Array,Ha=Uint16Array,F7=Int32Array,p3=new ee([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),k3=new ee([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),E7=new ee([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),d3=function(i,s){for(var e=new Ha(31),n=0;n<31;++n)e[n]=s+=1<<i[n-1];for(var a=new F7(e[30]),n=1;n<30;++n)for(var t=e[n];t<e[n+1];++t)a[t]=t-e[n]<<5|n;return{b:e,r:a}},o3=d3(p3,2),u3=o3.b,b7=o3.r;u3[28]=258,b7[258]=28;var C7=d3(k3,0),_7=C7.b,lo=new Ha(32768);for(var as=0;as<32768;++as){var wn=(as&43690)>>1|(as&21845)<<1;wn=(wn&52428)>>2|(wn&13107)<<2,wn=(wn&61680)>>4|(wn&3855)<<4,lo[as]=((wn&65280)>>8|(wn&255)<<8)>>1}var dl=function(i,s,e){for(var n=i.length,a=0,t=new Ha(s);a<n;++a)i[a]&&++t[i[a]-1];var l=new Ha(s);for(a=1;a<s;++a)l[a]=l[a-1]+t[a-1]<<1;var r;if(e){r=new Ha(1<<s);var h=15-s;for(a=0;a<n;++a)if(i[a])for(var p=a<<4|i[a],k=s-i[a],d=l[i[a]-1]++<<k,u=d|(1<<k)-1;d<=u;++d)r[lo[d]>>h]=p}else for(r=new Ha(n),a=0;a<n;++a)i[a]&&(r[a]=lo[l[i[a]-1]++]>>15-i[a]);return r},hr=new ee(288);for(var as=0;as<144;++as)hr[as]=8;for(var as=144;as<256;++as)hr[as]=9;for(var as=256;as<280;++as)hr[as]=7;for(var as=280;as<288;++as)hr[as]=8;var c3=new ee(32);for(var as=0;as<32;++as)c3[as]=5;var D7=dl(hr,9,1),x7=dl(c3,5,1),dk=function(i){for(var s=i[0],e=1;e<i.length;++e)i[e]>s&&(s=i[e]);return s},ye=function(i,s,e){var n=s/8|0;return(i[n]|i[n+1]<<8)>>(s&7)&e},ok=function(i,s){var e=s/8|0;return(i[e]|i[e+1]<<8|i[e+2]<<16)>>(s&7)},w7=function(i){return(i+7)/8|0},g3=function(i,s,e){return(s==null||s<0)&&(s=0),(e==null||e>i.length)&&(e=i.length),new ee(i.subarray(s,e))},T7=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],oe=function(i,s,e){var n=new Error(s||T7[i]);if(n.code=i,Error.captureStackTrace&&Error.captureStackTrace(n,oe),!e)throw n;return n},S7=function(i,s,e,n){var a=i.length,t=0;if(!a||s.f&&!s.l)return e||new ee(0);var l=!e,r=l||s.i!=2,h=s.i;l&&(e=new ee(a*3));var p=function(ci){var X=e.length;if(ci>X){var x=new ee(Math.max(X*2,ci));x.set(e),e=x}},k=s.f||0,d=s.p||0,u=s.b||0,o=s.l,c=s.d,A=s.m,g=s.n,f=a*8;do{if(!o){k=ye(i,d,1);var m=ye(i,d+1,3);if(d+=3,m)if(m==1)o=D7,c=x7,A=9,g=5;else if(m==2){var S=ye(i,d,31)+257,L=ye(i,d+10,15)+4,w=S+ye(i,d+5,31)+1;d+=14;for(var _=new ee(w),R=new ee(19),N=0;N<L;++N)R[E7[N]]=ye(i,d+N*3,7);d+=L*3;for(var T=dk(R),V=(1<<T)-1,E=dl(R,T,1),N=0;N<w;){var $=E[ye(i,d,V)];d+=$&15;var y=$>>4;if(y<16)_[N++]=y;else{var I=0,M=0;for(y==16?(M=3+ye(i,d,3),d+=2,I=_[N-1]):y==17?(M=3+ye(i,d,7),d+=3):y==18&&(M=11+ye(i,d,127),d+=7);M--;)_[N++]=I}}var G=_.subarray(0,S),Y=_.subarray(S);A=dk(G),g=dk(Y),o=dl(G,A,1),c=dl(Y,g,1)}else oe(1);else{var y=w7(d)+4,v=i[y-4]|i[y-3]<<8,C=y+v;if(C>a){h&&oe(0);break}r&&p(u+v),e.set(i.subarray(y,C),u),s.b=u+=v,s.p=d=C*8,s.f=k;continue}if(d>f){h&&oe(0);break}}r&&p(u+131072);for(var li=(1<<A)-1,pi=(1<<g)-1,ei=d;;ei=d){var I=o[ok(i,d)&li],q=I>>4;if(d+=I&15,d>f){h&&oe(0);break}if(I||oe(2),q<256)e[u++]=q;else if(q==256){ei=d,o=null;break}else{var W=q-254;if(q>264){var N=q-257,K=p3[N];W=ye(i,d,(1<<K)-1)+u3[N],d+=K}var ri=c[ok(i,d)&pi],U=ri>>4;ri||oe(3),d+=ri&15;var Y=_7[U];if(U>3){var K=k3[U];Y+=ok(i,d)&(1<<K)-1,d+=K}if(d>f){h&&oe(0);break}r&&p(u+131072);var Q=u+W;if(u<Y){var J=t-Y,ki=Math.min(Y,Q);for(J+u<0&&oe(3);u<ki;++u)e[u]=n[J+u]}for(;u<Q;++u)e[u]=e[u-Y]}}s.l=o,s.p=ei,s.b=u,s.f=k,o&&(k=1,s.m=A,s.d=c,s.n=g)}while(!k);return u!=e.length&&l?g3(e,0,u):e.subarray(0,u)},I7=new ee(0),R7=function(i,s){return((i[0]&15)!=8||i[0]>>4>7||(i[0]<<8|i[1])%31)&&oe(6,"invalid zlib data"),(i[1]>>5&1)==1&&oe(6,"invalid zlib data: "+(i[1]&32?"need":"unexpected")+" dictionary"),(i[1]>>3&4)+2};function O7(i,s){return S7(i.subarray(R7(i),-4),{i:2},s,s)}var ro=typeof TextDecoder<"u"&&new TextDecoder,P7=0;try{ro.decode(I7,{stream:!0}),P7=1}catch{}var L7=function(i){for(var s="",e=0;;){var n=i[e++],a=(n>127)+(n>223)+(n>239);if(e+a>i.length)return{s,r:g3(i,e-1)};a?a==3?(n=((n&15)<<18|(i[e++]&63)<<12|(i[e++]&63)<<6|i[e++]&63)-65536,s+=String.fromCharCode(55296|n>>10,56320|n&1023)):a&1?s+=String.fromCharCode((n&31)<<6|i[e++]&63):s+=String.fromCharCode((n&15)<<12|(i[e++]&63)<<6|i[e++]&63):s+=String.fromCharCode(n)}};function N7(i,s){{for(var e=new ee(i.length),n=0;n<i.length;++n)e[n]=i.charCodeAt(n);return e}for(var a=i.length,n=0;n<a;++n);}function M7(i,s){var e;if(ro)return ro.decode(i);var n=L7(i),a=n.s,e=n.r;return e.length&&oe(8),a}const bl=i=>{const s=atob(i);return M7(O7(N7(s)))},$7=i=>/\b(?:Android|iPhone)/i.test(i),V7=i=>/version\/([\w.]+) .*(mobile ?safari|safari)/i.test(i),B3=i=>[/\((ipad);[-\w),; ]+apple/i,/applecoremedia\/[\w.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i].some(s=>s.test(i)),z7=i=>[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/cfnetwork\/.+darwin/i].some(s=>s.test(i)),q7=i=>[/(mac os x) ?([\w. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i].some(s=>s.test(i)),a2=()=>document.documentElement.getAttribute("data-theme")==="dark",A3=[...new Array(6)].map((i,s)=>`[vp-content] h${s+1}`).join(","),H7=(i,s=2)=>{if(s===!1)return[];const[e,n]=typeof s=="number"?[s,s]:s==="deep"?[2,6]:s,a=i.filter(l=>l.level>=e&&l.level<=n),t=[];i:for(let l=0;l<a.length;l++){const r=a[l];if(l===0)t.push(r);else{for(let h=l-1;h>=0;h--){const p=a[h];if(p.level<r.level){p.children.push(r);continue i}}t.push(r)}}return t},j7=(i,s=[])=>{let e;if(s.length){const n=i.cloneNode(!0);n.querySelectorAll(s.join(",")).forEach(a=>{a.remove()}),e=n.textContent||""}else e=i.textContent||"";return e.trim()},U7=(i=A3,s=[])=>Array.from(document.querySelectorAll(i)).filter(e=>e.id&&e.hasChildNodes()).map(e=>({element:e,title:j7(e,s),link:`#${e.id}`,slug:e.id,level:Number(e.tagName[1]),children:[]})),G7=({selector:i=A3,levels:s=2,ignore:e=[]}={})=>H7(U7(i,e),s),W7=i=>i instanceof Element?document.activeElement===i&&(["TEXTAREA","SELECT","INPUT"].includes(i.tagName)||i.hasAttribute("contenteditable")):!1,K7=(i,s)=>s.some(e=>{if(ls(e))return e===i.key;const{key:n,ctrl:a=!1,shift:t=!1,alt:l=!1}=e;return n===i.key&&a===i.ctrlKey&&t===i.shiftKey&&l===i.altKey}),Ce=(i,s)=>{var n;const e=(n=(s==null?void 0:s._instance)??pe())==null?void 0:n.appContext.components;return e?i in e||Ws(i)in e||Xl(Ws(i))in e:!1};let Y7=null;const X7=()=>{const i=Z(!1);return Di(()=>{i.value=a2(),l3(document.documentElement,()=>{i.value=a2()},{attributeFilter:["data-theme"],attributes:!0})}),We(i)},Z7=()=>Y7??(Y7=X7()),J7=(i={})=>{const s=Z([]);return _n(e=>{s.value=e==="beforeUnmount"?[]:G7(vi(i))}),s},Ye=i=>{const s=Be();return z(()=>vi(i)[s.value]??{})},Q7=(i,s)=>{Ri("keydown",n=>{const a=vi(i);a!=null&&a.length&&K7(n,a)&&!W7(n.target)&&(n.preventDefault(),s())})},kp=i=>typeof i<"u",ah=i=>typeof i=="number",{isArray:Dh}=Array,Cl=(i,s)=>ls(i)&&i.startsWith(s),i5=(i,s)=>ls(i)&&i.endsWith(s),{entries:Pa}=Object,{keys:Ge}=Object,{values:s5}=Object,Ru=i=>{if(i){if(typeof i=="number")return new Date(i);const s=Date.parse(i.toString());if(!Number.isNaN(s))return new Date(s)}return null},dp=i=>Cl(i,"/")&&i[1]!=="/",e5='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',n5='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var a5={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const uk=a5,t2={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},t5=(i,s,e)=>{const n=document.createElement(i);return er(s)&&Ge(s).forEach(a=>{if(a.indexOf("data"))n[a]=s[a];else{const t=a.replace("data","");n.dataset[t]=s[a]}}),n},Ou=i=>({...uk,...i,jsLib:Array.from(new Set([uk.jsLib,i.jsLib??[]].flat())),cssLib:Array.from(new Set([uk.cssLib,i.cssLib??[]].flat()))}),Qa=(i,s)=>{if(kp(i[s]))return i[s];const e=new Promise(n=>{var t;const a=document.createElement("script");a.src=s,(t=document.querySelector("body"))==null||t.appendChild(a),a.onload=()=>{n()}});return i[s]=e,e},l5=(i,s)=>{if(s.css&&Array.from(i.childNodes).every(e=>e.nodeName!=="STYLE")){const e=t5("style",{innerHTML:s.css});i.appendChild(e)}},r5=(i,s,e)=>{const n=e.getScript();if(n&&Array.from(s.childNodes).every(a=>a.nodeName!=="SCRIPT")){const a=document.createElement("script");a.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${i} .vp-code-demo-display').shadowRoot;
${n}}`)),s.appendChild(a)}},h5=["html","js","css"],p5=i=>{const s=Ge(i),e={html:[],js:[],css:[],isLegal:!1};return h5.forEach(n=>{const a=s.filter(t=>t2[n].types.includes(t));if(a.length){const t=a[0];e[n]=[i[t].replace(/^\n|\n$/g,""),t2[n].map[t]??t]}}),e.isLegal=(!e.html.length||e.html[1]==="none")&&(!e.js.length||e.js[1]==="none")&&(!e.css.length||e.css[1]==="none"),e},y3=i=>i.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),f3=i=>`<div id="app">
${y3(i)}
</div>`,k5=i=>`${i.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,d5=i=>i.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),m3=i=>`(function(exports){var module={};module.exports=exports;${i};return module.exports.__esModule?exports.default:module.exports;})({})`,o5=(i,s)=>{const e=Ou(s),n=i.js[0]??"";return{...e,html:y3(i.html[0]??""),js:n,css:i.css[0]??"",isLegal:i.isLegal,getScript:()=>{var a,t;return e.useBabel?((t=(a=window.Babel)==null?void 0:a.transform(n,{presets:["es2015"]}))==null?void 0:t.code)??"":n}}},u5=/<template>([\s\S]+)<\/template>/u,c5=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,g5=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,B5=(i,s)=>{const e=Ou(s),n=i.html[0]??"",a=u5.exec(n),t=c5.exec(n),l=g5.exec(n),r=(a==null?void 0:a[1].replace(/^\n|\n$/g,""))??"",[h="",p=""]=t?[t[4].replace(/^\n|\n$/g,""),t[3]]:[],[k="",d=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],u=p===""&&(d===""||d==="css");return{...e,html:f3(r),js:d5(h),css:k,isLegal:u,jsLib:[e.vue,...e.jsLib],getScript:()=>{var c,A;const o=s.useBabel?((A=(c=window.Babel)==null?void 0:c.transform(h,{presets:["es2015"]}))==null?void 0:A.code)??"":h.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${m3(o)};appOptions.template=\`${r.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},A5=(i,s)=>{var a;const e=Ou(s),n=i.js[0]??"";return{...e,html:f3(""),js:k5(n),css:i.css[0]??((a=i.js[0])==null?void 0:a.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:i.isLegal,jsLib:[e.react,e.reactDOM,...e.jsLib],jsx:!0,getScript:()=>{var l,r;const t=((r=(l=window.Babel)==null?void 0:l.transform(n,{presets:["es2015","react"]}))==null?void 0:r.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${m3(t)}))`}}},it={},y5=i=>Promise.all([Qa(it,i.babel),Qa(it,i.react),Qa(it,i.reactDOM)]),f5=i=>{const s=[Qa(it,i.vue)];return i.useBabel&&s.push(Qa(it,i.babel)),Promise.all(s)},m5=i=>i.useBabel?Qa(it,i.babel):Promise.resolve();var v5=ti({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:String,config:String,code:{type:String,required:!0}},slots:Object,setup(i,{slots:s}){const[e,n]=El(!1),a=Ti(),t=Ti(),l=Z("0"),r=Z(!1),h=z(()=>JSON.parse(i.config?bl(i.config):"{}")),p=z(()=>{const c=JSON.parse(bl(i.code));return p5(c)}),k=z(()=>i.type==="react"?A5(p.value,h.value):i.type==="vue"?B5(p.value,h.value):o5(p.value,h.value)),d=z(()=>k.value.isLegal),u=(c=!1)=>{const A=a.value.attachShadow({mode:"open"}),g=document.createElement("div");g.classList.add("code-demo-app"),A.appendChild(g),d.value?(c&&(g.innerHTML=k.value.html),l5(A,k.value),r5(i.id,A,k.value),l.value="0"):l.value="auto",r.value=!0},o=()=>{switch(i.type){case"react":return y5(k.value).then(()=>{u()});case"vue":return f5(k.value).then(()=>{u()});default:return m5(k.value).then(()=>{u(!0)})}};return Ri("beforeprint",()=>{n(!0)}),Di(async()=>{await o()}),()=>B("div",{class:"vp-container vp-code-demo",id:i.id},[B("div",{class:"vp-container-header"},[k.value.isLegal?B("button",{type:"button",title:"toggle",class:["vp-code-demo-toggle-button",e.value?"down":"end"],onClick:()=>{l.value=e.value?"0":`${t.value.clientHeight+13.8}px`,n()}}):null,i.title?B("span",{class:"vp-container-title"},decodeURIComponent(i.title)):null,k.value.isLegal&&k.value.jsfiddle!==!1?B("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[B("input",{type:"hidden",name:"html",value:k.value.html}),B("input",{type:"hidden",name:"js",value:k.value.js}),B("input",{type:"hidden",name:"css",value:k.value.css}),B("input",{type:"hidden",name:"wrap",value:"1"}),B("input",{type:"hidden",name:"panel_js",value:"3"}),B("input",{type:"hidden",name:"resources",value:[...k.value.cssLib,...k.value.jsLib].join(",")}),B("button",{type:"submit",class:"jsfiddle-button",innerHTML:n5,"aria-label":"JSFiddle","data-balloon-pos":"down"})]):null,!k.value.isLegal||k.value.codepen!==!1?B("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[B("input",{type:"hidden",name:"data",value:JSON.stringify({html:k.value.html,js:k.value.js,css:k.value.css,js_external:k.value.jsLib.join(";"),css_external:k.value.cssLib.join(";"),layout:k.value.codepenLayout,html_pre_processor:p.value.html[1]??"none",js_pre_processor:p.value.js[1]??(k.value.jsx?"babel":"none"),css_pre_processor:p.value.css[1]??"none",editors:k.value.codepenEditors})}),B("button",{type:"submit",innerHTML:e5,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"down"})]):null]),r.value?null:B(pp,{class:"vp-code-demo-loading"}),B("div",{ref:a,class:"vp-code-demo-display",style:{display:d.value&&r.value?"block":"none"}}),B("div",{class:"vp-code-demo-code-wrapper",style:{height:l.value}},B("div",{ref:t,class:"vp-code-demo-codes"},s.default()))])}}),F5=ti({name:"MdDemo",props:{id:{type:String,required:!0},title:String},slots:Object,setup(i,{slots:s}){const[e,n]=El(!1),a=Ti(),t=Z("0");return Ri("beforeprint",()=>{n(!0)}),()=>B("div",{class:"vp-container vp-md-demo",id:i.id},[B("div",{class:"vp-container-header"},[B("button",{type:"button",title:"toggle",class:["vp-md-demo-toggle-button",e.value?"down":"end"],onClick:()=>{t.value=e.value?"0":`${a.value.clientHeight+13.8}px`,n()}}),i.title?B("div",{class:"vp-container-title"},decodeURIComponent(i.title)):null]),B("div",{class:"vp-md-demo-display"},s.default()),B("div",{class:"vp-md-demo-code-wrapper",style:{height:t.value}},B("div",{ref:a,class:"vp-md-demo-codes"},s.code()))])}}),E5=ti({name:"MarkMap",props:{id:{type:String,required:!0},content:{type:String,required:!0}},setup(i){const s=Z(!0),e=Ti(),n=Ti();let a=null;return Ri("resize",rp(()=>{a==null||a.fit()},100)),Di(async()=>{const[{Transformer:t},{Markmap:l,deriveOptions:r},{Toolbar:h}]=await Promise.all([b(()=>import("./index-D4cSqbqs.js"),__vite__mapDeps([0,1])),b(()=>import("./index-ILoLMTtv.js"),__vite__mapDeps([2,1])),b(()=>import("./index-DRWmbcXV.js"),[])]),p=new t,{frontmatter:k,root:d}=p.transform(bl(i.content));a=l.create(n.value,r({maxWidth:240,...k==null?void 0:k.markmap}));const{el:u}=h.create(a);await a.setData(d),await a.fit(),u.style.position="absolute",u.style.bottom="0.5rem",u.style.right="0.5rem",e.value.append(u),s.value=!1}),_s(()=>{a==null||a.destroy(),a=null}),()=>B("div",{class:"markmap-wrapper",ref:e},[B("svg",{ref:n,class:"markmap-svg",id:i.id}),s.value?B(pp,{class:"markmap-loading",height:360}):null])}});let b5={};const C5=()=>b5,Ma={useMaxWidth:!1},_5=i=>({dark:i,background:i?"#1e1e1e":"#fff",primaryColor:i?"#389d70":"#4abf8a",primaryBorderColor:i?"#389d70":"#4abf8a",primaryTextColor:i?"#fff":"#000",secondaryColor:"#ffb500",secondaryBorderColor:i?"#fff":"#000",secondaryTextColor:i?"#ddd":"#333",tertiaryColor:i?"#282828":"#efeef4",tertiaryBorderColor:i?"#bbb":"#242424",tertiaryTextColor:i?"#ddd":"#333",noteBkgColor:i?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:i?"#f6d365":"#333",lineColor:i?"#d3d3d3":"#333",textColor:i?"#fff":"#242424",mainBkg:i?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:i?"#389d70":"#4abf8a",nodeTextColor:i?"#fff":"#242424",signalTextColor:i?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",attributeBackgroundColorEven:i?"#0d1117":"#fff",attributeBackgroundColorOdd:i?"#161b22":"#f8f8f8",fillType0:i?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var D5=ti({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0},title:String},setup(i){const s=Z7(),{themeVariables:e,...n}=C5(),a=Ti(),t=z(()=>bl(i.code)),l=Z(""),r=async()=>{const{default:k}=await b(()=>import("./mermaid.esm.min-KkdOg3nu.js").then(d=>d.bz),[]);k.initialize({theme:"base",themeVariables:{..._5(s.value),...zF(e)?e(s.value):e},flowchart:Ma,sequence:Ma,journey:Ma,gantt:Ma,er:Ma,pie:Ma,...n,startOnLoad:!1}),l.value=(await k.render(i.id,t.value)).svg},h=()=>{const{body:k}=document,d=document.createElement("div");d.classList.add("mermaid-preview"),d.innerHTML=l.value,k.appendChild(d),d.addEventListener("click",()=>{k.removeChild(d)})},p=()=>{const k=`data:image/svg+xml;charset=utf8,${l.value.replace(/<br>/g,"<br />").replace(/%/g,"%25").replace(/"/g,"%22").replace(/'/g,"%27").replace(/&/g,"%26").replace(/#/g,"%23").replace(/{/g,"%7B").replace(/}/g,"%7D").replace(/</g,"%3C").replace(/>/g,"%3E")}`,d=document.createElement("a");d.setAttribute("href",k),d.setAttribute("download",`${i.title?bl(i.title):i.id}.svg`),d.click()};return Di(()=>{te(s,()=>r(),{flush:"post"})}),()=>[B("div",{class:"mermaid-actions"},[B("button",{class:"preview-button",onClick:()=>{h()},title:"preview",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1316 1024" fill="currentColor"><path d="M658.286 0C415.89 0 0 297.106 0 512c0 214.82 415.89 512 658.286 512 242.322 0 658.285-294.839 658.285-512S900.608 0 658.286 0zm0 877.714c-161.573 0-512-221.769-512-365.714 0-144.018 350.427-365.714 512-365.714 161.572 0 512 217.16 512 365.714s-350.428 365.714-512 365.714z"/><path d="M658.286 292.571a219.429 219.429 0 1 0 0 438.858 219.429 219.429 0 0 0 0-438.858zm0 292.572a73.143 73.143 0 1 1 0-146.286 73.143 73.143 0 0 1 0 146.286z"/></svg>'}),B("button",{class:"download-button",onClick:()=>{p()},title:"download",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor"><path d="M828.976 894.125H190.189c-70.55 0-127.754-57.185-127.754-127.753V606.674c0-17.634 14.31-31.933 31.933-31.933h63.889c17.634 0 31.932 14.299 31.932 31.933v95.822c0 35.282 28.596 63.877 63.877 63.877h511.033c35.281 0 63.877-28.595 63.877-63.877v-95.822c0-17.634 14.298-31.933 31.943-31.933h63.878c17.635 0 31.933 14.299 31.933 31.933v159.7c0 70.566-57.191 127.751-127.754 127.751zM249.939 267.51c12.921-12.92 33.885-12.92 46.807 0l148.97 148.972V94.893c0-17.634 14.302-31.947 31.934-31.947h63.876c17.638 0 31.946 14.313 31.946 31.947v321.589l148.97-148.972c12.922-12.92 33.876-12.92 46.797 0l46.814 46.818c12.922 12.922 12.922 33.874 0 46.807L552.261 624.93c-1.14 1.138-21.664 13.684-42.315 13.693-20.877.01-41.88-12.542-43.021-13.693L203.122 361.135c-12.923-12.934-12.923-33.885 0-46.807l46.817-46.818z"/></svg>'})]),B("div",{ref:a,class:"mermaid-wrapper"},l.value?B("div",{class:"mermaid-content",innerHTML:l.value}):B(pp,{class:"mermaid-loading",height:96}))]}});const x5={enhance:({app:i})=>{i.component("CodeDemo",v5),i.component("MdDemo",F5),i.component("MarkMap",E5),i.component("Mermaid",D5)}},w5=Object.freeze(Object.defineProperty({__proto__:null,default:x5},Symbol.toStringTag,{value:"Module"})),T5=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),S5=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));var I5=Object.create,v3=Object.defineProperty,R5=Object.getOwnPropertyDescriptor,Pu=Object.getOwnPropertyNames,O5=Object.getPrototypeOf,P5=Object.prototype.hasOwnProperty,L5=(i,s)=>function(){return i&&(s=(0,i[Pu(i)[0]])(i=0)),s},N5=(i,s)=>function(){return s||(0,i[Pu(i)[0]])((s={exports:{}}).exports,s),s.exports},M5=(i,s,e,n)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of Pu(s))!P5.call(i,a)&&a!==e&&v3(i,a,{get:()=>s[a],enumerable:!(n=R5(s,a))||n.enumerable});return i},$5=(i,s,e)=>(e=i!=null?I5(O5(i)):{},M5(v3(e,"default",{value:i,enumerable:!0}),i)),pr=L5({"../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.48.1_@types+node@22.10.5__jiti@2.4.2_postcss@8.4.49_tsx_s7k37zks4wtn7x2grzma6lrsfa/node_modules/tsup/assets/esm_shims.js"(){}}),V5=N5({"../../node_modules/.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js"(i,s){pr(),s.exports=n;function e(t){return t instanceof Buffer?Buffer.from(t):new t.constructor(t.buffer.slice(),t.byteOffset,t.length)}function n(t){if(t=t||{},t.circles)return a(t);const l=new Map;if(l.set(Date,d=>new Date(d)),l.set(Map,(d,u)=>new Map(h(Array.from(d),u))),l.set(Set,(d,u)=>new Set(h(Array.from(d),u))),t.constructorHandlers)for(const d of t.constructorHandlers)l.set(d[0],d[1]);let r=null;return t.proto?k:p;function h(d,u){const o=Object.keys(d),c=new Array(o.length);for(let A=0;A<o.length;A++){const g=o[A],f=d[g];typeof f!="object"||f===null?c[g]=f:f.constructor!==Object&&(r=l.get(f.constructor))?c[g]=r(f,u):ArrayBuffer.isView(f)?c[g]=e(f):c[g]=u(f)}return c}function p(d){if(typeof d!="object"||d===null)return d;if(Array.isArray(d))return h(d,p);if(d.constructor!==Object&&(r=l.get(d.constructor)))return r(d,p);const u={};for(const o in d){if(Object.hasOwnProperty.call(d,o)===!1)continue;const c=d[o];typeof c!="object"||c===null?u[o]=c:c.constructor!==Object&&(r=l.get(c.constructor))?u[o]=r(c,p):ArrayBuffer.isView(c)?u[o]=e(c):u[o]=p(c)}return u}function k(d){if(typeof d!="object"||d===null)return d;if(Array.isArray(d))return h(d,k);if(d.constructor!==Object&&(r=l.get(d.constructor)))return r(d,k);const u={};for(const o in d){const c=d[o];typeof c!="object"||c===null?u[o]=c:c.constructor!==Object&&(r=l.get(c.constructor))?u[o]=r(c,k):ArrayBuffer.isView(c)?u[o]=e(c):u[o]=k(c)}return u}}function a(t){const l=[],r=[],h=new Map;if(h.set(Date,o=>new Date(o)),h.set(Map,(o,c)=>new Map(k(Array.from(o),c))),h.set(Set,(o,c)=>new Set(k(Array.from(o),c))),t.constructorHandlers)for(const o of t.constructorHandlers)h.set(o[0],o[1]);let p=null;return t.proto?u:d;function k(o,c){const A=Object.keys(o),g=new Array(A.length);for(let f=0;f<A.length;f++){const m=A[f],y=o[m];if(typeof y!="object"||y===null)g[m]=y;else if(y.constructor!==Object&&(p=h.get(y.constructor)))g[m]=p(y,c);else if(ArrayBuffer.isView(y))g[m]=e(y);else{const v=l.indexOf(y);v!==-1?g[m]=r[v]:g[m]=c(y)}}return g}function d(o){if(typeof o!="object"||o===null)return o;if(Array.isArray(o))return k(o,d);if(o.constructor!==Object&&(p=h.get(o.constructor)))return p(o,d);const c={};l.push(o),r.push(c);for(const A in o){if(Object.hasOwnProperty.call(o,A)===!1)continue;const g=o[A];if(typeof g!="object"||g===null)c[A]=g;else if(g.constructor!==Object&&(p=h.get(g.constructor)))c[A]=p(g,d);else if(ArrayBuffer.isView(g))c[A]=e(g);else{const f=l.indexOf(g);f!==-1?c[A]=r[f]:c[A]=d(g)}}return l.pop(),r.pop(),c}function u(o){if(typeof o!="object"||o===null)return o;if(Array.isArray(o))return k(o,u);if(o.constructor!==Object&&(p=h.get(o.constructor)))return p(o,u);const c={};l.push(o),r.push(c);for(const A in o){const g=o[A];if(typeof g!="object"||g===null)c[A]=g;else if(g.constructor!==Object&&(p=h.get(g.constructor)))c[A]=p(g,u);else if(ArrayBuffer.isView(g))c[A]=e(g);else{const f=l.indexOf(g);f!==-1?c[A]=r[f]:c[A]=u(g)}}return l.pop(),r.pop(),c}}}});pr();pr();pr();var F3=typeof navigator<"u",Ei=typeof window<"u"?window:typeof globalThis<"u"?globalThis:typeof global<"u"?global:{};typeof Ei.chrome<"u"&&Ei.chrome.devtools;F3&&(Ei.self,Ei.top);var l2;typeof navigator<"u"&&((l2=navigator.userAgent)==null||l2.toLowerCase().includes("electron"));pr();var z5=$5(V5()),q5=/(?:^|[-_/])(\w)/g;function H5(i,s){return s?s.toUpperCase():""}function j5(i){return i&&`${i}`.replace(q5,H5)}function U5(i,s){let e=i.replace(/^[a-z]:/i,"").replace(/\\/g,"/");e.endsWith(`index${s}`)&&(e=e.replace(`/index${s}`,s));const n=e.lastIndexOf("/"),a=e.substring(n+1);{const t=a.lastIndexOf(s);return a.substring(0,t)}}var r2=(0,z5.default)({circles:!0});const G5={trailing:!0};function ct(i,s=25,e={}){if(e={...G5,...e},!Number.isFinite(s))throw new TypeError("Expected `wait` to be a finite number");let n,a,t=[],l,r;const h=(p,k)=>(l=W5(i,p,k),l.finally(()=>{if(l=null,e.trailing&&r&&!a){const d=h(p,r);return r=null,d}}),l);return function(...p){return l?(e.trailing&&(r=p),l):new Promise(k=>{const d=!a&&e.leading;clearTimeout(a),a=setTimeout(()=>{a=null;const u=e.leading?n:h(this,p);for(const o of t)o(u);t=[]},s),d?(n=h(this,p),k(n)):t.push(k)})}}async function W5(i,s,e){return await i.apply(s,e)}function ho(i,s={},e){for(const n in i){const a=i[n],t=e?`${e}:${n}`:n;typeof a=="object"&&a!==null?ho(a,s,t):typeof a=="function"&&(s[t]=a)}return s}const K5={run:i=>i()},Y5=()=>K5,E3=typeof console.createTask<"u"?console.createTask:Y5;function X5(i,s){const e=s.shift(),n=E3(e);return i.reduce((a,t)=>a.then(()=>n.run(()=>t(...s))),Promise.resolve())}function Z5(i,s){const e=s.shift(),n=E3(e);return Promise.all(i.map(a=>n.run(()=>a(...s))))}function ck(i,s){for(const e of[...i])e(s)}class J5{constructor(){this._hooks={},this._before=void 0,this._after=void 0,this._deprecatedMessages=void 0,this._deprecatedHooks={},this.hook=this.hook.bind(this),this.callHook=this.callHook.bind(this),this.callHookWith=this.callHookWith.bind(this)}hook(s,e,n={}){if(!s||typeof e!="function")return()=>{};const a=s;let t;for(;this._deprecatedHooks[s];)t=this._deprecatedHooks[s],s=t.to;if(t&&!n.allowDeprecated){let l=t.message;l||(l=`${a} hook has been deprecated`+(t.to?`, please use ${t.to}`:"")),this._deprecatedMessages||(this._deprecatedMessages=new Set),this._deprecatedMessages.has(l)||(console.warn(l),this._deprecatedMessages.add(l))}if(!e.name)try{Object.defineProperty(e,"name",{get:()=>"_"+s.replace(/\W+/g,"_")+"_hook_cb",configurable:!0})}catch{}return this._hooks[s]=this._hooks[s]||[],this._hooks[s].push(e),()=>{e&&(this.removeHook(s,e),e=void 0)}}hookOnce(s,e){let n,a=(...t)=>(typeof n=="function"&&n(),n=void 0,a=void 0,e(...t));return n=this.hook(s,a),n}removeHook(s,e){if(this._hooks[s]){const n=this._hooks[s].indexOf(e);n!==-1&&this._hooks[s].splice(n,1),this._hooks[s].length===0&&delete this._hooks[s]}}deprecateHook(s,e){this._deprecatedHooks[s]=typeof e=="string"?{to:e}:e;const n=this._hooks[s]||[];delete this._hooks[s];for(const a of n)this.hook(s,a)}deprecateHooks(s){Object.assign(this._deprecatedHooks,s);for(const e in s)this.deprecateHook(e,s[e])}addHooks(s){const e=ho(s),n=Object.keys(e).map(a=>this.hook(a,e[a]));return()=>{for(const a of n.splice(0,n.length))a()}}removeHooks(s){const e=ho(s);for(const n in e)this.removeHook(n,e[n])}removeAllHooks(){for(const s in this._hooks)delete this._hooks[s]}callHook(s,...e){return e.unshift(s),this.callHookWith(X5,s,...e)}callHookParallel(s,...e){return e.unshift(s),this.callHookWith(Z5,s,...e)}callHookWith(s,e,...n){const a=this._before||this._after?{name:e,args:n,context:{}}:void 0;this._before&&ck(this._before,a);const t=s(e in this._hooks?[...this._hooks[e]]:[],n);return t instanceof Promise?t.finally(()=>{this._after&&a&&ck(this._after,a)}):(this._after&&a&&ck(this._after,a),t)}beforeEach(s){return this._before=this._before||[],this._before.push(s),()=>{if(this._before!==void 0){const e=this._before.indexOf(s);e!==-1&&this._before.splice(e,1)}}}afterEach(s){return this._after=this._after||[],this._after.push(s),()=>{if(this._after!==void 0){const e=this._after.indexOf(s);e!==-1&&this._after.splice(e,1)}}}}function b3(){return new J5}var Q5=Object.create,C3=Object.defineProperty,iC=Object.getOwnPropertyDescriptor,Lu=Object.getOwnPropertyNames,sC=Object.getPrototypeOf,eC=Object.prototype.hasOwnProperty,nC=(i,s)=>function(){return i&&(s=(0,i[Lu(i)[0]])(i=0)),s},_3=(i,s)=>function(){return s||(0,i[Lu(i)[0]])((s={exports:{}}).exports,s),s.exports},aC=(i,s,e,n)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of Lu(s))!eC.call(i,a)&&a!==e&&C3(i,a,{get:()=>s[a],enumerable:!(n=iC(s,a))||n.enumerable});return i},tC=(i,s,e)=>(e=i!=null?Q5(sC(i)):{},aC(C3(e,"default",{value:i,enumerable:!0}),i)),ui=nC({"../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.48.1_@types+node@22.10.5__jiti@2.4.2_postcss@8.4.49_tsx_s7k37zks4wtn7x2grzma6lrsfa/node_modules/tsup/assets/esm_shims.js"(){}}),lC=_3({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/lib/speakingurl.js"(i,s){ui(),function(e){var n={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"Ae",Å:"A",Æ:"AE",Ç:"C",È:"E",É:"E",Ê:"E",Ë:"E",Ì:"I",Í:"I",Î:"I",Ï:"I",Ð:"D",Ñ:"N",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"Oe",Ő:"O",Ø:"O",Ù:"U",Ú:"U",Û:"U",Ü:"Ue",Ű:"U",Ý:"Y",Þ:"TH",ß:"ss",à:"a",á:"a",â:"a",ã:"a",ä:"ae",å:"a",æ:"ae",ç:"c",è:"e",é:"e",ê:"e",ë:"e",ì:"i",í:"i",î:"i",ï:"i",ð:"d",ñ:"n",ò:"o",ó:"o",ô:"o",õ:"o",ö:"oe",ő:"o",ø:"o",ù:"u",ú:"u",û:"u",ü:"ue",ű:"u",ý:"y",þ:"th",ÿ:"y","ẞ":"SS",ا:"a",أ:"a",إ:"i",آ:"aa",ؤ:"u",ئ:"e",ء:"a",ب:"b",ت:"t",ث:"th",ج:"j",ح:"h",خ:"kh",د:"d",ذ:"th",ر:"r",ز:"z",س:"s",ش:"sh",ص:"s",ض:"dh",ط:"t",ظ:"z",ع:"a",غ:"gh",ف:"f",ق:"q",ك:"k",ل:"l",م:"m",ن:"n",ه:"h",و:"w",ي:"y",ى:"a",ة:"h",ﻻ:"la",ﻷ:"laa",ﻹ:"lai",ﻵ:"laa",گ:"g",چ:"ch",پ:"p",ژ:"zh",ک:"k",ی:"y","َ":"a","ً":"an","ِ":"e","ٍ":"en","ُ":"u","ٌ":"on","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9",က:"k",ခ:"kh",ဂ:"g",ဃ:"ga",င:"ng",စ:"s",ဆ:"sa",ဇ:"z","စျ":"za",ည:"ny",ဋ:"t",ဌ:"ta",ဍ:"d",ဎ:"da",ဏ:"na",တ:"t",ထ:"ta",ဒ:"d",ဓ:"da",န:"n",ပ:"p",ဖ:"pa",ဗ:"b",ဘ:"ba",မ:"m",ယ:"y",ရ:"ya",လ:"l",ဝ:"w",သ:"th",ဟ:"h",ဠ:"la",အ:"a","ြ":"y","ျ":"ya","ွ":"w","ြွ":"yw","ျွ":"ywa","ှ":"h",ဧ:"e","၏":"-e",ဣ:"i",ဤ:"-i",ဉ:"u",ဦ:"-u",ဩ:"aw","သြော":"aw",ဪ:"aw","၀":"0","၁":"1","၂":"2","၃":"3","၄":"4","၅":"5","၆":"6","၇":"7","၈":"8","၉":"9","္":"","့":"","း":"",č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z",ހ:"h",ށ:"sh",ނ:"n",ރ:"r",ބ:"b",ޅ:"lh",ކ:"k",އ:"a",ވ:"v",މ:"m",ފ:"f",ދ:"dh",ތ:"th",ލ:"l",ގ:"g",ޏ:"gn",ސ:"s",ޑ:"d",ޒ:"z",ޓ:"t",ޔ:"y",ޕ:"p",ޖ:"j",ޗ:"ch",ޘ:"tt",ޙ:"hh",ޚ:"kh",ޛ:"th",ޜ:"z",ޝ:"sh",ޞ:"s",ޟ:"d",ޠ:"t",ޡ:"z",ޢ:"a",ޣ:"gh",ޤ:"q",ޥ:"w","ަ":"a","ާ":"aa","ި":"i","ީ":"ee","ު":"u","ޫ":"oo","ެ":"e","ޭ":"ey","ޮ":"o","ޯ":"oa","ް":"",ა:"a",ბ:"b",გ:"g",დ:"d",ე:"e",ვ:"v",ზ:"z",თ:"t",ი:"i",კ:"k",ლ:"l",მ:"m",ნ:"n",ო:"o",პ:"p",ჟ:"zh",რ:"r",ს:"s",ტ:"t",უ:"u",ფ:"p",ქ:"k",ღ:"gh",ყ:"q",შ:"sh",ჩ:"ch",ც:"ts",ძ:"dz",წ:"ts",ჭ:"ch",ხ:"kh",ჯ:"j",ჰ:"h",α:"a",β:"v",γ:"g",δ:"d",ε:"e",ζ:"z",η:"i",θ:"th",ι:"i",κ:"k",λ:"l",μ:"m",ν:"n",ξ:"ks",ο:"o",π:"p",ρ:"r",σ:"s",τ:"t",υ:"y",φ:"f",χ:"x",ψ:"ps",ω:"o",ά:"a",έ:"e",ί:"i",ό:"o",ύ:"y",ή:"i",ώ:"o",ς:"s",ϊ:"i",ΰ:"y",ϋ:"y",ΐ:"i",Α:"A",Β:"B",Γ:"G",Δ:"D",Ε:"E",Ζ:"Z",Η:"I",Θ:"TH",Ι:"I",Κ:"K",Λ:"L",Μ:"M",Ν:"N",Ξ:"KS",Ο:"O",Π:"P",Ρ:"R",Σ:"S",Τ:"T",Υ:"Y",Φ:"F",Χ:"X",Ψ:"PS",Ω:"O",Ά:"A",Έ:"E",Ί:"I",Ό:"O",Ύ:"Y",Ή:"I",Ώ:"O",Ϊ:"I",Ϋ:"Y",ā:"a",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",ū:"u",Ā:"A",Ē:"E",Ģ:"G",Ī:"I",Ķ:"k",Ļ:"L",Ņ:"N",Ū:"U",Ќ:"Kj",ќ:"kj",Љ:"Lj",љ:"lj",Њ:"Nj",њ:"nj",Тс:"Ts",тс:"ts",ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"E",Ł:"L",Ń:"N",Ś:"S",Ź:"Z",Ż:"Z",Є:"Ye",І:"I",Ї:"Yi",Ґ:"G",є:"ye",і:"i",ї:"yi",ґ:"g",ă:"a",Ă:"A",ș:"s",Ș:"S",ț:"t",Ț:"T",ţ:"t",Ţ:"T",а:"a",б:"b",в:"v",г:"g",д:"d",е:"e",ё:"yo",ж:"zh",з:"z",и:"i",й:"i",к:"k",л:"l",м:"m",н:"n",о:"o",п:"p",р:"r",с:"s",т:"t",у:"u",ф:"f",х:"kh",ц:"c",ч:"ch",ш:"sh",щ:"sh",ъ:"",ы:"y",ь:"",э:"e",ю:"yu",я:"ya",А:"A",Б:"B",В:"V",Г:"G",Д:"D",Е:"E",Ё:"Yo",Ж:"Zh",З:"Z",И:"I",Й:"I",К:"K",Л:"L",М:"M",Н:"N",О:"O",П:"P",Р:"R",С:"S",Т:"T",У:"U",Ф:"F",Х:"Kh",Ц:"C",Ч:"Ch",Ш:"Sh",Щ:"Sh",Ъ:"",Ы:"Y",Ь:"",Э:"E",Ю:"Yu",Я:"Ya",ђ:"dj",ј:"j",ћ:"c",џ:"dz",Ђ:"Dj",Ј:"j",Ћ:"C",Џ:"Dz",ľ:"l",ĺ:"l",ŕ:"r",Ľ:"L",Ĺ:"L",Ŕ:"R",ş:"s",Ş:"S",ı:"i",İ:"I",ğ:"g",Ğ:"G",ả:"a",Ả:"A",ẳ:"a",Ẳ:"A",ẩ:"a",Ẩ:"A",đ:"d",Đ:"D",ẹ:"e",Ẹ:"E",ẽ:"e",Ẽ:"E",ẻ:"e",Ẻ:"E",ế:"e",Ế:"E",ề:"e",Ề:"E",ệ:"e",Ệ:"E",ễ:"e",Ễ:"E",ể:"e",Ể:"E",ỏ:"o",ọ:"o",Ọ:"o",ố:"o",Ố:"O",ồ:"o",Ồ:"O",ổ:"o",Ổ:"O",ộ:"o",Ộ:"O",ỗ:"o",Ỗ:"O",ơ:"o",Ơ:"O",ớ:"o",Ớ:"O",ờ:"o",Ờ:"O",ợ:"o",Ợ:"O",ỡ:"o",Ỡ:"O",Ở:"o",ở:"o",ị:"i",Ị:"I",ĩ:"i",Ĩ:"I",ỉ:"i",Ỉ:"i",ủ:"u",Ủ:"U",ụ:"u",Ụ:"U",ũ:"u",Ũ:"U",ư:"u",Ư:"U",ứ:"u",Ứ:"U",ừ:"u",Ừ:"U",ự:"u",Ự:"U",ữ:"u",Ữ:"U",ử:"u",Ử:"ư",ỷ:"y",Ỷ:"y",ỳ:"y",Ỳ:"Y",ỵ:"y",Ỵ:"Y",ỹ:"y",Ỹ:"Y",ạ:"a",Ạ:"A",ấ:"a",Ấ:"A",ầ:"a",Ầ:"A",ậ:"a",Ậ:"A",ẫ:"a",Ẫ:"A",ắ:"a",Ắ:"A",ằ:"a",Ằ:"A",ặ:"a",Ặ:"A",ẵ:"a",Ẵ:"A","⓪":"0","①":"1","②":"2","③":"3","④":"4","⑤":"5","⑥":"6","⑦":"7","⑧":"8","⑨":"9","⑩":"10","⑪":"11","⑫":"12","⑬":"13","⑭":"14","⑮":"15","⑯":"16","⑰":"17","⑱":"18","⑲":"18","⑳":"18","⓵":"1","⓶":"2","⓷":"3","⓸":"4","⓹":"5","⓺":"6","⓻":"7","⓼":"8","⓽":"9","⓾":"10","⓿":"0","⓫":"11","⓬":"12","⓭":"13","⓮":"14","⓯":"15","⓰":"16","⓱":"17","⓲":"18","⓳":"19","⓴":"20","Ⓐ":"A","Ⓑ":"B","Ⓒ":"C","Ⓓ":"D","Ⓔ":"E","Ⓕ":"F","Ⓖ":"G","Ⓗ":"H","Ⓘ":"I","Ⓙ":"J","Ⓚ":"K","Ⓛ":"L","Ⓜ":"M","Ⓝ":"N","Ⓞ":"O","Ⓟ":"P","Ⓠ":"Q","Ⓡ":"R","Ⓢ":"S","Ⓣ":"T","Ⓤ":"U","Ⓥ":"V","Ⓦ":"W","Ⓧ":"X","Ⓨ":"Y","Ⓩ":"Z","ⓐ":"a","ⓑ":"b","ⓒ":"c","ⓓ":"d","ⓔ":"e","ⓕ":"f","ⓖ":"g","ⓗ":"h","ⓘ":"i","ⓙ":"j","ⓚ":"k","ⓛ":"l","ⓜ":"m","ⓝ":"n","ⓞ":"o","ⓟ":"p","ⓠ":"q","ⓡ":"r","ⓢ":"s","ⓣ":"t","ⓤ":"u","ⓦ":"v","ⓥ":"w","ⓧ":"x","ⓨ":"y","ⓩ":"z","“":'"',"”":'"',"‘":"'","’":"'","∂":"d",ƒ:"f","™":"(TM)","©":"(C)",œ:"oe",Œ:"OE","®":"(R)","†":"+","℠":"(SM)","…":"...","˚":"o",º:"o",ª:"a","•":"*","၊":",","။":".",$:"USD","€":"EUR","₢":"BRN","₣":"FRF","£":"GBP","₤":"ITL","₦":"NGN","₧":"ESP","₩":"KRW","₪":"ILS","₫":"VND","₭":"LAK","₮":"MNT","₯":"GRD","₱":"ARS","₲":"PYG","₳":"ARA","₴":"UAH","₵":"GHS","¢":"cent","¥":"CNY",元:"CNY",円:"YEN","﷼":"IRR","₠":"EWE","฿":"THB","₨":"INR","₹":"INR","₰":"PF","₺":"TRY","؋":"AFN","₼":"AZN",лв:"BGN","៛":"KHR","₡":"CRC","₸":"KZT",ден:"MKD",zł:"PLN","₽":"RUB","₾":"GEL"},a=["်","ް"],t={"ာ":"a","ါ":"a","ေ":"e","ဲ":"e","ိ":"i","ီ":"i","ို":"o","ု":"u","ူ":"u","ေါင်":"aung","ော":"aw","ော်":"aw","ေါ":"aw","ေါ်":"aw","်":"်","က်":"et","ိုက်":"aik","ောက်":"auk","င်":"in","ိုင်":"aing","ောင်":"aung","စ်":"it","ည်":"i","တ်":"at","ိတ်":"eik","ုတ်":"ok","ွတ်":"ut","ေတ်":"it","ဒ်":"d","ိုဒ်":"ok","ုဒ်":"ait","န်":"an","ာန်":"an","ိန်":"ein","ုန်":"on","ွန်":"un","ပ်":"at","ိပ်":"eik","ုပ်":"ok","ွပ်":"ut","န်ုပ်":"nub","မ်":"an","ိမ်":"ein","ုမ်":"on","ွမ်":"un","ယ်":"e","ိုလ်":"ol","ဉ်":"in","ံ":"an","ိံ":"ein","ုံ":"on","ައް":"ah","ަށް":"ah"},l={en:{},az:{ç:"c",ə:"e",ğ:"g",ı:"i",ö:"o",ş:"s",ü:"u",Ç:"C",Ə:"E",Ğ:"G",İ:"I",Ö:"O",Ş:"S",Ü:"U"},cs:{č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z"},fi:{ä:"a",Ä:"A",ö:"o",Ö:"O"},hu:{ä:"a",Ä:"A",ö:"o",Ö:"O",ü:"u",Ü:"U",ű:"u",Ű:"U"},lt:{ą:"a",č:"c",ę:"e",ė:"e",į:"i",š:"s",ų:"u",ū:"u",ž:"z",Ą:"A",Č:"C",Ę:"E",Ė:"E",Į:"I",Š:"S",Ų:"U",Ū:"U"},lv:{ā:"a",č:"c",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",š:"s",ū:"u",ž:"z",Ā:"A",Č:"C",Ē:"E",Ģ:"G",Ī:"i",Ķ:"k",Ļ:"L",Ņ:"N",Š:"S",Ū:"u",Ž:"Z"},pl:{ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ó:"o",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"e",Ł:"L",Ń:"N",Ó:"O",Ś:"S",Ź:"Z",Ż:"Z"},sv:{ä:"a",Ä:"A",ö:"o",Ö:"O"},sk:{ä:"a",Ä:"A"},sr:{љ:"lj",њ:"nj",Љ:"Lj",Њ:"Nj",đ:"dj",Đ:"Dj"},tr:{Ü:"U",Ö:"O",ü:"u",ö:"o"}},r={ar:{"∆":"delta","∞":"la-nihaya","♥":"hob","&":"wa","|":"aw","<":"aqal-men",">":"akbar-men","∑":"majmou","¤":"omla"},az:{},ca:{"∆":"delta","∞":"infinit","♥":"amor","&":"i","|":"o","<":"menys que",">":"mes que","∑":"suma dels","¤":"moneda"},cs:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"nebo","<":"mensi nez",">":"vetsi nez","∑":"soucet","¤":"mena"},de:{"∆":"delta","∞":"unendlich","♥":"Liebe","&":"und","|":"oder","<":"kleiner als",">":"groesser als","∑":"Summe von","¤":"Waehrung"},dv:{"∆":"delta","∞":"kolunulaa","♥":"loabi","&":"aai","|":"noonee","<":"ah vure kuda",">":"ah vure bodu","∑":"jumula","¤":"faisaa"},en:{"∆":"delta","∞":"infinity","♥":"love","&":"and","|":"or","<":"less than",">":"greater than","∑":"sum","¤":"currency"},es:{"∆":"delta","∞":"infinito","♥":"amor","&":"y","|":"u","<":"menos que",">":"mas que","∑":"suma de los","¤":"moneda"},fa:{"∆":"delta","∞":"bi-nahayat","♥":"eshgh","&":"va","|":"ya","<":"kamtar-az",">":"bishtar-az","∑":"majmooe","¤":"vahed"},fi:{"∆":"delta","∞":"aarettomyys","♥":"rakkaus","&":"ja","|":"tai","<":"pienempi kuin",">":"suurempi kuin","∑":"summa","¤":"valuutta"},fr:{"∆":"delta","∞":"infiniment","♥":"Amour","&":"et","|":"ou","<":"moins que",">":"superieure a","∑":"somme des","¤":"monnaie"},ge:{"∆":"delta","∞":"usasruloba","♥":"siqvaruli","&":"da","|":"an","<":"naklebi",">":"meti","∑":"jami","¤":"valuta"},gr:{},hu:{"∆":"delta","∞":"vegtelen","♥":"szerelem","&":"es","|":"vagy","<":"kisebb mint",">":"nagyobb mint","∑":"szumma","¤":"penznem"},it:{"∆":"delta","∞":"infinito","♥":"amore","&":"e","|":"o","<":"minore di",">":"maggiore di","∑":"somma","¤":"moneta"},lt:{"∆":"delta","∞":"begalybe","♥":"meile","&":"ir","|":"ar","<":"maziau nei",">":"daugiau nei","∑":"suma","¤":"valiuta"},lv:{"∆":"delta","∞":"bezgaliba","♥":"milestiba","&":"un","|":"vai","<":"mazak neka",">":"lielaks neka","∑":"summa","¤":"valuta"},my:{"∆":"kwahkhyaet","∞":"asaonasme","♥":"akhyait","&":"nhin","|":"tho","<":"ngethaw",">":"kyithaw","∑":"paungld","¤":"ngwekye"},mk:{},nl:{"∆":"delta","∞":"oneindig","♥":"liefde","&":"en","|":"of","<":"kleiner dan",">":"groter dan","∑":"som","¤":"valuta"},pl:{"∆":"delta","∞":"nieskonczonosc","♥":"milosc","&":"i","|":"lub","<":"mniejsze niz",">":"wieksze niz","∑":"suma","¤":"waluta"},pt:{"∆":"delta","∞":"infinito","♥":"amor","&":"e","|":"ou","<":"menor que",">":"maior que","∑":"soma","¤":"moeda"},ro:{"∆":"delta","∞":"infinit","♥":"dragoste","&":"si","|":"sau","<":"mai mic ca",">":"mai mare ca","∑":"suma","¤":"valuta"},ru:{"∆":"delta","∞":"beskonechno","♥":"lubov","&":"i","|":"ili","<":"menshe",">":"bolshe","∑":"summa","¤":"valjuta"},sk:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"alebo","<":"menej ako",">":"viac ako","∑":"sucet","¤":"mena"},sr:{},tr:{"∆":"delta","∞":"sonsuzluk","♥":"ask","&":"ve","|":"veya","<":"kucuktur",">":"buyuktur","∑":"toplam","¤":"para birimi"},uk:{"∆":"delta","∞":"bezkinechnist","♥":"lubov","&":"i","|":"abo","<":"menshe",">":"bilshe","∑":"suma","¤":"valjuta"},vn:{"∆":"delta","∞":"vo cuc","♥":"yeu","&":"va","|":"hoac","<":"nho hon",">":"lon hon","∑":"tong","¤":"tien te"}},h=[";","?",":","@","&","=","+","$",",","/"].join(""),p=[";","?",":","@","&","=","+","$",","].join(""),k=[".","!","~","*","'","(",")"].join(""),d=function(g,f){var m="-",y="",v="",C=!0,S={},L,w,_,R,N,T,V,E,$,I,M,G,Y,li,pi="";if(typeof g!="string")return"";if(typeof f=="string"&&(m=f),V=r.en,E=l.en,typeof f=="object"){L=f.maintainCase||!1,S=f.custom&&typeof f.custom=="object"?f.custom:S,_=+f.truncate>1&&f.truncate||!1,R=f.uric||!1,N=f.uricNoSlash||!1,T=f.mark||!1,C=!(f.symbols===!1||f.lang===!1),m=f.separator||m,R&&(pi+=h),N&&(pi+=p),T&&(pi+=k),V=f.lang&&r[f.lang]&&C?r[f.lang]:C?r.en:{},E=f.lang&&l[f.lang]?l[f.lang]:f.lang===!1||f.lang===!0?{}:l.en,f.titleCase&&typeof f.titleCase.length=="number"&&Array.prototype.toString.call(f.titleCase)?(f.titleCase.forEach(function(ei){S[ei+""]=ei+""}),w=!0):w=!!f.titleCase,f.custom&&typeof f.custom.length=="number"&&Array.prototype.toString.call(f.custom)&&f.custom.forEach(function(ei){S[ei+""]=ei+""}),Object.keys(S).forEach(function(ei){var q;ei.length>1?q=new RegExp("\\b"+o(ei)+"\\b","gi"):q=new RegExp(o(ei),"gi"),g=g.replace(q,S[ei])});for(M in S)pi+=M}for(pi+=m,pi=o(pi),g=g.replace(/(^\s+|\s+$)/g,""),Y=!1,li=!1,I=0,G=g.length;I<G;I++)M=g[I],c(M,S)?Y=!1:E[M]?(M=Y&&E[M].match(/[A-Za-z0-9]/)?" "+E[M]:E[M],Y=!1):M in n?(I+1<G&&a.indexOf(g[I+1])>=0?(v+=M,M=""):li===!0?(M=t[v]+n[M],v=""):M=Y&&n[M].match(/[A-Za-z0-9]/)?" "+n[M]:n[M],Y=!1,li=!1):M in t?(v+=M,M="",I===G-1&&(M=t[v]),li=!0):V[M]&&!(R&&h.indexOf(M)!==-1)&&!(N&&p.indexOf(M)!==-1)?(M=Y||y.substr(-1).match(/[A-Za-z0-9]/)?m+V[M]:V[M],M+=g[I+1]!==void 0&&g[I+1].match(/[A-Za-z0-9]/)?m:"",Y=!0):(li===!0?(M=t[v]+M,v="",li=!1):Y&&(/[A-Za-z0-9]/.test(M)||y.substr(-1).match(/A-Za-z0-9]/))&&(M=" "+M),Y=!1),y+=M.replace(new RegExp("[^\\w\\s"+pi+"_-]","g"),m);return w&&(y=y.replace(/(\w)(\S*)/g,function(ei,q,W){var K=q.toUpperCase()+(W!==null?W:"");return Object.keys(S).indexOf(K.toLowerCase())<0?K:K.toLowerCase()})),y=y.replace(/\s+/g,m).replace(new RegExp("\\"+m+"+","g"),m).replace(new RegExp("(^\\"+m+"+|\\"+m+"+$)","g"),""),_&&y.length>_&&($=y.charAt(_)===m,y=y.slice(0,_),$||(y=y.slice(0,y.lastIndexOf(m)))),!L&&!w&&(y=y.toLowerCase()),y},u=function(g){return function(m){return d(m,g)}},o=function(g){return g.replace(/[-\\^$*+?.()|[\]{}\/]/g,"\\$&")},c=function(A,g){for(var f in g)if(g[f]===A)return!0};if(typeof s<"u"&&s.exports)s.exports=d,s.exports.createSlug=u;else if(typeof define<"u"&&define.amd)define([],function(){return d});else try{if(e.getSlug||e.createSlug)throw"speakingurl: globals exists /(getSlug|createSlug)/";e.getSlug=d,e.createSlug=u}catch{}}(i)}}),rC=_3({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/index.js"(i,s){ui(),s.exports=lC()}});ui();ui();ui();ui();ui();ui();ui();ui();function hC(i){var s;const e=i.name||i._componentTag||i.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__||i.__name;return e==="index"&&((s=i.__file)!=null&&s.endsWith("index.vue"))?"":e}function pC(i){const s=i.__file;if(s)return j5(U5(s,".vue"))}function h2(i,s){return i.type.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__=s,s}function Nu(i){if(i.__VUE_DEVTOOLS_NEXT_APP_RECORD__)return i.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(i.root)return i.appContext.app.__VUE_DEVTOOLS_NEXT_APP_RECORD__}function D3(i){var s,e;const n=(s=i.subTree)==null?void 0:s.type,a=Nu(i);return a?((e=a==null?void 0:a.types)==null?void 0:e.Fragment)===n:!1}function op(i){var s,e,n;const a=hC((i==null?void 0:i.type)||{});if(a)return a;if((i==null?void 0:i.root)===i)return"Root";for(const l in(e=(s=i.parent)==null?void 0:s.type)==null?void 0:e.components)if(i.parent.type.components[l]===(i==null?void 0:i.type))return h2(i,l);for(const l in(n=i.appContext)==null?void 0:n.components)if(i.appContext.components[l]===(i==null?void 0:i.type))return h2(i,l);const t=pC((i==null?void 0:i.type)||{});return t||"Anonymous Component"}function kC(i){var s,e,n;const a=(n=(e=(s=i==null?void 0:i.appContext)==null?void 0:s.app)==null?void 0:e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__)!=null?n:0,t=i===(i==null?void 0:i.root)?"root":i.uid;return`${a}:${t}`}function po(i,s){return s=s||`${i.id}:root`,i.instanceMap.get(s)||i.instanceMap.get(":root")}function dC(){const i={top:0,bottom:0,left:0,right:0,get width(){return i.right-i.left},get height(){return i.bottom-i.top}};return i}var Nr;function oC(i){return Nr||(Nr=document.createRange()),Nr.selectNode(i),Nr.getBoundingClientRect()}function uC(i){const s=dC();if(!i.children)return s;for(let e=0,n=i.children.length;e<n;e++){const a=i.children[e];let t;if(a.component)t=wa(a.component);else if(a.el){const l=a.el;l.nodeType===1||l.getBoundingClientRect?t=l.getBoundingClientRect():l.nodeType===3&&l.data.trim()&&(t=oC(l))}t&&cC(s,t)}return s}function cC(i,s){return(!i.top||s.top<i.top)&&(i.top=s.top),(!i.bottom||s.bottom>i.bottom)&&(i.bottom=s.bottom),(!i.left||s.left<i.left)&&(i.left=s.left),(!i.right||s.right>i.right)&&(i.right=s.right),i}var p2={top:0,left:0,right:0,bottom:0,width:0,height:0};function wa(i){const s=i.subTree.el;return typeof window>"u"?p2:D3(i)?uC(i.subTree):(s==null?void 0:s.nodeType)===1?s==null?void 0:s.getBoundingClientRect():i.subTree.component?wa(i.subTree.component):p2}ui();function Mu(i){return D3(i)?gC(i.subTree):i.subTree?[i.subTree.el]:[]}function gC(i){if(!i.children)return[];const s=[];return i.children.forEach(e=>{e.component?s.push(...Mu(e.component)):e!=null&&e.el&&s.push(e.el)}),s}var x3="__vue-devtools-component-inspector__",w3="__vue-devtools-component-inspector__card__",T3="__vue-devtools-component-inspector__name__",S3="__vue-devtools-component-inspector__indicator__",I3={display:"block",zIndex:2147483640,position:"fixed",backgroundColor:"#42b88325",border:"1px solid #42b88350",borderRadius:"5px",transition:"all 0.1s ease-in",pointerEvents:"none"},BC={fontFamily:"Arial, Helvetica, sans-serif",padding:"5px 8px",borderRadius:"4px",textAlign:"left",position:"absolute",left:0,color:"#e9e9e9",fontSize:"14px",fontWeight:600,lineHeight:"24px",backgroundColor:"#42b883",boxShadow:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)"},AC={display:"inline-block",fontWeight:400,fontStyle:"normal",fontSize:"12px",opacity:.7};function Tt(){return document.getElementById(x3)}function yC(){return document.getElementById(w3)}function fC(){return document.getElementById(S3)}function mC(){return document.getElementById(T3)}function $u(i){return{left:`${Math.round(i.left*100)/100}px`,top:`${Math.round(i.top*100)/100}px`,width:`${Math.round(i.width*100)/100}px`,height:`${Math.round(i.height*100)/100}px`}}function Vu(i){var s;const e=document.createElement("div");e.id=(s=i.elementId)!=null?s:x3,Object.assign(e.style,{...I3,...$u(i.bounds),...i.style});const n=document.createElement("span");n.id=w3,Object.assign(n.style,{...BC,top:i.bounds.top<35?0:"-35px"});const a=document.createElement("span");a.id=T3,a.innerHTML=`&lt;${i.name}&gt;&nbsp;&nbsp;`;const t=document.createElement("i");return t.id=S3,t.innerHTML=`${Math.round(i.bounds.width*100)/100} x ${Math.round(i.bounds.height*100)/100}`,Object.assign(t.style,AC),n.appendChild(a),n.appendChild(t),e.appendChild(n),document.body.appendChild(e),e}function zu(i){const s=Tt(),e=yC(),n=mC(),a=fC();s&&(Object.assign(s.style,{...I3,...$u(i.bounds)}),Object.assign(e.style,{top:i.bounds.top<35?0:"-35px"}),n.innerHTML=`&lt;${i.name}&gt;&nbsp;&nbsp;`,a.innerHTML=`${Math.round(i.bounds.width*100)/100} x ${Math.round(i.bounds.height*100)/100}`)}function vC(i){const s=wa(i);if(!s.width&&!s.height)return;const e=op(i);Tt()?zu({bounds:s,name:e}):Vu({bounds:s,name:e})}function R3(){const i=Tt();i&&(i.style.display="none")}var ko=null;function oo(i){const s=i.target;if(s){const e=s.__vueParentComponent;if(e&&(ko=e,e.vnode.el)){const a=wa(e),t=op(e);Tt()?zu({bounds:a,name:t}):Vu({bounds:a,name:t})}}}function FC(i,s){if(i.preventDefault(),i.stopPropagation(),ko){const e=kC(ko);s(e)}}var xh=null;function EC(){R3(),window.removeEventListener("mouseover",oo),window.removeEventListener("click",xh,!0),xh=null}function bC(){return window.addEventListener("mouseover",oo),new Promise(i=>{function s(e){e.preventDefault(),e.stopPropagation(),FC(e,n=>{window.removeEventListener("click",s,!0),xh=null,window.removeEventListener("mouseover",oo);const a=Tt();a&&(a.style.display="none"),i(JSON.stringify({id:n}))})}xh=s,window.addEventListener("click",s,!0)})}function CC(i){const s=po($s.value,i.id);if(s){const[e]=Mu(s);if(typeof e.scrollIntoView=="function")e.scrollIntoView({behavior:"smooth"});else{const n=wa(s),a=document.createElement("div"),t={...$u(n),position:"absolute"};Object.assign(a.style,t),document.body.appendChild(a),a.scrollIntoView({behavior:"smooth"}),setTimeout(()=>{document.body.removeChild(a)},2e3)}setTimeout(()=>{const n=wa(s);if(n.width||n.height){const a=op(s),t=Tt();t?zu({...i,name:a,bounds:n}):Vu({...i,name:a,bounds:n}),setTimeout(()=>{t&&(t.style.display="none")},1500)}},1200)}}ui();var k2,d2;(d2=(k2=Ei).__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__)!=null||(k2.__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__=!0);function _C(i){let s=0;const e=setInterval(()=>{Ei.__VUE_INSPECTOR__&&(clearInterval(e),s+=30,i()),s>=5e3&&clearInterval(e)},30)}function DC(){const i=Ei.__VUE_INSPECTOR__,s=i.openInEditor;i.openInEditor=async(...e)=>{i.disable(),s(...e)}}function xC(){return new Promise(i=>{function s(){DC(),i(Ei.__VUE_INSPECTOR__)}Ei.__VUE_INSPECTOR__?s():_C(()=>{s()})})}ui();ui();function wC(i){return!!(i&&i.__v_isReadonly)}function O3(i){return wC(i)?O3(i.__v_raw):!!(i&&i.__v_isReactive)}function gk(i){return!!(i&&i.__v_isRef===!0)}function Yt(i){const s=i&&i.__v_raw;return s?Yt(s):i}var TC=class{constructor(){this.refEditor=new SC}set(i,s,e,n){const a=Array.isArray(s)?s:s.split(".");for(;a.length>1;){const r=a.shift();i instanceof Map&&(i=i.get(r)),i instanceof Set?i=Array.from(i.values())[r]:i=i[r],this.refEditor.isRef(i)&&(i=this.refEditor.get(i))}const t=a[0],l=this.refEditor.get(i)[t];n?n(i,t,e):this.refEditor.isRef(l)?this.refEditor.set(l,e):i[t]=e}get(i,s){const e=Array.isArray(s)?s:s.split(".");for(let n=0;n<e.length;n++)if(i instanceof Map?i=i.get(e[n]):i=i[e[n]],this.refEditor.isRef(i)&&(i=this.refEditor.get(i)),!i)return;return i}has(i,s,e=!1){if(typeof i>"u")return!1;const n=Array.isArray(s)?s.slice():s.split("."),a=e?2:1;for(;i&&n.length>a;){const t=n.shift();i=i[t],this.refEditor.isRef(i)&&(i=this.refEditor.get(i))}return i!=null&&Object.prototype.hasOwnProperty.call(i,n[0])}createDefaultSetCallback(i){return(s,e,n)=>{if((i.remove||i.newKey)&&(Array.isArray(s)?s.splice(e,1):Yt(s)instanceof Map?s.delete(e):Yt(s)instanceof Set?s.delete(Array.from(s.values())[e]):Reflect.deleteProperty(s,e)),!i.remove){const a=s[i.newKey||e];this.refEditor.isRef(a)?this.refEditor.set(a,n):Yt(s)instanceof Map?s.set(i.newKey||e,n):Yt(s)instanceof Set?s.add(n):s[i.newKey||e]=n}}}},SC=class{set(i,s){if(gk(i))i.value=s;else{if(i instanceof Set&&Array.isArray(s)){i.clear(),s.forEach(a=>i.add(a));return}const e=Object.keys(s);if(i instanceof Map){const a=new Set(i.keys());e.forEach(t=>{i.set(t,Reflect.get(s,t)),a.delete(t)}),a.forEach(t=>i.delete(t));return}const n=new Set(Object.keys(i));e.forEach(a=>{Reflect.set(i,a,Reflect.get(s,a)),n.delete(a)}),n.forEach(a=>Reflect.deleteProperty(i,a))}}get(i){return gk(i)?i.value:i}isRef(i){return gk(i)||O3(i)}};ui();ui();ui();var IC="__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS_STATE__";function RC(){if(!F3||typeof localStorage>"u"||localStorage===null)return{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""};const i=localStorage.getItem(IC);return i?JSON.parse(i):{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""}}ui();ui();ui();var o2,u2;(u2=(o2=Ei).__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS)!=null||(o2.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS=[]);var OC=new Proxy(Ei.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS,{get(i,s,e){return Reflect.get(i,s,e)}});function PC(i,s){ys.timelineLayersState[s.id]=!1,OC.push({...i,descriptorId:s.id,appRecord:Nu(s.app)})}var c2,g2;(g2=(c2=Ei).__VUE_DEVTOOLS_KIT_INSPECTOR__)!=null||(c2.__VUE_DEVTOOLS_KIT_INSPECTOR__=[]);var qu=new Proxy(Ei.__VUE_DEVTOOLS_KIT_INSPECTOR__,{get(i,s,e){return Reflect.get(i,s,e)}}),P3=ct(()=>{St.hooks.callHook("sendInspectorToClient",L3())});function LC(i,s){var e,n;qu.push({options:i,descriptor:s,treeFilterPlaceholder:(e=i.treeFilterPlaceholder)!=null?e:"Search tree...",stateFilterPlaceholder:(n=i.stateFilterPlaceholder)!=null?n:"Search state...",treeFilter:"",selectedNodeId:"",appRecord:Nu(s.app)}),P3()}function L3(){return qu.filter(i=>i.descriptor.app===$s.value.app).filter(i=>i.descriptor.id!=="components").map(i=>{var s;const e=i.descriptor,n=i.options;return{id:n.id,label:n.label,logo:e.logo,icon:`custom-ic-baseline-${(s=n==null?void 0:n.icon)==null?void 0:s.replace(/_/g,"-")}`,packageName:e.packageName,homepage:e.homepage,pluginId:e.id}})}function th(i,s){return qu.find(e=>e.options.id===i&&(s?e.descriptor.app===s:!0))}function NC(){const i=b3();i.hook("addInspector",({inspector:n,plugin:a})=>{LC(n,a.descriptor)});const s=ct(async({inspectorId:n,plugin:a})=>{var t;if(!n||!((t=a==null?void 0:a.descriptor)!=null&&t.app)||ys.highPerfModeEnabled)return;const l=th(n,a.descriptor.app),r={app:a.descriptor.app,inspectorId:n,filter:(l==null?void 0:l.treeFilter)||"",rootNodes:[]};await new Promise(h=>{i.callHookWith(async p=>{await Promise.all(p.map(k=>k(r))),h()},"getInspectorTree")}),i.callHookWith(async h=>{await Promise.all(h.map(p=>p({inspectorId:n,rootNodes:r.rootNodes})))},"sendInspectorTreeToClient")},120);i.hook("sendInspectorTree",s);const e=ct(async({inspectorId:n,plugin:a})=>{var t;if(!n||!((t=a==null?void 0:a.descriptor)!=null&&t.app)||ys.highPerfModeEnabled)return;const l=th(n,a.descriptor.app),r={app:a.descriptor.app,inspectorId:n,nodeId:(l==null?void 0:l.selectedNodeId)||"",state:null},h={currentTab:`custom-inspector:${n}`};r.nodeId&&await new Promise(p=>{i.callHookWith(async k=>{await Promise.all(k.map(d=>d(r,h))),p()},"getInspectorState")}),i.callHookWith(async p=>{await Promise.all(p.map(k=>k({inspectorId:n,nodeId:r.nodeId,state:r.state})))},"sendInspectorStateToClient")},120);return i.hook("sendInspectorState",e),i.hook("customInspectorSelectNode",({inspectorId:n,nodeId:a,plugin:t})=>{const l=th(n,t.descriptor.app);l&&(l.selectedNodeId=a)}),i.hook("timelineLayerAdded",({options:n,plugin:a})=>{PC(n,a.descriptor)}),i.hook("timelineEventAdded",({options:n,plugin:a})=>{var t;const l=["performance","component-event","keyboard","mouse"];ys.highPerfModeEnabled||!((t=ys.timelineLayersState)!=null&&t[a.descriptor.id])&&!l.includes(n.layerId)||i.callHookWith(async r=>{await Promise.all(r.map(h=>h(n)))},"sendTimelineEventToClient")}),i.hook("getComponentInstances",async({app:n})=>{const a=n.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(!a)return null;const t=a.id.toString();return[...a.instanceMap].filter(([r])=>r.split(":")[0]===t).map(([,r])=>r)}),i.hook("getComponentBounds",async({instance:n})=>wa(n)),i.hook("getComponentName",({instance:n})=>op(n)),i.hook("componentHighlight",({uid:n})=>{const a=$s.value.instanceMap.get(n);a&&vC(a)}),i.hook("componentUnhighlight",()=>{R3()}),i}var B2,A2;(A2=(B2=Ei).__VUE_DEVTOOLS_KIT_APP_RECORDS__)!=null||(B2.__VUE_DEVTOOLS_KIT_APP_RECORDS__=[]);var y2,f2;(f2=(y2=Ei).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__)!=null||(y2.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__={});var m2,v2;(v2=(m2=Ei).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__)!=null||(m2.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__="");var F2,E2;(E2=(F2=Ei).__VUE_DEVTOOLS_KIT_CUSTOM_TABS__)!=null||(F2.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__=[]);var b2,C2;(C2=(b2=Ei).__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__)!=null||(b2.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__=[]);var Ba="__VUE_DEVTOOLS_KIT_GLOBAL_STATE__";function MC(){return{connected:!1,clientConnected:!1,vitePluginDetected:!0,appRecords:[],activeAppRecordId:"",tabs:[],commands:[],highPerfModeEnabled:!0,devtoolsClientDetected:{},perfUniqueGroupId:0,timelineLayersState:RC()}}var _2,D2;(D2=(_2=Ei)[Ba])!=null||(_2[Ba]=MC());var $C=ct(i=>{St.hooks.callHook("devtoolsStateUpdated",{state:i})});ct((i,s)=>{St.hooks.callHook("devtoolsConnectedUpdated",{state:i,oldState:s})});var up=new Proxy(Ei.__VUE_DEVTOOLS_KIT_APP_RECORDS__,{get(i,s,e){return s==="value"?Ei.__VUE_DEVTOOLS_KIT_APP_RECORDS__:Ei.__VUE_DEVTOOLS_KIT_APP_RECORDS__[s]}}),$s=new Proxy(Ei.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__,{get(i,s,e){return s==="value"?Ei.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__:s==="id"?Ei.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__:Ei.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__[s]}});function N3(){$C({...Ei[Ba],appRecords:up.value,activeAppRecordId:$s.id,tabs:Ei.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__,commands:Ei.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__})}function VC(i){Ei.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__=i,N3()}function zC(i){Ei.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__=i,N3()}var ys=new Proxy(Ei[Ba],{get(i,s){return s==="appRecords"?up:s==="activeAppRecordId"?$s.id:s==="tabs"?Ei.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__:s==="commands"?Ei.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__:Ei[Ba][s]},deleteProperty(i,s){return delete i[s],!0},set(i,s,e){return{...Ei[Ba]},i[s]=e,Ei[Ba][s]=e,!0}});function qC(i={}){var s,e,n;const{file:a,host:t,baseUrl:l=window.location.origin,line:r=0,column:h=0}=i;if(a){if(t==="chrome-extension"){const p=a.replace(/\\/g,"\\\\"),k=(e=(s=window.VUE_DEVTOOLS_CONFIG)==null?void 0:s.openInEditorHost)!=null?e:"/";fetch(`${k}__open-in-editor?file=${encodeURI(a)}`).then(d=>{if(!d.ok){const u=`Opening component ${p} failed`;console.log(`%c${u}`,"color:red")}})}else if(ys.vitePluginDetected){const p=(n=Ei.__VUE_DEVTOOLS_OPEN_IN_EDITOR_BASE_URL__)!=null?n:l;Ei.__VUE_INSPECTOR__.openInEditor(p,a,r,h)}}}ui();ui();ui();ui();ui();var x2,w2;(w2=(x2=Ei).__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__)!=null||(x2.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__=[]);var Hu=new Proxy(Ei.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__,{get(i,s,e){return Reflect.get(i,s,e)}});function uo(i){const s={};return Object.keys(i).forEach(e=>{s[e]=i[e].defaultValue}),s}function ju(i){return`__VUE_DEVTOOLS_NEXT_PLUGIN_SETTINGS__${i}__`}function HC(i){var s,e,n;const a=(e=(s=Hu.find(t=>{var l;return t[0].id===i&&!!((l=t[0])!=null&&l.settings)}))==null?void 0:s[0])!=null?e:null;return(n=a==null?void 0:a.settings)!=null?n:null}function M3(i,s){var e,n,a;const t=ju(i);if(t){const l=localStorage.getItem(t);if(l)return JSON.parse(l)}if(i){const l=(n=(e=Hu.find(r=>r[0].id===i))==null?void 0:e[0])!=null?n:null;return uo((a=l==null?void 0:l.settings)!=null?a:{})}return uo(s)}function jC(i,s){const e=ju(i);localStorage.getItem(e)||localStorage.setItem(e,JSON.stringify(uo(s)))}function UC(i,s,e){const n=ju(i),a=localStorage.getItem(n),t=JSON.parse(a||"{}"),l={...t,[s]:e};localStorage.setItem(n,JSON.stringify(l)),St.hooks.callHookWith(r=>{r.forEach(h=>h({pluginId:i,key:s,oldValue:t[s],newValue:e,settings:l}))},"setPluginSettings")}ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();var T2,S2,se=(S2=(T2=Ei).__VUE_DEVTOOLS_HOOK)!=null?S2:T2.__VUE_DEVTOOLS_HOOK=b3(),GC={vueAppInit(i){se.hook("app:init",i)},vueAppUnmount(i){se.hook("app:unmount",i)},vueAppConnected(i){se.hook("app:connected",i)},componentAdded(i){return se.hook("component:added",i)},componentEmit(i){return se.hook("component:emit",i)},componentUpdated(i){return se.hook("component:updated",i)},componentRemoved(i){return se.hook("component:removed",i)},setupDevtoolsPlugin(i){se.hook("devtools-plugin:setup",i)},perfStart(i){return se.hook("perf:start",i)},perfEnd(i){return se.hook("perf:end",i)}},$3={on:GC,setupDevToolsPlugin(i,s){return se.callHook("devtools-plugin:setup",i,s)}},WC=class{constructor({plugin:i,ctx:s}){this.hooks=s.hooks,this.plugin=i}get on(){return{visitComponentTree:i=>{this.hooks.hook("visitComponentTree",i)},inspectComponent:i=>{this.hooks.hook("inspectComponent",i)},editComponentState:i=>{this.hooks.hook("editComponentState",i)},getInspectorTree:i=>{this.hooks.hook("getInspectorTree",i)},getInspectorState:i=>{this.hooks.hook("getInspectorState",i)},editInspectorState:i=>{this.hooks.hook("editInspectorState",i)},inspectTimelineEvent:i=>{this.hooks.hook("inspectTimelineEvent",i)},timelineCleared:i=>{this.hooks.hook("timelineCleared",i)},setPluginSettings:i=>{this.hooks.hook("setPluginSettings",i)}}}notifyComponentUpdate(i){var s;if(ys.highPerfModeEnabled)return;const e=L3().find(n=>n.packageName===this.plugin.descriptor.packageName);if(e!=null&&e.id){if(i){const n=[i.appContext.app,i.uid,(s=i.parent)==null?void 0:s.uid,i];se.callHook("component:updated",...n)}else se.callHook("component:updated");this.hooks.callHook("sendInspectorState",{inspectorId:e.id,plugin:this.plugin})}}addInspector(i){this.hooks.callHook("addInspector",{inspector:i,plugin:this.plugin}),this.plugin.descriptor.settings&&jC(i.id,this.plugin.descriptor.settings)}sendInspectorTree(i){ys.highPerfModeEnabled||this.hooks.callHook("sendInspectorTree",{inspectorId:i,plugin:this.plugin})}sendInspectorState(i){ys.highPerfModeEnabled||this.hooks.callHook("sendInspectorState",{inspectorId:i,plugin:this.plugin})}selectInspectorNode(i,s){this.hooks.callHook("customInspectorSelectNode",{inspectorId:i,nodeId:s,plugin:this.plugin})}visitComponentTree(i){return this.hooks.callHook("visitComponentTree",i)}now(){return ys.highPerfModeEnabled?0:Date.now()}addTimelineLayer(i){this.hooks.callHook("timelineLayerAdded",{options:i,plugin:this.plugin})}addTimelineEvent(i){ys.highPerfModeEnabled||this.hooks.callHook("timelineEventAdded",{options:i,plugin:this.plugin})}getSettings(i){return M3(i??this.plugin.descriptor.id,this.plugin.descriptor.settings)}getComponentInstances(i){return this.hooks.callHook("getComponentInstances",{app:i})}getComponentBounds(i){return this.hooks.callHook("getComponentBounds",{instance:i})}getComponentName(i){return this.hooks.callHook("getComponentName",{instance:i})}highlightElement(i){const s=i.__VUE_DEVTOOLS_NEXT_UID__;return this.hooks.callHook("componentHighlight",{uid:s})}unhighlightElement(){return this.hooks.callHook("componentUnhighlight")}},KC=WC;ui();ui();ui();ui();var YC="__vue_devtool_undefined__",XC="__vue_devtool_infinity__",ZC="__vue_devtool_negative_infinity__",JC="__vue_devtool_nan__";ui();ui();var QC={[YC]:"undefined",[JC]:"NaN",[XC]:"Infinity",[ZC]:"-Infinity"};Object.entries(QC).reduce((i,[s,e])=>(i[e]=s,i),{});ui();ui();ui();ui();ui();var I2,R2;(R2=(I2=Ei).__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__)!=null||(I2.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__=new Set);function i_(i,s){return $3.setupDevToolsPlugin(i,s)}function s_(i,s){const[e,n]=i;if(e.app!==s)return;const a=new KC({plugin:{setupFn:n,descriptor:e},ctx:St});e.packageName==="vuex"&&a.on.editInspectorState(t=>{a.sendInspectorState(t.inspectorId)}),n(a)}function V3(i,s){Ei.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.has(i)||ys.highPerfModeEnabled&&!(s!=null&&s.inspectingComponent)||(Ei.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.add(i),Hu.forEach(e=>{s_(e,i)}))}ui();ui();var _l="__VUE_DEVTOOLS_ROUTER__",gt="__VUE_DEVTOOLS_ROUTER_INFO__",O2,P2;(P2=(O2=Ei)[gt])!=null||(O2[gt]={currentRoute:null,routes:[]});var L2,N2;(N2=(L2=Ei)[_l])!=null||(L2[_l]={});new Proxy(Ei[gt],{get(i,s){return Ei[gt][s]}});new Proxy(Ei[_l],{get(i,s){if(s==="value")return Ei[_l]}});function e_(i){const s=new Map;return((i==null?void 0:i.getRoutes())||[]).filter(e=>!s.has(e.path)&&s.set(e.path,1))}function Uu(i){return i.map(s=>{let{path:e,name:n,children:a,meta:t}=s;return a!=null&&a.length&&(a=Uu(a)),{path:e,name:n,children:a,meta:t}})}function n_(i){if(i){const{fullPath:s,hash:e,href:n,path:a,name:t,matched:l,params:r,query:h}=i;return{fullPath:s,hash:e,href:n,path:a,name:t,params:r,query:h,matched:Uu(l)}}return i}function a_(i,s){function e(){var n;const a=(n=i.app)==null?void 0:n.config.globalProperties.$router,t=n_(a==null?void 0:a.currentRoute.value),l=Uu(e_(a)),r=console.warn;console.warn=()=>{},Ei[gt]={currentRoute:t?r2(t):{},routes:r2(l)},Ei[_l]=a,console.warn=r}e(),$3.on.componentUpdated(ct(()=>{var n;((n=s.value)==null?void 0:n.app)===i.app&&(e(),!ys.highPerfModeEnabled&&St.hooks.callHook("routerInfoUpdated",{state:Ei[gt]}))},200))}function t_(i){return{async getInspectorTree(s){const e={...s,app:$s.value.app,rootNodes:[]};return await new Promise(n=>{i.callHookWith(async a=>{await Promise.all(a.map(t=>t(e))),n()},"getInspectorTree")}),e.rootNodes},async getInspectorState(s){const e={...s,app:$s.value.app,state:null},n={currentTab:`custom-inspector:${s.inspectorId}`};return await new Promise(a=>{i.callHookWith(async t=>{await Promise.all(t.map(l=>l(e,n))),a()},"getInspectorState")}),e.state},editInspectorState(s){const e=new TC,n={...s,app:$s.value.app,set:(a,t=s.path,l=s.state.value,r)=>{e.set(a,t,l,r||e.createDefaultSetCallback(s.state))}};i.callHookWith(a=>{a.forEach(t=>t(n))},"editInspectorState")},sendInspectorState(s){const e=th(s);i.callHook("sendInspectorState",{inspectorId:s,plugin:{descriptor:e.descriptor,setupFn:()=>({})}})},inspectComponentInspector(){return bC()},cancelInspectComponentInspector(){return EC()},getComponentRenderCode(s){const e=po($s.value,s);if(e)return(e==null?void 0:e.type)instanceof Function?e.type.toString():e.render.toString()},scrollToComponent(s){return CC({id:s})},openInEditor:qC,getVueInspector:xC,toggleApp(s,e){const n=up.value.find(a=>a.id===s);n&&(zC(s),VC(n),a_(n,$s),P3(),V3(n.app,e))},inspectDOM(s){const e=po($s.value,s);if(e){const[n]=Mu(e);n&&(Ei.__VUE_DEVTOOLS_INSPECT_DOM_TARGET__=n)}},updatePluginSettings(s,e,n){UC(s,e,n)},getPluginSettings(s){return{options:HC(s),values:M3(s)}}}}ui();var M2,$2;($2=(M2=Ei).__VUE_DEVTOOLS_ENV__)!=null||(M2.__VUE_DEVTOOLS_ENV__={vitePluginDetected:!1});var V2=NC(),z2,q2;(q2=(z2=Ei).__VUE_DEVTOOLS_KIT_CONTEXT__)!=null||(z2.__VUE_DEVTOOLS_KIT_CONTEXT__={hooks:V2,get state(){return{...ys,activeAppRecordId:$s.id,activeAppRecord:$s.value,appRecords:up.value}},api:t_(V2)});var St=Ei.__VUE_DEVTOOLS_KIT_CONTEXT__;ui();tC(rC());var H2,j2;(j2=(H2=Ei).__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__)!=null||(H2.__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__={id:0,appIds:new Set});ui();function l_(i){ys.highPerfModeEnabled=i??!ys.highPerfModeEnabled,!i&&$s.value&&V3($s.value.app)}ui();ui();ui();function r_(i){ys.devtoolsClientDetected={...ys.devtoolsClientDetected,...i};const s=Object.values(ys.devtoolsClientDetected).some(Boolean);l_(!s)}var U2,G2;(G2=(U2=Ei).__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__)!=null||(U2.__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__=r_);ui();ui();ui();ui();ui();ui();ui();var h_=class{constructor(){this.keyToValue=new Map,this.valueToKey=new Map}set(i,s){this.keyToValue.set(i,s),this.valueToKey.set(s,i)}getByKey(i){return this.keyToValue.get(i)}getByValue(i){return this.valueToKey.get(i)}clear(){this.keyToValue.clear(),this.valueToKey.clear()}},z3=class{constructor(i){this.generateIdentifier=i,this.kv=new h_}register(i,s){this.kv.getByValue(i)||(s||(s=this.generateIdentifier(i)),this.kv.set(s,i))}clear(){this.kv.clear()}getIdentifier(i){return this.kv.getByValue(i)}getValue(i){return this.kv.getByKey(i)}},p_=class extends z3{constructor(){super(i=>i.name),this.classToAllowedProps=new Map}register(i,s){typeof s=="object"?(s.allowProps&&this.classToAllowedProps.set(i,s.allowProps),super.register(i,s.identifier)):super.register(i,s)}getAllowedProps(i){return this.classToAllowedProps.get(i)}};ui();ui();function k_(i){if("values"in Object)return Object.values(i);const s=[];for(const e in i)i.hasOwnProperty(e)&&s.push(i[e]);return s}function d_(i,s){const e=k_(i);if("find"in e)return e.find(s);const n=e;for(let a=0;a<n.length;a++){const t=n[a];if(s(t))return t}}function Bt(i,s){Object.entries(i).forEach(([e,n])=>s(n,e))}function lh(i,s){return i.indexOf(s)!==-1}function W2(i,s){for(let e=0;e<i.length;e++){const n=i[e];if(s(n))return n}}var o_=class{constructor(){this.transfomers={}}register(i){this.transfomers[i.name]=i}findApplicable(i){return d_(this.transfomers,s=>s.isApplicable(i))}findByName(i){return this.transfomers[i]}};ui();ui();var u_=i=>Object.prototype.toString.call(i).slice(8,-1),q3=i=>typeof i>"u",c_=i=>i===null,Dl=i=>typeof i!="object"||i===null||i===Object.prototype?!1:Object.getPrototypeOf(i)===null?!0:Object.getPrototypeOf(i)===Object.prototype,co=i=>Dl(i)&&Object.keys(i).length===0,Qn=i=>Array.isArray(i),g_=i=>typeof i=="string",B_=i=>typeof i=="number"&&!isNaN(i),A_=i=>typeof i=="boolean",y_=i=>i instanceof RegExp,xl=i=>i instanceof Map,wl=i=>i instanceof Set,H3=i=>u_(i)==="Symbol",f_=i=>i instanceof Date&&!isNaN(i.valueOf()),m_=i=>i instanceof Error,K2=i=>typeof i=="number"&&isNaN(i),v_=i=>A_(i)||c_(i)||q3(i)||B_(i)||g_(i)||H3(i),F_=i=>typeof i=="bigint",E_=i=>i===1/0||i===-1/0,b_=i=>ArrayBuffer.isView(i)&&!(i instanceof DataView),C_=i=>i instanceof URL;ui();var j3=i=>i.replace(/\./g,"\\."),Bk=i=>i.map(String).map(j3).join("."),ol=i=>{const s=[];let e="";for(let a=0;a<i.length;a++){let t=i.charAt(a);if(t==="\\"&&i.charAt(a+1)==="."){e+=".",a++;continue}if(t==="."){s.push(e),e="";continue}e+=t}const n=e;return s.push(n),s};ui();function Oe(i,s,e,n){return{isApplicable:i,annotation:s,transform:e,untransform:n}}var U3=[Oe(q3,"undefined",()=>null,()=>{}),Oe(F_,"bigint",i=>i.toString(),i=>typeof BigInt<"u"?BigInt(i):(console.error("Please add a BigInt polyfill."),i)),Oe(f_,"Date",i=>i.toISOString(),i=>new Date(i)),Oe(m_,"Error",(i,s)=>{const e={name:i.name,message:i.message};return s.allowedErrorProps.forEach(n=>{e[n]=i[n]}),e},(i,s)=>{const e=new Error(i.message);return e.name=i.name,e.stack=i.stack,s.allowedErrorProps.forEach(n=>{e[n]=i[n]}),e}),Oe(y_,"regexp",i=>""+i,i=>{const s=i.slice(1,i.lastIndexOf("/")),e=i.slice(i.lastIndexOf("/")+1);return new RegExp(s,e)}),Oe(wl,"set",i=>[...i.values()],i=>new Set(i)),Oe(xl,"map",i=>[...i.entries()],i=>new Map(i)),Oe(i=>K2(i)||E_(i),"number",i=>K2(i)?"NaN":i>0?"Infinity":"-Infinity",Number),Oe(i=>i===0&&1/i===-1/0,"number",()=>"-0",Number),Oe(C_,"URL",i=>i.toString(),i=>new URL(i))];function cp(i,s,e,n){return{isApplicable:i,annotation:s,transform:e,untransform:n}}var G3=cp((i,s)=>H3(i)?!!s.symbolRegistry.getIdentifier(i):!1,(i,s)=>["symbol",s.symbolRegistry.getIdentifier(i)],i=>i.description,(i,s,e)=>{const n=e.symbolRegistry.getValue(s[1]);if(!n)throw new Error("Trying to deserialize unknown symbol");return n}),__=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,Uint8ClampedArray].reduce((i,s)=>(i[s.name]=s,i),{}),W3=cp(b_,i=>["typed-array",i.constructor.name],i=>[...i],(i,s)=>{const e=__[s[1]];if(!e)throw new Error("Trying to deserialize unknown typed array");return new e(i)});function K3(i,s){return i!=null&&i.constructor?!!s.classRegistry.getIdentifier(i.constructor):!1}var Y3=cp(K3,(i,s)=>["class",s.classRegistry.getIdentifier(i.constructor)],(i,s)=>{const e=s.classRegistry.getAllowedProps(i.constructor);if(!e)return{...i};const n={};return e.forEach(a=>{n[a]=i[a]}),n},(i,s,e)=>{const n=e.classRegistry.getValue(s[1]);if(!n)throw new Error(`Trying to deserialize unknown class '${s[1]}' - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564`);return Object.assign(Object.create(n.prototype),i)}),X3=cp((i,s)=>!!s.customTransformerRegistry.findApplicable(i),(i,s)=>["custom",s.customTransformerRegistry.findApplicable(i).name],(i,s)=>s.customTransformerRegistry.findApplicable(i).serialize(i),(i,s,e)=>{const n=e.customTransformerRegistry.findByName(s[1]);if(!n)throw new Error("Trying to deserialize unknown custom value");return n.deserialize(i)}),D_=[Y3,G3,X3,W3],Y2=(i,s)=>{const e=W2(D_,a=>a.isApplicable(i,s));if(e)return{value:e.transform(i,s),type:e.annotation(i,s)};const n=W2(U3,a=>a.isApplicable(i,s));if(n)return{value:n.transform(i,s),type:n.annotation}},Z3={};U3.forEach(i=>{Z3[i.annotation]=i});var x_=(i,s,e)=>{if(Qn(s))switch(s[0]){case"symbol":return G3.untransform(i,s,e);case"class":return Y3.untransform(i,s,e);case"custom":return X3.untransform(i,s,e);case"typed-array":return W3.untransform(i,s,e);default:throw new Error("Unknown transformation: "+s)}else{const n=Z3[s];if(!n)throw new Error("Unknown transformation: "+s);return n.untransform(i,e)}};ui();var ja=(i,s)=>{if(s>i.size)throw new Error("index out of bounds");const e=i.keys();for(;s>0;)e.next(),s--;return e.next().value};function J3(i){if(lh(i,"__proto__"))throw new Error("__proto__ is not allowed as a property");if(lh(i,"prototype"))throw new Error("prototype is not allowed as a property");if(lh(i,"constructor"))throw new Error("constructor is not allowed as a property")}var w_=(i,s)=>{J3(s);for(let e=0;e<s.length;e++){const n=s[e];if(wl(i))i=ja(i,+n);else if(xl(i)){const a=+n,t=+s[++e]==0?"key":"value",l=ja(i,a);switch(t){case"key":i=l;break;case"value":i=i.get(l);break}}else i=i[n]}return i},go=(i,s,e)=>{if(J3(s),s.length===0)return e(i);let n=i;for(let t=0;t<s.length-1;t++){const l=s[t];if(Qn(n)){const r=+l;n=n[r]}else if(Dl(n))n=n[l];else if(wl(n)){const r=+l;n=ja(n,r)}else if(xl(n)){if(t===s.length-2)break;const h=+l,p=+s[++t]==0?"key":"value",k=ja(n,h);switch(p){case"key":n=k;break;case"value":n=n.get(k);break}}}const a=s[s.length-1];if(Qn(n)?n[+a]=e(n[+a]):Dl(n)&&(n[a]=e(n[a])),wl(n)){const t=ja(n,+a),l=e(t);t!==l&&(n.delete(t),n.add(l))}if(xl(n)){const t=+s[s.length-2],l=ja(n,t);switch(+a==0?"key":"value"){case"key":{const h=e(l);n.set(h,n.get(l)),h!==l&&n.delete(l);break}case"value":{n.set(l,e(n.get(l)));break}}}return i};function Bo(i,s,e=[]){if(!i)return;if(!Qn(i)){Bt(i,(t,l)=>Bo(t,s,[...e,...ol(l)]));return}const[n,a]=i;a&&Bt(a,(t,l)=>{Bo(t,s,[...e,...ol(l)])}),s(n,e)}function T_(i,s,e){return Bo(s,(n,a)=>{i=go(i,a,t=>x_(t,n,e))}),i}function S_(i,s){function e(n,a){const t=w_(i,ol(a));n.map(ol).forEach(l=>{i=go(i,l,()=>t)})}if(Qn(s)){const[n,a]=s;n.forEach(t=>{i=go(i,ol(t),()=>i)}),a&&Bt(a,e)}else Bt(s,e);return i}var I_=(i,s)=>Dl(i)||Qn(i)||xl(i)||wl(i)||K3(i,s);function R_(i,s,e){const n=e.get(i);n?n.push(s):e.set(i,[s])}function O_(i,s){const e={};let n;return i.forEach(a=>{if(a.length<=1)return;s||(a=a.map(r=>r.map(String)).sort((r,h)=>r.length-h.length));const[t,...l]=a;t.length===0?n=l.map(Bk):e[Bk(t)]=l.map(Bk)}),n?co(e)?[n]:[n,e]:co(e)?void 0:e}var Q3=(i,s,e,n,a=[],t=[],l=new Map)=>{var r;const h=v_(i);if(!h){R_(i,a,s);const c=l.get(i);if(c)return n?{transformedValue:null}:c}if(!I_(i,e)){const c=Y2(i,e),A=c?{transformedValue:c.value,annotations:[c.type]}:{transformedValue:i};return h||l.set(i,A),A}if(lh(t,i))return{transformedValue:null};const p=Y2(i,e),k=(r=p==null?void 0:p.value)!=null?r:i,d=Qn(k)?[]:{},u={};Bt(k,(c,A)=>{if(A==="__proto__"||A==="constructor"||A==="prototype")throw new Error(`Detected property ${A}. This is a prototype pollution risk, please remove it from your object.`);const g=Q3(c,s,e,n,[...a,A],[...t,i],l);d[A]=g.transformedValue,Qn(g.annotations)?u[A]=g.annotations:Dl(g.annotations)&&Bt(g.annotations,(f,m)=>{u[j3(A)+"."+m]=f})});const o=co(u)?{transformedValue:d,annotations:p?[p.type]:void 0}:{transformedValue:d,annotations:p?[p.type,u]:u};return h||l.set(i,o),o};ui();ui();function sf(i){return Object.prototype.toString.call(i).slice(8,-1)}function X2(i){return sf(i)==="Array"}function P_(i){if(sf(i)!=="Object")return!1;const s=Object.getPrototypeOf(i);return!!s&&s.constructor===Object&&s===Object.prototype}function L_(i,s,e,n,a){const t={}.propertyIsEnumerable.call(n,s)?"enumerable":"nonenumerable";t==="enumerable"&&(i[s]=e),a&&t==="nonenumerable"&&Object.defineProperty(i,s,{value:e,enumerable:!1,writable:!0,configurable:!0})}function Ao(i,s={}){if(X2(i))return i.map(a=>Ao(a,s));if(!P_(i))return i;const e=Object.getOwnPropertyNames(i),n=Object.getOwnPropertySymbols(i);return[...e,...n].reduce((a,t)=>{if(X2(s.props)&&!s.props.includes(t))return a;const l=i[t],r=Ao(l,s);return L_(a,t,r,i,s.nonenumerable),a},{})}var ss=class{constructor({dedupe:i=!1}={}){this.classRegistry=new p_,this.symbolRegistry=new z3(s=>{var e;return(e=s.description)!=null?e:""}),this.customTransformerRegistry=new o_,this.allowedErrorProps=[],this.dedupe=i}serialize(i){const s=new Map,e=Q3(i,s,this,this.dedupe),n={json:e.transformedValue};e.annotations&&(n.meta={...n.meta,values:e.annotations});const a=O_(s,this.dedupe);return a&&(n.meta={...n.meta,referentialEqualities:a}),n}deserialize(i){const{json:s,meta:e}=i;let n=Ao(s);return e!=null&&e.values&&(n=T_(n,e.values,this)),e!=null&&e.referentialEqualities&&(n=S_(n,e.referentialEqualities)),n}stringify(i){return JSON.stringify(this.serialize(i))}parse(i){return this.deserialize(JSON.parse(i))}registerClass(i,s){this.classRegistry.register(i,s)}registerSymbol(i,s){this.symbolRegistry.register(i,s)}registerCustom(i,s){this.customTransformerRegistry.register({name:s,...i})}allowErrorProps(...i){this.allowedErrorProps.push(...i)}};ss.defaultInstance=new ss;ss.serialize=ss.defaultInstance.serialize.bind(ss.defaultInstance);ss.deserialize=ss.defaultInstance.deserialize.bind(ss.defaultInstance);ss.stringify=ss.defaultInstance.stringify.bind(ss.defaultInstance);ss.parse=ss.defaultInstance.parse.bind(ss.defaultInstance);ss.registerClass=ss.defaultInstance.registerClass.bind(ss.defaultInstance);ss.registerSymbol=ss.defaultInstance.registerSymbol.bind(ss.defaultInstance);ss.registerCustom=ss.defaultInstance.registerCustom.bind(ss.defaultInstance);ss.allowErrorProps=ss.defaultInstance.allowErrorProps.bind(ss.defaultInstance);ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();ui();var Z2,J2;(J2=(Z2=Ei).__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__)!=null||(Z2.__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__=[]);var Q2,iB;(iB=(Q2=Ei).__VUE_DEVTOOLS_KIT_RPC_CLIENT__)!=null||(Q2.__VUE_DEVTOOLS_KIT_RPC_CLIENT__=null);var sB,eB;(eB=(sB=Ei).__VUE_DEVTOOLS_KIT_RPC_SERVER__)!=null||(sB.__VUE_DEVTOOLS_KIT_RPC_SERVER__=null);var nB,aB;(aB=(nB=Ei).__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__)!=null||(nB.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__=null);var tB,lB;(lB=(tB=Ei).__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__)!=null||(tB.__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__=null);var rB,hB;(hB=(rB=Ei).__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__)!=null||(rB.__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__=null);ui();ui();ui();ui();ui();ui();ui();const N_="org.vuejs.vuepress.plugin-theme-data",M_="VuePress Theme Data",pB="THEME_DATA",kB="Theme Data",$_=(i,s,e)=>{i_({app:i,id:N_,label:M_,packageName:"@vuepress/plugin-theme-data",homepage:"https://vuepress.vuejs.org",logo:"https://vuepress.vuejs.org/images/hero.png",componentStateTypes:[Rn.COMPONENT_STATE_TYPE]},n=>{n.on.inspectComponent(a=>{a.instanceData.state.push({type:"VuePress",key:"themeData",editable:!1,value:s.value},{type:"VuePress",key:"themeLocaleData",editable:!1,value:e.value})}),n.addInspector({id:Rn.INSPECTOR_ID,label:Rn.INSPECTOR_LABEL,icon:"article"}),n.on.getInspectorTree(a=>{a.inspectorId===Rn.INSPECTOR_ID&&a.rootNodes.push({id:pB,label:kB,children:[{id:"themeData",label:"themeData"},{id:"themeLocaleData",label:"themeLocaleData"}]})}),n.on.getInspectorState(a=>{a.inspectorId===Rn.INSPECTOR_ID&&(a.nodeId===pB&&a.state[kB].push({key:"themeData",value:s.value},{key:"themeLocaleData",value:e.value}),["themeData","themeLocaleData"].includes(a.nodeId)&&(a.state={[Rn.INSPECTOR_STATE_SECTION_NAME]:[{key:a.nodeId,value:a.nodeId==="themeData"?s.value:e.value}]}))}),bi([s,e],()=>{n.notifyComponentUpdate(),n.sendInspectorState(Rn.INSPECTOR_ID)})})},V_=JSON.parse('{"encrypt":{},"author":{"name":"LincDocs","url":"https://github.com/LincDocs/rust-course/"},"repo":"LincDocs/rust-course","logo":"/logo.svg","docsDir":"src","locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":[{"text":"/","link":"/"}],"sidebar":{"/":"structure"}}},"displayFooter":true,"copyright":false,"footer":"Powered by <a href=\\"https://github.com/LincDocs/Workflow\\">LincZero.github.io Workflow</a>","toc":true,"headerDepth":6,"navbarLayout":{"start":["Brand"],"center":[],"end":["Links","Language","Repo","Outlook","Search","ReadEnhance"]}}'),z_=Z(V_),ef=()=>z_,nf=Symbol(""),q_=()=>{const i=Ni(nf);if(!i)throw new Error("useThemeLocaleData() is called without provider.");return i},H_=(i,s)=>{const{locales:e,...n}=i;return{...n,...e==null?void 0:e[s]}},j_=Ts({enhance({app:i}){const s=ef(),e=i._context.provides[_u],n=z(()=>H_(s.value,e.routeLocale.value));i.provide(nf,n),Object.defineProperties(i.config.globalProperties,{$theme:{get(){return s.value}},$themeLocale:{get(){return n.value}}}),$_(i,s,n)}}),U_=Object.freeze(Object.defineProperty({__proto__:null,default:j_},Symbol.toStringTag,{value:"Module"}));var G_={"/":{backToTop:"返回顶部"}};const W_=ti({name:"BackToTop",setup(){const i=ji(),s=Ye(G_),e=Ti(),{height:n}=Qb(e),{height:a}=r7(),{y:t}=l7(),l=z(()=>i.value.backToTop!==!1&&t.value>100),r=z(()=>t.value/(n.value-a.value)*100);return Di(()=>{e.value=document.body}),()=>B(xa,{name:"back-to-top"},()=>l.value?B("button",{type:"button",class:"vp-back-to-top-button","aria-label":s.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[B("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":r.value},B("svg",B("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*r.value*.48} ${Math.PI*(100-r.value)*.48}`}))),B("div",{class:"back-to-top-icon"})]):null)}}),K_=Ts({rootComponents:[W_]}),Y_=Object.freeze(Object.defineProperty({__proto__:null,default:K_},Symbol.toStringTag,{value:"Module"})),X_=/language-(shellscript|shell|bash|sh|zsh)/,Z_=({duration:i=2e3,locales:s,selector:e,showInMobile:n,ignoreSelector:a=[],transform:t})=>{const l=Su("(max-width: 419px)"),r=z(()=>!l.value||n),h=Ye(s),p=c=>{var g;if(c.hasAttribute("copy-code"))return;const A=document.createElement("button");A.type="button",A.classList.add("vp-copy-code-button"),A.setAttribute("aria-label",h.value.copy),A.setAttribute("data-copied",h.value.copied),(g=c.parentElement)==null||g.insertBefore(A,c),c.setAttribute("copy-code","")},k=()=>{document.body.classList.toggle("no-copy-code",!r.value),r.value&&document.querySelectorAll(e.join(",")).forEach(p)};te(r,k,{flush:"post"}),_n(c=>{c!=="beforeUnmount"&&k()});const{copy:d}=jb({legacy:!0}),u=new WeakMap,o=async(c,A,g)=>{const f=A.cloneNode(!0);a.length&&f.querySelectorAll(a.join(",")).forEach(v=>{v.remove()}),t&&t(f);let m=f.textContent||"";if(X_.test(c.className)&&(m=m.replace(/^ *(\$|>) /gm,"")),await d(m),i<=0)return;g.classList.add("copied"),clearTimeout(u.get(g));const y=setTimeout(()=>{g.classList.remove("copied"),g.blur(),u.delete(g)},i);u.set(g,y)};Ri("click",c=>{const A=c.target;if(r.value&&A.matches('div[class*="language-"] > button.vp-copy-code-button')){const g=A.parentElement,f=A.nextElementSibling;if(!g||!f)return;o(g,f,A)}})};var J_=[],Q_={"/":{copy:"复制代码",copied:"已复制"}},i9=['[vp-content] div[class*="language-"] pre'];const s9=Ts({setup:()=>{Z_({selector:i9,ignoreSelector:J_,locales:Q_,duration:2e3,showInMobile:!1})}}),e9=Object.freeze(Object.defineProperty({__proto__:null,default:s9},Symbol.toStringTag,{value:"Module"})),n9=ti({name:"VPIcon",props:{type:{type:String,default:"unknown"},prefix:String,icon:String,color:String,size:[String,Number],verticalAlign:String,sizing:{type:String,default:"height"}},setup(i){const s=z(()=>i.icon?aa(i.icon)?i.icon:dp(i.icon)?Gi(i.icon):null:null),e=z(()=>{const a={},t={},{type:l,verticalAlign:r,size:h,sizing:p}=i;return i.color&&(t.color=i.color),h&&(t["--icon-size"]=Number.isNaN(Number(h))?h:`${h}px`),r&&(t["--icon-vertical-align"]=r),l==="iconify"&&(p!=="height"&&(a.width=i.size||"1em"),p!=="width"&&(a.height=i.size||"1em")),i.sizing&&(a.sizing=i.sizing),Ge(t).length&&(a.style=t),a}),n=a=>a.includes("fa-")||/^fa.$/.test(a)?a:`fa-${a}`;return()=>{const{type:a,icon:t,prefix:l="",sizing:r}=i;if(!t)return null;if(s.value)return B("img",{class:"vp-icon",src:s.value,alt:"","aria-hidden":"","no-view":"",...e.value});if(a==="iconify")return B("iconify-icon",{key:t,class:"vp-icon",icon:t.includes(":")?t:`${l}${t}`,...e.value});if(a==="fontawesome"){const[h,p]=t.includes(":")?t.split(":",2):["fas",t];return B("i",{key:t,class:["vp-icon",h.length===1?`fa${h}`:n(h),...p.split(" ").map(n),r==="height"?"":"fa-fw"],...e.value})}return B("i",{key:t,class:["vp-icon",t.includes(" ")?t:`${l}${t}`],...e.value})}}}),a9={enhance:({app:i})=>{Ce("VPIcon")||i.component("VPIcon",s=>B(n9,{type:"iconify",prefix:"fa6-solid:",...s}))},setup:()=>{n7("https://cdn.jsdelivr.net/npm/iconify-icon@2")}},t9=Object.freeze(Object.defineProperty({__proto__:null,default:a9},Symbol.toStringTag,{value:"Module"})),l9=Z({}),af=Symbol(""),r9=()=>Ni(af),h9=i=>{i.provide(af,l9)},tf=i=>new Promise((s,e)=>{i.complete?s({type:"image",element:i,src:i.src,width:i.naturalWidth,height:i.naturalHeight,alt:i.alt,msrc:i.src}):(i.onload=()=>{s(tf(i))},i.onerror=()=>{e()})}),p9='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',k9=(i,{download:s=!0,fullscreen:e=!0}={})=>{i.on("uiRegister",()=>{if(i.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:n=>{const a=[];let t=-1;for(let l=0;l<i.getNumItems();l++){const r=document.createElement("div");r.className="photo-swipe-bullet",r.onclick=h=>{i.goTo(a.indexOf(h.target))},a.push(r),n.appendChild(r)}i.on("change",()=>{t>=0&&a[t].classList.remove("active"),a[i.currIndex].classList.add("active"),t=i.currIndex})}}),e){const{isSupported:n,toggle:a}=hp();n.value&&i.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{a()}})}s&&i.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:n=>{n.setAttribute("download",""),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener"),i.on("change",()=>{n.setAttribute("href",i.currSlide.data.src)})}})})},d9=({selector:i,locales:s,download:e=!0,fullscreen:n=!0,scrollToClose:a=!0})=>{const t=r9(),l=Ye(s),r=ji(),h=z(()=>{const{photoSwipe:c}=r.value;return c===!1?null:ls(c)?c:Dh(i)?i.join(", "):i}),p=z(()=>({...t.value,...l.value,download:e,fullscreen:n,scrollToClose:a}));let k=null,d=0,u=null;const o=async c=>{const A=c.target;if(!h.value||!k||!A.matches(h.value))return;d!==0&&u.destroy();const g=Date.now(),f=await k,m=Array.from(document.querySelectorAll(h.value)),y=m.map(C=>({html:p9,element:C,msrc:C.src})),v=m.findIndex(C=>C===A);u=new f({preloaderDelay:0,showHideAnimationType:"zoom",...p,dataSource:y,index:v,...a?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),d=g,k9(u,{download:e,fullscreen:n}),u.init(),u.on("destroy",()=>{u=null,d=0}),m.map((C,S)=>tf(C).then(L=>{d===g&&(y.splice(S,1,L),u==null||u.refreshSlideContent(S))}))};Di(()=>{const c="requestIdleCallback"in window?window.requestIdleCallback:setTimeout;Ri("click",o),Ri("wheel",()=>{p.value.scrollToClose&&(u==null||u.close())}),c(()=>{k=b(async()=>{const{default:A}=await import("./photoswipe.esm-DXWKOczD.js");return{default:A}},[]).then(({default:A})=>A)})}),_s(()=>{u==null||u.destroy()})};var o9={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const u9="[vp-content] :not(a) > img:not([no-view])",c9=o9,g9=!0,B9=!0,A9=!0;var y9=Ts({enhance:({app:i})=>{h9(i)},setup:()=>{d9({selector:u9,locales:c9,download:g9,fullscreen:B9,scrollToClose:A9})}});const f9=Object.freeze(Object.defineProperty({__proto__:null,default:y9},Symbol.toStringTag,{value:"Module"})),Yi=({name:i="",color:s="currentColor",ariaLabel:e},{attrs:n,slots:a})=>B("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${i}-icon`],viewBox:"0 0 1024 1024",fill:s,"aria-label":e??`${i} icon`,...n},a.default());Yi.displayName="IconBase";const Gu=(i,{slots:s})=>s.default(),lf=()=>B(Yi,{name:"enter-fullscreen"},()=>B("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));lf.displayName="EnterFullScreenIcon";const rf=()=>B(Yi,{name:"cancel-fullscreen"},()=>B("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));rf.displayName="CancelFullScreenIcon";const m9=i=>aa(i)?i:`https://github.com/${i}`,Wu=(i="")=>!aa(i)||i.includes("github.com")?"GitHub":i.includes("bitbucket.org")?"Bitbucket":i.includes("gitlab.com")?"GitLab":i.includes("gitee.com")?"Gitee":null,hf=()=>B(Yi,{name:"github"},()=>B("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));hf.displayName="GitHubIcon";const pf=()=>B(Yi,{name:"gitee"},()=>B("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));pf.displayName="GiteeIcon";const kf=()=>B(Yi,{name:"bitbucket"},()=>B("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));kf.displayName="BitbucketIcon";const df=()=>B(Yi,{name:"source"},()=>B("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));df.displayName="SourceIcon";const v9=({link:i,type:s=Wu(i??"")})=>{if(!s)return null;const e=s.toLowerCase();return B(e==="bitbucket"?kf:e==="github"?hf:e==="gitlab"?"GitLab":e==="gitee"?pf:df)},F9=(i,s=0)=>{let e=3735928559^s,n=1103547991^s;for(let a=0,t;a<i.length;a++)t=i.charCodeAt(a),e=Math.imul(e^t,2654435761),n=Math.imul(n^t,1597334677);return e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(e^e>>>13,3266489909),4294967296*(2097151&n)+(e>>>0)},kr=(i,s)=>F9(i)%s;class E9{constructor(){hs(this,"containerElement");hs(this,"messageElements",{});const s="message-container",e=document.getElementById(s);e?this.containerElement=e:(this.containerElement=document.createElement("div"),this.containerElement.id=s,document.body.appendChild(this.containerElement))}pop(s,e=2e3){const n=document.createElement("div"),a=Date.now();return n.className="message move-in",n.innerHTML=s,this.containerElement.appendChild(n),this.messageElements[a]=n,e>0&&setTimeout(()=>{this.close(a)},e),a}close(s){if(s){const e=this.messageElements[s];e.classList.remove("move-in"),e.classList.add("move-out"),e.addEventListener("animationend",()=>{e.remove(),delete this.messageElements[s]})}else Ge(this.messageElements).forEach(e=>{this.close(Number(e))})}destroy(){document.body.removeChild(this.containerElement)}}const of=/#.*$/u,b9=i=>{const s=of.exec(i);return s?s[0]:""},dB=i=>decodeURI(i).replace(of,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),uf=(i,s)=>{if(!kp(s))return!1;const e=dB(i.path),n=dB(s),a=b9(s);return a?a===i.hash&&(!n||e===n):e===n};var C9=i=>Object.prototype.toString.call(i)==="[object Object]",Tl=i=>typeof i=="string";const{isArray:cf}=Array,oB=i=>C9(i)&&Tl(i.name),Sl=(i,s=!1)=>i?cf(i)?i.map(e=>Tl(e)?{name:e}:oB(e)?e:null).filter(e=>e!==null):Tl(i)?[{name:i}]:oB(i)?[i]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${s?"":"| false"} | undefined\`, but got`,i),[]):[],gf=(i,s)=>{if(i){if(cf(i)&&i.every(Tl))return i;if(Tl(i))return[i];console.error(`Expect ${s} to be \`string[] | string | undefined\`, but got`,i)}return[]},Bf=i=>gf(i,"category"),Af=i=>gf(i,"tag"),uB=i=>ls(i)?i:`${i}px`,_9=(i,s=0)=>{const e=Ti(),n=z(()=>uB(mi(i.width)??"100%")),a=Z("auto"),t=h=>{if(ls(h)){const[p,k]=h.split(":"),d=Number(p)/Number(k);if(!Number.isNaN(d))return d}return typeof h=="number"?h:16/9},l=h=>{const p=mi(i.height),k=t(mi(i.ratio));return p?uB(p):`${Number(h)/k+mi(s)}px`},r=()=>{e.value&&(a.value=l(e.value.clientWidth))};return Di(()=>{r(),ts(s)&&bi(s,r),Ri("orientationchange",r),Ri("resize",r)}),{el:e,width:n,height:a,resize:r}},D9=i=>aa(i)?i:Gi(i);var x9={"/":{hint:"<p>此浏览器不支持嵌入式 PDF。请下载 PDF 查看：<a href='[url]' target='_blank'>下载 PDF</a></p>"}};const Ak=i=>{console.error(`[PDF]: ${i}`)},w9=i=>{for(;i.firstChild;)i.removeChild(i.firstChild)},T9=i=>i instanceof HTMLElement?i:i==="string"?document.querySelector(i):document.body,S9=i=>{let s=Pa(i).map(([e,n])=>e==="noToolbar"?`toolbar=${n?"0":"1"}`:`${encodeURIComponent(e)}=${encodeURIComponent(n)}`).join("&");return s&&(s=`#${s.slice(0,s.length-1)}`),s},yk=(i,s,e,n,a)=>{w9(s);const t=`${i==="pdfjs"?`${Fu(Gi("https://theme-hope-assets.vuejs.press/pdfjs/"))}web/viewer.html?file=${encodeURIComponent(e)}`:e}${S9(n)}`,l=i==="pdfjs"||i==="iframe"?"iframe":"embed",r=document.createElement(l);return r.className="pdf-viewer",r.type="application/pdf",r.title=a,r.src=t,r instanceof HTMLIFrameElement&&(r.allow="fullscreen"),s.classList.add("pdf-viewer-container"),s.appendChild(r),s.getElementsByTagName(l)[0]},I9=(i,s,{title:e,hint:n,options:a={},force:t})=>{var g,f;if(typeof window>"u"||!((g=window==null?void 0:window.navigator)!=null&&g.userAgent))return null;const{navigator:l}=window,{userAgent:r}=l,h=kp(window.Promise),p=B3(r)||$7(r),k=!p&&V7(r),d=!p&&/firefox/iu.test(r)&&r.split("rv:").length>1?parseInt(r.split("rv:")[1].split(".")[0],10)>18:!1,u=!p&&(h||d),o=T9(s);if(!o)return Ak("Target element cannot be determined"),null;const c=aa(i)?i:`${window.origin}${i}`,A=e??((f=/\/([^/]+).pdf/.exec(i))==null?void 0:f[1])??"PDF Viewer";return t?c?yk("pdfjs",o,i,a,A):(Ak("PDF link is not accessible."),null):u||!p?yk(k?"iframe":"embed",o,i,a,A):c?yk("pdfjs",o,i,a,A):(o.innerHTML=n.replace(/\[url\]/g,i),Ak("This browser does not support embedded PDFs"),null)};var R9=ti({name:"PDF",props:{url:{type:String,required:!0},title:String,width:{type:[String,Number],default:"100%"},height:[String,Number],ratio:{type:[String,Number],default:16/9},page:{type:[String,Number],default:1},noToolbar:Boolean,noFullscreen:Boolean,zoom:[String,Number],viewer:Boolean},setup(i){const{el:s,width:e,height:n,resize:a}=_9(i),t=Ye(x9),l=Ti(),r=Ti(),h=rr(l),p=Z(!1);return bi(p,k=>{h.value=k}),Di(()=>{l.value=document.body,I9(D9(i.url),r.value,{title:i.title,hint:t.value.hint,options:{page:i.page,noToolbar:i.noToolbar,...i.zoom&&i.zoom.toString()!=="100"?{zoom:i.zoom}:{}},force:i.viewer}),a()}),_s(()=>{h.value=!1}),()=>B("div",{class:["pdf-viewer-wrapper",{fullscreen:p.value}],ref:s,style:p.value?{}:{width:e.value,height:n.value}},[B("div",{ref:r}),i.noFullscreen?null:B("button",{class:"pdf-fullscreen-button",onClick:()=>{p.value=!p.value}},B(p.value?rf:lf,{class:"pdf-fullscreen-icon"}))])}});const O9={enhance:({app:i})=>{Ce("PDF")||i.component("PDF",R9)},setup:()=>{},rootComponents:[]},P9=Object.freeze(Object.defineProperty({__proto__:null,default:O9},Symbol.toStringTag,{value:"Module"})),cB=async(i,s)=>{const{path:e,query:n}=i.currentRoute.value,{scrollBehavior:a}=i.options;i.options.scrollBehavior=void 0,await i.replace({path:e,query:n,hash:s}),i.options.scrollBehavior=a},L9=({headerLinkSelector:i,headerAnchorSelector:s,delay:e,offset:n=5})=>{const a=De();Ri("scroll",rp(()=>{var c,A;const l=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(l-0)<n){cB(a,"");return}const h=window.innerHeight+l,p=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),k=Math.abs(p-h)<n,d=Array.from(document.querySelectorAll(i)),o=Array.from(document.querySelectorAll(s)).filter(g=>d.some(f=>f.hash===g.hash));for(let g=0;g<o.length;g++){const f=o[g],m=o[g+1],y=l>=(((c=f.parentElement)==null?void 0:c.offsetTop)??0)-n,v=!m||l<(((A=m.parentElement)==null?void 0:A.offsetTop)??0)-n;if(!(y&&v))continue;const S=decodeURIComponent(a.currentRoute.value.hash),L=decodeURIComponent(f.hash);if(S===L)return;if(k){for(let w=g+1;w<o.length;w++)if(S===decodeURIComponent(o[w].hash))return}cB(a,L);return}},e))},N9=".vp-sidebar-link, .vp-toc-link",M9=".header-anchor",$9=200,V9=5,z9=Ts({setup(){L9({headerLinkSelector:N9,headerAnchorSelector:M9,delay:$9,offset:V9})}}),q9=Object.freeze(Object.defineProperty({__proto__:null,default:z9},Symbol.toStringTag,{value:"Module"}));let yf=i=>ls(i.title)?{title:i.title}:null;const ff=Symbol(""),H9=i=>{yf=i},j9=()=>Ni(ff),U9=i=>{i.provide(ff,yf)};var G9={"/":{title:"目录",empty:"暂无目录"}},W9=ti({name:"Catalog",props:{base:String,level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(i){const s=j9(),e=Ye(G9),n=Bs(),a=cb(),t=xu(),l=Ti(Pa(a.value).map(([h,{meta:p}])=>{const k=s(p);if(!k)return null;const d=h.split("/").length;return{level:i5(h,"/")?d-2:d-1,base:h.replace(/\/[^/]+\/?$/,"/"),path:h,...k}}).filter(h=>er(h)&&ls(h.title))),r=z(()=>{const h=i.base?VF(Fu(i.base)):n.value.path.replace(/\/[^/]+$/,"/"),p=h.split("/").length-2,k=[];return l.value.filter(({level:d,path:u})=>{if(!Cl(u,h)||u===h)return!1;if(h==="/"){const o=Ge(t.value.locales).filter(c=>c!=="/");if(u==="/404.html"||o.some(c=>Cl(u,c)))return!1}return d-p<=i.level}).sort(({title:d,level:u,order:o},{title:c,level:A,order:g})=>u-A||(ah(o)?ah(g)?o>0?g>0?o-g:-1:g<0?o-g:1:o:ah(g)?g:d.localeCompare(c))).forEach(d=>{var c;const{base:u,level:o}=d;switch(o-p){case 1:{k.push(d);break}case 2:{const A=k.find(g=>g.path===u);A&&(A.children??(A.children=[])).push(d);break}default:{const A=k.find(g=>g.path===u.replace(/\/[^/]+\/$/,"/"));if(A){const g=(c=A.children)==null?void 0:c.find(f=>f.path===u);g&&(g.children??(g.children=[])).push(d)}}}}),k});return()=>{const h=r.value.some(p=>p.children);return B("div",{class:["vp-catalog",{index:i.index}]},[i.hideHeading?null:B("h2",{class:"vp-catalog-main-title"},e.value.title),r.value.length?B(i.index?"ol":"ul",{class:["vp-catalog-list",{deep:h}]},r.value.map(({children:p=[],title:k,path:d,content:u})=>{const o=B(ms,{class:"vp-catalog-title",to:d},()=>u?B(u):k);return B("li",{class:"vp-catalog-item"},h?[B("h3",{id:k,class:["vp-catalog-child-title",{"has-children":p.length}]},[B("a",{href:`#${k}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),o]),p.length?B(i.index?"ol":"ul",{class:"vp-child-catalogs"},p.map(({children:c=[],content:A,path:g,title:f})=>B("li",{class:"vp-child-catalog"},[B("div",{class:["vp-catalog-sub-title",{"has-children":c.length}]},[B("a",{href:`#${f}`,class:"vp-catalog-header-anchor"},"#"),B(ms,{class:"vp-catalog-title",to:g},()=>A?B(A):f)]),c.length?B(i.index?"ol":"div",{class:i.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},c.map(({content:m,path:y,title:v})=>i.index?B("li",{class:"vp-sub-catalog"},B(ms,{to:y},()=>m?B(m):v)):B(ms,{class:"vp-sub-catalog-link",to:y},()=>m?B(m):v))):null]))):null]:B("div",{class:"vp-catalog-child-title"},o))})):B("p",{class:"vp-empty-catalog"},e.value.empty)])}}}),K9=Ts({enhance:({app:i})=>{U9(i),Ce("Catalog",i)||i.component("Catalog",W9)}});const Y9=Object.freeze(Object.defineProperty({__proto__:null,default:K9},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const gB=(i,s)=>{i.classList.add(s)},BB=(i,s)=>{i.classList.remove(s)},X9=i=>{var s;(s=i==null?void 0:i.parentNode)==null||s.removeChild(i)},fk=(i,s,e)=>i<s?s:i>e?e:i,AB=i=>(-1+i)*100,Z9=(()=>{const i=[],s=()=>{const e=i.shift();e&&e(s)};return e=>{i.push(e),i.length===1&&s()}})(),J9=i=>i.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(s,e)=>e.toUpperCase()),Mr=(()=>{const i=["Webkit","O","Moz","ms"],s={},e=t=>{const{style:l}=document.body;if(t in l)return t;const r=t.charAt(0).toUpperCase()+t.slice(1);let h=i.length;for(;h--;){const p=`${i[h]}${r}`;if(p in l)return p}return t},n=t=>{const l=J9(t);return s[l]??(s[l]=e(l))},a=(t,l,r)=>{t.style[n(l)]=r};return(t,l)=>{for(const r in l){const h=l[r];Object.hasOwn(l,r)&&kp(h)&&a(t,r,h)}}})(),an={minimum:.08,easing:"ease",speed:200,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},ps={percent:null,isRendered:()=>!!document.getElementById("nprogress"),set:i=>{const{speed:s,easing:e}=an,n=ps.isStarted(),a=fk(i,an.minimum,1);ps.percent=a===1?null:a;const t=ps.render(!n),l=t.querySelector(an.barSelector);return t.offsetWidth,Z9(r=>{Mr(l,{transform:`translate3d(${AB(a)}%,0,0)`,transition:`all ${s}ms ${e}`}),a===1?(Mr(t,{transition:"none",opacity:"1"}),t.offsetWidth,setTimeout(()=>{Mr(t,{transition:`all ${s}ms linear`,opacity:"0"}),setTimeout(()=>{ps.remove(),r()},s)},s)):setTimeout(()=>{r()},s)}),ps},isStarted:()=>typeof ps.percent=="number",start:()=>{ps.percent||ps.set(0);const i=()=>{setTimeout(()=>{ps.percent&&(ps.trickle(),i())},an.trickleSpeed)};return i(),ps},done:i=>!i&&!ps.percent?ps:ps.increase(.3+.5*Math.random()).set(1),increase:i=>{let{percent:s}=ps;return s?(s=fk(s+(typeof i=="number"?i:(1-s)*fk(Math.random()*s,.1,.95)),0,.994),ps.set(s)):ps.start()},trickle:()=>ps.increase(Math.random()*an.trickleRate),render:i=>{if(ps.isRendered())return document.getElementById("nprogress");gB(document.documentElement,"nprogress-busy");const s=document.createElement("div");s.id="nprogress",s.innerHTML=an.template;const e=s.querySelector(an.barSelector),n=document.querySelector(an.parent),a=i?"-100":AB(ps.percent??0);return Mr(e,{transition:"all 0 linear",transform:`translate3d(${a}%,0,0)`}),n&&(n!==document.body&&gB(n,"nprogress-custom-parent"),n.appendChild(s)),s},remove:()=>{BB(document.documentElement,"nprogress-busy"),BB(document.querySelector(an.parent),"nprogress-custom-parent"),X9(document.getElementById("nprogress"))}},Q9=()=>{Di(()=>{const i=De(),s=new Set;s.add(i.currentRoute.value.path),i.beforeEach(e=>{s.has(e.path)||ps.start()}),i.afterEach(e=>{s.add(e.path),ps.done()})})},iD=Ts({setup(){Q9()}}),sD=Object.freeze(Object.defineProperty({__proto__:null,default:iD},Symbol.toStringTag,{value:"Module"}));var eD={0:{"/":{0:"分",1:"类",2:":",3:" ",4:"$",5:"c",6:"o",7:"n",8:"t",9:"e",10:"n",11:"t"}},1:{"/":{0:"标",1:"签",2:":",3:" ",4:"$",5:"c",6:"o",7:"n",8:"t",9:"e",10:"n",11:"t"}}},nD={"/":{cancel:"取消",placeholder:"搜索",search:"搜索",searching:"搜索中",defaultTitle:"文档",select:"选择",navigate:"切换",autocomplete:"自动补全",exit:"关闭",queryHistory:"搜索历史",resultHistory:"历史结果",emptyHistory:"无搜索历史",emptyResult:"没有找到结果",loading:"正在加载搜索索引..."}},aD={searchDelay:150,suggestDelay:0,queryHistoryCount:5,resultHistoryCount:5,hotKeys:[{key:"k",ctrl:!0},{key:"/",ctrl:!0}],worker:"slimsearch.worker.js"};const yW=eD,Il=aD,gp=nD,mk="Canceled because of new search request.",tD=()=>{const i=new Worker(`/rust-course/${Il.worker}`,{}),s={suggest:null,search:null,all:null};return i.addEventListener("message",({data:e})=>{const[n,a,t]=e,l=s[n];(l==null?void 0:l.id)===a&&l.resolve(t)}),i.addEventListener("error",e=>{console.warn("Search Worker error:",e)}),{suggest:(e,n,a)=>new Promise((t,l)=>{var h;(h=s.suggest)==null||h.reject(new Error(mk));const r=Date.now();i.postMessage({type:"suggest",id:r,query:e,locale:n,options:a}),s.suggest={id:r,resolve:t,reject:l}}),search:(e,n,a)=>new Promise((t,l)=>{var h;(h=s.search)==null||h.reject(new Error(mk));const r=Date.now();i.postMessage({type:"search",id:r,query:e,locale:n,options:a}),s.search={id:r,resolve:t,reject:l}}),all:(e,n,a)=>new Promise((t,l)=>{var h;(h=s.all)==null||h.reject(new Error(mk));const r=Date.now();i.postMessage({type:"all",id:r,query:e,locale:n,options:a}),s.all={id:r,resolve:t,reject:l}}),terminate:()=>{i.terminate(),s5(s).forEach(e=>{e==null||e.reject(new Error("Worker has been terminated."))})}}},lD=/[\u4e00-\u9fff\u3400-\u4dbf\u3040-\u309f\u30a0-\u30ff\uac00-\ud7af]/,rD=i=>i.split(/\s+/).map(s=>{if(s.length>3){const e=s.split("");if(e.every(n=>lD.test(n)))return e}return s}).flat(),hD=Z({querySplitter:i=>Promise.resolve(rD(i))}),mf=Symbol(""),vf=()=>{const i=Be(),s=Ni(mf);return z(()=>{const{locales:e={},...n}=s.value;return{...n,...e[i.value]}})},pD=i=>{i.provide(mf,We(hD))},kD='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg>',Ff=({class:i,hint:s})=>B("div",{class:[i,"loading"]},[B("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[B("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},B("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),B("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},B("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),B("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},B("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]),s]);Ff.displayName="SearchLoading";const It=({name:i="",color:s="currentColor"},{slots:e})=>B("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${i}-icon`],viewBox:"0 0 1024 1024",fill:s,"aria-label":`${i} icon`},e.default());It.displayName="SVGWrapper";const dD=()=>B(It,{name:"heading"},()=>B("path",{d:"M250.4 704.6H64V595.4h202.4l26.2-166.6H94V319.6h214.4L352 64h127.8l-43.6 255.4h211.2L691 64h126.2l-43.6 255.4H960v109.2H756.2l-24.6 166.6H930v109.2H717L672 960H545.8l43.6-255.4H376.6L333 960H206.8l43.6-255.4zm168.4-276L394 595.4h211.2l24.6-166.6h-211z"}));dD.displayName="HeadingIcon";const oD=()=>B(It,{name:"heart"},()=>B("path",{d:"M1024 358.156C1024 195.698 892.3 64 729.844 64c-86.362 0-164.03 37.218-217.844 96.49C458.186 101.218 380.518 64 294.156 64 131.698 64 0 195.698 0 358.156 0 444.518 37.218 522.186 96.49 576H96l320 320c32 32 64 64 96 64s64-32 96-64l320-320h-.49c59.272-53.814 96.49-131.482 96.49-217.844zM841.468 481.232 517.49 805.49a2981.962 2981.962 0 0 1-5.49 5.48c-1.96-1.95-3.814-3.802-5.49-5.48L182.532 481.234C147.366 449.306 128 405.596 128 358.156 128 266.538 202.538 192 294.156 192c47.44 0 91.15 19.366 123.076 54.532L512 350.912l94.768-104.378C638.696 211.366 682.404 192 729.844 192 821.462 192 896 266.538 896 358.156c0 47.44-19.368 91.15-54.532 123.076z"}));oD.displayName="HeartIcon";const uD=()=>B(It,{name:"history"},()=>B("path",{d:"M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zm0-896a384 384 0 1 0 384 384 384 384 0 0 0-384-384zm192 448H512a64 64 0 0 1-64-64V320a64 64 0 0 1 128 0v128h128a64 64 0 0 1 0 128z"}));uD.displayName="HistoryIcon";const cD=()=>B(It,{name:"title"},()=>B("path",{d:"M512 256c70.656 0 134.656 28.672 180.992 75.008A254.933 254.933 0 0 1 768 512c0 83.968-41.024 157.888-103.488 204.48C688.96 748.736 704 788.48 704 832c0 105.984-86.016 192-192 192-106.048 0-192-86.016-192-192h128a64 64 0 1 0 128 0 64 64 0 0 0-64-64 255.19 255.19 0 0 1-181.056-75.008A255.403 255.403 0 0 1 256 512c0-83.968 41.024-157.824 103.488-204.544C335.04 275.264 320 235.584 320 192A192 192 0 0 1 512 0c105.984 0 192 85.952 192 192H576a64.021 64.021 0 0 0-128 0c0 35.328 28.672 64 64 64zM384 512c0 70.656 57.344 128 128 128s128-57.344 128-128-57.344-128-128-128-128 57.344-128 128z"}));cD.displayName="TitleIcon";const Ku=()=>B(It,{name:"search"},()=>B("path",{d:"M192 480a256 256 0 1 1 512 0 256 256 0 0 1-512 0m631.776 362.496-143.2-143.168A318.464 318.464 0 0 0 768 480c0-176.736-143.264-320-320-320S128 303.264 128 480s143.264 320 320 320a318.016 318.016 0 0 0 184.16-58.592l146.336 146.368c12.512 12.48 32.768 12.48 45.28 0 12.48-12.512 12.48-32.768 0-45.28"}));Ku.displayName="SearchIcon";const Yu=Symbol(""),gD=()=>{const i=Z(!1);Ds(Yu,i)},BD=(i,s=!1)=>{const e=Z(0),n=z(()=>i.value[e.value]),a=()=>{e.value=e.value>0?e.value-1:i.value.length-1},t=()=>{e.value=e.value<i.value.length-1?e.value+1:0};return bi(i,()=>{s||(e.value=0)}),{index:e,item:n,prev:a,next:t}},AD=()=>{const i=Oa(()=>typeof window<"u"&&"userAgent"in window.navigator);return z(()=>i.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},yD=i=>{const s=Z([]);{const e=vf(),n=Bs(),a=Be();Di(()=>{const{suggest:t,terminate:l}=tD(),r=h=>{const{resultsFilter:p,querySplitter:k,suggestionsFilter:d=o=>o,...u}=e.value;h?t(h,a.value,u).then(o=>d(o,h,a.value,n.value)).then(o=>{s.value=o.length?Cl(o[0],h)&&!o[0].slice(h.length).includes(" ")?o:[h,...o]:[]}).catch(o=>{console.error(o)}):s.value=[]};te([i,a],([h])=>{r(h.join(" "))}),_s(()=>{l()})})}return{enabled:!0,suggestions:s}},fD='<svg width="15" height="15" aria-label="Enter key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M12 3.53088v3c0 1-1 2-2 2H4M7 11.53088l-3-3 3-3"></path></g></svg>',mD='<svg width="15" height="15" aria-label="Arrow down" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 3.5v8M10.5 8.5l-3 3-3-3"></path></g></svg>',vD='<svg width="15" height="15" aria-label="Arrow up" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 11.5v-8M10.5 6.5l-3-3-3 3"></path></g></svg>',FD='<svg width="15" height="15" aria-label="Escape key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M13.6167 8.936c-.1065.3583-.6883.962-1.4875.962-.7993 0-1.653-.9165-1.653-2.1258v-.5678c0-1.2548.7896-2.1016 1.653-2.1016.8634 0 1.3601.4778 1.4875 1.0724M9 6c-.1352-.4735-.7506-.9219-1.46-.8972-.7092.0246-1.344.57-1.344 1.2166s.4198.8812 1.3445.9805C8.465 7.3992 8.968 7.9337 9 8.5c.032.5663-.454 1.398-1.4595 1.398C6.6593 9.898 6 9 5.963 8.4851m-1.4748.5368c-.2635.5941-.8099.876-1.5443.876s-1.7073-.6248-1.7073-2.204v-.4603c0-1.0416.721-2.131 1.7073-2.131.9864 0 1.6425 1.031 1.5443 2.2492h-2.956"></path></g></svg>',vk=Il.hotKeys[0];var ED=ti({name:"SearchBox",setup(){const i=Ye(gp),s=Ni(Yu),e=Z(!1);Q7(Il.hotKeys,()=>{s.value||(s.value=!0)});const n=z(()=>vk?[...(e.value?["⌃","⇧","⌥","⌘"]:["Ctrl","Shift","Alt","Win"]).filter((a,t)=>vk[["ctrl","shift","alt","meta"][t]]),vk.key.toUpperCase()]:null);return Di(()=>{const{userAgent:a}=navigator;e.value=q7(a)||z7(a)||B3(a)}),()=>[B("button",{type:"button",class:"slimsearch-button","aria-label":i.value.search,onClick:()=>{s.value=!0}},[B(Ku),B("div",{class:"slimsearch-placeholder"},i.value.search),n.value?B("div",{class:"slimsearch-key-hints"},n.value.map(a=>B("kbd",{class:"slimsearch-key"},a))):null])]}}),bD=ti({name:"SearchKeyHints",setup(){const i=Ye(gp),s=AD();return()=>s.value?null:B("div",{class:"slimsearch-hints"},[B("span",{class:"slimsearch-hint"},[B("kbd",{innerHTML:fD}),i.value.select]),B("span",{class:"slimsearch-hint"},[B("kbd",{innerHTML:vD}),B("kbd",{innerHTML:mD}),i.value.navigate]),B("span",{class:"slimsearch-hint"},[B("kbd",{innerHTML:FD}),i.value.exit])])}});const CD=Oy({loader:()=>b(()=>import("./SearchResult-BMxsDOcW.js"),[]),loadingComponent:()=>{const i=Ye(gp);return B(Ff,{class:"slimsearch-result-wrapper",hint:i.value.loading})}}),_D=["ArrowDown","ArrowUp","Escape","Tab","Enter"];var DD=ti({name:"SearchModal",setup(){const i=Ni(Yu),s=wt(),e=Ye(gp),n=vf(),a=Z(""),t=Z([]),{suggestions:l}=yD(t),r=Z(!1),{index:h,prev:p,next:k}=BD(l),d=Ti(),u=Ti(),o=z(()=>r.value&&l.value.length),c=(g=h.value)=>{a.value=l.value[g],r.value=!1};Ri("keydown",g=>{o.value?g.key==="ArrowUp"?p():g.key==="ArrowDown"?k():g.key==="Tab"?c():(g.key==="Enter"||g.key==="Escape")&&(r.value=!1):g.key==="Escape"&&(i.value=!1)});const A=rp(()=>{var g,f;(((f=(g=n.value).querySplitter)==null?void 0:f.call(g,a.value))??Promise.resolve(a.value.split(" "))).then(m=>{t.value=m})},Math.min(Il.searchDelay,Il.suggestDelay));return te(a,A),Di(()=>{const g=rr(document.body);bi(i,async f=>{var m;g.value=f,f&&(await Hi(),(m=d.value)==null||m.focus())}),$b(u,()=>{r.value=!1}),_s(()=>{g.value=!1})}),()=>i.value?B("div",{class:"slimsearch-modal-wrapper"},[B("div",{class:"slimsearch-mask",onClick:()=>{i.value=!1,a.value=""}}),B("div",{class:"slimsearch-modal"},[B("div",{class:"slimsearch-box"},[B("form",[B("label",{for:"search-pro","aria-label":e.value.search},B(Ku)),B("input",{ref:d,type:"search",class:"slimsearch-input",id:"search-pro",placeholder:e.value.placeholder,spellcheck:"false",autocapitalize:"off",autocomplete:"off",autocorrect:"off",name:`${s.value.title}-search`,value:a.value,"aria-controls":"slimsearch-results",onKeydown:g=>{o.value&&_D.includes(g.key)&&g.preventDefault()},onInput:({target:g})=>{a.value=g.value,r.value=!0,h.value=0}}),a.value?B("button",{type:"reset",class:"slimsearch-clear-button",innerHTML:kD,onClick:()=>{a.value=""}}):null,o.value?B("ul",{class:"slimsearch-suggestions",ref:u},l.value.map((g,f)=>B("li",{class:["slimsearch-suggestion",{active:f===h.value}],onClick:()=>{c(f)}},[B("kbd",{class:"slimsearch-auto-complete",title:`Tab ${e.value.autocomplete}`},"Tab"),g]))):null]),B("button",{type:"button",class:"slimsearch-close-button",onClick:()=>{i.value=!1,a.value=""}},e.value.cancel)]),B(CD,{queries:t.value,isFocusing:!o.value,onClose:()=>{i.value=!1},onUpdateQuery:g=>{a.value=g}}),B(bD)])]):null}}),xD=Ts({enhance({app:i}){pD(i),i.component("SearchBox",ED)},setup(){gD()},rootComponents:[DD]});const wD=Object.freeze(Object.defineProperty({__proto__:null,default:xD},Symbol.toStringTag,{value:"Module"})),Ef="VUEPRESS_REDIRECT_STATUS",yB=s7(Ef,{}),fB=t7(Ef,{}),TD=i=>{const s=e7(),e=Be(),n=Pa(i.config);return z(()=>{if(n.some(([a])=>e.value===a)){for(const a of s.value)for(const[t,l]of n)if(l.includes(a))return t===e.value?null:{lang:a,localePath:t}}return null})};var SD=ti({name:"RedirectModal",props:{config:{type:Object,required:!0},locales:{type:Object,required:!0}},setup(i){const s=De(),e=nr(),n=Be(),a=TD(i.config),t=Z(),l=rr(t),r=Z(!1),h=z(()=>{if(!a.value)return null;const{lang:k,localePath:d}=a.value,u=[i.locales[d],i.locales[n.value]];return{hint:u.map(({hint:o})=>o.replace("$1",k)),switch:u.map(({switch:o})=>o.replace("$1",k)).join(" / "),cancel:u.map(({cancel:o})=>o).join(" / "),remember:u.map(({remember:o})=>o).join(" / ")}}),p=()=>{fB.value[n.value]=!0,r.value&&(yB.value[n.value]=!0),l.value=!1};return bi(e,()=>{l.value=!1}),Di(async()=>{t.value=document.body,await Hi(),a.value&&!fB.value[n.value]&&!yB.value[n.value]&&(l.value=!0)}),xt(()=>{l.value=!1}),()=>B(C4,{name:"redirect-modal-fade"},()=>{var k,d,u,o;return l.value?B("div",{key:"mask",class:"redirect-modal-mask"},B("div",{key:"popup",class:"redirect-modal-wrapper"},[B("div",{class:"redirect-modal-content"},(k=h.value)==null?void 0:k.hint.map(c=>B("p",c))),B("div",{class:"redirect-modal-hint"},[B("input",{id:"remember-redirect",type:"checkbox",value:r.value,onChange:()=>{r.value=!r.value}}),B("label",{for:"remember-redirect"},(d=h.value)==null?void 0:d.remember)]),B("button",{type:"button",class:"redirect-modal-action primary",onClick:()=>{p(),s.replace(e.value.replace(n.value,a.value.localePath))}},(u=h.value)==null?void 0:u.switch),B("button",{type:"button",class:"redirect-modal-action",onClick:()=>{p()}},(o=h.value)==null?void 0:o.cancel)])):null})}}),ID={config:{"/":["zh-CN"]},autoLocale:!1,defaultLocale:"/",localeFallback:!0,defaultBehavior:"defaultLocale"},RD={"/":{name:"简体中文",hint:"您的首选语言是 $1，是否切换到该语言？",switch:"切换到 $1",cancel:"取消",remember:"记住我的选择"}};const bf=ID;var OD=Ts({setup(){},rootComponents:[()=>B(SD,{config:bf,locales:RD})]});const PD=Object.freeze(Object.defineProperty({__proto__:null,config:bf,default:OD},Symbol.toStringTag,{value:"Module"})),Cf=()=>{const i=Vi();return z(()=>i.value.author)},LD="http://.",Dn=()=>{const i=De(),s=Ke();return e=>{if(!e)return;if(sr(e))return window.open(e);if(dp(e))return s.fullPath===e?void 0:void i.push(e);const n=s.path.slice(0,s.path.lastIndexOf("/"));return void i.push(new URL(`${n}/${encodeURI(e)}`,LD).pathname)}};var mB={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const _f=()=>{const i=Bs();return z(()=>i.value.readingTime??null)},Df=(i,s)=>{const{minutes:e,words:n}=i,{less1Minute:a,word:t,time:l}=s;return{time:e<1?a:l.replace("$time",Math.round(e).toString()),words:t.replace("$word",n.toString())}},vB={words:"",time:""},yo=typeof mB>"u"?null:mB,xf=()=>yo?Ye(yo):z(()=>null),ND=()=>{if(typeof yo>"u")return z(()=>vB);const i=_f(),s=xf();return z(()=>i.value&&s.value?Df(i.value,s.value):vB)},Xe=()=>ef(),Vi=()=>q_(),wf=()=>{const i=ji(),s=Cf();return z(()=>{const{author:e}=i.value;return e?Sl(e):e===!1?[]:Sl(s.value,!1)})},MD=()=>{const i=ji(),s=Ni(Symbol.for("categoryMap"));return z(()=>Bf(i.value.category??i.value.categories).map(e=>{var n;return{name:e,path:((n=s==null?void 0:s.value.map[e])==null?void 0:n.path)??""}}))},$D=()=>{const i=ji(),s=Ni(Symbol.for("tagMap"));return z(()=>Af(i.value.tag??i.value.tags).map(e=>{var n;return{name:e,path:((n=s==null?void 0:s.value.map[e])==null?void 0:n.path)??""}}))},VD=()=>{const i=ji(),s=Bs();return z(()=>{const e=Ru(i.value.date);if(e)return e;const{createdTime:n}=s.value.git??{};return n?new Date(n):null})},zD=()=>{const i=Vi(),s=Bs(),e=ji(),n=wf(),a=MD(),t=$D(),l=VD(),r=_f(),h=ND(),p=z(()=>({author:n.value,category:a.value,date:l.value,localizedDate:s.value.localizedDate,tag:t.value,isOriginal:e.value.isOriginal??!1,readingTime:r.value,readingTimeLocale:h.value,pageview:e.value.pageview??!0})),k=z(()=>e.value.pageInfo??i.value.pageInfo??null);return{info:p,items:k}},Xs=()=>{const i=Xe();return z(()=>!!i.value.pure)},Xu=(i,s)=>s.activeMatch?new RegExp(s.activeMatch,"u").test(i.path):uf(i,s.link),Zu=(i,s)=>"children"in s?!!s.prefix&&uf(i,s.prefix)||s.children.some(e=>Zu(i,e)):Xu(i,s),st={"/":["about-book",{text:"Advance",prefix:"advance/",collapsible:!0,children:[{text:"Async",prefix:"async/",collapsible:!0,children:["async-await","future-excuting","getting-started","intro","multi-futures-simultaneous","pain-points-and-workarounds","pin-unpin","web-server"]},{text:"Circle Self Ref",prefix:"circle-self-ref/",collapsible:!0,children:["circle-reference","intro","self-referential"]},{text:"Concurrency with Threads",prefix:"concurrency-with-threads/",collapsible:!0,children:["concurrency-parallelism","intro","message-passing","races","ref-counter-lock","send-sync","sync1","sync2","thread"]},{text:"Difficulties",prefix:"difficulties/",collapsible:!0,children:["pointer"]},"errors",{text:"Functional Programing",prefix:"functional-programing/",collapsible:!0,children:["closure","intro","iterator"]},"global-variable","hrtb",{text:"Into Types",prefix:"into-types/",collapsible:!0,children:["converse","custom-type","enum-int","intro","sized"]},"intro",{text:"Lifetime",prefix:"lifetime/",collapsible:!0,children:["advance","intro","misconceptions","static"]},"macro","simd",{text:"Smart Pointer",prefix:"smart-pointer/",collapsible:!0,children:["box","cell-refcell","deref","drop","intro","rc-arc"]},{text:"Unsafe",prefix:"unsafe/",collapsible:!0,children:["inline-asm","intro","superpowers","ub"]}]},{text:"Advance Practice",prefix:"advance-practice/",collapsible:!0,children:["async","bridging-with-sync","channels","design-pattern","frame","getting-startted","graceful-shutdown","intro","io","overview","select","shared-state","spawning","stream"]},{text:"Advance Practice1",prefix:"advance-practice1/",collapsible:!0,children:["graceful-shutdown","intro","multi-threads","web-server"]},{text:"Appendix",prefix:"appendix/",collapsible:!0,children:["derive","difficulties","expressions","intro","keywords","operators","prelude","rust-version",{text:"Rust Versions",prefix:"rust-versions/",collapsible:!0,children:["1.58","1.59","1.60","1.61","1.62","1.63","1.64","1.65","1.66","1.67","1.68","1.69","1.70","1.71","1.72","1.73","1.74","1.75","1.76","1.77","1.78","1.79","1.80","1.81","1.82","1.83","1.84","1.85","intro"]}]},{text:"Basic",prefix:"basic/",collapsible:!0,children:[{text:"Base Type",prefix:"base-type/",collapsible:!0,children:["char-bool","function","","numbers","statement-expression"]},{text:"Collections",prefix:"collections/",collapsible:!0,children:["hashmap","intro","vector"]},"comment",{text:"Compound Type",prefix:"compound-type/",collapsible:!0,children:["array","enum","intro","string-slice","struct","tuple"]},{text:"Crate Module",prefix:"crate-module/",collapsible:!0,children:["crate","intro","module","use"]},"flow-control","formatted-output","intro","lifetime",{text:"Match Pattern",prefix:"match-pattern/",collapsible:!0,children:["all-patterns","intro","match-if-let","option","pattern-match"]},"method",{text:"Ownership",prefix:"ownership/",collapsible:!0,children:["borrowing","","ownership"]},{text:"Result Error",prefix:"result-error/",collapsible:!0,children:["intro","panic","result"]},{text:"Trait",prefix:"trait/",collapsible:!0,children:["advance-trait","generic","intro","trait","trait-object"]},"variable"]},{text:"Basic Practice",prefix:"basic-practice/",collapsible:!0,children:["base-features","envs","intro","iterators","refactoring","stderr","tests"]},"beat-ai",{text:"Cargo",prefix:"cargo/",collapsible:!0,children:["getting-started","git-auth",{text:"Guide",prefix:"guide/",collapsible:!0,children:["build-cache","cargo-cache","cargo-toml-lock","dependencies","download-package","intro","package-layout","tests-ci","why-exist"]},"intro",{text:"Reference",prefix:"reference/",collapsible:!0,children:[{text:"Build Script",prefix:"build-script/",collapsible:!0,children:["examples","intro"]},"cargo-target","configuration","deps-overriding","env",{text:"Features",prefix:"features/",collapsible:!0,children:["examples","intro"]},"intro","manifest","package-id","profile","profiles","publishing-on-crates.io","specify-deps","workspaces"]}]},"community",{text:"Compiler",prefix:"compiler/",collapsible:!0,children:[{text:"Fight with Compiler",prefix:"fight-with-compiler/",collapsible:!0,children:[{text:"Borrowing",prefix:"borrowing/",collapsible:!0,children:["borrow-distinct-fields-of-struct","intro","ref-exist-in-out-fn"]},"intro",{text:"Lifetime",prefix:"lifetime/",collapsible:!0,children:["closure-with-static","intro","loop","too-long1","too-long2"]},"phantom-data","unconstrained"]},"intro",{text:"Pitfalls",prefix:"pitfalls/",collapsible:!0,children:["arithmetic-overflow","closure-with-lifetime","","iterator-everywhere","lazy-iterators","main-with-channel-blocked","multiple-mutable-references","stack-overflow","the-disabled-mutability","use-vec-in-for","utf8-performance","weird-ranges"]}]},{text:"Difficulties",prefix:"difficulties/",collapsible:!0,children:["cow","eq","intro","lifetime","move-copy","pointer","slice","string"]},{text:"First Try",prefix:"first-try/",collapsible:!0,children:["cargo","editor","hello-world","installation","intro","slowly-downloading","sth-you-should-not-do"]},"github","index-list","into-rust",{text:"Libraries",prefix:"libraries/",collapsible:!0,children:[{text:"Command",prefix:"command/",collapsible:!0,children:["intro","structopt"]},{text:"Http",prefix:"http/",collapsible:!0,children:["intro","reqwest"]},"intro",{text:"Json",prefix:"json/",collapsible:!0,children:["intro","serde"]}]},{text:"Logs",prefix:"logs/",collapsible:!0,children:["about-log","intro","log",{text:"Observe",prefix:"observe/",collapsible:!0,children:["about-observe","intro","trace"]},"tracing","tracing-logger"]},"practice",{text:"Practice",prefix:"practice/",collapsible:!0,children:["best-pratice","interview","intro","naming","third-party-libs"]},{text:"Profiling",prefix:"profiling/",collapsible:!0,children:[{text:"Compiler",prefix:"compiler/",collapsible:!0,children:["attributes","intro","llvm",{text:"Optimization",prefix:"optimization/",collapsible:!0,children:["intro","option"]},"phantom-data","speed-up"]},"intro",{text:"Memory",prefix:"memory/",collapsible:!0,children:["allocation","intro","layout","pointer-ref","uninit","virtual"]},{text:"Performance",prefix:"performance/",collapsible:!0,children:["allocator","calculate","clone-copy","cpu-cache","deep-into-move","early-optimise","enum","heap-stack","intro","runtime-check","string","tools"]},{text:"Profiling",prefix:"profiling/",collapsible:!0,children:[{text:"Performance",prefix:"performance/",collapsible:!0,children:["benchmark"]}]}]},"rust-weekly","rustt","rusty-book","some-thoughts",{text:"Std",prefix:"std/",collapsible:!0,children:["hashmap","intro","iterator","search","vector"]},"SUMMARY",{text:"Templates",prefix:"templates/",collapsible:!0,children:[{text:"Files",prefix:"files/",collapsible:!0,children:["dir","intro"]},{text:"Http",prefix:"http/",collapsible:!0,children:["intro"]},"intro"]},{text:"Test",prefix:"test/",collapsible:!0,children:["assertion","benchmark","ci","intro","unit-integration-test","write-tests"]},{text:"Too Many Lists",prefix:"too-many-lists/",collapsible:!0,children:[{text:"Advanced Lists",prefix:"advanced-lists/",collapsible:!0,children:["double-singly","intro","stack-allocated","unsafe-deque"]},{text:"Bad Stack",prefix:"bad-stack/",collapsible:!0,children:["basic-operations","final-code","intro","layout"]},{text:"Deque",prefix:"deque/",collapsible:!0,children:["final-code","intro","iterator","layout","peek","symmetric"]},"do-we-need-it","intro",{text:"Ok Stack",prefix:"ok-stack/",collapsible:!0,children:["intro","iter","itermut","peek","type-optimizing"]},{text:"Persistent Stack",prefix:"persistent-stack/",collapsible:!0,children:["drop-arc","intro","layout"]},{text:"Production Unsafe Deque",prefix:"production-unsafe-deque/",collapsible:!0,children:["basics","boring-combinatorics","drop-and-panic-safety","filling-in-random-bits","final-code","implementing-cursors","intro","layout","send-sync-and-compile-tests","testing","testing-cursors","variance-and-phantomData"]},{text:"Unsafe Queue",prefix:"unsafe-queue/",collapsible:!0,children:["basics","extra-junk","final-code","intro","layout","layout2","miri","stacked-borrow","testing-stacked-borrow"]}]},{text:"Usecases",prefix:"usecases/",collapsible:!0,children:["aws-rust","intro"]}]},qD=(i,s)=>{const e=i.replace(s,"/").split("/"),n=[];let a=Eu(s);return e.forEach((t,l)=>{l!==e.length-1?(a+=`${t}/`,n.push({link:a,name:t||"Home"})):t!==""&&(a+=t,n.push({link:a,name:t}))}),n},fo=i=>!sr(i)&&!vu(i);let Fk=null,zt=null;const mo={wait:()=>Fk,pending:()=>{Fk=new Promise(i=>{zt=i})},resolve:()=>{zt==null||zt(),Fk=null,zt=null}},wh=(i,s=!1,e)=>{const{meta:n,path:a,notFound:t}=Ks(i,e);return t?{text:a,link:a}:{text:!s&&n.shortTitle?n.shortTitle:n.title||a,link:a,icon:n.icon}},Aa=(i="",s="")=>sr(s)||dp(s)?s:`${Fu(i)}${s}`,Tf=(i,s)=>{const e=ls(i)?wh(Aa(s,i)):i.link?{...i,link:fo(i.link)?Ks(Aa(s,i.link)).path:i.link}:i;if("children"in e){const n=Aa(s,e.prefix),a=e.children==="structure"?st[n]:e.children;return{...e,prefix:n,children:a.map(t=>Tf(t,n))}}return{...e}},vo=({config:i,prefix:s=""})=>i.map(e=>Tf(e,s)),HD=({config:i,routePath:s,headerDepth:e})=>{const n=Ge(i).sort((a,t)=>t.length-a.length);for(const a of n)if(Cl(decodeURI(s),a)){const t=i[a];return vo({config:t==="structure"?st[a]:t||[],prefix:a})}return console.warn(`${decodeURI(s)} is missing it's sidebar config.`),[]},jD=({config:i,headerDepth:s,routeLocale:e,routePath:n})=>i==="structure"?vo({config:st[e],prefix:e}):Dh(i)?vo({config:i}):er(i)?HD({config:i,routePath:n,headerDepth:s}):[],Sf=Symbol(""),UD=()=>{const i=ji(),s=Vi(),e=Be(),n=nr(),a=z(()=>i.value.home?!1:i.value.sidebar??s.value.sidebar??"structure"),t=z(()=>i.value.headerDepth??s.value.headerDepth??2),l=z(()=>jD({config:a.value,headerDepth:t.value,routeLocale:e.value,routePath:n.value}));Ds(Sf,l)},Ju=()=>{const i=Ni(Sf);if(!i)throw new Error("useSidebarItems() is called without provider.");return i},FB=(i,s)=>i===!1?i:er(i)?{...i,link:wh(i.link,!0,s).link}:ls(i)?wh(i,!0,s):null,Fo=(i,s,e)=>{const n=i.findIndex(t=>t.link===s);if(n!==-1){if(!i[n+e])return null;const t=i[n+e];return t.link?t:"prefix"in t&&!Ks(t.prefix).notFound?{...t,link:t.prefix}:null}for(const t of i)if("children"in t){const l=Fo(t.children,s,e);if(l)return l}const a=i.findIndex(t=>"prefix"in t&&t.prefix===s);if(a!==-1){if(!i[a+e])return null;const t=i[a+e];return t.link?t:"prefix"in t&&!Ks(t.prefix).notFound?{...t,link:t.prefix}:null}return null},GD=()=>{const i=ji(),s=Vi(),e=Ju(),n=nr(),a=z(()=>{const l=FB(i.value.prev,n.value);return l===!1?null:l??(s.value.prevLink===!1?null:Fo(e.value,n.value,-1))}),t=z(()=>{const l=FB(i.value.next,n.value);return l===!1?null:l??(s.value.nextLink===!1?null:Fo(e.value,n.value,1))});return{prevLink:a,nextLink:t}},WD="719px",KD="1440px",YD="9",Rt={mobileBreakPoint:WD,pcBreakPoint:KD,colorNumber:YD},{mobileBreakPoint:XD,pcBreakPoint:ZD}=Rt,EB=i=>i.endsWith("px")?Number(i.slice(0,-2)):null,dr=()=>{const i=Z(!1),s=Z(!1),e=()=>{i.value=window.innerWidth<=(EB(XD)??719),s.value=window.innerWidth>=(EB(ZD)??1440)};return Ri("resize",e,!1),Ri("orientationchange",e,!1),Di(()=>{e()}),{isMobile:i,isPC:s}},If=Symbol(""),or=()=>{const i=Ni(If);if(!i)throw new Error("useDarkMode() is called without provider.");return i},JD=i=>{const s=Xe(),e=Kb(),n=z(()=>s.value.darkmode??"switch"),a=lr("vuepress-theme-hope-scheme","auto"),t=z(()=>{const r=n.value;return r==="disable"?!1:r==="enable"?!0:r==="auto"?e.value:r==="toggle"?a.value==="dark":a.value==="dark"||a.value==="auto"&&e.value}),l=z(()=>{const r=n.value;return r==="switch"||r==="toggle"});i.provide(If,{canToggle:l,config:n,isDarkMode:t,status:a}),Object.defineProperties(i.config.globalProperties,{$isDarkMode:{get:()=>t.value}})},QD=()=>{const{config:i,isDarkMode:s,status:e}=or();ep(()=>{i.value==="disable"?e.value="light":i.value==="enable"?e.value="dark":i.value==="toggle"&&e.value==="auto"&&(e.value="light")}),Di(()=>{te(s,n=>{document.documentElement.setAttribute("data-theme",n?"dark":"light")})})},ix=ti({name:"PageFooter",setup(){const i=Xe(),s=Vi(),e=ji(),n=wf(),a=z(()=>{const{copyright:p,footer:k}=e.value;return k!==!1&&!!(p||k||s.value.displayFooter)}),t=z(()=>{const{footer:p}=e.value;return p===!1?!1:ls(p)?p:s.value.footer??""}),l=z(()=>n.value.map(({name:p})=>p).join(", ")),r=p=>`Copyright © ${new Date().getFullYear()} ${l.value} ${p?`${p} Licensed`:""}`,h=z(()=>{const{copyright:p,license:k=""}=e.value,{license:d}=i.value,{copyright:u}=s.value;return p??(k?r(k):u??(l.value||d?r(d):!1))});return()=>a.value?B("footer",{class:"vp-footer-wrapper","vp-footer":""},[t.value?B("div",{class:"vp-footer",innerHTML:t.value}):null,h.value?B("div",{class:"vp-copyright",innerHTML:h.value}):null]):null}}),rh=()=>null,Gs=ti({name:"AutoLink",props:{config:{type:Object,required:!0},iconSizing:{type:String,default:"both"}},emits:["focusout"],slots:Object,setup(i,{emit:s,slots:e}){return()=>{const{icon:n}=i.config;return B(yb,{...i,onFocusout:()=>{s("focusout")}},{default:e.default,before:e.before??(n?()=>B(Wi("VPIcon"),{icon:n,sizing:i.iconSizing}):null),after:e.after})}}}),sx=ti({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(i,{slots:s}){const e=Mi(i,"config"),n=z(()=>e.value.ariaLabel??e.value.text),a=Z(!1),t=l=>{l.detail===0&&(a.value=!a.value)};return _n(()=>{a.value=!1}),()=>{var l;return B("div",{class:["vp-dropdown-wrapper",{open:a.value}]},[B("button",{type:"button",class:"vp-dropdown-title","aria-label":n.value,onClick:t},[((l=s.title)==null?void 0:l.call(s))??[B(Wi("VPIcon"),{icon:e.value.icon}),i.config.text],B("span",{class:"arrow"}),B("ul",{class:"vp-dropdown"},e.value.children.map((r,h)=>{const p=h===e.value.children.length-1;return B("li",{class:"vp-dropdown-item"},"children"in r?[B("h4",{class:"vp-dropdown-subtitle"},r.link?B(Gs,{config:r,onFocusout:()=>{r.children.length===0&&p&&(a.value=!1)}}):r.text),B("ul",{class:"vp-dropdown-subitems"},r.children.map((k,d)=>B("li",{class:"vp-dropdown-subitem"},B(Gs,{config:k,onFocusout:()=>{d===r.children.length-1&&p&&(a.value=!1)}}))))]:B(Gs,{config:r,onFocusout:()=>{p&&(a.value=!1)}}))}))])])}}}),Rf=(i,s="")=>ls(i)?wh(Aa(s,i)):"children"in i?{...i,...i.link&&fo(i.link)?{link:Ks(Aa(s,i.link)).path}:{},children:i.children.map(e=>Rf(e,Aa(s,i.prefix)))}:{...i,link:fo(i.link)?Ks(Aa(s,i.link)).path:i.link},Of=()=>{const i=Vi();return z(()=>(i.value.navbar||[]).map(s=>Rf(s)))},ex=()=>{const i=Vi(),s=z(()=>i.value.repo),e=z(()=>s.value?m9(s.value):null),n=z(()=>s.value?Wu(s.value):null),a=z(()=>e.value?i.value.repoLabel??n.value??"Source":null);return z(()=>!e.value||!a.value||i.value.repoDisplay===!1?null:{type:n.value??"Source",label:a.value,link:e.value})},nx=ti({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(i){const s=Mi(i,"config"),e=z(()=>s.value.ariaLabel??s.value.text),n=Z(!1),a=(t,l)=>l[l.length-1]===t;return _n(()=>{n.value=!1}),()=>[B("button",{type:"button",class:["vp-nav-screen-menu-title",{active:n.value}],"aria-label":e.value,onClick:()=>{n.value=!n.value}},[B("span",{class:"text"},[B(Wi("VPIcon"),{icon:s.value.icon,sizing:"both"}),i.config.text]),B("span",{class:["arrow",n.value?"down":"end"]})]),B("ul",{class:["vp-nav-screen-menu",{hide:!n.value}]},s.value.children.map(t=>B("li",{class:"vp-nav-screen-menu-item"},"children"in t?[B("h4",{class:"vp-nav-screen-menu-subtitle"},t.link?B(Gs,{config:t,onFocusout:()=>{a(t,s.value.children)&&t.children.length===0&&(n.value=!1)}}):t.text),B("ul",{class:"vp-nav-screen-menu-subitems"},t.children.map(l=>B("li",{class:"vp-nav-screen-menu-subitem"},B(Gs,{config:l,onFocusout:()=>{a(l,t.children)&&a(t,s.value.children)&&(n.value=!1)}}))))]:B(Gs,{config:t,onFocusout:()=>{a(t,s.value.children)&&(n.value=!1)}}))))]}}),ax=ti({name:"NavScreenLinks",setup(){const i=Of();return()=>i.value.length?B("nav",{class:"nav-screen-links"},i.value.map(s=>B("div",{class:"navbar-links-item"},"children"in s?B(nx,{config:s}):B(Gs,{config:s})))):null}}),Pf=()=>B(Yi,{name:"dark"},()=>B("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Pf.displayName="DarkIcon";const Lf=()=>B(Yi,{name:"light"},()=>B("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Lf.displayName="LightIcon";const Nf=()=>B(Yi,{name:"auto"},()=>B("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Nf.displayName="AutoIcon";const Mf=()=>B(Yi,{name:"enter-fullscreen"},()=>B("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Mf.displayName="EnterFullScreenIcon";const $f=()=>B(Yi,{name:"cancel-fullscreen"},()=>B("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));$f.displayName="CancelFullScreenIcon";const Vf=()=>B(Yi,{name:"outlook"},()=>[B("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Vf.displayName="OutlookIcon";const zf=ti({name:"ColorModeSwitch",setup(){const{config:i,isDarkMode:s,status:e}=or(),n=Xs(),a=()=>{i.value==="switch"?e.value={light:"dark",dark:"auto",auto:"light"}[e.value]:e.value=e.value==="light"?"dark":"light"},t=async l=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!n.value)){a();return}const h=l.clientX,p=l.clientY,k=Math.hypot(Math.max(h,innerWidth-h),Math.max(p,innerHeight-p)),d=s.value;await document.startViewTransition(async()=>{a(),await Hi()}).ready,s.value!==d&&document.documentElement.animate({clipPath:s.value?[`circle(${k}px at ${h}px ${p}px)`,`circle(0px at ${h}px ${p}px)`]:[`circle(0px at ${h}px ${p}px)`,`circle(${k}px at ${h}px ${p}px)`]},{duration:400,pseudoElement:s.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>B("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:t},[B(Nf,{style:{display:e.value==="auto"?"block":"none"}}),B(Pf,{style:{display:e.value==="dark"?"block":"none"}}),B(Lf,{style:{display:e.value==="light"?"block":"none"}})])}}),tx=ti({name:"ColorMode",setup(){const i=Vi(),{canToggle:s}=or(),e=z(()=>i.value.outlookLocales.darkmode);return()=>s.value?B("div",{class:"vp-color-mode"},[B("label",{class:"vp-color-mode-title",for:"color-mode-switch"},e.value),B(zf)]):null}}),lx=ti({name:"ToggleFullScreenButton",setup(){const{isSupported:i,isFullscreen:s,toggle:e}=hp();return()=>i.value?B("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:s.value,onClick:()=>e()},s.value?B($f):B(Mf)):null}}),qf=ti({name:"ToggleFullScreenButton",setup(){const i=Vi(),{isSupported:s}=hp(),e=z(()=>i.value.outlookLocales.fullscreen);return()=>s.value?B("div",{class:"full-screen-wrapper"},[B("label",{class:"full-screen-title",for:"full-screen-switch"},e.value),B(lx)]):null}}),Hf=ti({name:"OutlookSettings",setup(){const i=Xe(),s=Xs(),e=z(()=>!s.value&&i.value.fullscreen);return()=>B(wu,()=>[null,B(tx),e.value?B(qf):null])}}),rx=ti({name:"NavScreen",props:{show:Boolean},slots:Object,setup(i,{slots:s}){const{isMobile:e}=dr(),n=Ti(),a=rr(n);return _n(()=>{a.value=!1}),bi(e,t=>{!t&&i.show&&(a.value=!1)}),Di(()=>{n.value=document.body}),_s(()=>{a.value=!1}),()=>B(xa,{name:"fade",onEnter:()=>{a.value=!0},onAfterLeave:()=>{a.value=!1}},()=>{var t,l;return i.show?B("div",{id:"nav-screen",class:"vp-nav-screen"},B("div",{class:"vp-nav-screen-container"},[(t=s.before)==null?void 0:t.call(s),B(ax),B("div",{class:"vp-outlook-wrapper"},B(Hf)),(l=s.after)==null?void 0:l.call(s)])):null})}}),hx=ti({name:"NavbarBrand",setup(){const i=Be(),s=wt(),e=Vi(),n=z(()=>e.value.home??i.value),a=z(()=>s.value.title),t=z(()=>e.value.navbarTitle??a.value),l=z(()=>e.value.logo?Gi(e.value.logo):null),r=z(()=>e.value.logoDark?Gi(e.value.logoDark):null);return()=>B(ms,{to:n.value,class:"vp-brand","aria-label":e.value.routeLocales.home},()=>[l.value?B("img",{class:["vp-nav-logo",{light:!!r.value}],src:l.value,alt:""}):null,r.value?B("img",{class:["vp-nav-logo dark"],src:r.value,alt:""}):null,t.value?B("span",{class:["vp-site-name",{"hide-in-pad":l.value&&(e.value.hideSiteNameOnMobile??!0)}]},t.value):null])}}),px=ti({name:"NavbarLinks",setup(){const i=Of();return()=>i.value.length?B("nav",{class:"vp-nav-links"},i.value.map(s=>B("div",{class:"vp-nav-item hide-in-mobile"},"children"in s?B(sx,{config:s}):B(Gs,{config:s,iconSizing:"height"})))):null}}),kx=ti({name:"RepoLink",setup(){const i=ex();return()=>i.value?B("div",{class:"vp-nav-item vp-action"},B("a",{class:"vp-action-link",href:i.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":i.value.label},B(v9,{type:i.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}}),jf=({active:i=!1},{emit:s})=>B("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":i}],"aria-label":"Toggle Navbar","aria-expanded":i,"aria-controls":"nav-screen",onClick:()=>{s("toggle")}},B("span",[B("span",{class:"vp-top"}),B("span",{class:"vp-middle"}),B("span",{class:"vp-bottom"})]));jf.displayName="ToggleNavbarButton";const Qu=(i,{emit:s})=>B("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>{s("toggle")}},B("span",{class:"icon"}));Qu.displayName="ToggleSidebarButton";Qu.emits=["toggle"];const dx=ti({name:"OutlookButton",setup(){const i=Xe(),{canToggle:s}=or(),{isSupported:e}=hp(),n=Xs(),a=Z(!1),t=z(()=>!n.value&&i.value.fullscreen&&e),l=z(()=>s.value||t.value);return _n(()=>{a.value=!1}),()=>l.value?B("div",{class:"vp-nav-item hide-in-mobile"},s.value&&!t.value?B(zf):t.value&&!s.value?B(qf):B("button",{type:"button",class:["vp-outlook-button",{open:a.value}],tabindex:"-1","aria-hidden":!0},[B(Vf),B("div",{class:"vp-outlook-dropdown"},B(Hf))])):null}}),ox=ti({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(i,{emit:s,slots:e}){const n=Vi(),{isMobile:a}=dr(),t=Z(!1),l=z(()=>{const{navbarAutoHide:k="mobile"}=n.value;return k!=="none"&&(k==="always"||a.value)}),r=z(()=>n.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),h={Brand:hx,Language:rh,Links:px,Repo:kx,Outlook:dx,Search:Ce("SearchBox")?Wi("SearchBox"):rh},p=k=>h[k]??(Ce(k)?Wi(k):rh);return _n(()=>{t.value=!1}),bi(a,k=>{k||(t.value=!1)}),()=>{var k,d,u;return[B("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":l.value}],"vp-navbar":""},[B("div",{class:"vp-navbar-start"},[B(Qu,{onToggle:()=>{t.value&&(t.value=!1),s("toggleSidebar")}}),(k=r.value.start)==null?void 0:k.map(o=>B(p(o)))]),B("div",{class:"vp-navbar-center"},[(d=r.value.center)==null?void 0:d.map(o=>B(p(o)))]),B("div",{class:"vp-navbar-end"},[(u=r.value.end)==null?void 0:u.map(o=>B(p(o))),B(jf,{active:t.value,onToggle:()=>{t.value=!t.value}})])]),B(rx,{show:t.value},{before:e.screenTop,after:e.screenBottom})]}}}),ux=ti({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(i){const s=Ke();return()=>ls(i.config.link)?B(Gs,{class:["vp-sidebar-link",{active:Xu(s,i.config)}],config:{...i.config,exact:!0}}):B("p",i,[B(Wi("VPIcon"),{icon:i.config.icon,sizing:"both"}),i.config.text])}}),cx=ti({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(i,{emit:s}){const e=Ke(),n=Z(!1),a=z(()=>Zu(e,i.config)),t=z(()=>Xu(e,i.config)),l=z(()=>i.open||i.config.expanded&&!n.value);return()=>{const{collapsible:r,children:h=[],icon:p,prefix:k,link:d,text:u}=i.config;return B("section",{class:"vp-sidebar-group"},[B(r?"button":"p",{class:["vp-sidebar-header",{clickable:r||d,exact:t.value,active:a.value}],...r?{type:"button",onClick:()=>{n.value=!0,s("toggle")}}:{}},[B(Wi("VPIcon"),{icon:p,sizing:"both"}),d?B(Gs,{class:"vp-sidebar-title no-external-link-icon",config:{text:u,link:d}}):B("span",{class:"vp-sidebar-title"},u),r?B("span",{class:["vp-arrow",l.value?"down":"end"]}):null]),l.value||!r?B(Uf,{key:k,config:h}):null])}}}),Uf=ti({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(i){const s=Ke(),e=nr(),n=Z(-1),a=t=>{n.value=t===n.value?-1:t};return te(e,()=>{const t=i.config.findIndex(l=>Zu(s,l));n.value=t},{flush:"post"}),()=>B("ul",{class:"vp-sidebar-links"},i.config.map((t,l)=>B("li","children"in t?B(cx,{config:t,open:l===n.value,onToggle:()=>{a(l)}}):B(ux,{config:t}))))}}),gx=ti({name:"SideBar",slots:Object,setup(i,{slots:s}){const e=Ke(),n=Ju(),a=Ti();return Di(()=>{te(()=>e.hash,t=>{const l=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${e.path}${t}"]`);if(!l)return;const{top:r,height:h}=a.value.getBoundingClientRect(),{top:p,height:k}=l.getBoundingClientRect();p<r?l.scrollIntoView(!0):p+k>r+h&&l.scrollIntoView(!1)})}),()=>{var t,l,r;return B("aside",{ref:a,key:"sidebar",id:"sidebar",class:"vp-sidebar","vp-sidebar":""},[(t=s.top)==null?void 0:t.call(s),((l=s.default)==null?void 0:l.call(s))??B(Uf,{config:n.value}),(r=s.bottom)==null?void 0:r.call(s)])}}}),ur=ti({name:"CommonWrapper",props:{containerClass:String,noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(i,{slots:s}){const e=ji(),n=Xe(),a=Vi(),{isMobile:t,isPC:l}=dr(),r=Xs(),[h,p]=El(!1),[k,d]=El(!1),u=Ju(),o=Ti(),c=rr(o),A=Z(!1),g=z(()=>i.noNavbar||e.value.navbar===!1||a.value.navbar===!1?!1:!!(a.value.logo??a.value.repo??a.value.navbar)),f=z(()=>i.noSidebar?!1:e.value.sidebar!==!1&&u.value.length!==0&&!e.value.home),m=z(()=>e.value.externalLinkIcon??n.value.externalLinkIcon??!0),y=z(()=>!i.noToc&&!e.value.home&&(e.value.toc??a.value.toc??!0)),v={x:0,y:0},C=w=>{v.x=w.changedTouches[0].clientX,v.y=w.changedTouches[0].clientY},S=w=>{const _=w.changedTouches[0].clientX-v.x,R=w.changedTouches[0].clientY-v.y;Math.abs(_)>Math.abs(R)*1.5&&Math.abs(_)>40&&(_>0&&v.x<=80?p(!0):p(!1))};let L=0;return Ri("scroll",n3(()=>{const w=window.scrollY;w<=58||w<L?A.value=!1:L+200<w&&!h.value&&(A.value=!0),L=w},300,!0)),_n(()=>{p(!1)}),bi(t,w=>{w||p(!1)}),bi(h,w=>{c.value=w}),Di(()=>{o.value=document.body}),_s(()=>{c.value=!1}),()=>B(Ce("GlobalEncrypt")?Wi("GlobalEncrypt"):Gu,()=>B("div",{class:["theme-container",{"hide-navbar":A.value,"no-navbar":!g.value,"sidebar-collapsed":!t.value&&!l.value&&k.value,"sidebar-open":t.value&&h.value,"no-sidebar":!f.value&&!s.sidebar&&!s.sidebarTop&&!s.sidebarBottom,"external-link-icon":m.value,pure:r.value,"has-toc":y.value},i.containerClass??"",e.value.containerClass??""],"vp-container":"",onTouchStart:C,onTouchEnd:S},[g.value?B(ox,{onToggleSidebar:()=>p()},{screenTop:s.navScreenTop,screenBottom:s.navScreenBottom}):null,B(xa,{name:"fade"},()=>h.value?B("div",{class:"vp-sidebar-mask",onClick:()=>p(!1)}):null),B(xa,{name:"fade"},()=>t.value?null:B("div",{class:"toggle-sidebar-wrapper",onClick:()=>d()},B("span",{class:["arrow",k.value?"end":"start"]}))),B(gx,{},{default:s.sidebar,top:s.sidebarTop,bottom:s.sidebarBottom}),s.default(),B(ix)]))}}),Eo=(i,{slots:s})=>{var d,u;const{bgImage:e,bgImageDark:n,bgImageStyle:a,color:t,description:l,image:r,imageDark:h,header:p,features:k=[]}=i;return B("div",{class:"vp-feature-wrapper"},[e?B("div",{class:["vp-feature-bg",{light:n}],style:[{"background-image":`url(${e})`},a]}):null,n?B("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${n})`},a]}):null,B("div",{class:"vp-feature",style:t?{color:t}:{}},[((d=s.image)==null?void 0:d.call(s,i))??[r?B("img",{class:["vp-feature-image",{light:h}],src:Gi(r),alt:""}):null,h?B("img",{class:"vp-feature-image dark",src:Gi(h),alt:""}):null],((u=s.info)==null?void 0:u.call(s,i))??[p?B("h2",{class:"vp-feature-header"},p):null,l?B("p",{class:"vp-feature-description",innerHTML:l}):null],k.length?B("div",{class:"vp-features"},k.map(({icon:o,title:c,details:A,link:g})=>{const f=[B("h3",{class:"vp-feature-title"},[B(Wi("VPIcon"),{icon:o}),B("span",{innerHTML:c})]),B("p",{class:"vp-feature-details",innerHTML:A})];return g?vu(g)?B("a",{class:"vp-feature-item link",href:g,"aria-label":c,target:"_blank"},f):B(ms,{class:"vp-feature-item link",to:g,"aria-label":c},()=>f):B("div",{class:"vp-feature-item"},f)})):null])])};Eo.displayName="FeaturePanel";const Oi=ti({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(i,{slots:s}){const e=a=>{a.style.transition=`transform ${i.duration}s ease-in-out ${i.delay}s, opacity ${i.duration}s ease-in-out ${i.delay}s`,a.style.transform="translateY(-20px)",a.style.opacity="0"},n=a=>{a.style.transform="translateY(0)",a.style.opacity="1"};return()=>{const a={name:"drop",appear:i.appear,onAppear:e,onAfterAppear:n,onEnter:e,onAfterEnter:n,onBeforeLeave:e},t=()=>s.default();return i.type==="group"?B(C4,a,t):B(xa,a,t)}}}),Bp=(i,{slots:s})=>B(xa,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:mo.resolve,onBeforeLeave:mo.pending},()=>s.default());Bp.displayName="FadeSlideY";const Bx=ti({name:"HeroInfo",slots:Object,setup(i,{slots:s}){const e=ji(),n=wt(),a=z(()=>e.value.heroFullScreen??!1),t=z(()=>{const{heroText:p,tagline:k}=e.value;return{text:p??(n.value.title||"Hello"),tagline:k??n.value.description,isFullScreen:a.value}}),l=z(()=>{const{heroText:p,heroImage:k,heroImageDark:d,heroAlt:u,heroImageStyle:o}=e.value;return{image:k?Gi(k):null,imageDark:d?Gi(d):null,imageStyle:o,alt:u??p??"",isFullScreen:a.value}}),r=z(()=>{const{bgImage:p,bgImageDark:k,bgImageStyle:d}=e.value;return{image:ls(p)?Gi(p):null,imageDark:ls(k)?Gi(k):null,bgStyle:d,isFullScreen:a.value}}),h=z(()=>e.value.actions??[]);return()=>{var p,k,d;return B("header",{class:["vp-hero-info-wrapper",{fullscreen:a.value}]},[((p=s.bg)==null?void 0:p.call(s,r.value))??[r.value.image?B("div",{class:["vp-hero-mask",{light:r.value.imageDark}],style:[{"background-image":`url(${r.value.image})`},r.value.bgStyle]}):null,r.value.imageDark?B("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${r.value.imageDark})`},r.value.bgStyle]}):null],B("div",{class:"vp-hero-info"},[((k=s.logo)==null?void 0:k.call(s,l.value))??B(Oi,{appear:!0,type:"group"},()=>{const{image:u,imageDark:o,imageStyle:c,alt:A}=l.value;return[u?B("img",{key:"light",class:["vp-hero-image",{light:o}],style:c,src:u,alt:A}):null,o?B("img",{key:"dark",class:"vp-hero-image dark",style:c,src:o,alt:A}):null]}),((d=s.info)==null?void 0:d.call(s,t.value))??B("div",{class:"vp-hero-infos"},[t.value.text?B(Oi,{appear:!0,delay:.04},()=>B("h1",{id:"main-title",class:"vp-hero-title"},t.value.text)):null,t.value.tagline?B(Oi,{appear:!0,delay:.08},()=>B("p",{id:"main-description",innerHTML:t.value.tagline})):null,h.value.length?B(Oi,{appear:!0,delay:.12},()=>B("p",{class:"vp-hero-actions"},h.value.map(u=>B(Gs,{class:["vp-hero-action",u.type??"default","no-external-link-icon"],config:u})))):null])])])}}}),Gf=(i,{slots:s})=>{var u,o,c;const{bgImage:e,bgImageDark:n,bgImageStyle:a,color:t,description:l,image:r,imageDark:h,header:p,highlights:k=[],type:d="un-order"}=i;return B("div",{class:"vp-highlight-wrapper",style:t?{color:t}:{}},[e?B("div",{class:["vp-highlight-bg",{light:n}],style:[{"background-image":`url(${e})`},a]}):null,n?B("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${n})`},a]}):null,B("div",{class:"vp-highlight"},[((u=s.image)==null?void 0:u.call(s,i))??[r?B("img",{class:["vp-highlight-image",{light:h}],src:Gi(r),alt:""}):null,h?B("img",{class:"vp-highlight-image dark",src:Gi(h),alt:""}):null],((o=s.info)==null?void 0:o.call(s,i))??[B("div",{class:"vp-highlight-info-wrapper"},B("div",{class:"vp-highlight-info"},[p?B("h2",{class:"vp-highlight-header",innerHTML:p}):null,l?B("p",{class:"vp-highlight-description",innerHTML:l}):null,((c=s.highlights)==null?void 0:c.call(s,k))??B(d==="order"?"ol":d==="no-order"?"dl":"ul",{class:"vp-highlights"},k.map(({icon:A,title:g,details:f,link:m})=>{const y=[B(d==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[A?B(Wi("VPIcon"),{class:"vp-highlight-icon",icon:A}):null,B("span",{innerHTML:g})]),f?B(d==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:f}):null];return B(d==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:m}]},m?vu(m)?B("a",{class:"vp-highlight-item link",href:m,"aria-label":g,target:"_blank"},y):B(ms,{class:"vp-highlight-item link",to:m,"aria-label":g},()=>y):B("div",{class:"vp-highlight-item"},y))}))]))]])])};Gf.displayName="HighlightPanel";const Ap=ti({name:"MarkdownContent",props:{custom:Boolean},setup(i){const s=Xe(),e=Z(),n=Jb(e,{delayEnter:ah(s.value.focus)?s.value.focus:1500,delayLeave:0}),a=z(()=>!!(s.value.focus??s.value.pure)&&n.value);return Di(()=>{const t=document.documentElement;te(a,l=>{l?t.classList.add("is-focusing"):t.classList.remove("is-focusing")})}),()=>B(Q4,{ref:e,class:["theme-hope-content",{custom:i.custom}],"vp-content":""})}}),Ax=ti({name:"HomePage",slots:Object,setup(i,{slots:s}){const e=ji(),n=z(()=>{const{features:t}=e.value;return Dh(t)?t:null}),a=z(()=>{const{highlights:t}=e.value;return Dh(t)?t:null});return()=>{var t,l,r,h;return B("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":e.value.heroText===""?"":"main-title"},[(t=s.top)==null?void 0:t.call(s),B(Bx),((l=a.value)==null?void 0:l.map(p=>"features"in p?B(Eo,p):B(Gf,p)))??(n.value?B(Oi,{appear:!0,delay:.24},()=>B(Eo,{features:n.value})):null),(r=s.center)==null?void 0:r.call(s),B(Oi,{appear:!0,delay:.32},()=>B(Ap)),(h=s.bottom)==null?void 0:h.call(s)])}}}),yx=ti({name:"BreadCrumb",setup(){const i=Bs(),s=Be(),e=nr(),n=ji(),a=Vi(),t=Ti([]),l=z(()=>(n.value.breadcrumb??a.value.breadcrumb??!0)&&t.value.length>1),r=z(()=>n.value.breadcrumbIcon??a.value.breadcrumbIcon??!0),h=()=>{const p=qD(i.value.path,s.value).map(({link:k,name:d})=>{const{path:u,meta:o,notFound:c}=Ks(k);return c||o.breadcrumbExclude?null:{title:o.shortTitle||o.title||d,icon:o.icon,path:u}}).filter(k=>k!==null);p.length>1&&(t.value=p)};return Di(()=>{te(e,h)}),()=>B("nav",{class:["vp-breadcrumb",{disable:!l.value}]},l.value?B("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},t.value.map((p,k)=>B("li",{class:{"is-active":t.value.length-1===k},property:"itemListElement",typeof:"ListItem"},[B(ms,{to:p.path,property:"item",typeof:"WebPage"},()=>[r.value?B(Wi("VPIcon"),{icon:p.icon}):null,B("span",{property:"name"},p.title||"Unknown")]),B("meta",{property:"position",content:k+1})]))):[])}}),fx=ti({name:"PageNav",setup(){const i=Vi(),s=Dn(),{prevLink:e,nextLink:n}=GD();return Ri("keydown",a=>{a.altKey&&(a.key==="ArrowRight"?n.value&&(s(n.value.link),a.preventDefault()):a.key==="ArrowLeft"&&e.value&&(s(e.value.link),a.preventDefault()))}),()=>e.value||n.value?B("nav",{class:"vp-page-nav"},[e.value?B(Gs,{class:"prev",config:e.value},()=>{var a,t;return[B("div",{class:"hint"},[B("span",{class:"arrow start"}),i.value.metaLocales.prev]),B("div",{class:"link"},[B(Wi("VPIcon"),{icon:(a=e.value)==null?void 0:a.icon}),(t=e.value)==null?void 0:t.text])]}):null,n.value?B(Gs,{class:"next",config:n.value},()=>{var a,t;return[B("div",{class:"hint"},[i.value.metaLocales.next,B("span",{class:"arrow end"})]),B("div",{class:"link"},[(a=n.value)==null?void 0:a.text,B(Wi("VPIcon"),{icon:(t=n.value)==null?void 0:t.icon})])]}):null]):null}}),Wf=()=>B(Yi,{name:"author"},()=>B("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Wf.displayName="AuthorIcon";const Kf=()=>B(Yi,{name:"calendar"},()=>B("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Kf.displayName="CalendarIcon";const Yf=()=>B(Yi,{name:"category"},()=>B("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Yf.displayName="CategoryIcon";const Xf=()=>B(Yi,{name:"print"},()=>B("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Xf.displayName="PrintIcon";const Zf=()=>B(Yi,{name:"tag"},()=>B("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Zf.displayName="TagIcon";const Jf=()=>B(Yi,{name:"timer"},()=>B("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Jf.displayName="TimerIcon";const Qf=()=>B(Yi,{name:"word"},()=>[B("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),B("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Qf.displayName="WordIcon";const mx=()=>{const i=Vi(),s=Bs(),e=ji();return z(()=>{var a;return e.value.contributors??i.value.contributors??!0?((a=s.value.git)==null?void 0:a.contributors)??null:null})},vx={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},Fx=({docsRepo:i,docsBranch:s,docsDir:e,filePathRelative:n,editLinkPattern:a})=>{if(!n)return null;const t=Wu(i);let l;return a?l=a:t!==null&&(l=vx[t]),l?l.replace(/:repo/u,aa(i)?i:`https://github.com/${i}`).replace(/:branch/u,s).replace(/:path/u,T4(`${Eu(e)}/${n}`)):null},Ex=()=>{const i=Vi(),s=Bs(),e=ji();return z(()=>{const{repo:n,docsRepo:a=n,docsBranch:t="main",docsDir:l="",editLink:r,editLinkPattern:h=""}=i.value;if(!(e.value.editLink??r??!0)||!a)return null;const k=Fx({docsRepo:a,docsBranch:t,docsDir:l,editLinkPattern:h,filePathRelative:s.value.filePathRelative});return k?{text:i.value.metaLocales.editLink,link:k}:null})},ta=()=>{const i=Vi();return z(()=>i.value.metaLocales)},bx=()=>{const i=wt(),s=Vi(),e=Bs(),n=ji();return z(()=>{var l;return!(n.value.lastUpdated??s.value.lastUpdated??!0)||!((l=e.value.git)!=null&&l.updatedTime)?null:new Date(e.value.git.updatedTime).toLocaleString(i.value.lang)})},Cx=ti({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(i){const s=ta(),e=Xs();return()=>i.author.length?B("span",{class:"page-author-info","aria-label":`${s.value.author}${e.value?"":"🖊"}`,...e.value?{}:{"data-balloon-pos":"up"}},[B(Wf),B("span",i.author.map(n=>n.url?B("a",{class:"page-author-item",href:n.url,target:"_blank",rel:"noopener noreferrer"},n.name):B("span",{class:"page-author-item"},n.name))),B("span",{property:"author",content:i.author.map(n=>n.name).join(", ")})]):null}}),_x=ti({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(i){const s=ta(),e=Dn(),n=Xs();return()=>i.category.length?B("span",{class:"page-category-info","aria-label":`${s.value.category}${n.value?"":"🌈"}`,...n.value?{}:{"data-balloon-pos":"up"}},[B(Yf),i.category.map(({name:a,path:t})=>B("span",{class:["page-category-item",{[`color${kr(a,Number(Rt.colorNumber))}`]:!n.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&e(t)}},a)),B("meta",{property:"articleSection",content:i.category.map(({name:a})=>a).join(",")})]):null}}),Dx=ti({name:"DateInfo",inheritAttrs:!1,props:{date:Object,localizedDate:String},setup(i){const s=Du(),e=ta(),n=Xs();return()=>i.date?B("span",{class:"page-date-info","aria-label":`${e.value.date}${n.value?"":"📅"}`,...n.value?{}:{"data-balloon-pos":"up"}},[B(Kf),B("span",{"data-allow-mismatch":"text"},i.localizedDate??i.date.toLocaleDateString(s.value)),B("meta",{property:"datePublished",content:i.date.toISOString()||""})]):null}}),xx=ti({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(i){const s=ta();return()=>i.isOriginal?B("span",{class:"page-original-info"},s.value.origin):null}}),wx=ti({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:Object,readingTimeLocale:Object},setup(i){const s=ta(),e=Xs(),n=z(()=>{if(!i.readingTime)return null;const{minutes:a}=i.readingTime;return a<1?"PT1M":`PT${Math.round(a)}M`});return()=>{var a;return(a=i.readingTimeLocale)!=null&&a.time?B("span",{class:"page-reading-time-info","aria-label":`${s.value.readingTime}${e.value?"":"⌛"}`,...e.value?{}:{"data-balloon-pos":"up"}},[B(Jf),B("span",i.readingTimeLocale.time),B("meta",{property:"timeRequired",content:n.value})]):null}}}),Tx=ti({name:"TagInfo",inheritAttrs:!1,props:{tag:Array},setup(i){const s=ta(),e=Dn(),n=Xs();return()=>{var a;return(a=i.tag)!=null&&a.length?B("span",{class:"page-tag-info","aria-label":`${s.value.tag}${n.value?"":"🏷"}`,...n.value?{}:{"data-balloon-pos":"up"}},[B(Zf),i.tag.map(({name:t,path:l})=>B("span",{class:["page-tag-item",{[`color${kr(t,Number(Rt.colorNumber))}`]:!n.value,clickable:l}],role:l?"navigation":"",onClick:()=>{l&&e(l)}},t)),B("meta",{property:"keywords",content:i.tag.map(({name:t})=>t).join(",")})]):null}}}),Sx=ti({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:Object,readingTimeLocale:Object},setup(i){const s=ta(),e=Xs();return()=>{var n,a;return(n=i.readingTimeLocale)!=null&&n.words?B("span",{class:"page-word-info","aria-label":`${s.value.words}${e.value?"":"🔠"}`,...e.value?{}:{"data-balloon-pos":"up"}},[B(Qf),B("span",i.readingTimeLocale.words),B("meta",{property:"wordCount",content:(a=i.readingTime)==null?void 0:a.words})]):null}}}),i8=ti({name:"PageInfo",components:{AuthorInfo:Cx,CategoryInfo:_x,DateInfo:Dx,OriginalInfo:xx,PageViewInfo:rh,ReadingTimeInfo:wx,TagInfo:Tx,WordInfo:Sx},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(i){const s=Xs();return()=>i.items?B("div",{class:"page-info"},i.items.map(e=>B(Wi(`${e}Info`),{...i.info,isPure:s.value}))):null}}),Ix=ti({name:"PageTitle",setup(){const i=Bs(),s=ji(),e=Vi(),{info:n,items:a}=zD();return()=>B("div",{class:"vp-page-title"},[B("h1",[e.value.titleIcon===!1?null:B(Wi("VPIcon"),{icon:s.value.icon}),i.value.title]),B(i8,{info:n.value,items:a.value}),B("hr")])}}),s8=()=>B(Yi,{name:"edit"},()=>[B("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),B("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);s8.displayName="EditIcon";const Rx=ti({name:"PageMeta",setup(){const i=Vi(),s=Ex(),e=bx(),n=mx();return()=>{var t;const{metaLocales:a}=i.value;return B("footer",{class:"vp-page-meta"},[s.value?B("div",{class:"vp-meta-item edit-link"},B(Gs,{class:"vp-meta-label",config:s.value},{before:()=>B(s8)})):null,B("div",{class:"vp-meta-item git-info"},[e.value?B("div",{class:"update-time"},[B("span",{class:"vp-meta-label"},`${a.lastUpdated}: `),B("span",{class:"vp-meta-info","data-allow-mismatch":"text"},e.value)]):null,(t=n.value)!=null&&t.length?B("div",{class:"contributors"},[B("span",{class:"vp-meta-label"},`${a.contributors}: `),n.value.map(({email:l,name:r},h,p)=>[B("span",{class:"vp-meta-info",title:`email: ${l}`},r),h!==p.length-1?",":""])]):null])])}}}),Ox=ti({name:"PrintButton",setup(){const i=Xe(),s=Vi();return()=>i.value.print===!1?null:B("button",{type:"button",class:"print-button",title:s.value.metaLocales.print,onClick:()=>{window.print()}},B(Xf))}}),e8=ti({name:"TOC",props:{items:Array,options:Object},slots:Object,setup(i,{slots:s}){const e=Mi(i,"options"),n=J7(e),a=Ke(),t=ta(),[l,r]=El(),h=Ti(),p=Z("-1.7rem"),k=c=>{var A;(A=h.value)==null||A.scrollTo({top:c,behavior:"smooth"})},d=()=>{if(h.value){const c=document.querySelector(".vp-toc-item.active");c?p.value=`${c.getBoundingClientRect().top-h.value.getBoundingClientRect().top+h.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};Di(()=>{te(()=>a.hash,c=>{if(h.value){const A=document.querySelector(`#toc a.vp-toc-link[href$="${c}"]`);if(!A)return;const{top:g,height:f}=h.value.getBoundingClientRect(),{top:m,height:y}=A.getBoundingClientRect();m<g?k(h.value.scrollTop+m-g):m+y>g+f&&k(h.value.scrollTop+m+y-g-f)}},{flush:"post"}),te(()=>a.fullPath,d,{flush:"post"})});const u=({title:c,level:A,slug:g})=>B(ms,{to:`#${g}`,class:["vp-toc-link",`level${A}`],onClick:()=>{r()}},()=>c),o=c=>c.length?B("ul",{class:"vp-toc-list"},c.map(A=>{const g=o(A.children);return[B("li",{class:["vp-toc-item",{active:a.hash===`#${A.slug}`}]},u(A)),g?B("li",g):null]})):null;return()=>{var f,m,y;const c=(f=i.items)!=null&&f.length?o(i.items):o(n.value),A=(m=s.before)==null?void 0:m.call(s),g=(y=s.after)==null?void 0:y.call(s);return B(wu,()=>c||A||g?B("div",{class:"vp-toc-placeholder"},[B("aside",{id:"toc","vp-toc":""},[A,c?[B("div",{class:"vp-toc-header",onClick:()=>{r()}},[t.value.toc,B(Ox),B("div",{class:["arrow",l.value?"down":"end"]})]),B("div",{class:["vp-toc-wrapper",l.value?"open":""],ref:h},[c,B("div",{class:"vp-toc-marker",style:{top:p.value}})])]:null,g])]):null)}}}),ic=ti({name:"NormalPage",slots:Object,setup(i,{slots:s}){const e=ji(),{isDarkMode:n}=or(),a=Vi(),t=z(()=>e.value.toc??a.value.toc??!0),l=z(()=>[2,(e.value.headerDepth??a.value.headerDepth??2)+1]);return()=>B("main",{id:"main-content",class:"vp-page"},B(Ce("LocalEncrypt")?Wi("LocalEncrypt"):Gu,()=>{var r,h,p,k;return[(r=s.top)==null?void 0:r.call(s),e.value.cover?B("div",{class:"page-cover"},B("img",{src:Gi(e.value.cover),alt:"","no-view":""})):null,B(yx),B(Ix),t.value?B(e8,{options:{levels:l.value}},{before:s.tocBefore,after:s.tocAfter}):null,(h=s.contentBefore)==null?void 0:h.call(s),B(Ap),(p=s.contentAfter)==null?void 0:p.call(s),B(Rx),B(fx),Ce("CommentService")?B(Wi("CommentService"),{darkmode:n.value}):null,(k=s.bottom)==null?void 0:k.call(s)]}))}}),Px=ti({name:"PortfolioHero",slots:Object,setup(i,{slots:s}){const e=Cf(),n=ji(),a=Z(0),t=z(()=>{var u;return((u=n.value.titles)==null?void 0:u[a.value])??""}),l=Z(""),r=z(()=>{const{name:u,avatar:o,avatarDark:c,avatarAlt:A,avatarStyle:g}=n.value;return{name:u??e.value.name,avatar:o?Gi(o):null,avatarDark:c?Gi(c):null,avatarStyle:g,alt:(A||u)??""}}),h=z(()=>{const{bgImage:u,bgImageDark:o,bgImageStyle:c}=n.value;return{image:ls(u)?Gi(u):null,imageDark:ls(o)?Gi(o):null,bgStyle:c}}),p=z(()=>{const{welcome:u,name:o,titles:c=[],medias:A}=n.value;return{name:o??e.value.name,welcome:u??"👋 Hi There, I'm",title:l.value,titles:c,medias:A??null}}),k=()=>{l.value="";let u=0,o=!1;const c=async()=>{if(!o)if(l.value+=t.value[u],u+=1,await Hi(),u<t.value.length)setTimeout(()=>{c()},150);else{const A=p.value.titles.length;setTimeout(()=>{a.value=A<=1||a.value===p.value.titles.length-1?0:a.value+1},1e3)}};return c(),()=>{o=!0}};let d;return Di(()=>{te(t,()=>{d==null||d(),d=k()})}),()=>{var u,o,c;return B("section",{id:"portfolio",class:["vp-portfolio",{bg:h.value.image}]},[((u=s.bg)==null?void 0:u.call(s,h.value))??[h.value.image?B("div",{class:["vp-portfolio-mask",{light:h.value.imageDark}],style:[{background:`url(${h.value.image}) center/cover no-repeat`},h.value.bgStyle]}):null,h.value.imageDark?B("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${h.value.imageDark}) center/cover no-repeat`},h.value.bgStyle]}):null],((o=s.avatar)==null?void 0:o.call(s,r.value))??B("div",{class:"vp-portfolio-avatar"},[B(Oi,{delay:.04},()=>{const{avatar:A,avatarDark:g,name:f,alt:m,avatarStyle:y}=r.value;return[A?B("img",{key:"light",class:{light:g},src:A,title:f,alt:m,style:y}):null,g?B("img",{key:"dark",class:"dark",src:g,title:f,alt:m,style:y}):null]})]),B("div",{class:"vp-portfolio-container"},((c=s.info)==null?void 0:c.call(s,p.value))??B("div",{class:"vp-portfolio-info"},[B(Oi,{appear:!0,delay:.08},()=>B("h6",{class:"vp-portfolio-welcome"},p.value.welcome)),B(Oi,{appear:!0,delay:.12},()=>B("h1",{class:"vp-portfolio-name",id:"main-title"},p.value.name)),B(Oi,{appear:!0,delay:.16},()=>B("h2",{class:"vp-portfolio-title"},l.value)),B(Oi,{appear:!0,delay:.2},()=>p.value.medias?B("div",{class:"vp-portfolio-medias"},p.value.medias.map(({name:A,url:g,icon:f})=>B("a",{class:"vp-portfolio-media",href:g,rel:"noopener noreferrer",target:"_blank",title:A},B(Wi("VPIcon"),{icon:f,sizing:"both"})))):Ce("SocialMedias")?B(Wi("SocialMedias")):null)]))])}}}),Lx=ti({name:"PortfolioHome",setup(){const i=ji(),s=z(()=>i.value.content??"portfolio");return()=>B("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[B(Px),s.value==="none"?null:B("div",{},B(Oi,{appear:!0,delay:.24},()=>B(Ap,{class:{"vp-portfolio-content":s.value==="portfolio"}})))])}}),cr=ti({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(i){const s=Vi(),e=Ti(),n=({target:a})=>{const t=document.querySelector(a.hash);if(t){const l=()=>{t.removeAttribute("tabindex"),t.removeEventListener("blur",l)};t.setAttribute("tabindex","-1"),t.addEventListener("blur",l),t.focus(),window.scrollTo(0,0)}};return _n(()=>{var a;(a=e.value)==null||a.focus()}),()=>[B("span",{ref:e,tabindex:"-1"}),B("a",{href:`#${i.content}`,class:"vp-skip-link sr-only",onClick:n},s.value.routeLocales.skipToContent)]}}),yp=ti({name:"Layout",slots:Object,setup(i,{slots:s}){const e=Xe(),n=Vi(),a=Bs(),t=ji(),l=Xs(),{isMobile:r}=dr(),h=z(()=>{var p,k;return((p=n.value.blog)==null?void 0:p.sidebarDisplay)??((k=e.value.blog)==null?void 0:k.sidebarDisplay)??"mobile"});return()=>[B(cr),B(ur,{},{default:()=>{var p;return((p=s.default)==null?void 0:p.call(s))??(t.value.portfolio?B(Lx):t.value.home?B(Ax):B(l.value?Gu:Bp,()=>B(ic,{key:a.value.path},{top:s.top,bottom:s.bottom,contentBefore:s.contentBefore,contentAfter:s.contentAfter,tocBefore:s.tocBefore,tocAfter:s.tocAfter})))},navScreenBottom:h.value==="none"&&Ce("BloggerInfo")?()=>B(Wi("BloggerInfo")):null,sidebar:!r.value&&h.value==="always"&&Ce("BloggerInfo")?()=>B(Wi("BloggerInfo")):null})]}}),Nx=ti({name:"NotFoundHint",setup(){const i=Vi(),s=()=>{const e=i.value.routeLocales.notFoundMsg;return e[Math.floor(Math.random()*e.length)]};return()=>B("div",{class:"not-found-hint"},[B("p",{class:"error-code"},"404"),B("h1",{class:"error-title"},i.value.routeLocales.notFoundTitle),B("p",{class:"error-hint"},s())])}}),Mx=ti({name:"NotFound",slots:Object,setup(i,{slots:s}){const e=De(),n=Be(),a=Vi();return()=>[B(cr),B(ur,{noSidebar:!0},()=>{var t;return B("main",{id:"main-content",class:"vp-page not-found"},((t=s.default)==null?void 0:t.call(s))??[B(Nx),B("div",{class:"actions"},[B("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},a.value.routeLocales.back),B("button",{type:"button",class:"action-button",onClick:()=>{e.push(a.value.home??n.value)}},a.value.routeLocales.home)])])})]}}),$x={},Vx=JSON.parse('{"category":{"/":{"path":"/category/","map":{}}},"tag":{"/":{"path":"/tag/","map":{}}}}'),n8=JSON.parse('["/SUMMARY.html","/about-book.html","/beat-ai.html","/community.html","/github.html","/index-list.html","/into-rust.html","/practice.html","/rust-weekly.html","/rustt.html","/rusty-book.html","/some-thoughts.html","/advance/errors.html","/advance/global-variable.html","/advance/hrtb.html","/advance/intro.html","/advance/macro.html","/advance/simd.html","/advance-practice/async.html","/advance-practice/bridging-with-sync.html","/advance-practice/channels.html","/advance-practice/design-pattern.html","/advance-practice/frame.html","/advance-practice/getting-startted.html","/advance-practice/graceful-shutdown.html","/advance-practice/intro.html","/advance-practice/io.html","/advance-practice/overview.html","/advance-practice/select.html","/advance-practice/shared-state.html","/advance-practice/spawning.html","/advance-practice/stream.html","/advance-practice1/graceful-shutdown.html","/advance-practice1/intro.html","/advance-practice1/multi-threads.html","/advance-practice1/web-server.html","/appendix/derive.html","/appendix/difficulties.html","/appendix/expressions.html","/appendix/intro.html","/appendix/keywords.html","/appendix/operators.html","/appendix/prelude.html","/appendix/rust-version.html","/basic/comment.html","/basic/flow-control.html","/basic/formatted-output.html","/basic/intro.html","/basic/lifetime.html","/basic/method.html","/basic/variable.html","/basic-practice/base-features.html","/basic-practice/envs.html","/basic-practice/intro.html","/basic-practice/iterators.html","/basic-practice/refactoring.html","/basic-practice/stderr.html","/basic-practice/tests.html","/cargo/getting-started.html","/cargo/git-auth.html","/cargo/intro.html","/compiler/intro.html","/difficulties/cow.html","/difficulties/eq.html","/difficulties/intro.html","/difficulties/lifetime.html","/difficulties/move-copy.html","/difficulties/pointer.html","/difficulties/slice.html","/difficulties/string.html","/first-try/cargo.html","/first-try/editor.html","/first-try/hello-world.html","/first-try/installation.html","/first-try/intro.html","/first-try/slowly-downloading.html","/first-try/sth-you-should-not-do.html","/libraries/intro.html","/logs/about-log.html","/logs/intro.html","/logs/log.html","/logs/tracing-logger.html","/logs/tracing.html","/practice/best-pratice.html","/practice/interview.html","/practice/intro.html","/practice/naming.html","/practice/third-party-libs.html","/profiling/intro.html","/std/hashmap.html","/std/intro.html","/std/iterator.html","/std/search.html","/std/vector.html","/templates/intro.html","/test/assertion.html","/test/benchmark.html","/test/ci.html","/test/intro.html","/test/unit-integration-test.html","/test/write-tests.html","/too-many-lists/do-we-need-it.html","/too-many-lists/intro.html","/usecases/aws-rust.html","/usecases/intro.html","/advance/async/async-await.html","/advance/async/future-excuting.html","/advance/async/getting-started.html","/advance/async/intro.html","/advance/async/multi-futures-simultaneous.html","/advance/async/pain-points-and-workarounds.html","/advance/async/pin-unpin.html","/advance/async/web-server.html","/advance/circle-self-ref/circle-reference.html","/advance/circle-self-ref/intro.html","/advance/circle-self-ref/self-referential.html","/advance/concurrency-with-threads/concurrency-parallelism.html","/advance/concurrency-with-threads/intro.html","/advance/concurrency-with-threads/message-passing.html","/advance/concurrency-with-threads/races.html","/advance/concurrency-with-threads/ref-counter-lock.html","/advance/concurrency-with-threads/send-sync.html","/advance/concurrency-with-threads/sync1.html","/advance/concurrency-with-threads/sync2.html","/advance/concurrency-with-threads/thread.html","/advance/difficulties/pointer.html","/advance/functional-programing/closure.html","/advance/functional-programing/intro.html","/advance/functional-programing/iterator.html","/advance/into-types/converse.html","/advance/into-types/custom-type.html","/advance/into-types/enum-int.html","/advance/into-types/intro.html","/advance/into-types/sized.html","/advance/lifetime/advance.html","/advance/lifetime/intro.html","/advance/lifetime/misconceptions.html","/advance/lifetime/static.html","/advance/smart-pointer/box.html","/advance/smart-pointer/cell-refcell.html","/advance/smart-pointer/deref.html","/advance/smart-pointer/drop.html","/advance/smart-pointer/intro.html","/advance/smart-pointer/rc-arc.html","/advance/unsafe/inline-asm.html","/advance/unsafe/intro.html","/advance/unsafe/superpowers.html","/advance/unsafe/ub.html","/appendix/rust-versions/1.58.html","/appendix/rust-versions/1.59.html","/appendix/rust-versions/1.60.html","/appendix/rust-versions/1.61.html","/appendix/rust-versions/1.62.html","/appendix/rust-versions/1.63.html","/appendix/rust-versions/1.64.html","/appendix/rust-versions/1.65.html","/appendix/rust-versions/1.66.html","/appendix/rust-versions/1.67.html","/appendix/rust-versions/1.68.html","/appendix/rust-versions/1.69.html","/appendix/rust-versions/1.70.html","/appendix/rust-versions/1.71.html","/appendix/rust-versions/1.72.html","/appendix/rust-versions/1.73.html","/appendix/rust-versions/1.74.html","/appendix/rust-versions/1.75.html","/appendix/rust-versions/1.76.html","/appendix/rust-versions/1.77.html","/appendix/rust-versions/1.78.html","/appendix/rust-versions/1.79.html","/appendix/rust-versions/1.80.html","/appendix/rust-versions/1.81.html","/appendix/rust-versions/1.82.html","/appendix/rust-versions/1.83.html","/appendix/rust-versions/1.84.html","/appendix/rust-versions/1.85.html","/appendix/rust-versions/intro.html","/basic/base-type/char-bool.html","/basic/base-type/function.html","/basic/base-type/","/basic/base-type/numbers.html","/basic/base-type/statement-expression.html","/basic/collections/hashmap.html","/basic/collections/intro.html","/basic/collections/vector.html","/basic/compound-type/array.html","/basic/compound-type/enum.html","/basic/compound-type/intro.html","/basic/compound-type/string-slice.html","/basic/compound-type/struct.html","/basic/compound-type/tuple.html","/basic/crate-module/crate.html","/basic/crate-module/intro.html","/basic/crate-module/module.html","/basic/crate-module/use.html","/basic/match-pattern/all-patterns.html","/basic/match-pattern/intro.html","/basic/match-pattern/match-if-let.html","/basic/match-pattern/option.html","/basic/match-pattern/pattern-match.html","/basic/ownership/borrowing.html","/basic/ownership/","/basic/ownership/ownership.html","/basic/result-error/intro.html","/basic/result-error/panic.html","/basic/result-error/result.html","/basic/trait/advance-trait.html","/basic/trait/generic.html","/basic/trait/intro.html","/basic/trait/trait-object.html","/basic/trait/trait.html","/cargo/guide/build-cache.html","/cargo/guide/cargo-cache.html","/cargo/guide/cargo-toml-lock.html","/cargo/guide/dependencies.html","/cargo/guide/download-package.html","/cargo/guide/intro.html","/cargo/guide/package-layout.html","/cargo/guide/tests-ci.html","/cargo/guide/why-exist.html","/cargo/reference/cargo-target.html","/cargo/reference/configuration.html","/cargo/reference/deps-overriding.html","/cargo/reference/env.html","/cargo/reference/intro.html","/cargo/reference/manifest.html","/cargo/reference/package-id.html","/cargo/reference/profile.html","/cargo/reference/profiles.html","/cargo/reference/publishing-on-crates.io.html","/cargo/reference/specify-deps.html","/cargo/reference/workspaces.html","/compiler/fight-with-compiler/intro.html","/compiler/fight-with-compiler/phantom-data.html","/compiler/fight-with-compiler/unconstrained.html","/compiler/pitfalls/arithmetic-overflow.html","/compiler/pitfalls/closure-with-lifetime.html","/compiler/pitfalls/","/compiler/pitfalls/iterator-everywhere.html","/compiler/pitfalls/lazy-iterators.html","/compiler/pitfalls/main-with-channel-blocked.html","/compiler/pitfalls/multiple-mutable-references.html","/compiler/pitfalls/stack-overflow.html","/compiler/pitfalls/the-disabled-mutability.html","/compiler/pitfalls/use-vec-in-for.html","/compiler/pitfalls/utf8-performance.html","/compiler/pitfalls/weird-ranges.html","/libraries/command/intro.html","/libraries/command/structopt.html","/libraries/http/intro.html","/libraries/http/reqwest.html","/libraries/json/intro.html","/libraries/json/serde.html","/logs/observe/about-observe.html","/logs/observe/intro.html","/logs/observe/trace.html","/profiling/compiler/attributes.html","/profiling/compiler/intro.html","/profiling/compiler/llvm.html","/profiling/compiler/phantom-data.html","/profiling/compiler/speed-up.html","/profiling/memory/allocation.html","/profiling/memory/intro.html","/profiling/memory/layout.html","/profiling/memory/pointer-ref.html","/profiling/memory/uninit.html","/profiling/memory/virtual.html","/profiling/performance/allocator.html","/profiling/performance/calculate.html","/profiling/performance/clone-copy.html","/profiling/performance/cpu-cache.html","/profiling/performance/deep-into-move.html","/profiling/performance/early-optimise.html","/profiling/performance/enum.html","/profiling/performance/heap-stack.html","/profiling/performance/intro.html","/profiling/performance/runtime-check.html","/profiling/performance/string.html","/profiling/performance/tools.html","/templates/files/dir.html","/templates/files/intro.html","/templates/http/intro.html","/too-many-lists/advanced-lists/double-singly.html","/too-many-lists/advanced-lists/intro.html","/too-many-lists/advanced-lists/stack-allocated.html","/too-many-lists/advanced-lists/unsafe-deque.html","/too-many-lists/bad-stack/basic-operations.html","/too-many-lists/bad-stack/final-code.html","/too-many-lists/bad-stack/intro.html","/too-many-lists/bad-stack/layout.html","/too-many-lists/deque/final-code.html","/too-many-lists/deque/intro.html","/too-many-lists/deque/iterator.html","/too-many-lists/deque/layout.html","/too-many-lists/deque/peek.html","/too-many-lists/deque/symmetric.html","/too-many-lists/ok-stack/intro.html","/too-many-lists/ok-stack/iter.html","/too-many-lists/ok-stack/itermut.html","/too-many-lists/ok-stack/peek.html","/too-many-lists/ok-stack/type-optimizing.html","/too-many-lists/persistent-stack/drop-arc.html","/too-many-lists/persistent-stack/intro.html","/too-many-lists/persistent-stack/layout.html","/too-many-lists/production-unsafe-deque/basics.html","/too-many-lists/production-unsafe-deque/boring-combinatorics.html","/too-many-lists/production-unsafe-deque/drop-and-panic-safety.html","/too-many-lists/production-unsafe-deque/filling-in-random-bits.html","/too-many-lists/production-unsafe-deque/final-code.html","/too-many-lists/production-unsafe-deque/implementing-cursors.html","/too-many-lists/production-unsafe-deque/intro.html","/too-many-lists/production-unsafe-deque/layout.html","/too-many-lists/production-unsafe-deque/send-sync-and-compile-tests.html","/too-many-lists/production-unsafe-deque/testing-cursors.html","/too-many-lists/production-unsafe-deque/testing.html","/too-many-lists/production-unsafe-deque/variance-and-phantomData.html","/too-many-lists/unsafe-queue/basics.html","/too-many-lists/unsafe-queue/extra-junk.html","/too-many-lists/unsafe-queue/final-code.html","/too-many-lists/unsafe-queue/intro.html","/too-many-lists/unsafe-queue/layout.html","/too-many-lists/unsafe-queue/layout2.html","/too-many-lists/unsafe-queue/miri.html","/too-many-lists/unsafe-queue/stacked-borrow.html","/too-many-lists/unsafe-queue/testing-stacked-borrow.html","/cargo/reference/build-script/examples.html","/cargo/reference/build-script/intro.html","/cargo/reference/features/examples.html","/cargo/reference/features/intro.html","/compiler/fight-with-compiler/borrowing/borrow-distinct-fields-of-struct.html","/compiler/fight-with-compiler/borrowing/intro.html","/compiler/fight-with-compiler/borrowing/ref-exist-in-out-fn.html","/compiler/fight-with-compiler/lifetime/closure-with-static.html","/compiler/fight-with-compiler/lifetime/intro.html","/compiler/fight-with-compiler/lifetime/loop.html","/compiler/fight-with-compiler/lifetime/too-long1.html","/compiler/fight-with-compiler/lifetime/too-long2.html","/profiling/compiler/optimization/intro.html","/profiling/compiler/optimization/option.html","/profiling/profiling/performance/benchmark.html"]'),zx=JSON.parse('{"article":{"/":{"path":"/Blog/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339]}},"star":{"/":{"path":"/star/","indexes":[]}},"timeline":{"/":{"path":"/timeline/","indexes":[]}}}'),bo=Ti(Vx);We(bo);const a8=i=>{const s=Bs(),e=ji(),n=Be();return z(()=>{var r;const a=i??((r=e.value.blog)==null?void 0:r.key)??"";if(!a)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!(a in bo.value))throw new Error(`useBlogCategory: key ${a} is invalid`);const t=bo.value[a][n.value],l={path:t.path,map:{}};for(const h in t.map){const p=t.map[h];l.map[h]={path:p.path,items:[]};for(const k of p.indexes){const{path:d,meta:u}=Ks(n8[k]);l.map[h].items.push({path:d,info:u})}s.value.path===p.path&&(l.currentItems=l.map[h].items)}return l})},Co=Ti(zx);We(Co);const fp=i=>{const s=ji(),e=Be();return z(()=>{var l;const n=i??((l=s.value.blog)==null?void 0:l.key)??"";if(!n)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!(n in Co.value))throw new Error(`useBlogType: key ${i} is invalid`);const a=Co.value[n][e.value],t={path:a.path,items:[]};for(const r of a.indexes){const{path:h,meta:p}=Ks(n8[r]);t.items.push({path:h,info:p})}return t})},t8=Symbol(""),sc=()=>{const i=Ni(t8);if(!i)throw new Error("useTimeline() is called without provider.");return i},qx=()=>{const i=fp("timeline"),s=Du(),e=z(()=>{const n=[];return i.value.items.forEach(({info:a,path:t})=>{const l=Ru(a.date);if(l){const r=l.getFullYear();(!n[0]||n[0].year!==r)&&n.unshift({year:r,items:[]}),n[0].items.push({date:l.toLocaleDateString(s.value,{month:"numeric",day:"numeric"}),info:a,path:t})}}),{...i.value,config:n.reverse()}});Ds(t8,e)},l8=Symbol(""),gr=()=>{const i=Ni(l8);if(!i)throw new Error("useArticles() is called without provider.");return i},Hx=()=>{const i=fp("article");Ds(l8,i)},r8=Symbol.for("categoryMap"),Br=()=>{const i=Ni(r8);if(!i)throw new Error("useCategoryMap() is called without provider.");return i},jx=()=>{const i=a8("category");Ds(r8,i)},h8=Symbol(""),ec=()=>{const i=Ni(h8);if(!i)throw new Error("useStars() is called without provider.");return i},Ux=()=>{const i=fp("star");Ds(h8,i)},p8=Symbol.for("tagMap"),Ar=()=>{const i=Ni(p8);if(!i)throw new Error("useTagMap() is called without provider.");return i},Gx=()=>{const i=a8("tag");Ds(p8,i)},Wx=()=>{Hx(),jx(),Ux(),Gx(),qx()},yr=()=>{const i=Xe(),s=Vi();return z(()=>({...i.value.blog,...s.value.blog}))},Kx=i=>{const s=Vi();return z(()=>{const{["author"]:e}=i.value;return e?Sl(e):e===!1?[]:Sl(s.value.author,!1)})},Yx=i=>{const s=Br();return z(()=>Bf(i.value.category).map(e=>({name:e,path:s.value.map[e].path})))},Xx=i=>{const s=Ar();return z(()=>Af(i.value.tag).map(e=>({name:e,path:s.value.map[e].path})))},Zx=i=>z(()=>{const{["date"]:s}=i.value;return Ru(s)}),Jx=i=>{const s=Mi(i,"info"),e=yr(),n=Kx(s),a=Yx(s),t=Xx(s),l=Zx(s),r=xf(),h=z(()=>({author:n.value,category:a.value,date:l.value,localizedDate:s.value.localizedDate??"",tag:t.value,isOriginal:s.value.isOriginal??!1,readingTime:s.value.readingTime??null,readingTimeLocale:s.value.readingTime&&r.value?Df(s.value.readingTime,r.value):null,pageview:i.path})),p=z(()=>e.value.articleInfo);return{info:h,items:p}},la=()=>{const i=Vi();return z(()=>i.value.blogLocales)},k8=ti({name:"SocialMedias",setup(){const i=yr(),s=Xs(),e=z(()=>Pa(i.value.medias??{}).map(([n,a])=>typeof a=="string"?{name:n,icon:$x[n],link:a}:{name:n,...a}));return()=>e.value.length?B("div",{class:"vp-social-medias"},e.value.map(({name:n,icon:a,link:t})=>B("a",{class:"vp-social-media",href:t,rel:"noopener noreferrer",target:"_blank","aria-label":n||"",...s.value?{}:{"data-balloon-pos":"up"},innerHTML:aa(a)?`<img class="vp-social-media-icon ${n}-icon" src="${a}">`:a}))):null}}),nc=ti({name:"BloggerInfo",setup(){const i=la(),s=yr(),e=wt(),n=Vi(),a=gr(),t=Br(),l=Ar(),r=sc(),h=Dn(),p=z(()=>{var u;return s.value.name??((u=Sl(n.value.author)[0])==null?void 0:u.name)??e.value.title}),k=z(()=>s.value.avatar??n.value.logo),d=z(()=>s.value.intro);return()=>{const{article:u,category:o,tag:c,timeline:A}=i.value,g=[[a.value.path,a.value.items.length,u],[t.value.path,Ge(t.value.map).length,o],[l.value.path,Ge(l.value.map).length,c],[r.value.path,r.value.items.length,A]];return B("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[B("div",{class:"vp-blogger",...d.value?{"aria-label":i.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>{h(d.value)}}:{}},[k.value?B("img",{class:"vp-blogger-avatar",src:Gi(k.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,p.value?B("div",{class:"vp-blogger-name",property:"name"},p.value):null,s.value.description?B("div",{class:"vp-blogger-description",innerHTML:s.value.description}):null,d.value?B("meta",{property:"url",content:Gi(d.value)}):null]),B("div",{class:"vp-blog-counts"},g.map(([f,m,y])=>B(ms,{class:"vp-blog-count",to:f},()=>[B("div",{class:"count"},m),B("div",y)]))),B(k8)])}}}),ac=()=>B(Yi,{name:"category"},()=>B("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));ac.displayName="CategoryIcon";const tc=()=>B(Yi,{name:"tag"},()=>B("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));tc.displayName="TagIcon";const lc=()=>B(Yi,{name:"timeline"},()=>B("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));lc.displayName="TimelineIcon";const d8=()=>B(Yi,{name:"slides"},()=>B("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));d8.displayName="SlideIcon";const o8=()=>B(Yi,{name:"sticky"},()=>[B("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);o8.displayName="StickyIcon";const rc=()=>B(Yi,{name:"article"},()=>B("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));rc.displayName="ArticleIcon";const _o=()=>B(Yi,{name:"slide-down"},()=>B("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));_o.displayName="SlideDownIcon";const u8=()=>B(Yi,{name:"lock"},()=>B("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));u8.displayName="LockIcon";const Qx=ti({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(i,{slots:s}){const e=Mi(i,"info"),{info:n,items:a}=Jx(i),t=De();return()=>{var o,c,A;const{title:l,["type"]:r,["isEncrypted"]:h=!1,["cover"]:p,["excerpt"]:k,["sticky"]:d}=e.value,u=n.value;return B("div",{class:"vp-article-wrapper",onClick:g=>{var f;(f=g.target)!=null&&f.matches("summary")||(g.preventDefault(),t.push(i.path))}},B("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((o=s.cover)==null?void 0:o.call(s,{cover:p}))??(p?[B("img",{class:"vp-article-cover",src:Gi(p),alt:"",loading:"lazy"}),B("meta",{property:"image",content:Gi(p)})]:[]),d?B(o8):null,B(ms,{to:i.path},()=>{var g;return((g=s.title)==null?void 0:g.call(s,{title:l,isEncrypted:h,type:r}))??B("header",{class:"vp-article-title"},[h?B(u8):null,r==="slide"?B(d8):null,B("span",{property:"headline"},l)])}),((c=s.excerpt)==null?void 0:c.call(s,{excerpt:k}))??(k?B("div",{class:"vp-article-excerpt",innerHTML:k}):null),B("hr",{class:"vp-article-hr"}),((A=s.info)==null?void 0:A.call(s,{info:u}))??B(i8,{info:u,...a.value?{items:a.value}:{}})]))}}}),iw='<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>',sw=ti({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(i,{emit:s}){let e;const n=Vi(),a=Z(""),t=z(()=>n.value.paginationLocales),l=z(()=>Math.ceil(i.total/i.perPage)),r=z(()=>!!l.value&&l.value!==1),h=z(()=>l.value<7?!1:i.current>4),p=z(()=>l.value<7?!1:i.current<l.value-3),k=z(()=>{const{current:o}=i;let c=1,A=l.value;const g=[];l.value>=7&&(o<=4&&o<l.value-3?(c=1,A=5):o>4&&o>=l.value-3?(A=l.value,c=l.value-4):l.value>7&&(c=o-2,A=o+2));for(let f=c;f<=A;f++)g.push(f);return g}),d=o=>{s("updateCurrentPage",o)},u=o=>{const c=parseInt(o,10);c<=l.value&&c>0?d(c):e.pop(`${iw}${t.value.errorText.replace(/\$page/gu,l.value.toString())}`)};return Di(()=>{e=new E9}),()=>B("div",{class:"vp-pagination"},r.value?B("nav",{class:"vp-pagination-list"},[B("div",{class:"vp-pagination-number "},[i.current>1?B("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>{d(i.current-1)}},t.value.prev):null,h.value?[B("div",{role:"navigation",onClick:()=>{d(1)}},1),B("div",{class:"ellipsis"},"...")]:null,k.value.map(o=>B("div",{key:o,class:{active:i.current===o},role:"navigation",onClick:()=>{d(o)}},o)),p.value?[B("div",{class:"ellipsis"},"..."),B("div",{role:"navigation",onClick:()=>{d(l.value)}},l.value)]:null,i.current<l.value?B("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>{d(i.current+1)}},t.value.next):null]),B("div",{class:"vp-pagination-nav"},[B("label",{for:"navigation-text"},`${t.value.navigate}: `),B("input",{id:"navigation-text",value:a.value,onInput:({target:o})=>{a.value=o.value},onKeydown:o=>{o.key==="Enter"&&(o.preventDefault(),u(a.value))}}),B("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:t.value.action,onClick:()=>{u(a.value)}},t.value.action)])]):[])}}),hc=ti({name:"ArticleList",props:{items:{type:Array,required:!0}},setup(i){const s=Ke(),e=De(),n=la(),a=yr(),t=Z(1),l=z(()=>a.value.articlePerPage??10),r=z(()=>i.items.slice((t.value-1)*l.value,t.value*l.value)),h=async p=>{t.value=p;const k={...s.query};!(k.page===p.toString()||p===1&&!k.page)&&(p===1?delete k.page:k.page=p.toString(),await e.push({path:s.path,query:k}))};return Di(()=>{const{page:p}=s.query;h(p?Number(p):1),bi(t,()=>{const k=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,k)},100)})}),()=>B("div",{id:"article-list",class:"vp-article-list",role:"feed"},r.value.length?[...r.value.map(({info:p,path:k},d)=>B(Oi,{appear:!0,delay:d*.04},()=>B(Qx,{key:k,info:p,path:k}))),B(sw,{current:t.value,perPage:l.value,total:i.items.length,onUpdateCurrentPage:h})]:B("h2",{class:"vp-empty-hint"},n.value.empty))}}),ew=ti({name:"ArticlesInfo",setup(){const i=gr(),s=la(),e=ec(),n=Dn(),a=z(()=>i.value.items.length),t=z(()=>e.value.items);return()=>B(Oi,()=>B("div",{class:"vp-star-article-wrapper"},[B("div",{class:"title",onClick:()=>{n(i.value.path)}},[B(rc),B("span",{class:"num"},a.value),s.value.article]),B("hr"),t.value.length?B("ul",{class:"vp-star-articles"},t.value.map(({info:l,path:r},h)=>B(Oi,{appear:!0,delay:.08*(h+1)},()=>B("li",{class:"vp-star-article"},B(ms,{to:r},()=>l.title))))):B("div",{class:"vp-star-article-empty"},s.value.empty.replace("$text",s.value.star))]))}}),c8=ti({name:"CategoryList",setup(){const i=Bs(),s=Br();return()=>B("ul",{class:"vp-category-list"},Pa(s.value.map).sort(([,e],[,n])=>n.items.length-e.items.length).map(([e,{path:n,items:a}])=>B("li",{class:"vp-category-item"},B(ms,{class:["vp-category",`color${kr(e,Number(Rt.colorNumber))}`,{active:n===i.value.path}],to:n},()=>[e,B("span",{class:"vp-category-count"},a.length)]))))}}),nw=ti({name:"CategoriesInfo",setup(){const i=la(),s=Br(),e=Dn(),n=z(()=>Ge(s.value.map).length);return()=>B("div",{class:"vp-category-wrapper"},[n.value?[B("div",{class:"title",onClick:()=>{e(s.value.path)}},[B(ac),B("span",{class:"num"},n.value),i.value.category]),B("hr"),B(Oi,{delay:.04},()=>B(c8))]:B("div",{class:"vp-category-empty"},i.value.empty.replace("$text",i.value.category))])}}),g8=ti({name:"TagList",setup(){const i=ji(),s=Ar(),e=n=>{var a;return n===((a=i.value.blog)==null?void 0:a.name)};return()=>B("ul",{class:"vp-tag-list"},Pa(s.value.map).sort(([,n],[,a])=>a.items.length-n.items.length).map(([n,{path:a,items:t}])=>B("li",{class:"vp-tag-item"},B(ms,{class:["vp-tag",`color${kr(n,Number(Rt.colorNumber))}`,{active:e(n)}],to:a},()=>[n,B("span",{class:"vp-tag-count"},t.length)]))))}}),aw=ti({name:"TagsInfo",setup(){const i=la(),s=Ar(),e=Dn(),n=z(()=>Ge(s.value.map).length);return()=>B("div",{class:"vp-tag-wrapper"},[n.value?[B("div",{class:"title",onClick:()=>{e(s.value.path)}},[B(tc),B("span",{class:"num"},n.value),i.value.tag]),B("hr"),B(Oi,{delay:.04},()=>B(g8))]:B("div",{class:"vp-tag-empty"},i.value.empty.replace("$text",i.value.tag))])}}),tw=ti({name:"TimelineList",setup(){const i=la(),s=sc(),e=Dn();return()=>B("div",{class:"timeline-list-wrapper"},[B("div",{class:"timeline-list-title",onClick:()=>{e(s.value.path)}},[B(lc),B("span",{class:"num"},s.value.items.length),i.value.timeline]),B("hr"),B("div",{class:"timeline-content"},B("ul",{class:"timeline-list"},s.value.config.map(({year:n,items:a},t)=>B(Oi,{appear:!0,delay:.08*(t+1)},()=>B("li",[B("h3",{class:"timeline-year"},n),B("ul",{class:"timeline-year-wrapper"},a.map(({date:l,info:r,path:h})=>B("li",{class:"timeline-item"},[B("span",{class:"timeline-date"},l),B(ms,{class:"timeline-title",to:h},()=>r.title)])))])))))])}}),lw={article:rc,category:ac,tag:tc,timeline:lc},B8=ti({name:"InfoList",setup(){const i=la(),s=Z("article");return()=>B("div",{class:"vp-blog-infos"},[B("div",{class:"vp-blog-type-switcher"},Pa(lw).map(([e,n])=>B("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{s.value=e}},B("div",{class:["vp-blog-type-icon-wrapper",{active:s.value===e}],"aria-label":i.value[e],"data-balloon-pos":"up"},B(n))))),B(Oi,()=>s.value==="article"?B(ew):s.value==="category"?B(nw):s.value==="tag"?B(aw):B(tw))])}}),mp=ti({name:"BlogWrapper",slots:Object,setup(i,{slots:s}){const{isMobile:e}=dr();return()=>[B(cr),B(ur,{noSidebar:!0,noToc:!0},{default:()=>s.default(),navScreenBottom:()=>B(nc),sidebar:e.value?()=>B(B8):null})]}}),fr=()=>B("aside",{class:"vp-blog-info-wrapper"},[B(Oi,()=>B(nc)),B(Oi,{delay:.04},()=>B(B8))]);fr.displayName="InfoPanel";const rw=ti({name:"BlogCategory",setup(){const i=Bs(),s=ji(),e=Br(),n=Ar(),a=z(()=>s.value.blog),t=z(()=>{var h;if(((h=a.value)==null?void 0:h.type)!=="category")return null;const{name:l,key:r}=a.value;return l?r==="category"?e.value.map[l].items:r==="tag"?n.value.map[l].items:null:null});return()=>B(mp,()=>B("div",{class:"vp-page vp-blog"},B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[B(Oi,()=>{var l,r;return((l=a.value)==null?void 0:l.key)==="category"?B(c8):((r=a.value)==null?void 0:r.key)==="tag"?B(g8):null}),t.value?B(Oi,{appear:!0,delay:.24},()=>B(hc,{key:i.value.path,items:t.value})):null]),B(Oi,{delay:.16},()=>B(fr,{key:"blog"}))])))}}),hw="//theme-hope-assets.vuejs.press/hero/default.jpg",pw=ti({name:"BlogHero",slots:Object,setup(i,{slots:s}){const e=ji(),n=wt(),a=Ti(),t=z(()=>e.value.heroFullScreen??!1),l=z(()=>{const{heroText:h,heroImage:p,heroImageDark:k,heroAlt:d,heroImageStyle:u,tagline:o}=e.value;return{text:h??(n.value.title||"Hello"),tagline:o??"",image:p?Gi(p):null,imageDark:k?Gi(k):null,alt:d??h??"",imageStyle:u,isFullScreen:t.value}}),r=z(()=>{const{bgImage:h,bgImageDark:p,bgImageStyle:k}=e.value;return{image:ls(h)?Gi(h):h===!1?null:hw,imageDark:ls(p)?Gi(p):null,bgStyle:k,isFullScreen:t.value}});return()=>{var h,p;return e.value.hero===!1?null:B("div",{ref:a,class:["vp-blog-hero",{fullscreen:t.value,"no-bg":!r.value.image}]},[((h=s.bg)==null?void 0:h.call(s,r.value))??[r.value.image?B("div",{class:["vp-blog-mask",{light:r.value.imageDark}],style:[{background:`url(${r.value.image}) center/cover no-repeat`},r.value.bgStyle]}):null,r.value.imageDark?B("div",{class:"vp-blog-mask dark",style:[{background:`url(${r.value.imageDark}) center/cover no-repeat`},r.value.bgStyle]}):null],((p=s.info)==null?void 0:p.call(s,l.value))??[B(Oi,{appear:!0,type:"group",delay:.04},()=>{const{image:k,imageDark:d,imageStyle:u,alt:o}=l.value;return[k?B("img",{key:"light",class:["vp-blog-hero-image",{light:d}],style:u,src:k,alt:o}):null,d?B("img",{key:"dark",class:"vp-blog-hero-image dark",style:u,src:d,alt:o}):null]}),B(Oi,{appear:!0,delay:.08},()=>l.value.text?B("h1",{class:"vp-blog-hero-title"},l.value.text):null),B(Oi,{appear:!0,delay:.12},()=>l.value.tagline?B("p",{class:"vp-blog-hero-description",innerHTML:l.value.tagline}):null)],l.value.isFullScreen?B("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:a.value.clientHeight,behavior:"smooth"})}},[B(_o),B(_o)]):null])}}}),kw=ti({name:"ProjectPanel",props:{items:{type:Array,required:!0}},setup(i){const s=Xs(),e=Dn();return()=>B("div",{class:"vp-project-panel"},i.items.map(({icon:n,link:a,name:t,desc:l,background:r})=>B("a",{class:["vp-project-card",{[`color${kr(t,Number(Rt.colorNumber))}`]:!s.value&&!r}],...r?{style:r}:{},href:dp(a)?Gi(a):a,onClick:h=>{e(a),h.preventDefault()}},[n?B(Wi("VPIcon"),{class:"vp-project-icon",icon:n}):null,B("div",{class:"vp-project-name"},t),B("div",{class:"vp-project-desc"},l)])))}}),dw=ti({name:"BlogHomePage",setup(){const i=gr(),s=ji(),e=z(()=>s.value.projects??[]);return()=>B("div",{class:"vp-page vp-blog-home"},[B(pw),B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[e.value.length?B(Oi,{appear:!0,delay:.16},()=>B(kw,{items:e.value})):null,B(Oi,{appear:!0,delay:.24},()=>B(hc,{items:i.value.items}))]),B(Oi,{appear:!0,delay:.16},()=>B(fr,{key:"blog"}))]),B(Oi,{appear:!0,delay:.28},()=>B(Ap))])}}),A8=()=>B(mp,()=>B(dw));A8.displayName="BlogHome";var ow=[];const uw=ti({name:"ArticleType",setup(){const i=Bs(),s=Be(),e=gr(),n=ec(),a=la(),t=z(()=>[{text:a.value.all,path:e.value.path},{text:a.value.star,path:n.value.path},...ow.map(({key:l,path:r})=>{const h=r.replace(/^\//,s.value);return{text:a.value[l]??Ks(h).meta.title??l,path:h}})]);return()=>B("ul",{class:"vp-article-type-wrapper"},t.value.map(l=>B("li",{class:["vp-article-type",{active:l.path===i.value.path}]},B(ms,{to:l.path},()=>l.text))))}}),cw=ti({name:"BlogType",setup(){const i=fp(),s=ji(),e=Bs(),n=gr(),a=ec(),t=z(()=>{const l=s.value.blog;return(l==null?void 0:l.type)!=="type"||!l.key?n.value.items:l.key==="star"?a.value.items:i.value.items});return()=>B(mp,()=>B("div",{class:"vp-page vp-blog"},B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[B(Oi,()=>B(uw)),B(Oi,{appear:!0,delay:.24},()=>B(hc,{key:e.value.path,items:t.value}))]),B(Oi,{delay:.16},()=>B(fr,{key:"blog"}))])))}}),gw=ti({name:"TimelineItems",setup(){const i=yr(),s=Vi(),e=sc(),n=z(()=>i.value.timeline??s.value.blogLocales.timelineTitle),a=z(()=>e.value.config.map(({year:t})=>({title:t.toString(),level:2,slug:t.toString(),children:[]})));return()=>B("div",{class:"timeline-wrapper"},B("ul",{class:"timeline-content"},[B(Oi,()=>B("li",{class:"motto"},n.value)),B(e8,{items:a.value}),e.value.config.map(({year:t,items:l},r)=>B(Oi,{appear:!0,delay:.08*(r+1),type:"group"},()=>[B("h3",{key:"title",id:t,class:"timeline-year-title"},B("span",t)),B("li",{key:"content",class:"timeline-year-list"},[B("ul",{class:"timeline-year-wrapper"},l.map(({date:h,info:p,path:k})=>B("li",{class:"timeline-item"},[B("span",{class:"timeline-date"},h),B(ms,{class:"timeline-title",to:k},()=>p.title)])))])]))]))}}),y8=()=>B(mp,()=>B("div",{class:"vp-page vp-blog"},B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[B(Oi,{appear:!0,delay:.24},()=>B(gw))]),B(Oi,{delay:.16},()=>B(fr,{key:"blog"}))])));y8.displayName="Timeline";H9(i=>{const s=i.title,e=i.index!==!1,n=i.icon;return e?{title:s,content:n?()=>[B(Wi("VPIcon"),{icon:n}),s]:null,order:i.order,index:i.index}:null});const Bw={enhance:({app:i,router:s})=>{const{scrollBehavior:e}=s.options;s.options.scrollBehavior=async(...n)=>(await mo.wait(),e(...n)),JD(i),i.component("BloggerInfo",nc),i.component("SocialMedias",k8)},setup:()=>{QD(),UD(),Wx()},layouts:{Layout:yp,NotFound:Mx,BlogCategory:rw,BlogHome:A8,BlogType:cw,Timeline:y8}},Aw=Object.freeze(Object.defineProperty({__proto__:null,default:Bw},Symbol.toStringTag,{value:"Module"}));function bB(i){var s;if(i.querySelector(".ab-super-width")){const e=i.querySelectorAll(".ab-note");for(const a of e)if(a.querySelector(".ab-super-width")){const t=a.parentNode;t&&t.classList.contains("ab-replace")&&t.classList.add("ab-super-width-p")}const n=document.querySelectorAll(".app-container .workspace-leaf");for(const a of n)a.style.setProperty("--ab-width-outer",(a.offsetWidth-40).toString()+"px")}if(i.querySelector(".ab-nodes-node")){const e=document.querySelectorAll(".ab-nodes.min .ab-nodes-node"),n=i.querySelectorAll(".ab-nodes-node");for(const a of n){const t=a.querySelector(".ab-nodes-content");if(!t)continue;const l=a.querySelector(".ab-nodes-children");if(!l)continue;const r=l.querySelector(".ab-nodes-bracket");if(!r)continue;const h=l.querySelector(".ab-nodes-bracket2");if(!h)continue;const p=l.childNodes;if(p.length<3){r.style.setProperty("display","none"),h.style.setProperty("display","none");continue}const k=p[2],d=p[p.length-1],u=k.querySelector(".ab-nodes-content"),o=d.querySelector(".ab-nodes-content");let c=0,A=(k.offsetHeight+d.offsetHeight)/2;p.length==3?(c=u.offsetHeight-20>20?u.offsetHeight-20:20,h.style.cssText=`
          height: ${c}px;
          top: calc(50% - ${c/2}px);
        `):h.style.cssText=`
          height: calc(100% - ${A}px);
          top: ${k.offsetHeight/2}px;
        `,Array.prototype.includes.call(e,a)&&(p.length==3?r.style.cssText=`
            display: block;
            top: calc(50% + ${t.offsetHeight/2}px - 3px);
            clip-path: circle(40% at 50% 40%);
          `:r.setAttribute("display","none"),p.length==3&&t.offsetHeight==u.offsetHeight?h.style.cssText=`
            height: 1px;
            top: calc(50% + ${t.offsetHeight/2}px - 1px);
            width: 18px; /* 可以溢出点 */
            border-radius: 0;
            border: none;
            border-bottom: 1px solid var(--node-color);
          `:(p.length==3?(c=o.offsetHeight/2-t.offsetHeight/2,h.style.setProperty("height",`${c}px`),h.style.setProperty("top",`calc(50% + ${t.offsetHeight/2}px)`),h.style.setProperty("border-radius","0 0 0 10px"),h.style.setProperty("border-top","0")):(A=k.offsetHeight/2+u.offsetHeight/2+d.offsetHeight/2-o.offsetHeight/2,h.style.setProperty("height",`calc(100% - ${A}px + 1px)`),h.style.setProperty("top",`${k.offsetHeight/2+u.offsetHeight/2-1}px`)),h.style.setProperty("width","20px")))}}if(i.querySelector(".ab-items.ab-lay-vfall:not(.js-waterfall):not(.ab-lay-hfall):not(.ab-lay-grid)")){const e=i.querySelectorAll(".ab-items.ab-lay-vfall:not(.js-waterfall):not(.ab-lay-hfall):not(.ab-lay-grid)");for(const n of e){n.classList.add("js-waterfall");const a=n.querySelectorAll(".ab-items-item"),t=parseInt(window.getComputedStyle(n).getPropertyValue("column-count"));let l;t&&!isNaN(t)&&t>0?l=t:n.classList.contains("ab-col-auto")&&a.length<=4?(l=a.length,n.classList.add("ab-col"+l)):(l=4,n.classList.add("ab-col"+l));const r=[],h=[];for(let k=0;k<l;k++)r.push(0),h.push([]);for(const k of a){const d=Math.min.apply(null,r),u=r.indexOf(d),o=parseInt(window.getComputedStyle(k).getPropertyValue("height"));r[u]+=o&&!isNaN(o)&&o>0?o:10,h[u].push(k)}const p=l-a.length%l;if(p!=4)for(let k=0;k<p;k++){const d=document.createElement("div");d.classList.add(".ab-items-item.placeholder"),d.setAttribute("style","height: 20px");const u=Math.min.apply(null,r),o=r.indexOf(u);r[o]+=20,h[o].push(d)}n.innerHTML="";for(let k=0;k<l;k++)for(const d of h[k])n.appendChild(d)}}if(i.querySelector(".ab-markmap-div")){const e=i;let n="";e.tagName==="DIV"&&(n=((s=e.querySelector(".ab-markmap-div"))==null?void 0:s.id)||"");let a;n?a=document.querySelectorAll("#"+n):a=document.querySelectorAll(".ab-markmap-div");for(const t of a){const l=t.querySelector("svg"),r=l==null?void 0:l.querySelector("g");if(l&&r){const h=r.getBBox().height/t.offsetWidth;l.setAttribute("style",`height:${r.getBBox().height*h+40}px`),yw(i)}}}}function yw(i){var s;if(i.querySelector(".ab-markmap-svg")){console.log("  - markmap_event");let e=document.querySelector('script[script-id="ab-markmap-script"]');e&&e.remove();const n=i;let a="";n.tagName==="DIV"&&(a=((s=n.querySelector(".ab-markmap-svg"))==null?void 0:s.id)||""),e=document.createElement("script"),document.head.appendChild(e),e.type="module",e.setAttribute("script-id","ab-markmap-script"),e.textContent=`
    import { Markmap, } from 'https://jspm.dev/markmap-view';
    const markmapId = "${a||""}";
    let mindmaps;
    if (markmapId) {
      mindmaps = document.querySelectorAll('#' + markmapId);
    } else {
      mindmaps = document.querySelectorAll('.ab-markmap-svg'); // 注意一下这里的选择器
    }
    for(const mindmap of mindmaps) {
      mindmap.innerHTML = "";
      Markmap.create(mindmap,null,JSON.parse(mindmap.getAttribute('data-json')));
    }`}}const CB=i=>new Promise(s=>setTimeout(s,i)),fw=Ts({setup(){mw()}});function mw(i=1e3,s=!1){const e=Bs(),n=!0;bi(()=>[e.value.path,n],async()=>{await Hi(),await CB(i/4),bB(document),await CB(i/4*3),bB(document)},{immediate:!0})}const vw=Object.freeze(Object.defineProperty({__proto__:null,default:fw},Symbol.toStringTag,{value:"Module"}));let $n={app:null,ctx:null,cahce_workspace:null,isDebug:!1,md:null};function Fw(i){if(typeof i=="string")if(i=="demo")i=JSON.parse(JSON.stringify(Ew));else if(i=="demo2")i=JSON.parse(JSON.stringify(bw));else if(i=="demo3")i=JSON.parse(JSON.stringify(Cw));else return{code:-1,msg:"error demo: "+i,data:{}};return{code:0,msg:"",data:i}}const Ew={nodes:[{id:"1",type:"input",position:{x:250,y:5},data:{label:"Node 11"}},{id:"2",position:{x:100,y:100},data:{label:"Node 12"}},{id:"3",type:"output",position:{x:400,y:200},data:{label:"Node 13"}},{id:"4",type:"special",position:{x:600,y:100},data:{label:"Node 14",hello:"world"}}],edges:[{id:"e1->2",source:"1",target:"2"},{id:"e2->3",source:"2",target:"3",animated:!0},{id:"e3->4",type:"special",source:"3",target:"4",data:{hello:"world"}}]},bw={nodes:[{id:"1",position:{x:0,y:0},type:"process"},{id:"2",position:{x:0,y:0},type:"process"},{id:"2a",position:{x:0,y:0},type:"process"},{id:"2b",position:{x:0,y:0},type:"process"},{id:"2c",position:{x:0,y:0},type:"process"},{id:"2d",position:{x:0,y:0},type:"process"},{id:"3",position:{x:0,y:0},type:"process"},{id:"4",position:{x:0,y:0},type:"process"},{id:"5",position:{x:0,y:0},type:"process"},{id:"6",position:{x:0,y:0},type:"process"},{id:"7",position:{x:0,y:0},type:"process"}],edges:[{id:"e1-2",source:"1",target:"2",type:"animation",animated:!0},{id:"e1-3",source:"1",target:"3",type:"animation",animated:!0},{id:"e2-2a",source:"2",target:"2a",type:"animation",animated:!0},{id:"e2-2b",source:"2",target:"2b",type:"animation",animated:!0},{id:"e2-2c",source:"2",target:"2c",type:"animation",animated:!0},{id:"e2c-2d",source:"2c",target:"2d",type:"animation",animated:!0},{id:"e3-7",source:"3",target:"4",type:"animation",animated:!0},{id:"e4-5",source:"4",target:"5",type:"animation",animated:!0},{id:"e5-6",source:"5",target:"6",type:"animation",animated:!0},{id:"e5-7",source:"5",target:"7",type:"animation",animated:!0}]},Cw={nodes:[{id:"1",type:"color-selector",data:{color:"#6F3381"},position:{x:0,y:50}},{id:"2",type:"color-output",position:{x:350,y:114},targetPosition:"left"}],edges:[{id:"e1a-2",source:"1",sourceHandle:"a",target:"2",animated:!0,style:{stroke:"#6F3381"}}]};function _w(i){if(typeof i=="string")if(i=="demo")i=JSON.parse(JSON.stringify(Dw));else return{code:-1,msg:"error demo: "+i,data:{}};try{let s=[];i.nodes.forEach(t=>{s.push({id:t.id,position:{x:t.x,y:t.y},data:{label:t.hasOwnProperty("text")?t.text:t.hasOwnProperty("file")?t.file:"Error Type: "+t.type},type:"obcanvas"})});let n=[];return i.edges.forEach(t=>{n.push({id:t.id,source:t.fromNode,target:t.toNode,sourceHandle:t.fromSide,targetHandle:t.toSide,markerEnd:"arrowclosed"})}),{code:0,msg:"",data:{nodes:s,edges:n}}}catch(s){return{code:-1,msg:"error: obcanvas json parse fail: "+s,data:{}}}}const Dw={nodes:[{id:"d1acdb5136ffb1f1",x:25,y:70,width:250,height:60,type:"text",text:`## Title

**Test** *1*
`},{id:"f7dc36d69da1bb36",x:330,y:70,width:250,height:60,type:"text",text:`~~Test~~ ==2==
`}],edges:[{id:"fc3f1bc43902aac9",fromNode:"d1acdb5136ffb1f1",fromSide:"right",toNode:"f7dc36d69da1bb36",toSide:"left"}]};function xw(i){if(typeof i=="string")if(i=="demo")i=JSON.parse(JSON.stringify(ww));else if(i=="demo2")i=JSON.parse(JSON.stringify(Tw));else return{code:-1,msg:"error demo: "+i,data:{}};try{let s=[];i.nodes.forEach(h=>{s.push({id:""+h.id,position:{x:h.pos[0],y:h.pos[1]-30},data:{label:h.hasOwnProperty("title")?h.title:h.type,type:h.type,inputs:h.inputs,outputs:h.outputs,widgets_values:h.widgets_values},...h.hasOwnProperty("size")?{width:h.size[0]+"px",height:h.size[1]+30+"px"}:{},type:"comfyui"})});let n=[];const a=i.links,t=["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff1a","#00ff66","#00ffb3","#00ffff","#00b3ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004c"];a.forEach(h=>{const p=h[5].toLowerCase().charCodeAt(0)%20;n.push({id:""+h[0],style:{stroke:t[p]},source:""+h[1],sourceHandle:"source-"+h[2],target:""+h[3],targetHandle:"target-"+h[4]})});const l=i.groups;let r=0;return l.forEach(h=>{s.push({id:"group-"+r++,position:{x:h.bounding[0],y:h.bounding[1]},width:h.bounding[2]+"px",height:h.bounding[3]+30+"px",data:{label:h.title},...h.hasOwnProperty("color")?{style:{backgroundColor:h.color+"44",zIndex:-1}}:{},type:"comfyui-group"})}),{code:0,msg:"",data:{nodes:s,edges:n}}}catch(s){return{code:-1,msg:"error: comfyui json parse fail: "+s,data:{}}}}const ww={last_node_id:9,last_link_id:9,nodes:[{id:6,type:"CLIPTextEncode",pos:{0:373,1:47},size:{0:422.84503173828125,1:164.31304931640625},flags:{},order:2,mode:0,inputs:[{name:"clip",type:"CLIP",link:3}],outputs:[{name:"CONDITIONING",type:"CONDITIONING",links:[4],slot_index:0}],properties:{"Node name for S&R":"CLIPTextEncode"},widgets_values:["beautiful scenery nature glass bottle landscape, , purple galaxy bottle,"]},{id:7,type:"CLIPTextEncode",pos:{0:408,1:569},size:{0:425.27801513671875,1:180.6060791015625},flags:{},order:3,mode:0,inputs:[{name:"clip",type:"CLIP",link:5}],outputs:[{name:"CONDITIONING",type:"CONDITIONING",links:[6],slot_index:0}],properties:{"Node name for S&R":"CLIPTextEncode"},widgets_values:["text, watermark"]},{id:5,type:"EmptyLatentImage",pos:{0:489,1:809},size:{0:315,1:106},flags:{},order:0,mode:0,inputs:[],outputs:[{name:"LATENT",type:"LATENT",links:[2],slot_index:0}],properties:{"Node name for S&R":"EmptyLatentImage"},widgets_values:[512,512,1]},{id:8,type:"VAEDecode",pos:{0:1325,1:336},size:{0:210,1:46},flags:{},order:5,mode:0,inputs:[{name:"samples",type:"LATENT",link:7},{name:"vae",type:"VAE",link:8}],outputs:[{name:"IMAGE",type:"IMAGE",links:[9],slot_index:0}],properties:{"Node name for S&R":"VAEDecode"},widgets_values:[]},{id:9,type:"SaveImage",pos:{0:1577,1:335},size:[210,270],flags:{},order:6,mode:0,inputs:[{name:"images",type:"IMAGE",link:9}],outputs:[],properties:{},widgets_values:["ComfyUI"]},{id:3,type:"KSampler",pos:{0:941,1:377},size:{0:315,1:262},flags:{},order:4,mode:0,inputs:[{name:"model",type:"MODEL",link:1},{name:"positive",type:"CONDITIONING",link:4},{name:"negative",type:"CONDITIONING",link:6},{name:"latent_image",type:"LATENT",link:2}],outputs:[{name:"LATENT",type:"LATENT",links:[7],slot_index:0}],properties:{"Node name for S&R":"KSampler"},widgets_values:[984943483018319,"randomize",20,8,"euler","normal",1]},{id:4,type:"CheckpointLoaderSimple",pos:{0:19,1:438},size:{0:315,1:98},flags:{},order:1,mode:0,inputs:[],outputs:[{name:"MODEL",type:"MODEL",links:[1],slot_index:0},{name:"CLIP",type:"CLIP",links:[3,5],slot_index:1},{name:"VAE",type:"VAE",links:[8],slot_index:2}],properties:{"Node name for S&R":"CheckpointLoaderSimple"},widgets_values:["abyssorangemix2SFW_abyssorangemix2Sfw.safetensors"]}],links:[[1,4,0,3,0,"MODEL"],[2,5,0,3,3,"LATENT"],[3,4,1,6,0,"CLIP"],[4,6,0,3,1,"CONDITIONING"],[5,4,1,7,0,"CLIP"],[6,7,0,3,2,"CONDITIONING"],[7,3,0,8,0,"LATENT"],[8,4,2,8,1,"VAE"],[9,8,0,9,0,"IMAGE"]],groups:[],config:{},extra:{ds:{scale:1.1000000000000003,offset:[105.73286361205797,93.22187298366379]}},version:.4},Tw={last_node_id:103,last_link_id:127,nodes:[{id:52,type:"ADE_StandardUniformContextOptions",pos:[1689,830],size:{0:327.6000061035156,1:222},flags:{},order:0,mode:0,inputs:[{link:null,name:"prev_context",type:"CONTEXT_OPTIONS",label:"前上下文"},{link:null,name:"view_opts",type:"VIEW_OPTS",label:"视图设置"}],outputs:[{links:[40],name:"CONTEXT_OPTS",shape:3,type:"CONTEXT_OPTIONS",label:"上下文设置"}],properties:{"Node name for S&R":"ADE_StandardUniformContextOptions"},widgets_values:[16,1,4,"pyramid",!1,0,1]},{id:49,type:"ADE_ApplyAnimateDiffModelSimple",pos:[1703,675],size:{0:304.79998779296875,1:106},flags:{},order:11,mode:0,inputs:[{link:37,name:"motion_model",type:"MOTION_MODEL_ADE",label:"动态模型"},{link:null,name:"motion_lora",slot_index:1,type:"MOTION_LORA",label:"动态LoRA"},{link:null,name:"scale_multival",type:"MULTIVAL",label:"缩放多值"},{link:null,name:"effect_multival",type:"MULTIVAL",label:"效果多值"},{link:null,name:"ad_keyframes",type:"AD_KEYFRAMES",label:"AD关键帧"}],outputs:[{links:[38],name:"M_MODELS",shape:3,slot_index:0,type:"M_MODELS",label:"动态模型组"}],properties:{"Node name for S&R":"ADE_ApplyAnimateDiffModelSimple"}},{id:47,type:"ADE_LoadAnimateDiffModel",pos:[1190,600],size:{0:340,1:60},flags:{},order:1,mode:0,inputs:[{link:null,name:"ad_settings",type:"AD_SETTINGS",label:"AD设置"}],outputs:[{links:[37],name:"MOTION_MODEL",shape:3,slot_index:0,type:"MOTION_MODEL_ADE",label:"动态模型"}],properties:{"Node name for S&R":"ADE_LoadAnimateDiffModel"},widgets_values:["AnimateLCM\\sd15_t2v_beta.ckpt"]},{id:70,type:"ControlNetLoaderAdvanced",pos:[900,1390],size:{0:367.79998779296875,1:58},flags:{},order:2,mode:0,inputs:[{name:"timestep_keyframe",type:"TIMESTEP_KEYFRAME",link:null,label:"帧间隔"}],outputs:[{name:"CONTROL_NET",type:"CONTROL_NET",links:[75],shape:3,label:"ControlNet"}],properties:{"Node name for S&R":"ControlNetLoaderAdvanced"},widgets_values:["1.5\\control_v11p_sd15_openpose.pth"]},{id:69,type:"ACN_AdvancedControlNetApply",pos:[1680,1110],size:{0:355.20001220703125,1:266},flags:{},order:20,mode:0,inputs:[{name:"positive",type:"CONDITIONING",link:71,label:"正面条件"},{name:"negative",type:"CONDITIONING",link:72,label:"负面条件"},{name:"control_net",type:"CONTROL_NET",link:75,label:"ControlNet",slot_index:2},{name:"image",type:"IMAGE",link:119,label:"图像",slot_index:3},{name:"mask_optional",type:"MASK",link:null,label:"遮罩"},{name:"timestep_kf",type:"TIMESTEP_KEYFRAME",link:null,label:"帧间隔",slot_index:5},{name:"latent_kf_override",type:"LATENT_KEYFRAME",link:null,label:"Latent关键帧"},{name:"weights_override",type:"CONTROL_NET_WEIGHTS",link:null,label:"ControlNet权重"},{name:"model_optional",type:"MODEL",link:null,slot_index:8}],outputs:[{name:"positive",type:"CONDITIONING",links:[73],shape:3,label:"正面条件",slot_index:0},{name:"negative",type:"CONDITIONING",links:[74],shape:3,label:"负面条件",slot_index:1},{name:"model_opt",type:"MODEL",links:null,shape:3,slot_index:2}],properties:{"Node name for S&R":"ACN_AdvancedControlNetApply"},widgets_values:[1,0,1]},{id:60,type:"LCMScheduler",pos:[2150,1500],size:{0:315,1:82},flags:{},order:18,mode:0,inputs:[{link:66,name:"model",slot_index:0,type:"MODEL",label:"model"}],outputs:[{links:[55],name:"SIGMAS",shape:3,type:"SIGMAS",label:"SIGMAS"}],properties:{"Node name for S&R":"LCMScheduler"},widgets_values:[10,1]},{id:59,type:"SamplerLCMCycle",pos:[2170,1300],size:{0:315,1:130},flags:{},order:3,mode:0,outputs:[{links:[54],name:"SAMPLER",shape:3,type:"SAMPLER",label:"SAMPLER"}],properties:{"Node name for S&R":"SamplerLCMCycle"},widgets_values:[2,2,!1,0]},{id:63,type:"BNK_CLIPTextEncodeAdvanced",pos:[920,1140],size:{0:400,1:200},flags:{},order:16,mode:0,inputs:[{link:65,name:"clip",type:"CLIP",label:"CLIP"}],outputs:[{links:[72],name:"CONDITIONING",shape:3,type:"CONDITIONING",label:"条件",slot_index:0}],properties:{"Node name for S&R":"BNK_CLIPTextEncodeAdvanced"},widgets_values:["(worst quality:1.3), unfinished sketch, blurry, normal, mundane, boring, everyday, safe, ordinary, monochrome, greyscale, text, watermark","mean","A1111"]},{id:62,type:"BNK_CLIPTextEncodeAdvanced",pos:[920,860],size:{0:400,1:200},flags:{},order:15,mode:0,inputs:[{link:64,name:"clip",slot_index:0,type:"CLIP",label:"CLIP"}],outputs:[{links:[71],name:"CONDITIONING",shape:3,type:"CONDITIONING",label:"条件",slot_index:0}],properties:{"Node name for S&R":"BNK_CLIPTextEncodeAdvanced"},widgets_values:["(best quality, masterpiece), 1boy, mechano punk plaza, blue eyes, dancing","mean","A1111"]},{id:92,type:"IPAdapterApply",pos:[2672.018828230932,342.46597762958794],size:{0:315,1:258},flags:{},order:19,mode:0,inputs:[{name:"ipadapter",type:"IPADAPTER",link:103,label:"IP适配"},{name:"clip_vision",type:"CLIP_VISION",link:104,label:"CLIP视觉",slot_index:1},{name:"image",type:"IMAGE",link:105,label:"图像"},{name:"model",type:"MODEL",link:106,label:"模型"},{name:"attn_mask",type:"MASK",link:null,label:"关注层遮罩"}],outputs:[{name:"MODEL",type:"MODEL",links:[107],shape:3,label:"模型",slot_index:0}],properties:{"Node name for S&R":"IPAdapterApply"},widgets_values:[1,0,"original",0,1,!1]},{id:94,type:"CheckpointLoader|pysssss",pos:[1050,390],size:{0:410,1:122},flags:{},order:4,mode:0,outputs:[{name:"MODEL",type:"MODEL",links:[112],shape:3,label:"模型",slot_index:0},{name:"CLIP",type:"CLIP",links:[113],shape:3,label:"CLIP",slot_index:1},{name:"VAE",type:"VAE",links:null,shape:3,label:"VAE"}],properties:{"Node name for S&R":"CheckpointLoader|pysssss"},widgets_values:[{content:"sd1.5\\动漫\\darkSushiMixMix_225D.safetensors",image:"checkpoints/sd1.5\\动漫\\darkSushiMixMix_225D.jpg"},"[none]"]},{id:50,type:"ADE_UseEvolvedSampling",pos:[2130,870],size:{0:315,1:118},flags:{},order:14,mode:0,inputs:[{link:62,name:"model",slot_index:0,type:"MODEL",label:"模型"},{link:38,name:"m_models",slot_index:1,type:"M_MODELS",label:"动态模型组"},{link:40,name:"context_options",slot_index:2,type:"CONTEXT_OPTIONS",label:"上下文设置"},{link:null,name:"sample_settings",type:"SAMPLE_SETTINGS",label:"采样设置"}],outputs:[{links:[66,106],name:"MODEL",shape:3,slot_index:0,type:"MODEL",label:"模型"}],properties:{"Node name for S&R":"ADE_UseEvolvedSampling"},widgets_values:["lcm[100_ots]"]},{id:93,type:"CLIPVisionLoader",pos:[2160,400],size:{0:315,1:58},flags:{},order:5,mode:0,outputs:[{name:"CLIP_VISION",type:"CLIP_VISION",links:[104],shape:3,label:"CLIP视觉"}],properties:{"Node name for S&R":"CLIPVisionLoader"},widgets_values:["clip_h.pth"]},{id:64,type:"LoraLoader",pos:[1620,450],size:{0:460,1:150},flags:{},order:12,mode:0,inputs:[{link:112,name:"model",type:"MODEL",label:"模型"},{link:113,name:"clip",slot_index:1,type:"CLIP",label:"CLIP"}],outputs:[{links:[62],name:"MODEL",shape:3,slot_index:0,type:"MODEL",label:"模型"},{links:[64,65],name:"CLIP",shape:3,slot_index:1,type:"CLIP",label:"CLIP"}],properties:{"Node name for S&R":"LoraLoader"},widgets_values:["AnimateLCM\\sd15_lora_t2v_beta.safetensors",1,1]},{id:91,type:"IPAdapterModelLoader",pos:[1650,330],size:{0:450,1:60},flags:{},order:6,mode:0,outputs:[{name:"IPADAPTER",type:"IPADAPTER",links:[103],shape:3,label:"IP适配",slot_index:0}],properties:{"Node name for S&R":"IPAdapterModelLoader"},widgets_values:["IP\\1.5\\H\\ip-adapter-plus_sd15.bin"]},{id:58,type:"SamplerCustom",pos:[2550,910],size:{0:355.20001220703125,1:230},flags:{},order:21,mode:0,inputs:[{link:107,name:"model",type:"MODEL",label:"模型"},{link:73,name:"positive",slot_index:1,type:"CONDITIONING",label:"正面条件"},{link:74,name:"negative",slot_index:2,type:"CONDITIONING",label:"负面条件"},{link:54,name:"sampler",slot_index:3,type:"SAMPLER",label:"采样器"},{link:55,name:"sigmas",slot_index:4,type:"SIGMAS",label:"Sigmas"},{link:102,name:"latent_image",slot_index:5,type:"LATENT",label:"Latent"}],outputs:[{links:[],name:"output",shape:3,slot_index:0,type:"LATENT",label:"输出"},{links:[53],name:"denoised_output",shape:3,slot_index:1,type:"LATENT",label:"降噪输出"}],properties:{"Node name for S&R":"SamplerCustom"},widgets_values:[!0,0,"fixed",1.8]},{id:67,type:"VAELoader",pos:[2580,1200],size:{0:315,1:58},flags:{},order:7,mode:0,outputs:[{links:[69],name:"VAE",shape:3,type:"VAE"}],properties:{"Node name for S&R":"VAELoader"},widgets_values:["kl-f8-anime2.ckpt"]},{id:80,type:"EmptyLatentImage",pos:[1700,1540],size:{0:320,1:110},flags:{},order:17,mode:0,inputs:[{name:"width",type:"INT",link:86,widget:{name:"width"},label:"宽度"},{name:"height",type:"INT",link:87,widget:{name:"height"},label:"高度"},{name:"batch_size",type:"INT",link:88,widget:{name:"batch_size"},label:"批次大小"}],outputs:[{name:"LATENT",type:"LATENT",links:[102],shape:3,label:"Latent",slot_index:0}],properties:{"Node name for S&R":"EmptyLatentImage"},widgets_values:[512,512,1]},{id:81,type:"ImageSizeAndBatchSize",pos:[1270,1630],size:{0:210,1:66},flags:{},order:13,mode:0,inputs:[{name:"image",type:"IMAGE",link:120,label:"图像",slot_index:0}],outputs:[{name:"width",type:"INT",links:[86],shape:3,label:"宽度",slot_index:0},{name:"height",type:"INT",links:[87],shape:3,label:"高度",slot_index:1},{name:"batch_size",type:"INT",links:[88],shape:3,label:"批次大小",slot_index:2}],properties:{"Node name for S&R":"ImageSizeAndBatchSize"}},{id:97,type:"VHS_LoadVideo",pos:[910,1540],size:[210,360],flags:{},order:8,mode:0,inputs:[{name:"batch_manager",type:"VHS_BatchManager",link:null}],outputs:[{name:"IMAGE",type:"IMAGE",links:[119,120],shape:3,label:"图像",slot_index:0},{name:"frame_count",type:"INT",links:null,shape:3,label:"帧计数"},{name:"audio",type:"VHS_AUDIO",links:null,shape:3}],properties:{"Node name for S&R":"VHS_LoadVideo"},widgets_values:{video:"cxk_00003_.gif",force_rate:0,force_size:"Disabled",custom_width:512,custom_height:512,frame_load_cap:160,skip_first_frames:50,select_every_nth:1,"choose video to upload":"image",videopreview:{hidden:!1,paused:!1,params:{frame_load_cap:160,skip_first_frames:50,force_rate:0,filename:"cxk_00003_.gif",type:"input",format:"image/gif",select_every_nth:1}}}},{id:86,type:"LoadImage",pos:[2190,510],size:{0:250,1:310},flags:{},order:9,mode:0,outputs:[{name:"IMAGE",type:"IMAGE",links:[105],shape:3,label:"图像",slot_index:0},{name:"MASK",type:"MASK",links:null,shape:3,label:"遮罩"}],properties:{"Node name for S&R":"LoadImage"},widgets_values:["00581-420388937-((masterpiece)), (((best quality))), ((ultra-detailed)), (adult_2), ((illustration)), (cute detailed face_1.25),1girl, robotic u.png","image"]},{id:102,type:"VHS_LoadAudio",pos:[3320,1130],size:{0:315,1:82},flags:{},order:10,mode:0,outputs:[{name:"audio",type:"VHS_AUDIO",links:[126],shape:3,label:"音频",slot_index:0}],properties:{"Node name for S&R":"VHS_LoadAudio"},widgets_values:{audio_file:"C:\\ComfyUI_windows_portable\\ComfyUI\\input\\audio.mp3",seek_seconds:0}},{id:56,type:"VAEDecode",pos:[3e3,1030],size:{0:210,1:46},flags:{},order:22,mode:0,inputs:[{link:53,name:"samples",type:"LATENT",label:"Latent"},{link:69,name:"vae",slot_index:1,type:"VAE",label:"VAE"}],outputs:[{links:[121,127],name:"IMAGE",shape:3,slot_index:0,type:"IMAGE",label:"图像"}],properties:{"Node name for S&R":"VAEDecode"}},{id:103,type:"SaveImage",pos:[3372.826571377841,1362.901866566051],size:{0:315,1:58},flags:{},order:24,mode:0,inputs:[{name:"images",type:"IMAGE",link:127,label:"图像"}],properties:{},widgets_values:["111"]},{id:96,type:"VHS_VideoCombine",pos:[3790,1e3],size:[320,290],flags:{},order:23,mode:0,inputs:[{name:"images",type:"IMAGE",link:121,label:"图像"},{name:"audio",type:"VHS_AUDIO",link:126,label:"音频",slot_index:1},{name:"batch_manager",type:"VHS_BatchManager",link:null,label:"批次管理"}],outputs:[{name:"Filenames",type:"VHS_FILENAMES",links:null,shape:3,label:"文件名"}],properties:{"Node name for S&R":"VHS_VideoCombine"},widgets_values:{frame_rate:10,loop_count:0,filename_prefix:"AnimateDiff/comfy",format:"video/h265-mp4",pix_fmt:"yuv420p",crf:22,save_metadata:!0,pingpong:!0,save_output:!0,videopreview:{hidden:!1,paused:!1,params:{filename:"comfy_00011-audio.mp4",subfolder:"AnimateDiff",type:"output",format:"video/h265-mp4"}}}}],links:[[37,47,0,49,0,"MOTION_MODEL_ADE"],[38,49,0,50,1,"M_MODELS"],[40,52,0,50,2,"CONTEXT_OPTIONS"],[53,58,1,56,0,"LATENT"],[54,59,0,58,3,"SAMPLER"],[55,60,0,58,4,"SIGMAS"],[62,64,0,50,0,"MODEL"],[64,64,1,62,0,"CLIP"],[65,64,1,63,0,"CLIP"],[66,50,0,60,0,"MODEL"],[69,67,0,56,1,"VAE"],[71,62,0,69,0,"CONDITIONING"],[72,63,0,69,1,"CONDITIONING"],[73,69,0,58,1,"CONDITIONING"],[74,69,1,58,2,"CONDITIONING"],[75,70,0,69,2,"CONTROL_NET"],[86,81,0,80,0,"INT"],[87,81,1,80,1,"INT"],[88,81,2,80,2,"INT"],[102,80,0,58,5,"LATENT"],[103,91,0,92,0,"IPADAPTER"],[104,93,0,92,1,"CLIP_VISION"],[105,86,0,92,2,"IMAGE"],[106,50,0,92,3,"MODEL"],[107,92,0,58,0,"MODEL"],[112,94,0,64,0,"MODEL"],[113,94,1,64,1,"CLIP"],[119,97,0,69,3,"IMAGE"],[120,97,0,81,0,"IMAGE"],[121,56,0,96,0,"IMAGE"],[126,102,0,96,1,"VHS_AUDIO"],[127,56,0,103,0,"IMAGE"]],groups:[],config:{},extra:{},version:.4};function Sw(i){if(i.startsWith("demo"))if(i=="demo")i=Iw;else return{code:-1,msg:"error demo: "+i,data:{}};let s=0,e=[];try{let n=[],a=[],t,l,r,h;for(t of i.split(`
`)){const p=t.match(/(^\s*)(- )?(.*)/);if(p){if(!p[2]){if(n.length==0){$n.isDebug;continue}const k=a[a.length-1];if(k.self+=`
`+p[3],!k.self_data.hasOwnProperty("value")){$n.isDebug;continue}k.self_data.value+=(k.self_data.value==""?"":`
`)+p[3];continue}l=p[1].length;{r=-1;for(let k=0;k<n.length;k++)if(n[k]>=l){n=n.slice(0,k+1),r=k;break}r==-1&&(n.push(l),r=n.length-1)}{let k=[];const u=p[3].split(",");for(let o of u)k.push(o.trim().split(":"));k[3]?h={self:p[3],children:[],self_data:{type:"edge",id:""+s++,parentId:"",parent:null,from_node:k[0][0],from_socket:k[1][0],to_node:k[2][0],to_socket:k[3][0],name:k[4]?k[4][0]:""}}:k[1]?h={self:p[3],children:[],self_data:{type:k[1]&&["i","input","o","output","v","value"].includes(k[1][0])?k[1][0]:"value",id:k[0][0],name:k[0][1]??k[0][0],parentId:"",parent:null,value:k[2]?k[2][0]:""}}:h={self:p[3],children:[],self_data:{type:"node",id:k[0][0],name:k[0][1]??k[0][0],parentId:"",parent:null,children:{inputs:[],outputs:[],values:[]}}},a=a.slice(0,n.length),a[r]=h}if(r==0)e.push(h);else{const k=a[r-1];if(k.self_data.type!="n"&&k.self_data.type!="node"&&k.self_data.type!="g"&&k.self_data.type!="group")continue;k.children.push(h),h.self_data.parentId=k.self_data.id,h.self_data.parent=k,h.self_data.type=="input"||h.self_data.type=="i"?(k.self_data.type="node",k.self_data.children.inputs.push(h)):h.self_data.type=="output"||h.self_data.type=="o"?(k.self_data.type="node",k.self_data.children.outputs.push(h)):h.self_data.type=="value"||h.self_data.type=="v"?(k.self_data.type="node",k.self_data.children.values.push(h)):(h.self_data.type=="node"||h.self_data.type=="n")&&(k.self_data.type="group")}}}}catch(n){return{code:-1,msg:"error: list parse fail: "+n,data:{}}}{if(e.length!=2)return{code:-1,msg:"error: without rootNode: edges and edges",data:{}};let n=[];{let t=function(l){for(let r of l){if(r.self_data.type!="n"&&r.self_data.type!="node"&&r.self_data.type!="g"&&r.self_data.type!="group")continue;const h={id:r.self_data.id,data:{type:r.self_data.type,label:r.self_data.name,inputs:r.self_data.children.inputs.map(p=>({id:p.self_data.id,name:p.self_data.name,value:p.self_data.value})),outputs:r.self_data.children.outputs.map(p=>({id:p.self_data.id,name:p.self_data.name,value:p.self_data.value})),values:r.self_data.children.values.map(p=>({id:p.self_data.id,name:p.self_data.name,value:p.self_data.value}))},position:{x:0,y:0},...r.self_data.parentId==""||r.self_data.parentId=="nodes"?{}:{parentNode:r.self_data.parentId},type:"common"};n.push(h),t(r.children)}};t(e[0].children)}let a=[];{let t=function(r){for(let h of r){if(h.self_data.type!="e"&&h.self_data.type!="edge")continue;const p=h.self_data.from_socket.toLowerCase().charCodeAt(0)%20;a.push({id:h.self_data.id,style:{stroke:l[p]},source:h.self_data.from_node,sourceHandle:h.self_data.from_socket,target:h.self_data.to_node,targetHandle:h.self_data.to_socket}),t(h.children)}};const l=["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff1a","#00ff66","#00ffb3","#00ffff","#00b3ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004c"];t(e[1].children)}return{code:0,msg:"",data:{nodes:n,edges:a}}}}const Iw=`
- nodes
  - node1:KSample
    - Latent, o
    - model, i
    - positive, i
    - negative, i
    - Latent, i
    - seed,
    - control_after_generate,, randomize
    - steps,, 20
    - CFG,, 8.0
    - sampler_name,, euler
    - scheduler,, normal
    - denoise,, 1.00
    - io defaultTest, i , test
    - io defaultTest, o, test
    - t1:noValueTest,
    - t2:,, noKeyTest
      mul lines test
  - node2:KSample
    - 潜空间, o
    - 模型, i
    - 正面条件, i
    - 负面条件, i
    - 潜空间, i
    - 种子,
    - 运行后操作,
    - 步数,
    - CFG,
    - 采样器/采样方法,
    - 调度器,
    - 降噪,
  - translate
- edges
  - node1,Latent, translate,l
  - translate,r, node2, 潜空间
`;function Rw(i){if(typeof i=="string")if(i.startsWith("demo"))i=JSON.parse(JSON.stringify(Ow));else return{code:-1,msg:"error demo: "+i,data:{}};for(let s of i.nodes)s.hasOwnProperty("position")||(s.position={x:0,y:0}),(!s.hasOwnProperty("valueType")||s.valueType=="")&&(s.valueType="item-default"),s.type="item";return{code:0,msg:"",data:i}}const Ow={nodes:[{id:6,data:{label:"itemData testData",valueType:"itemData valueType",items:[{id:"01",name:"null",refType:"input",valueType:"item-default",value:""},{id:"02",name:"null",refType:"output",valueType:"item-default",value:""},{id:"03",name:"color",refType:"input",valueType:"item-color",value:"#2283fc"},{id:"1",name:"number",refType:"input",valueType:"item-default",value:"123"},{id:"2",name:"number",refType:"output",valueType:"item-default",value:"456"},{id:"3",name:"vName",refType:"value",valueType:"item-default",value:"vValue"},{id:"4",name:"clip",refType:"input",valueType:"item-default",value:""},{id:"5",name:"clip",refType:"output",valueType:"item-default",value:""},{id:"6",name:"selectName",refType:"value",valueType:"item-dropdown",value:"select1|select2|select3"},{id:"7",name:"markdown",refType:"value",valueType:"item-markdown",value:`## Markdown

**bord** *italic* ==highlight== ~~del~~`}]}}]};function Pw(i){if(i.startsWith("demo"))if(i=="demo")i=Nw;else return{code:-1,msg:"error demo: "+i,data:{}};let s;const e=Lw(i);if(e.code!=0)return e;s=e.data;{if(s.length!=2)return{code:-1,msg:"error: without rootNode: edges and edges",data:{}};let n=[];{let t=function(l){for(let r of l){if(r.self_data.type!="n"&&r.self_data.type!="node"&&r.self_data.type!="g"&&r.self_data.type!="group")continue;const h={id:r.self_data.id,data:{type:r.self_data.type,label:r.self_data.name,items:r.self_data.items},position:{x:0,y:0},...r.self_data.parentId==""||r.self_data.parentId=="nodes"?{}:{parentNode:r.self_data.parentId},type:"item"};n.push(h),t(r.children)}};t(s[0].children)}let a=[];{let t=function(r){for(let h of r){if(h.self_data.type!="e"&&h.self_data.type!="edge")continue;const p=h.self_data.from_socket.toLowerCase().charCodeAt(0)%20;a.push({id:h.self_data.id,style:{stroke:l[p]},source:h.self_data.from_node,sourceHandle:h.self_data.from_socket,target:h.self_data.to_node,targetHandle:h.self_data.to_socket}),t(h.children)}};const l=["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff1a","#00ff66","#00ffb3","#00ffff","#00b3ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004c"];t(s[1].children)}return{code:0,msg:"",data:{nodes:n,edges:a}}}}function Lw(i){let s=0,e=[];try{let n=[],a=[],t=0,l,r,h,p,k,d,u=null,o=null;const c=i.split(`
`);for(t=0;t<c.length;t++){let A=function(){let g=[];const m=h.split(",");for(let y of m)g.push(y.trim().split(":"));g[3]?d.self_data={type:"edge",id:""+s++,parentId:"",parent:null,from_node:g[0][0],from_socket:g[1][0],to_node:g[2][0],to_socket:g[3][0],name:g[4]?g[4][0]:""}:g[1]?d.self_data={type:"socket",refType:g[1]&&["i","input","o","output","v","value"].includes(g[1][0])?g[1][0]:"value",valueType:g[1]&&g[1][1]?g[1][1]:"item-default",id:g[0][0],name:g[0][1]??g[0][0],parentId:"",parent:null,value:g[2]?g[2][0]:"",items:[]}:d.self_data={type:"node",id:g[0][0],name:g[0][1]??g[0][0],parentId:"",parent:null,items:[]},a=a.slice(0,n.length),a[k]=d};if(l=u??c[t],r=o??l.match(/(^\s*)(- )?(.*)/),!!r&&r[2]){for(h=r[3];!(t>=c.length-1);){if(u=c[t+1],o=u.match(/(^\s*)(- )?(.*)/),!o){t++;continue}if(!o[2]){l+=`
`+o[3],h+=`
`+o[3],t++;continue}break}p=r[1].length;{k=-1;for(let g=0;g<n.length;g++)if(n[g]>=p){n=n.slice(0,g+1),k=g;break}k==-1&&(n.push(p),k=n.length-1)}if(d={self:h,children:[],self_data:null},A(),k==0)e.push(d);else{const g=a[k-1];if(g.self_data.type!="n"&&g.self_data.type!="node"&&g.self_data.type!="g"&&g.self_data.type!="group"&&g.self_data.type!="s"&&g.self_data.type!="socket")continue;d.self_data.parentId=g.self_data.id,d.self_data.parent=g,(d.self_data.type=="socket"||d.self_data.type=="s"||d.self_data.type=="node"||d.self_data.type=="n")&&g.self_data.items.push(d.self_data),g.children.push(d)}}}}catch(n){return{code:-1,msg:"error: list parse fail: "+n,data:[]}}return{code:0,msg:"",data:e}}const Nw=`
- nodes
  - NodeTitle
    - only name, i
    - i2, i, *i2
    - i3, i, mul line
      i3-2
      i3-3
    - i4, i, *i4
    - only name, o
    - o2, o, *o2
    - o3, o, *o3
    - o4, o, mul line
      o4-2
      o4-3
    - v2, v, *v2
    - v4, , mul line
      v4-2
      v4-3
    - v3, , *v3
    - v5:color, :item-color, #008888
    - v6:, :item-markdown, only value
      **v6-1**
      *v6-2*
    - v7, :item-dropdown, option1|option2|option3
    - v8 only name, 
    - v9, :item-item, l
      - only name2, i
      - i22, i, *i2
      - v91, :item-item, l
        - v911, 
      - v92, :item-item, l
        - v921, 
    - v10,,over
- edges
`;function Mw(i="nodeflow-vueflow",s="{nodes:[],edges:[]}"){let e;if(s.trim()=="")return{code:-1,msg:"error: content is empty",data:{}};if(s.startsWith("demo"))e=s;else if(i==="nodeflow-list"||i==="nodeflow-listitem")e=s;else try{if(e=JSON.parse(s),!e)return{code:-1,msg:"Error: not a legitimate json",data:{}}}catch(a){return{code:-1,msg:"Error: not a legitimate json: "+a,data:{}}}let n;if(i=="nodeflow-comfyui")n=xw(e);else if(i=="nodeflow-obcanvas")n=_w(e);else if(i=="nodeflow-vueflow")n=Fw(e);else if(i=="nodeflow-list")n=Sw(e);else if(i=="nodeflow-item")n=Rw(e);else if(i=="nodeflow-listitem")n=Pw(e);else return{code:-1,msg:"error: invalid json type: "+i,data:{}};return n.code!=0?n:n.data.hasOwnProperty("nodes")?(n.data.hasOwnProperty("edges")||(n.data.edges=[]),n):{code:-1,msg:"json without nodes attrs",data:{}}}function vp(i){return Zh()?(el(i),!0):!1}function un(i){return typeof i=="function"?i():mi(i)}const $w=typeof window<"u"&&typeof document<"u",Vw=i=>typeof i<"u",zw=Object.prototype.toString,qw=i=>zw.call(i)==="[object Object]",Hw=()=>{};function jw(i,s){function e(...n){return new Promise((a,t)=>{Promise.resolve(i(()=>s.apply(this,n),{fn:s,thisArg:this,args:n})).then(a).catch(t)})}return e}const f8=i=>i();function Uw(i=f8){const s=Z(!0);function e(){s.value=!1}function n(){s.value=!0}const a=(...t)=>{s.value&&i(...t)};return{isActive:We(s),pause:e,resume:n,eventFilter:a}}function _B(i,s=!1,e="Timeout"){return new Promise((n,a)=>{setTimeout(s?()=>a(e):n,i)})}function Gw(i,s,e={}){const{eventFilter:n=f8,...a}=e;return bi(i,jw(n,s),a)}function $a(i,s,e={}){const{eventFilter:n,...a}=e,{eventFilter:t,pause:l,resume:r,isActive:h}=Uw(n);return{stop:Gw(i,s,{...a,eventFilter:t}),pause:l,resume:r,isActive:h}}function Ww(i,s={}){if(!ts(i))return bm(i);const e=Array.isArray(i.value)?Array.from({length:i.value.length}):{};for(const n in i.value)e[n]=ou(()=>({get(){return i.value[n]},set(a){var t;if((t=un(s.replaceRef))!=null?t:!0)if(Array.isArray(i.value)){const r=[...i.value];r[n]=a,i.value=r}else{const r={...i.value,[n]:a};Object.setPrototypeOf(r,Object.getPrototypeOf(i.value)),i.value=r}else i.value[n]=a}}));return e}function Do(i,s=!1){function e(d,{flush:u="sync",deep:o=!1,timeout:c,throwOnTimeout:A}={}){let g=null;const m=[new Promise(y=>{g=bi(i,v=>{d(v)!==s&&(g==null||g(),y(v))},{flush:u,deep:o,immediate:!0})})];return c!=null&&m.push(_B(c,A).then(()=>un(i)).finally(()=>g==null?void 0:g())),Promise.race(m)}function n(d,u){if(!ts(d))return e(v=>v===d,u);const{flush:o="sync",deep:c=!1,timeout:A,throwOnTimeout:g}=u??{};let f=null;const y=[new Promise(v=>{f=bi([i,d],([C,S])=>{s!==(C===S)&&(f==null||f(),v(C))},{flush:o,deep:c,immediate:!0})})];return A!=null&&y.push(_B(A,g).then(()=>un(i)).finally(()=>(f==null||f(),un(i)))),Promise.race(y)}function a(d){return e(u=>!!u,d)}function t(d){return n(null,d)}function l(d){return n(void 0,d)}function r(d){return e(Number.isNaN,d)}function h(d,u){return e(o=>{const c=Array.from(o);return c.includes(d)||c.includes(un(d))},u)}function p(d){return k(1,d)}function k(d=1,u){let o=-1;return e(()=>(o+=1,o>=d),u)}return Array.isArray(un(i))?{toMatch:e,toContains:h,changed:p,changedTimes:k,get not(){return Do(i,!s)}}:{toMatch:e,toBe:n,toBeTruthy:a,toBeNull:t,toBeNaN:r,toBeUndefined:l,changed:p,changedTimes:k,get not(){return Do(i,!s)}}}function xo(i){return Do(i)}function Kw(i){var s;const e=un(i);return(s=e==null?void 0:e.$el)!=null?s:e}const m8=$w?window:void 0;function v8(...i){let s,e,n,a;if(typeof i[0]=="string"||Array.isArray(i[0])?([e,n,a]=i,s=m8):[s,e,n,a]=i,!s)return Hw;Array.isArray(e)||(e=[e]),Array.isArray(n)||(n=[n]);const t=[],l=()=>{t.forEach(k=>k()),t.length=0},r=(k,d,u,o)=>(k.addEventListener(d,u,o),()=>k.removeEventListener(d,u,o)),h=bi(()=>[Kw(s),un(a)],([k,d])=>{if(l(),!k)return;const u=qw(d)?{...d}:d;t.push(...e.flatMap(o=>n.map(c=>r(k,o,c,u))))},{immediate:!0,flush:"post"}),p=()=>{h(),l()};return vp(p),p}function Yw(i){return typeof i=="function"?i:typeof i=="string"?s=>s.key===i:Array.isArray(i)?s=>i.includes(s.key):()=>!0}function DB(...i){let s,e,n={};i.length===3?(s=i[0],e=i[1],n=i[2]):i.length===2?typeof i[1]=="object"?(s=!0,e=i[0],n=i[1]):(s=i[0],e=i[1]):(s=!0,e=i[0]);const{target:a=m8,eventName:t="keydown",passive:l=!1,dedupe:r=!1}=n,h=Yw(s);return v8(a,t,k=>{k.repeat&&un(r)||h(k)&&e(k)},l)}function Xw(i){return JSON.parse(JSON.stringify(i))}function Ek(i,s,e,n={}){var a,t,l;const{clone:r=!1,passive:h=!1,eventName:p,deep:k=!1,defaultValue:d,shouldEmit:u}=n,o=pe(),c=e||(o==null?void 0:o.emit)||((a=o==null?void 0:o.$emit)==null?void 0:a.bind(o))||((l=(t=o==null?void 0:o.proxy)==null?void 0:t.$emit)==null?void 0:l.bind(o==null?void 0:o.proxy));let A=p;s||(s="modelValue"),A=A||`update:${s.toString()}`;const g=y=>r?typeof r=="function"?r(y):Xw(y):y,f=()=>Vw(i[s])?g(i[s]):d,m=y=>{u?u(y)&&c(A,y):c(A,y)};if(h){const y=f(),v=Z(y);let C=!1;return bi(()=>i[s],S=>{C||(C=!0,v.value=g(S),Hi(()=>C=!1))}),bi(v,S=>{!C&&(S!==i[s]||k)&&m(S)},{deep:k}),v}else return z({get(){return f()},set(y){m(y)}})}var Zw={value:()=>{}};function Fp(){for(var i=0,s=arguments.length,e={},n;i<s;++i){if(!(n=arguments[i]+"")||n in e||/[\s.]/.test(n))throw new Error("illegal type: "+n);e[n]=[]}return new hh(e)}function hh(i){this._=i}function Jw(i,s){return i.trim().split(/^|\s+/).map(function(e){var n="",a=e.indexOf(".");if(a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),e&&!s.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}})}hh.prototype=Fp.prototype={constructor:hh,on:function(i,s){var e=this._,n=Jw(i+"",e),a,t=-1,l=n.length;if(arguments.length<2){for(;++t<l;)if((a=(i=n[t]).type)&&(a=Qw(e[a],i.name)))return a;return}if(s!=null&&typeof s!="function")throw new Error("invalid callback: "+s);for(;++t<l;)if(a=(i=n[t]).type)e[a]=xB(e[a],i.name,s);else if(s==null)for(a in e)e[a]=xB(e[a],i.name,null);return this},copy:function(){var i={},s=this._;for(var e in s)i[e]=s[e].slice();return new hh(i)},call:function(i,s){if((a=arguments.length-2)>0)for(var e=new Array(a),n=0,a,t;n<a;++n)e[n]=arguments[n+2];if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(t=this._[i],n=0,a=t.length;n<a;++n)t[n].value.apply(s,e)},apply:function(i,s,e){if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(var n=this._[i],a=0,t=n.length;a<t;++a)n[a].value.apply(s,e)}};function Qw(i,s){for(var e=0,n=i.length,a;e<n;++e)if((a=i[e]).name===s)return a.value}function xB(i,s,e){for(var n=0,a=i.length;n<a;++n)if(i[n].name===s){i[n]=Zw,i=i.slice(0,n).concat(i.slice(n+1));break}return e!=null&&i.push({name:s,value:e}),i}var wo="http://www.w3.org/1999/xhtml";const wB={svg:"http://www.w3.org/2000/svg",xhtml:wo,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function Ep(i){var s=i+="",e=s.indexOf(":");return e>=0&&(s=i.slice(0,e))!=="xmlns"&&(i=i.slice(e+1)),wB.hasOwnProperty(s)?{space:wB[s],local:i}:i}function iT(i){return function(){var s=this.ownerDocument,e=this.namespaceURI;return e===wo&&s.documentElement.namespaceURI===wo?s.createElement(i):s.createElementNS(e,i)}}function sT(i){return function(){return this.ownerDocument.createElementNS(i.space,i.local)}}function F8(i){var s=Ep(i);return(s.local?sT:iT)(s)}function eT(){}function pc(i){return i==null?eT:function(){return this.querySelector(i)}}function nT(i){typeof i!="function"&&(i=pc(i));for(var s=this._groups,e=s.length,n=new Array(e),a=0;a<e;++a)for(var t=s[a],l=t.length,r=n[a]=new Array(l),h,p,k=0;k<l;++k)(h=t[k])&&(p=i.call(h,h.__data__,k,t))&&("__data__"in h&&(p.__data__=h.__data__),r[k]=p);return new le(n,this._parents)}function aT(i){return i==null?[]:Array.isArray(i)?i:Array.from(i)}function tT(){return[]}function E8(i){return i==null?tT:function(){return this.querySelectorAll(i)}}function lT(i){return function(){return aT(i.apply(this,arguments))}}function rT(i){typeof i=="function"?i=lT(i):i=E8(i);for(var s=this._groups,e=s.length,n=[],a=[],t=0;t<e;++t)for(var l=s[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&(n.push(i.call(h,h.__data__,p,l)),a.push(h));return new le(n,a)}function b8(i){return function(){return this.matches(i)}}function C8(i){return function(s){return s.matches(i)}}var hT=Array.prototype.find;function pT(i){return function(){return hT.call(this.children,i)}}function kT(){return this.firstElementChild}function dT(i){return this.select(i==null?kT:pT(typeof i=="function"?i:C8(i)))}var oT=Array.prototype.filter;function uT(){return Array.from(this.children)}function cT(i){return function(){return oT.call(this.children,i)}}function gT(i){return this.selectAll(i==null?uT:cT(typeof i=="function"?i:C8(i)))}function BT(i){typeof i!="function"&&(i=b8(i));for(var s=this._groups,e=s.length,n=new Array(e),a=0;a<e;++a)for(var t=s[a],l=t.length,r=n[a]=[],h,p=0;p<l;++p)(h=t[p])&&i.call(h,h.__data__,p,t)&&r.push(h);return new le(n,this._parents)}function _8(i){return new Array(i.length)}function AT(){return new le(this._enter||this._groups.map(_8),this._parents)}function Th(i,s){this.ownerDocument=i.ownerDocument,this.namespaceURI=i.namespaceURI,this._next=null,this._parent=i,this.__data__=s}Th.prototype={constructor:Th,appendChild:function(i){return this._parent.insertBefore(i,this._next)},insertBefore:function(i,s){return this._parent.insertBefore(i,s)},querySelector:function(i){return this._parent.querySelector(i)},querySelectorAll:function(i){return this._parent.querySelectorAll(i)}};function yT(i){return function(){return i}}function fT(i,s,e,n,a,t){for(var l=0,r,h=s.length,p=t.length;l<p;++l)(r=s[l])?(r.__data__=t[l],n[l]=r):e[l]=new Th(i,t[l]);for(;l<h;++l)(r=s[l])&&(a[l]=r)}function mT(i,s,e,n,a,t,l){var r,h,p=new Map,k=s.length,d=t.length,u=new Array(k),o;for(r=0;r<k;++r)(h=s[r])&&(u[r]=o=l.call(h,h.__data__,r,s)+"",p.has(o)?a[r]=h:p.set(o,h));for(r=0;r<d;++r)o=l.call(i,t[r],r,t)+"",(h=p.get(o))?(n[r]=h,h.__data__=t[r],p.delete(o)):e[r]=new Th(i,t[r]);for(r=0;r<k;++r)(h=s[r])&&p.get(u[r])===h&&(a[r]=h)}function vT(i){return i.__data__}function FT(i,s){if(!arguments.length)return Array.from(this,vT);var e=s?mT:fT,n=this._parents,a=this._groups;typeof i!="function"&&(i=yT(i));for(var t=a.length,l=new Array(t),r=new Array(t),h=new Array(t),p=0;p<t;++p){var k=n[p],d=a[p],u=d.length,o=ET(i.call(k,k&&k.__data__,p,n)),c=o.length,A=r[p]=new Array(c),g=l[p]=new Array(c),f=h[p]=new Array(u);e(k,d,A,g,f,o,s);for(var m=0,y=0,v,C;m<c;++m)if(v=A[m]){for(m>=y&&(y=m+1);!(C=g[y])&&++y<c;);v._next=C||null}}return l=new le(l,n),l._enter=r,l._exit=h,l}function ET(i){return typeof i=="object"&&"length"in i?i:Array.from(i)}function bT(){return new le(this._exit||this._groups.map(_8),this._parents)}function CT(i,s,e){var n=this.enter(),a=this,t=this.exit();return typeof i=="function"?(n=i(n),n&&(n=n.selection())):n=n.append(i+""),s!=null&&(a=s(a),a&&(a=a.selection())),e==null?t.remove():e(t),n&&a?n.merge(a).order():a}function _T(i){for(var s=i.selection?i.selection():i,e=this._groups,n=s._groups,a=e.length,t=n.length,l=Math.min(a,t),r=new Array(a),h=0;h<l;++h)for(var p=e[h],k=n[h],d=p.length,u=r[h]=new Array(d),o,c=0;c<d;++c)(o=p[c]||k[c])&&(u[c]=o);for(;h<a;++h)r[h]=e[h];return new le(r,this._parents)}function DT(){for(var i=this._groups,s=-1,e=i.length;++s<e;)for(var n=i[s],a=n.length-1,t=n[a],l;--a>=0;)(l=n[a])&&(t&&l.compareDocumentPosition(t)^4&&t.parentNode.insertBefore(l,t),t=l);return this}function xT(i){i||(i=wT);function s(d,u){return d&&u?i(d.__data__,u.__data__):!d-!u}for(var e=this._groups,n=e.length,a=new Array(n),t=0;t<n;++t){for(var l=e[t],r=l.length,h=a[t]=new Array(r),p,k=0;k<r;++k)(p=l[k])&&(h[k]=p);h.sort(s)}return new le(a,this._parents).order()}function wT(i,s){return i<s?-1:i>s?1:i>=s?0:NaN}function TT(){var i=arguments[0];return arguments[0]=this,i.apply(null,arguments),this}function ST(){return Array.from(this)}function IT(){for(var i=this._groups,s=0,e=i.length;s<e;++s)for(var n=i[s],a=0,t=n.length;a<t;++a){var l=n[a];if(l)return l}return null}function RT(){let i=0;for(const s of this)++i;return i}function OT(){return!this.node()}function PT(i){for(var s=this._groups,e=0,n=s.length;e<n;++e)for(var a=s[e],t=0,l=a.length,r;t<l;++t)(r=a[t])&&i.call(r,r.__data__,t,a);return this}function LT(i){return function(){this.removeAttribute(i)}}function NT(i){return function(){this.removeAttributeNS(i.space,i.local)}}function MT(i,s){return function(){this.setAttribute(i,s)}}function $T(i,s){return function(){this.setAttributeNS(i.space,i.local,s)}}function VT(i,s){return function(){var e=s.apply(this,arguments);e==null?this.removeAttribute(i):this.setAttribute(i,e)}}function zT(i,s){return function(){var e=s.apply(this,arguments);e==null?this.removeAttributeNS(i.space,i.local):this.setAttributeNS(i.space,i.local,e)}}function qT(i,s){var e=Ep(i);if(arguments.length<2){var n=this.node();return e.local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}return this.each((s==null?e.local?NT:LT:typeof s=="function"?e.local?zT:VT:e.local?$T:MT)(e,s))}function D8(i){return i.ownerDocument&&i.ownerDocument.defaultView||i.document&&i||i.defaultView}function HT(i){return function(){this.style.removeProperty(i)}}function jT(i,s,e){return function(){this.style.setProperty(i,s,e)}}function UT(i,s,e){return function(){var n=s.apply(this,arguments);n==null?this.style.removeProperty(i):this.style.setProperty(i,n,e)}}function GT(i,s,e){return arguments.length>1?this.each((s==null?HT:typeof s=="function"?UT:jT)(i,s,e??"")):At(this.node(),i)}function At(i,s){return i.style.getPropertyValue(s)||D8(i).getComputedStyle(i,null).getPropertyValue(s)}function WT(i){return function(){delete this[i]}}function KT(i,s){return function(){this[i]=s}}function YT(i,s){return function(){var e=s.apply(this,arguments);e==null?delete this[i]:this[i]=e}}function XT(i,s){return arguments.length>1?this.each((s==null?WT:typeof s=="function"?YT:KT)(i,s)):this.node()[i]}function x8(i){return i.trim().split(/^|\s+/)}function kc(i){return i.classList||new w8(i)}function w8(i){this._node=i,this._names=x8(i.getAttribute("class")||"")}w8.prototype={add:function(i){var s=this._names.indexOf(i);s<0&&(this._names.push(i),this._node.setAttribute("class",this._names.join(" ")))},remove:function(i){var s=this._names.indexOf(i);s>=0&&(this._names.splice(s,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(i){return this._names.indexOf(i)>=0}};function T8(i,s){for(var e=kc(i),n=-1,a=s.length;++n<a;)e.add(s[n])}function S8(i,s){for(var e=kc(i),n=-1,a=s.length;++n<a;)e.remove(s[n])}function ZT(i){return function(){T8(this,i)}}function JT(i){return function(){S8(this,i)}}function QT(i,s){return function(){(s.apply(this,arguments)?T8:S8)(this,i)}}function iS(i,s){var e=x8(i+"");if(arguments.length<2){for(var n=kc(this.node()),a=-1,t=e.length;++a<t;)if(!n.contains(e[a]))return!1;return!0}return this.each((typeof s=="function"?QT:s?ZT:JT)(e,s))}function sS(){this.textContent=""}function eS(i){return function(){this.textContent=i}}function nS(i){return function(){var s=i.apply(this,arguments);this.textContent=s??""}}function aS(i){return arguments.length?this.each(i==null?sS:(typeof i=="function"?nS:eS)(i)):this.node().textContent}function tS(){this.innerHTML=""}function lS(i){return function(){this.innerHTML=i}}function rS(i){return function(){var s=i.apply(this,arguments);this.innerHTML=s??""}}function hS(i){return arguments.length?this.each(i==null?tS:(typeof i=="function"?rS:lS)(i)):this.node().innerHTML}function pS(){this.nextSibling&&this.parentNode.appendChild(this)}function kS(){return this.each(pS)}function dS(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function oS(){return this.each(dS)}function uS(i){var s=typeof i=="function"?i:F8(i);return this.select(function(){return this.appendChild(s.apply(this,arguments))})}function cS(){return null}function gS(i,s){var e=typeof i=="function"?i:F8(i),n=s==null?cS:typeof s=="function"?s:pc(s);return this.select(function(){return this.insertBefore(e.apply(this,arguments),n.apply(this,arguments)||null)})}function BS(){var i=this.parentNode;i&&i.removeChild(this)}function AS(){return this.each(BS)}function yS(){var i=this.cloneNode(!1),s=this.parentNode;return s?s.insertBefore(i,this.nextSibling):i}function fS(){var i=this.cloneNode(!0),s=this.parentNode;return s?s.insertBefore(i,this.nextSibling):i}function mS(i){return this.select(i?fS:yS)}function vS(i){return arguments.length?this.property("__data__",i):this.node().__data__}function FS(i){return function(s){i.call(this,s,this.__data__)}}function ES(i){return i.trim().split(/^|\s+/).map(function(s){var e="",n=s.indexOf(".");return n>=0&&(e=s.slice(n+1),s=s.slice(0,n)),{type:s,name:e}})}function bS(i){return function(){var s=this.__on;if(s){for(var e=0,n=-1,a=s.length,t;e<a;++e)t=s[e],(!i.type||t.type===i.type)&&t.name===i.name?this.removeEventListener(t.type,t.listener,t.options):s[++n]=t;++n?s.length=n:delete this.__on}}}function CS(i,s,e){return function(){var n=this.__on,a,t=FS(s);if(n){for(var l=0,r=n.length;l<r;++l)if((a=n[l]).type===i.type&&a.name===i.name){this.removeEventListener(a.type,a.listener,a.options),this.addEventListener(a.type,a.listener=t,a.options=e),a.value=s;return}}this.addEventListener(i.type,t,e),a={type:i.type,name:i.name,value:s,listener:t,options:e},n?n.push(a):this.__on=[a]}}function _S(i,s,e){var n=ES(i+""),a,t=n.length,l;if(arguments.length<2){var r=this.node().__on;if(r){for(var h=0,p=r.length,k;h<p;++h)for(a=0,k=r[h];a<t;++a)if((l=n[a]).type===k.type&&l.name===k.name)return k.value}return}for(r=s?CS:bS,a=0;a<t;++a)this.each(r(n[a],s,e));return this}function I8(i,s,e){var n=D8(i),a=n.CustomEvent;typeof a=="function"?a=new a(s,e):(a=n.document.createEvent("Event"),e?(a.initEvent(s,e.bubbles,e.cancelable),a.detail=e.detail):a.initEvent(s,!1,!1)),i.dispatchEvent(a)}function DS(i,s){return function(){return I8(this,i,s)}}function xS(i,s){return function(){return I8(this,i,s.apply(this,arguments))}}function wS(i,s){return this.each((typeof s=="function"?xS:DS)(i,s))}function*TS(){for(var i=this._groups,s=0,e=i.length;s<e;++s)for(var n=i[s],a=0,t=n.length,l;a<t;++a)(l=n[a])&&(yield l)}var R8=[null];function le(i,s){this._groups=i,this._parents=s}function mr(){return new le([[document.documentElement]],R8)}function SS(){return this}le.prototype=mr.prototype={constructor:le,select:nT,selectAll:rT,selectChild:dT,selectChildren:gT,filter:BT,data:FT,enter:AT,exit:bT,join:CT,merge:_T,selection:SS,order:DT,sort:xT,call:TT,nodes:ST,node:IT,size:RT,empty:OT,each:PT,attr:qT,style:GT,property:XT,classed:iS,text:aS,html:hS,raise:kS,lower:oS,append:uS,insert:gS,remove:AS,clone:mS,datum:vS,on:_S,dispatch:wS,[Symbol.iterator]:TS};function fe(i){return typeof i=="string"?new le([[document.querySelector(i)]],[document.documentElement]):new le([[i]],R8)}function IS(i){let s;for(;s=i.sourceEvent;)i=s;return i}function Me(i,s){if(i=IS(i),s===void 0&&(s=i.currentTarget),s){var e=s.ownerSVGElement||s;if(e.createSVGPoint){var n=e.createSVGPoint();return n.x=i.clientX,n.y=i.clientY,n=n.matrixTransform(s.getScreenCTM().inverse()),[n.x,n.y]}if(s.getBoundingClientRect){var a=s.getBoundingClientRect();return[i.clientX-a.left-s.clientLeft,i.clientY-a.top-s.clientTop]}}return[i.pageX,i.pageY]}const RS={passive:!1},Rl={capture:!0,passive:!1};function bk(i){i.stopImmediatePropagation()}function et(i){i.preventDefault(),i.stopImmediatePropagation()}function O8(i){var s=i.document.documentElement,e=fe(i).on("dragstart.drag",et,Rl);"onselectstart"in s?e.on("selectstart.drag",et,Rl):(s.__noselect=s.style.MozUserSelect,s.style.MozUserSelect="none")}function P8(i,s){var e=i.document.documentElement,n=fe(i).on("dragstart.drag",null);s&&(n.on("click.drag",et,Rl),setTimeout(function(){n.on("click.drag",null)},0)),"onselectstart"in e?n.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}const $r=i=>()=>i;function To(i,{sourceEvent:s,subject:e,target:n,identifier:a,active:t,x:l,y:r,dx:h,dy:p,dispatch:k}){Object.defineProperties(this,{type:{value:i,enumerable:!0,configurable:!0},sourceEvent:{value:s,enumerable:!0,configurable:!0},subject:{value:e,enumerable:!0,configurable:!0},target:{value:n,enumerable:!0,configurable:!0},identifier:{value:a,enumerable:!0,configurable:!0},active:{value:t,enumerable:!0,configurable:!0},x:{value:l,enumerable:!0,configurable:!0},y:{value:r,enumerable:!0,configurable:!0},dx:{value:h,enumerable:!0,configurable:!0},dy:{value:p,enumerable:!0,configurable:!0},_:{value:k}})}To.prototype.on=function(){var i=this._.on.apply(this._,arguments);return i===this._?this:i};function OS(i){return!i.ctrlKey&&!i.button}function PS(){return this.parentNode}function LS(i,s){return s??{x:i.x,y:i.y}}function NS(){return navigator.maxTouchPoints||"ontouchstart"in this}function MS(){var i=OS,s=PS,e=LS,n=NS,a={},t=Fp("start","drag","end"),l=0,r,h,p,k,d=0;function u(v){v.on("mousedown.drag",o).filter(n).on("touchstart.drag",g).on("touchmove.drag",f,RS).on("touchend.drag touchcancel.drag",m).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function o(v,C){if(!(k||!i.call(this,v,C))){var S=y(this,s.call(this,v,C),v,C,"mouse");S&&(fe(v.view).on("mousemove.drag",c,Rl).on("mouseup.drag",A,Rl),O8(v.view),bk(v),p=!1,r=v.clientX,h=v.clientY,S("start",v))}}function c(v){if(et(v),!p){var C=v.clientX-r,S=v.clientY-h;p=C*C+S*S>d}a.mouse("drag",v)}function A(v){fe(v.view).on("mousemove.drag mouseup.drag",null),P8(v.view,p),et(v),a.mouse("end",v)}function g(v,C){if(i.call(this,v,C)){var S=v.changedTouches,L=s.call(this,v,C),w=S.length,_,R;for(_=0;_<w;++_)(R=y(this,L,v,C,S[_].identifier,S[_]))&&(bk(v),R("start",v,S[_]))}}function f(v){var C=v.changedTouches,S=C.length,L,w;for(L=0;L<S;++L)(w=a[C[L].identifier])&&(et(v),w("drag",v,C[L]))}function m(v){var C=v.changedTouches,S=C.length,L,w;for(k&&clearTimeout(k),k=setTimeout(function(){k=null},500),L=0;L<S;++L)(w=a[C[L].identifier])&&(bk(v),w("end",v,C[L]))}function y(v,C,S,L,w,_){var R=t.copy(),N=Me(_||S,C),T,V,E;if((E=e.call(v,new To("beforestart",{sourceEvent:S,target:u,identifier:w,active:l,x:N[0],y:N[1],dx:0,dy:0,dispatch:R}),L))!=null)return T=E.x-N[0]||0,V=E.y-N[1]||0,function $(I,M,G){var Y=N,li;switch(I){case"start":a[w]=$,li=l++;break;case"end":delete a[w],--l;case"drag":N=Me(G||M,C),li=l;break}R.call(I,v,new To(I,{sourceEvent:M,subject:E,target:u,identifier:w,active:li,x:N[0]+T,y:N[1]+V,dx:N[0]-Y[0],dy:N[1]-Y[1],dispatch:R}),L)}}return u.filter=function(v){return arguments.length?(i=typeof v=="function"?v:$r(!!v),u):i},u.container=function(v){return arguments.length?(s=typeof v=="function"?v:$r(v),u):s},u.subject=function(v){return arguments.length?(e=typeof v=="function"?v:$r(v),u):e},u.touchable=function(v){return arguments.length?(n=typeof v=="function"?v:$r(!!v),u):n},u.on=function(){var v=t.on.apply(t,arguments);return v===t?u:v},u.clickDistance=function(v){return arguments.length?(d=(v=+v)*v,u):Math.sqrt(d)},u}function dc(i,s,e){i.prototype=s.prototype=e,e.constructor=i}function L8(i,s){var e=Object.create(i.prototype);for(var n in s)e[n]=s[n];return e}function vr(){}var Ol=.7,Sh=1/Ol,nt="\\s*([+-]?\\d+)\\s*",Pl="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",je="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",$S=/^#([0-9a-f]{3,8})$/,VS=new RegExp(`^rgb\\(${nt},${nt},${nt}\\)$`),zS=new RegExp(`^rgb\\(${je},${je},${je}\\)$`),qS=new RegExp(`^rgba\\(${nt},${nt},${nt},${Pl}\\)$`),HS=new RegExp(`^rgba\\(${je},${je},${je},${Pl}\\)$`),jS=new RegExp(`^hsl\\(${Pl},${je},${je}\\)$`),US=new RegExp(`^hsla\\(${Pl},${je},${je},${Pl}\\)$`),TB={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};dc(vr,Ll,{copy(i){return Object.assign(new this.constructor,this,i)},displayable(){return this.rgb().displayable()},hex:SB,formatHex:SB,formatHex8:GS,formatHsl:WS,formatRgb:IB,toString:IB});function SB(){return this.rgb().formatHex()}function GS(){return this.rgb().formatHex8()}function WS(){return N8(this).formatHsl()}function IB(){return this.rgb().formatRgb()}function Ll(i){var s,e;return i=(i+"").trim().toLowerCase(),(s=$S.exec(i))?(e=s[1].length,s=parseInt(s[1],16),e===6?RB(s):e===3?new js(s>>8&15|s>>4&240,s>>4&15|s&240,(s&15)<<4|s&15,1):e===8?Vr(s>>24&255,s>>16&255,s>>8&255,(s&255)/255):e===4?Vr(s>>12&15|s>>8&240,s>>8&15|s>>4&240,s>>4&15|s&240,((s&15)<<4|s&15)/255):null):(s=VS.exec(i))?new js(s[1],s[2],s[3],1):(s=zS.exec(i))?new js(s[1]*255/100,s[2]*255/100,s[3]*255/100,1):(s=qS.exec(i))?Vr(s[1],s[2],s[3],s[4]):(s=HS.exec(i))?Vr(s[1]*255/100,s[2]*255/100,s[3]*255/100,s[4]):(s=jS.exec(i))?LB(s[1],s[2]/100,s[3]/100,1):(s=US.exec(i))?LB(s[1],s[2]/100,s[3]/100,s[4]):TB.hasOwnProperty(i)?RB(TB[i]):i==="transparent"?new js(NaN,NaN,NaN,0):null}function RB(i){return new js(i>>16&255,i>>8&255,i&255,1)}function Vr(i,s,e,n){return n<=0&&(i=s=e=NaN),new js(i,s,e,n)}function KS(i){return i instanceof vr||(i=Ll(i)),i?(i=i.rgb(),new js(i.r,i.g,i.b,i.opacity)):new js}function So(i,s,e,n){return arguments.length===1?KS(i):new js(i,s,e,n??1)}function js(i,s,e,n){this.r=+i,this.g=+s,this.b=+e,this.opacity=+n}dc(js,So,L8(vr,{brighter(i){return i=i==null?Sh:Math.pow(Sh,i),new js(this.r*i,this.g*i,this.b*i,this.opacity)},darker(i){return i=i==null?Ol:Math.pow(Ol,i),new js(this.r*i,this.g*i,this.b*i,this.opacity)},rgb(){return this},clamp(){return new js(Ea(this.r),Ea(this.g),Ea(this.b),Ih(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:OB,formatHex:OB,formatHex8:YS,formatRgb:PB,toString:PB}));function OB(){return`#${ya(this.r)}${ya(this.g)}${ya(this.b)}`}function YS(){return`#${ya(this.r)}${ya(this.g)}${ya(this.b)}${ya((isNaN(this.opacity)?1:this.opacity)*255)}`}function PB(){const i=Ih(this.opacity);return`${i===1?"rgb(":"rgba("}${Ea(this.r)}, ${Ea(this.g)}, ${Ea(this.b)}${i===1?")":`, ${i})`}`}function Ih(i){return isNaN(i)?1:Math.max(0,Math.min(1,i))}function Ea(i){return Math.max(0,Math.min(255,Math.round(i)||0))}function ya(i){return i=Ea(i),(i<16?"0":"")+i.toString(16)}function LB(i,s,e,n){return n<=0?i=s=e=NaN:e<=0||e>=1?i=s=NaN:s<=0&&(i=NaN),new me(i,s,e,n)}function N8(i){if(i instanceof me)return new me(i.h,i.s,i.l,i.opacity);if(i instanceof vr||(i=Ll(i)),!i)return new me;if(i instanceof me)return i;i=i.rgb();var s=i.r/255,e=i.g/255,n=i.b/255,a=Math.min(s,e,n),t=Math.max(s,e,n),l=NaN,r=t-a,h=(t+a)/2;return r?(s===t?l=(e-n)/r+(e<n)*6:e===t?l=(n-s)/r+2:l=(s-e)/r+4,r/=h<.5?t+a:2-t-a,l*=60):r=h>0&&h<1?0:l,new me(l,r,h,i.opacity)}function XS(i,s,e,n){return arguments.length===1?N8(i):new me(i,s,e,n??1)}function me(i,s,e,n){this.h=+i,this.s=+s,this.l=+e,this.opacity=+n}dc(me,XS,L8(vr,{brighter(i){return i=i==null?Sh:Math.pow(Sh,i),new me(this.h,this.s,this.l*i,this.opacity)},darker(i){return i=i==null?Ol:Math.pow(Ol,i),new me(this.h,this.s,this.l*i,this.opacity)},rgb(){var i=this.h%360+(this.h<0)*360,s=isNaN(i)||isNaN(this.s)?0:this.s,e=this.l,n=e+(e<.5?e:1-e)*s,a=2*e-n;return new js(Ck(i>=240?i-240:i+120,a,n),Ck(i,a,n),Ck(i<120?i+240:i-120,a,n),this.opacity)},clamp(){return new me(NB(this.h),zr(this.s),zr(this.l),Ih(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const i=Ih(this.opacity);return`${i===1?"hsl(":"hsla("}${NB(this.h)}, ${zr(this.s)*100}%, ${zr(this.l)*100}%${i===1?")":`, ${i})`}`}}));function NB(i){return i=(i||0)%360,i<0?i+360:i}function zr(i){return Math.max(0,Math.min(1,i||0))}function Ck(i,s,e){return(i<60?s+(e-s)*i/60:i<180?e:i<240?s+(e-s)*(240-i)/60:s)*255}const M8=i=>()=>i;function ZS(i,s){return function(e){return i+e*s}}function JS(i,s,e){return i=Math.pow(i,e),s=Math.pow(s,e)-i,e=1/e,function(n){return Math.pow(i+n*s,e)}}function QS(i){return(i=+i)==1?$8:function(s,e){return e-s?JS(s,e,i):M8(isNaN(s)?e:s)}}function $8(i,s){var e=s-i;return e?ZS(i,e):M8(isNaN(i)?s:i)}const MB=function i(s){var e=QS(s);function n(a,t){var l=e((a=So(a)).r,(t=So(t)).r),r=e(a.g,t.g),h=e(a.b,t.b),p=$8(a.opacity,t.opacity);return function(k){return a.r=l(k),a.g=r(k),a.b=h(k),a.opacity=p(k),a+""}}return n.gamma=i,n}(1);function Vn(i,s){return i=+i,s=+s,function(e){return i*(1-e)+s*e}}var Io=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_k=new RegExp(Io.source,"g");function iI(i){return function(){return i}}function sI(i){return function(s){return i(s)+""}}function eI(i,s){var e=Io.lastIndex=_k.lastIndex=0,n,a,t,l=-1,r=[],h=[];for(i=i+"",s=s+"";(n=Io.exec(i))&&(a=_k.exec(s));)(t=a.index)>e&&(t=s.slice(e,t),r[l]?r[l]+=t:r[++l]=t),(n=n[0])===(a=a[0])?r[l]?r[l]+=a:r[++l]=a:(r[++l]=null,h.push({i:l,x:Vn(n,a)})),e=_k.lastIndex;return e<s.length&&(t=s.slice(e),r[l]?r[l]+=t:r[++l]=t),r.length<2?h[0]?sI(h[0].x):iI(s):(s=h.length,function(p){for(var k=0,d;k<s;++k)r[(d=h[k]).i]=d.x(p);return r.join("")})}var $B=180/Math.PI,Ro={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function V8(i,s,e,n,a,t){var l,r,h;return(l=Math.sqrt(i*i+s*s))&&(i/=l,s/=l),(h=i*e+s*n)&&(e-=i*h,n-=s*h),(r=Math.sqrt(e*e+n*n))&&(e/=r,n/=r,h/=r),i*n<s*e&&(i=-i,s=-s,h=-h,l=-l),{translateX:a,translateY:t,rotate:Math.atan2(s,i)*$B,skewX:Math.atan(h)*$B,scaleX:l,scaleY:r}}var qr;function nI(i){const s=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(i+"");return s.isIdentity?Ro:V8(s.a,s.b,s.c,s.d,s.e,s.f)}function aI(i){return i==null||(qr||(qr=document.createElementNS("http://www.w3.org/2000/svg","g")),qr.setAttribute("transform",i),!(i=qr.transform.baseVal.consolidate()))?Ro:(i=i.matrix,V8(i.a,i.b,i.c,i.d,i.e,i.f))}function z8(i,s,e,n){function a(p){return p.length?p.pop()+" ":""}function t(p,k,d,u,o,c){if(p!==d||k!==u){var A=o.push("translate(",null,s,null,e);c.push({i:A-4,x:Vn(p,d)},{i:A-2,x:Vn(k,u)})}else(d||u)&&o.push("translate("+d+s+u+e)}function l(p,k,d,u){p!==k?(p-k>180?k+=360:k-p>180&&(p+=360),u.push({i:d.push(a(d)+"rotate(",null,n)-2,x:Vn(p,k)})):k&&d.push(a(d)+"rotate("+k+n)}function r(p,k,d,u){p!==k?u.push({i:d.push(a(d)+"skewX(",null,n)-2,x:Vn(p,k)}):k&&d.push(a(d)+"skewX("+k+n)}function h(p,k,d,u,o,c){if(p!==d||k!==u){var A=o.push(a(o)+"scale(",null,",",null,")");c.push({i:A-4,x:Vn(p,d)},{i:A-2,x:Vn(k,u)})}else(d!==1||u!==1)&&o.push(a(o)+"scale("+d+","+u+")")}return function(p,k){var d=[],u=[];return p=i(p),k=i(k),t(p.translateX,p.translateY,k.translateX,k.translateY,d,u),l(p.rotate,k.rotate,d,u),r(p.skewX,k.skewX,d,u),h(p.scaleX,p.scaleY,k.scaleX,k.scaleY,d,u),p=k=null,function(o){for(var c=-1,A=u.length,g;++c<A;)d[(g=u[c]).i]=g.x(o);return d.join("")}}}var tI=z8(nI,"px, ","px)","deg)"),lI=z8(aI,", ",")",")"),rI=1e-12;function VB(i){return((i=Math.exp(i))+1/i)/2}function hI(i){return((i=Math.exp(i))-1/i)/2}function pI(i){return((i=Math.exp(2*i))-1)/(i+1)}const kI=function i(s,e,n){function a(t,l){var r=t[0],h=t[1],p=t[2],k=l[0],d=l[1],u=l[2],o=k-r,c=d-h,A=o*o+c*c,g,f;if(A<rI)f=Math.log(u/p)/s,g=function(L){return[r+L*o,h+L*c,p*Math.exp(s*L*f)]};else{var m=Math.sqrt(A),y=(u*u-p*p+n*A)/(2*p*e*m),v=(u*u-p*p-n*A)/(2*u*e*m),C=Math.log(Math.sqrt(y*y+1)-y),S=Math.log(Math.sqrt(v*v+1)-v);f=(S-C)/s,g=function(L){var w=L*f,_=VB(C),R=p/(e*m)*(_*pI(s*w+C)-hI(C));return[r+R*o,h+R*c,p*_/VB(s*w+C)]}}return g.duration=f*1e3*s/Math.SQRT2,g}return a.rho=function(t){var l=Math.max(.001,+t),r=l*l,h=r*r;return i(l,r,h)},a}(Math.SQRT2,2,4);var yt=0,Xt=0,qt=0,q8=1e3,Rh,Zt,Oh=0,Ta=0,bp=0,Nl=typeof performance=="object"&&performance.now?performance:Date,H8=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(i){setTimeout(i,17)};function oc(){return Ta||(H8(dI),Ta=Nl.now()+bp)}function dI(){Ta=0}function Ph(){this._call=this._time=this._next=null}Ph.prototype=j8.prototype={constructor:Ph,restart:function(i,s,e){if(typeof i!="function")throw new TypeError("callback is not a function");e=(e==null?oc():+e)+(s==null?0:+s),!this._next&&Zt!==this&&(Zt?Zt._next=this:Rh=this,Zt=this),this._call=i,this._time=e,Oo()},stop:function(){this._call&&(this._call=null,this._time=1/0,Oo())}};function j8(i,s,e){var n=new Ph;return n.restart(i,s,e),n}function oI(){oc(),++yt;for(var i=Rh,s;i;)(s=Ta-i._time)>=0&&i._call.call(void 0,s),i=i._next;--yt}function zB(){Ta=(Oh=Nl.now())+bp,yt=Xt=0;try{oI()}finally{yt=0,cI(),Ta=0}}function uI(){var i=Nl.now(),s=i-Oh;s>q8&&(bp-=s,Oh=i)}function cI(){for(var i,s=Rh,e,n=1/0;s;)s._call?(n>s._time&&(n=s._time),i=s,s=s._next):(e=s._next,s._next=null,s=i?i._next=e:Rh=e);Zt=i,Oo(n)}function Oo(i){if(!yt){Xt&&(Xt=clearTimeout(Xt));var s=i-Ta;s>24?(i<1/0&&(Xt=setTimeout(zB,i-Nl.now()-bp)),qt&&(qt=clearInterval(qt))):(qt||(Oh=Nl.now(),qt=setInterval(uI,q8)),yt=1,H8(zB))}}function qB(i,s,e){var n=new Ph;return s=s==null?0:+s,n.restart(a=>{n.stop(),i(a+s)},s,e),n}var gI=Fp("start","end","cancel","interrupt"),BI=[],U8=0,HB=1,Po=2,ph=3,jB=4,Lo=5,kh=6;function Cp(i,s,e,n,a,t){var l=i.__transition;if(!l)i.__transition={};else if(e in l)return;AI(i,e,{name:s,index:n,group:a,on:gI,tween:BI,time:t.time,delay:t.delay,duration:t.duration,ease:t.ease,timer:null,state:U8})}function uc(i,s){var e=we(i,s);if(e.state>U8)throw new Error("too late; already scheduled");return e}function Ze(i,s){var e=we(i,s);if(e.state>ph)throw new Error("too late; already running");return e}function we(i,s){var e=i.__transition;if(!e||!(e=e[s]))throw new Error("transition not found");return e}function AI(i,s,e){var n=i.__transition,a;n[s]=e,e.timer=j8(t,0,e.time);function t(p){e.state=HB,e.timer.restart(l,e.delay,e.time),e.delay<=p&&l(p-e.delay)}function l(p){var k,d,u,o;if(e.state!==HB)return h();for(k in n)if(o=n[k],o.name===e.name){if(o.state===ph)return qB(l);o.state===jB?(o.state=kh,o.timer.stop(),o.on.call("interrupt",i,i.__data__,o.index,o.group),delete n[k]):+k<s&&(o.state=kh,o.timer.stop(),o.on.call("cancel",i,i.__data__,o.index,o.group),delete n[k])}if(qB(function(){e.state===ph&&(e.state=jB,e.timer.restart(r,e.delay,e.time),r(p))}),e.state=Po,e.on.call("start",i,i.__data__,e.index,e.group),e.state===Po){for(e.state=ph,a=new Array(u=e.tween.length),k=0,d=-1;k<u;++k)(o=e.tween[k].value.call(i,i.__data__,e.index,e.group))&&(a[++d]=o);a.length=d+1}}function r(p){for(var k=p<e.duration?e.ease.call(null,p/e.duration):(e.timer.restart(h),e.state=Lo,1),d=-1,u=a.length;++d<u;)a[d].call(i,k);e.state===Lo&&(e.on.call("end",i,i.__data__,e.index,e.group),h())}function h(){e.state=kh,e.timer.stop(),delete n[s];for(var p in n)return;delete i.__transition}}function dh(i,s){var e=i.__transition,n,a,t=!0,l;if(e){s=s==null?null:s+"";for(l in e){if((n=e[l]).name!==s){t=!1;continue}a=n.state>Po&&n.state<Lo,n.state=kh,n.timer.stop(),n.on.call(a?"interrupt":"cancel",i,i.__data__,n.index,n.group),delete e[l]}t&&delete i.__transition}}function yI(i){return this.each(function(){dh(this,i)})}function fI(i,s){var e,n;return function(){var a=Ze(this,i),t=a.tween;if(t!==e){n=e=t;for(var l=0,r=n.length;l<r;++l)if(n[l].name===s){n=n.slice(),n.splice(l,1);break}}a.tween=n}}function mI(i,s,e){var n,a;if(typeof e!="function")throw new Error;return function(){var t=Ze(this,i),l=t.tween;if(l!==n){a=(n=l).slice();for(var r={name:s,value:e},h=0,p=a.length;h<p;++h)if(a[h].name===s){a[h]=r;break}h===p&&a.push(r)}t.tween=a}}function vI(i,s){var e=this._id;if(i+="",arguments.length<2){for(var n=we(this.node(),e).tween,a=0,t=n.length,l;a<t;++a)if((l=n[a]).name===i)return l.value;return null}return this.each((s==null?fI:mI)(e,i,s))}function cc(i,s,e){var n=i._id;return i.each(function(){var a=Ze(this,n);(a.value||(a.value={}))[s]=e.apply(this,arguments)}),function(a){return we(a,n).value[s]}}function G8(i,s){var e;return(typeof s=="number"?Vn:s instanceof Ll?MB:(e=Ll(s))?(s=e,MB):eI)(i,s)}function FI(i){return function(){this.removeAttribute(i)}}function EI(i){return function(){this.removeAttributeNS(i.space,i.local)}}function bI(i,s,e){var n,a=e+"",t;return function(){var l=this.getAttribute(i);return l===a?null:l===n?t:t=s(n=l,e)}}function CI(i,s,e){var n,a=e+"",t;return function(){var l=this.getAttributeNS(i.space,i.local);return l===a?null:l===n?t:t=s(n=l,e)}}function _I(i,s,e){var n,a,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttribute(i):(l=this.getAttribute(i),h=r+"",l===h?null:l===n&&h===a?t:(a=h,t=s(n=l,r)))}}function DI(i,s,e){var n,a,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttributeNS(i.space,i.local):(l=this.getAttributeNS(i.space,i.local),h=r+"",l===h?null:l===n&&h===a?t:(a=h,t=s(n=l,r)))}}function xI(i,s){var e=Ep(i),n=e==="transform"?lI:G8;return this.attrTween(i,typeof s=="function"?(e.local?DI:_I)(e,n,cc(this,"attr."+i,s)):s==null?(e.local?EI:FI)(e):(e.local?CI:bI)(e,n,s))}function wI(i,s){return function(e){this.setAttribute(i,s.call(this,e))}}function TI(i,s){return function(e){this.setAttributeNS(i.space,i.local,s.call(this,e))}}function SI(i,s){var e,n;function a(){var t=s.apply(this,arguments);return t!==n&&(e=(n=t)&&TI(i,t)),e}return a._value=s,a}function II(i,s){var e,n;function a(){var t=s.apply(this,arguments);return t!==n&&(e=(n=t)&&wI(i,t)),e}return a._value=s,a}function RI(i,s){var e="attr."+i;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(s==null)return this.tween(e,null);if(typeof s!="function")throw new Error;var n=Ep(i);return this.tween(e,(n.local?SI:II)(n,s))}function OI(i,s){return function(){uc(this,i).delay=+s.apply(this,arguments)}}function PI(i,s){return s=+s,function(){uc(this,i).delay=s}}function LI(i){var s=this._id;return arguments.length?this.each((typeof i=="function"?OI:PI)(s,i)):we(this.node(),s).delay}function NI(i,s){return function(){Ze(this,i).duration=+s.apply(this,arguments)}}function MI(i,s){return s=+s,function(){Ze(this,i).duration=s}}function $I(i){var s=this._id;return arguments.length?this.each((typeof i=="function"?NI:MI)(s,i)):we(this.node(),s).duration}function VI(i,s){if(typeof s!="function")throw new Error;return function(){Ze(this,i).ease=s}}function zI(i){var s=this._id;return arguments.length?this.each(VI(s,i)):we(this.node(),s).ease}function qI(i,s){return function(){var e=s.apply(this,arguments);if(typeof e!="function")throw new Error;Ze(this,i).ease=e}}function HI(i){if(typeof i!="function")throw new Error;return this.each(qI(this._id,i))}function jI(i){typeof i!="function"&&(i=b8(i));for(var s=this._groups,e=s.length,n=new Array(e),a=0;a<e;++a)for(var t=s[a],l=t.length,r=n[a]=[],h,p=0;p<l;++p)(h=t[p])&&i.call(h,h.__data__,p,t)&&r.push(h);return new mn(n,this._parents,this._name,this._id)}function UI(i){if(i._id!==this._id)throw new Error;for(var s=this._groups,e=i._groups,n=s.length,a=e.length,t=Math.min(n,a),l=new Array(n),r=0;r<t;++r)for(var h=s[r],p=e[r],k=h.length,d=l[r]=new Array(k),u,o=0;o<k;++o)(u=h[o]||p[o])&&(d[o]=u);for(;r<n;++r)l[r]=s[r];return new mn(l,this._parents,this._name,this._id)}function GI(i){return(i+"").trim().split(/^|\s+/).every(function(s){var e=s.indexOf(".");return e>=0&&(s=s.slice(0,e)),!s||s==="start"})}function WI(i,s,e){var n,a,t=GI(s)?uc:Ze;return function(){var l=t(this,i),r=l.on;r!==n&&(a=(n=r).copy()).on(s,e),l.on=a}}function KI(i,s){var e=this._id;return arguments.length<2?we(this.node(),e).on.on(i):this.each(WI(e,i,s))}function YI(i){return function(){var s=this.parentNode;for(var e in this.__transition)if(+e!==i)return;s&&s.removeChild(this)}}function XI(){return this.on("end.remove",YI(this._id))}function ZI(i){var s=this._name,e=this._id;typeof i!="function"&&(i=pc(i));for(var n=this._groups,a=n.length,t=new Array(a),l=0;l<a;++l)for(var r=n[l],h=r.length,p=t[l]=new Array(h),k,d,u=0;u<h;++u)(k=r[u])&&(d=i.call(k,k.__data__,u,r))&&("__data__"in k&&(d.__data__=k.__data__),p[u]=d,Cp(p[u],s,e,u,p,we(k,e)));return new mn(t,this._parents,s,e)}function JI(i){var s=this._name,e=this._id;typeof i!="function"&&(i=E8(i));for(var n=this._groups,a=n.length,t=[],l=[],r=0;r<a;++r)for(var h=n[r],p=h.length,k,d=0;d<p;++d)if(k=h[d]){for(var u=i.call(k,k.__data__,d,h),o,c=we(k,e),A=0,g=u.length;A<g;++A)(o=u[A])&&Cp(o,s,e,A,u,c);t.push(u),l.push(k)}return new mn(t,l,s,e)}var QI=mr.prototype.constructor;function iR(){return new QI(this._groups,this._parents)}function sR(i,s){var e,n,a;return function(){var t=At(this,i),l=(this.style.removeProperty(i),At(this,i));return t===l?null:t===e&&l===n?a:a=s(e=t,n=l)}}function W8(i){return function(){this.style.removeProperty(i)}}function eR(i,s,e){var n,a=e+"",t;return function(){var l=At(this,i);return l===a?null:l===n?t:t=s(n=l,e)}}function nR(i,s,e){var n,a,t;return function(){var l=At(this,i),r=e(this),h=r+"";return r==null&&(h=r=(this.style.removeProperty(i),At(this,i))),l===h?null:l===n&&h===a?t:(a=h,t=s(n=l,r))}}function aR(i,s){var e,n,a,t="style."+s,l="end."+t,r;return function(){var h=Ze(this,i),p=h.on,k=h.value[t]==null?r||(r=W8(s)):void 0;(p!==e||a!==k)&&(n=(e=p).copy()).on(l,a=k),h.on=n}}function tR(i,s,e){var n=(i+="")=="transform"?tI:G8;return s==null?this.styleTween(i,sR(i,n)).on("end.style."+i,W8(i)):typeof s=="function"?this.styleTween(i,nR(i,n,cc(this,"style."+i,s))).each(aR(this._id,i)):this.styleTween(i,eR(i,n,s),e).on("end.style."+i,null)}function lR(i,s,e){return function(n){this.style.setProperty(i,s.call(this,n),e)}}function rR(i,s,e){var n,a;function t(){var l=s.apply(this,arguments);return l!==a&&(n=(a=l)&&lR(i,l,e)),n}return t._value=s,t}function hR(i,s,e){var n="style."+(i+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(s==null)return this.tween(n,null);if(typeof s!="function")throw new Error;return this.tween(n,rR(i,s,e??""))}function pR(i){return function(){this.textContent=i}}function kR(i){return function(){var s=i(this);this.textContent=s??""}}function dR(i){return this.tween("text",typeof i=="function"?kR(cc(this,"text",i)):pR(i==null?"":i+""))}function oR(i){return function(s){this.textContent=i.call(this,s)}}function uR(i){var s,e;function n(){var a=i.apply(this,arguments);return a!==e&&(s=(e=a)&&oR(a)),s}return n._value=i,n}function cR(i){var s="text";if(arguments.length<1)return(s=this.tween(s))&&s._value;if(i==null)return this.tween(s,null);if(typeof i!="function")throw new Error;return this.tween(s,uR(i))}function gR(){for(var i=this._name,s=this._id,e=K8(),n=this._groups,a=n.length,t=0;t<a;++t)for(var l=n[t],r=l.length,h,p=0;p<r;++p)if(h=l[p]){var k=we(h,s);Cp(h,i,e,p,l,{time:k.time+k.delay+k.duration,delay:0,duration:k.duration,ease:k.ease})}return new mn(n,this._parents,i,e)}function BR(){var i,s,e=this,n=e._id,a=e.size();return new Promise(function(t,l){var r={value:l},h={value:function(){--a===0&&t()}};e.each(function(){var p=Ze(this,n),k=p.on;k!==i&&(s=(i=k).copy(),s._.cancel.push(r),s._.interrupt.push(r),s._.end.push(h)),p.on=s}),a===0&&t()})}var AR=0;function mn(i,s,e,n){this._groups=i,this._parents=s,this._name=e,this._id=n}function K8(){return++AR}var tn=mr.prototype;mn.prototype={constructor:mn,select:ZI,selectAll:JI,selectChild:tn.selectChild,selectChildren:tn.selectChildren,filter:jI,merge:UI,selection:iR,transition:gR,call:tn.call,nodes:tn.nodes,node:tn.node,size:tn.size,empty:tn.empty,each:tn.each,on:KI,attr:xI,attrTween:RI,style:tR,styleTween:hR,text:dR,textTween:cR,remove:XI,tween:vI,delay:LI,duration:$I,ease:zI,easeVarying:HI,end:BR,[Symbol.iterator]:tn[Symbol.iterator]};function yR(i){return((i*=2)<=1?i*i*i:(i-=2)*i*i+2)/2}var fR={time:null,delay:0,duration:250,ease:yR};function mR(i,s){for(var e;!(e=i.__transition)||!(e=e[s]);)if(!(i=i.parentNode))throw new Error(`transition ${s} not found`);return e}function vR(i){var s,e;i instanceof mn?(s=i._id,i=i._name):(s=K8(),(e=fR).time=oc(),i=i==null?null:i+"");for(var n=this._groups,a=n.length,t=0;t<a;++t)for(var l=n[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&Cp(h,i,s,p,l,e||mR(h,s));return new mn(n,this._parents,i,s)}mr.prototype.interrupt=yI;mr.prototype.transition=vR;const Hr=i=>()=>i;function FR(i,{sourceEvent:s,target:e,transform:n,dispatch:a}){Object.defineProperties(this,{type:{value:i,enumerable:!0,configurable:!0},sourceEvent:{value:s,enumerable:!0,configurable:!0},target:{value:e,enumerable:!0,configurable:!0},transform:{value:n,enumerable:!0,configurable:!0},_:{value:a}})}function gn(i,s,e){this.k=i,this.x=s,this.y=e}gn.prototype={constructor:gn,scale:function(i){return i===1?this:new gn(this.k*i,this.x,this.y)},translate:function(i,s){return i===0&s===0?this:new gn(this.k,this.x+this.k*i,this.y+this.k*s)},apply:function(i){return[i[0]*this.k+this.x,i[1]*this.k+this.y]},applyX:function(i){return i*this.k+this.x},applyY:function(i){return i*this.k+this.y},invert:function(i){return[(i[0]-this.x)/this.k,(i[1]-this.y)/this.k]},invertX:function(i){return(i-this.x)/this.k},invertY:function(i){return(i-this.y)/this.k},rescaleX:function(i){return i.copy().domain(i.range().map(this.invertX,this).map(i.invert,i))},rescaleY:function(i){return i.copy().domain(i.range().map(this.invertY,this).map(i.invert,i))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var ft=new gn(1,0,0);gn.prototype;function Dk(i){i.stopImmediatePropagation()}function Ht(i){i.preventDefault(),i.stopImmediatePropagation()}function ER(i){return(!i.ctrlKey||i.type==="wheel")&&!i.button}function bR(){var i=this;return i instanceof SVGElement?(i=i.ownerSVGElement||i,i.hasAttribute("viewBox")?(i=i.viewBox.baseVal,[[i.x,i.y],[i.x+i.width,i.y+i.height]]):[[0,0],[i.width.baseVal.value,i.height.baseVal.value]]):[[0,0],[i.clientWidth,i.clientHeight]]}function UB(){return this.__zoom||ft}function CR(i){return-i.deltaY*(i.deltaMode===1?.05:i.deltaMode?1:.002)*(i.ctrlKey?10:1)}function _R(){return navigator.maxTouchPoints||"ontouchstart"in this}function DR(i,s,e){var n=i.invertX(s[0][0])-e[0][0],a=i.invertX(s[1][0])-e[1][0],t=i.invertY(s[0][1])-e[0][1],l=i.invertY(s[1][1])-e[1][1];return i.translate(a>n?(n+a)/2:Math.min(0,n)||Math.max(0,a),l>t?(t+l)/2:Math.min(0,t)||Math.max(0,l))}function xR(){var i=ER,s=bR,e=DR,n=CR,a=_R,t=[0,1/0],l=[[-1/0,-1/0],[1/0,1/0]],r=250,h=kI,p=Fp("start","zoom","end"),k,d,u,o=500,c=150,A=0,g=10;function f(E){E.property("__zoom",UB).on("wheel.zoom",w,{passive:!1}).on("mousedown.zoom",_).on("dblclick.zoom",R).filter(a).on("touchstart.zoom",N).on("touchmove.zoom",T).on("touchend.zoom touchcancel.zoom",V).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}f.transform=function(E,$,I,M){var G=E.selection?E.selection():E;G.property("__zoom",UB),E!==G?C(E,$,I,M):G.interrupt().each(function(){S(this,arguments).event(M).start().zoom(null,typeof $=="function"?$.apply(this,arguments):$).end()})},f.scaleBy=function(E,$,I,M){f.scaleTo(E,function(){var G=this.__zoom.k,Y=typeof $=="function"?$.apply(this,arguments):$;return G*Y},I,M)},f.scaleTo=function(E,$,I,M){f.transform(E,function(){var G=s.apply(this,arguments),Y=this.__zoom,li=I==null?v(G):typeof I=="function"?I.apply(this,arguments):I,pi=Y.invert(li),ei=typeof $=="function"?$.apply(this,arguments):$;return e(y(m(Y,ei),li,pi),G,l)},I,M)},f.translateBy=function(E,$,I,M){f.transform(E,function(){return e(this.__zoom.translate(typeof $=="function"?$.apply(this,arguments):$,typeof I=="function"?I.apply(this,arguments):I),s.apply(this,arguments),l)},null,M)},f.translateTo=function(E,$,I,M,G){f.transform(E,function(){var Y=s.apply(this,arguments),li=this.__zoom,pi=M==null?v(Y):typeof M=="function"?M.apply(this,arguments):M;return e(ft.translate(pi[0],pi[1]).scale(li.k).translate(typeof $=="function"?-$.apply(this,arguments):-$,typeof I=="function"?-I.apply(this,arguments):-I),Y,l)},M,G)};function m(E,$){return $=Math.max(t[0],Math.min(t[1],$)),$===E.k?E:new gn($,E.x,E.y)}function y(E,$,I){var M=$[0]-I[0]*E.k,G=$[1]-I[1]*E.k;return M===E.x&&G===E.y?E:new gn(E.k,M,G)}function v(E){return[(+E[0][0]+ +E[1][0])/2,(+E[0][1]+ +E[1][1])/2]}function C(E,$,I,M){E.on("start.zoom",function(){S(this,arguments).event(M).start()}).on("interrupt.zoom end.zoom",function(){S(this,arguments).event(M).end()}).tween("zoom",function(){var G=this,Y=arguments,li=S(G,Y).event(M),pi=s.apply(G,Y),ei=I==null?v(pi):typeof I=="function"?I.apply(G,Y):I,q=Math.max(pi[1][0]-pi[0][0],pi[1][1]-pi[0][1]),W=G.__zoom,K=typeof $=="function"?$.apply(G,Y):$,ri=h(W.invert(ei).concat(q/W.k),K.invert(ei).concat(q/K.k));return function(U){if(U===1)U=K;else{var Q=ri(U),J=q/Q[2];U=new gn(J,ei[0]-Q[0]*J,ei[1]-Q[1]*J)}li.zoom(null,U)}})}function S(E,$,I){return!I&&E.__zooming||new L(E,$)}function L(E,$){this.that=E,this.args=$,this.active=0,this.sourceEvent=null,this.extent=s.apply(E,$),this.taps=0}L.prototype={event:function(E){return E&&(this.sourceEvent=E),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(E,$){return this.mouse&&E!=="mouse"&&(this.mouse[1]=$.invert(this.mouse[0])),this.touch0&&E!=="touch"&&(this.touch0[1]=$.invert(this.touch0[0])),this.touch1&&E!=="touch"&&(this.touch1[1]=$.invert(this.touch1[0])),this.that.__zoom=$,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(E){var $=fe(this.that).datum();p.call(E,this.that,new FR(E,{sourceEvent:this.sourceEvent,target:f,transform:this.that.__zoom,dispatch:p}),$)}};function w(E,...$){if(!i.apply(this,arguments))return;var I=S(this,$).event(E),M=this.__zoom,G=Math.max(t[0],Math.min(t[1],M.k*Math.pow(2,n.apply(this,arguments)))),Y=Me(E);if(I.wheel)(I.mouse[0][0]!==Y[0]||I.mouse[0][1]!==Y[1])&&(I.mouse[1]=M.invert(I.mouse[0]=Y)),clearTimeout(I.wheel);else{if(M.k===G)return;I.mouse=[Y,M.invert(Y)],dh(this),I.start()}Ht(E),I.wheel=setTimeout(li,c),I.zoom("mouse",e(y(m(M,G),I.mouse[0],I.mouse[1]),I.extent,l));function li(){I.wheel=null,I.end()}}function _(E,...$){if(u||!i.apply(this,arguments))return;var I=E.currentTarget,M=S(this,$,!0).event(E),G=fe(E.view).on("mousemove.zoom",ei,!0).on("mouseup.zoom",q,!0),Y=Me(E,I),li=E.clientX,pi=E.clientY;O8(E.view),Dk(E),M.mouse=[Y,this.__zoom.invert(Y)],dh(this),M.start();function ei(W){if(Ht(W),!M.moved){var K=W.clientX-li,ri=W.clientY-pi;M.moved=K*K+ri*ri>A}M.event(W).zoom("mouse",e(y(M.that.__zoom,M.mouse[0]=Me(W,I),M.mouse[1]),M.extent,l))}function q(W){G.on("mousemove.zoom mouseup.zoom",null),P8(W.view,M.moved),Ht(W),M.event(W).end()}}function R(E,...$){if(i.apply(this,arguments)){var I=this.__zoom,M=Me(E.changedTouches?E.changedTouches[0]:E,this),G=I.invert(M),Y=I.k*(E.shiftKey?.5:2),li=e(y(m(I,Y),M,G),s.apply(this,$),l);Ht(E),r>0?fe(this).transition().duration(r).call(C,li,M,E):fe(this).call(f.transform,li,M,E)}}function N(E,...$){if(i.apply(this,arguments)){var I=E.touches,M=I.length,G=S(this,$,E.changedTouches.length===M).event(E),Y,li,pi,ei;for(Dk(E),li=0;li<M;++li)pi=I[li],ei=Me(pi,this),ei=[ei,this.__zoom.invert(ei),pi.identifier],G.touch0?!G.touch1&&G.touch0[2]!==ei[2]&&(G.touch1=ei,G.taps=0):(G.touch0=ei,Y=!0,G.taps=1+!!k);k&&(k=clearTimeout(k)),Y&&(G.taps<2&&(d=ei[0],k=setTimeout(function(){k=null},o)),dh(this),G.start())}}function T(E,...$){if(this.__zooming){var I=S(this,$).event(E),M=E.changedTouches,G=M.length,Y,li,pi,ei;for(Ht(E),Y=0;Y<G;++Y)li=M[Y],pi=Me(li,this),I.touch0&&I.touch0[2]===li.identifier?I.touch0[0]=pi:I.touch1&&I.touch1[2]===li.identifier&&(I.touch1[0]=pi);if(li=I.that.__zoom,I.touch1){var q=I.touch0[0],W=I.touch0[1],K=I.touch1[0],ri=I.touch1[1],U=(U=K[0]-q[0])*U+(U=K[1]-q[1])*U,Q=(Q=ri[0]-W[0])*Q+(Q=ri[1]-W[1])*Q;li=m(li,Math.sqrt(U/Q)),pi=[(q[0]+K[0])/2,(q[1]+K[1])/2],ei=[(W[0]+ri[0])/2,(W[1]+ri[1])/2]}else if(I.touch0)pi=I.touch0[0],ei=I.touch0[1];else return;I.zoom("touch",e(y(li,pi,ei),I.extent,l))}}function V(E,...$){if(this.__zooming){var I=S(this,$).event(E),M=E.changedTouches,G=M.length,Y,li;for(Dk(E),u&&clearTimeout(u),u=setTimeout(function(){u=null},o),Y=0;Y<G;++Y)li=M[Y],I.touch0&&I.touch0[2]===li.identifier?delete I.touch0:I.touch1&&I.touch1[2]===li.identifier&&delete I.touch1;if(I.touch1&&!I.touch0&&(I.touch0=I.touch1,delete I.touch1),I.touch0)I.touch0[1]=this.__zoom.invert(I.touch0[0]);else if(I.end(),I.taps===2&&(li=Me(li,this),Math.hypot(d[0]-li[0],d[1]-li[1])<g)){var pi=fe(this).on("dblclick.zoom");pi&&pi.apply(this,arguments)}}}return f.wheelDelta=function(E){return arguments.length?(n=typeof E=="function"?E:Hr(+E),f):n},f.filter=function(E){return arguments.length?(i=typeof E=="function"?E:Hr(!!E),f):i},f.touchable=function(E){return arguments.length?(a=typeof E=="function"?E:Hr(!!E),f):a},f.extent=function(E){return arguments.length?(s=typeof E=="function"?E:Hr([[+E[0][0],+E[0][1]],[+E[1][0],+E[1][1]]]),f):s},f.scaleExtent=function(E){return arguments.length?(t[0]=+E[0],t[1]=+E[1],f):[t[0],t[1]]},f.translateExtent=function(E){return arguments.length?(l[0][0]=+E[0][0],l[1][0]=+E[1][0],l[0][1]=+E[0][1],l[1][1]=+E[1][1],f):[[l[0][0],l[0][1]],[l[1][0],l[1][1]]]},f.constrain=function(E){return arguments.length?(e=E,f):e},f.duration=function(E){return arguments.length?(r=+E,f):r},f.interpolate=function(E){return arguments.length?(h=E,f):h},f.on=function(){var E=p.on.apply(p,arguments);return E===p?f:E},f.clickDistance=function(E){return arguments.length?(A=(E=+E)*E,f):Math.sqrt(A)},f.tapDistance=function(E){return arguments.length?(g=+E,f):g},f}var Fi=(i=>(i.Left="left",i.Top="top",i.Right="right",i.Bottom="bottom",i))(Fi||{}),gc=(i=>(i.Partial="partial",i.Full="full",i))(gc||{}),ca=(i=>(i.Bezier="default",i.SimpleBezier="simple-bezier",i.Straight="straight",i.Step="step",i.SmoothStep="smoothstep",i))(ca||{}),ia=(i=>(i.Strict="strict",i.Loose="loose",i))(ia||{}),No=(i=>(i.Arrow="arrow",i.ArrowClosed="arrowclosed",i))(No||{}),ul=(i=>(i.Free="free",i.Vertical="vertical",i.Horizontal="horizontal",i))(ul||{});function Mo(i){var s,e;const n=((e=(s=i.composedPath)==null?void 0:s.call(i))==null?void 0:e[0])||i.target,a=typeof(n==null?void 0:n.hasAttribute)=="function"?n.hasAttribute("contenteditable"):!1,t=typeof(n==null?void 0:n.closest)=="function"?n.closest(".nokey"):null;return["INPUT","SELECT","TEXTAREA"].includes(n==null?void 0:n.nodeName)||a||!!t}function wR(i){return i.ctrlKey||i.metaKey||i.shiftKey}function GB(i,s,e,n){const a=s.replace("+",`
`).replace(`

`,`
+`).split(`
`).map(l=>l.trim().toLowerCase());if(a.length===1)return i.toLowerCase()===s.toLowerCase();n||e.add(i.toLowerCase());const t=a.every((l,r)=>e.has(l)&&Array.from(e.values())[r]===a[r]);return n&&e.delete(i.toLowerCase()),t}function TR(i,s){return e=>{if(!e.code&&!e.key)return!1;const n=SR(e.code,i);return Array.isArray(i)?i.some(a=>GB(e[n],a,s,e.type==="keyup")):GB(e[n],i,s,e.type==="keyup")}}function SR(i,s){return s.includes(i)?"code":"key"}function cl(i,s){const e=Mi(()=>vi(s==null?void 0:s.actInsideInputWithModifier)??!1),n=Mi(()=>vi(s==null?void 0:s.target)??window),a=Z(vi(i)===!0);let t=!1;const l=new Set;let r=p(vi(i));bi(()=>vi(i),(k,d)=>{typeof d=="boolean"&&typeof k!="boolean"&&h(),r=p(k)},{immediate:!0}),v8(["blur","contextmenu"],h),DB((...k)=>r(...k),k=>{t=wR(k),!((!t||t&&!e.value)&&Mo(k))&&(k.preventDefault(),a.value=!0)},{eventName:"keydown",target:n}),DB((...k)=>r(...k),k=>{if(a.value){if((!t||t&&!e.value)&&Mo(k))return;t=!1,a.value=!1}},{eventName:"keyup",target:n});function h(){t=!1,l.clear(),a.value=vi(i)===!0}function p(k){return k===null?(h(),()=>!1):typeof k=="boolean"?(h(),a.value=k,()=>!1):Array.isArray(k)||typeof k=="string"?TR(k,l):k}return a}const Y8="vue-flow__node-desc",X8="vue-flow__edge-desc",IR="vue-flow__aria-live",Z8=["Enter"," ","Escape"],at={ArrowUp:{x:0,y:-1},ArrowDown:{x:0,y:1},ArrowLeft:{x:-1,y:0},ArrowRight:{x:1,y:0}};function Lh(i){return{...i.computedPosition||{x:0,y:0},width:i.dimensions.width||0,height:i.dimensions.height||0}}function Nh(i,s){const e=Math.max(0,Math.min(i.x+i.width,s.x+s.width)-Math.max(i.x,s.x)),n=Math.max(0,Math.min(i.y+i.height,s.y+s.height)-Math.max(i.y,s.y));return Math.ceil(e*n)}function _p(i){return{width:i.offsetWidth,height:i.offsetHeight}}function Sa(i,s=0,e=1){return Math.min(Math.max(i,s),e)}function J8(i,s){return{x:Sa(i.x,s[0][0],s[1][0]),y:Sa(i.y,s[0][1],s[1][1])}}function WB(i){const s=i.getRootNode();return"elementFromPoint"in s?s:window.document}function sa(i){return i&&typeof i=="object"&&"id"in i&&"source"in i&&"target"in i}function ba(i){return i&&typeof i=="object"&&"id"in i&&"position"in i&&!sa(i)}function Jt(i){return ba(i)&&"computedPosition"in i}function jr(i){return!Number.isNaN(i)&&Number.isFinite(i)}function RR(i){return jr(i.width)&&jr(i.height)&&jr(i.x)&&jr(i.y)}function OR(i,s,e){const n={id:i.id.toString(),type:i.type??"default",dimensions:Ya({width:0,height:0}),computedPosition:Ya({z:0,...i.position}),handleBounds:{source:[],target:[]},draggable:void 0,selectable:void 0,connectable:void 0,focusable:void 0,selected:!1,dragging:!1,resizing:!1,initialized:!1,isParent:!1,position:{x:0,y:0},data:us(i.data)?i.data:{},events:Ya(us(i.events)?i.events:{})};return Object.assign(s??n,i,{id:i.id.toString(),parentNode:e})}function Q8(i,s,e){var n,a;const t={id:i.id.toString(),type:i.type??(s==null?void 0:s.type)??"default",source:i.source.toString(),target:i.target.toString(),sourceHandle:(n=i.sourceHandle)==null?void 0:n.toString(),targetHandle:(a=i.targetHandle)==null?void 0:a.toString(),updatable:i.updatable??(e==null?void 0:e.updatable),selectable:i.selectable??(e==null?void 0:e.selectable),focusable:i.focusable??(e==null?void 0:e.focusable),data:us(i.data)?i.data:{},events:Ya(us(i.events)?i.events:{}),label:i.label??"",interactionWidth:i.interactionWidth??(e==null?void 0:e.interactionWidth),...e??{}};return Object.assign(s??t,i,{id:i.id.toString()})}function i6(i,s,e,n){const a=typeof i=="string"?i:i.id,t=new Set,l=n==="source"?"target":"source";for(const r of e)r[l]===a&&t.add(r[n]);return s.filter(r=>t.has(r.id))}function PR(...i){if(i.length===3){const[t,l,r]=i;return i6(t,l,r,"target")}const[s,e]=i,n=typeof s=="string"?s:s.id;return e.filter(t=>sa(t)&&t.source===n).map(t=>e.find(l=>ba(l)&&l.id===t.target))}function LR(...i){if(i.length===3){const[t,l,r]=i;return i6(t,l,r,"source")}const[s,e]=i,n=typeof s=="string"?s:s.id;return e.filter(t=>sa(t)&&t.target===n).map(t=>e.find(l=>ba(l)&&l.id===t.source))}function s6({source:i,sourceHandle:s,target:e,targetHandle:n}){return`vueflow__edge-${i}${s??""}-${e}${n??""}`}function NR(i,s){return s.some(e=>sa(e)&&e.source===i.source&&e.target===i.target&&(e.sourceHandle===i.sourceHandle||!e.sourceHandle&&!i.sourceHandle)&&(e.targetHandle===i.targetHandle||!e.targetHandle&&!i.targetHandle))}function $o({x:i,y:s},{x:e,y:n,zoom:a}){return{x:i*a+e,y:s*a+n}}function Ml({x:i,y:s},{x:e,y:n,zoom:a},t=!1,l=[1,1]){const r={x:(i-e)/a,y:(s-n)/a};return t?Dp(r,l):r}function MR(i,s){return{x:Math.min(i.x,s.x),y:Math.min(i.y,s.y),x2:Math.max(i.x2,s.x2),y2:Math.max(i.y2,s.y2)}}function e6({x:i,y:s,width:e,height:n}){return{x:i,y:s,x2:i+e,y2:s+n}}function $R({x:i,y:s,x2:e,y2:n}){return{x:i,y:s,width:e-i,height:n-s}}function n6(i){let s={x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY,x2:Number.NEGATIVE_INFINITY,y2:Number.NEGATIVE_INFINITY};for(let e=0;e<i.length;e++){const n=i[e];s=MR(s,e6({...n.computedPosition,...n.dimensions}))}return $R(s)}function a6(i,s,e={x:0,y:0,zoom:1},n=!1,a=!1){const t={...Ml(s,e),width:s.width/e.zoom,height:s.height/e.zoom},l=[];for(const r of i){const{dimensions:h,selectable:p=!0,hidden:k=!1}=r,d=h.width??r.width??null,u=h.height??r.height??null;if(a&&!p||k)continue;const o=Nh(t,Lh(r)),c=d===null||u===null,A=n&&o>0,g=(d??0)*(u??0);(c||A||o>=g||r.dragging)&&l.push(r)}return l}function t6(i,s){const e=new Set;if(typeof i=="string")e.add(i);else if(i.length>=1)for(const n of i)e.add(n.id);return s.filter(n=>e.has(n.source)||e.has(n.target))}function KB(i,s,e,n,a,t=.1,l={x:0,y:0}){const r=s/(i.width*(1+t)),h=e/(i.height*(1+t)),p=Math.min(r,h),k=Sa(p,n,a),d=i.x+i.width/2,u=i.y+i.height/2,o=s/2-d*k+(l.x??0),c=e/2-u*k+(l.y??0);return{x:o,y:c,zoom:k}}function VR(i,s){return{x:s.x+i.x,y:s.y+i.y,z:(i.z>s.z?i.z:s.z)+1}}function l6(i,s){if(!i.parentNode)return!1;const e=s(i.parentNode);return e?e.selected?!0:l6(e,s):!1}function $l(i,s){return typeof i>"u"?"":typeof i=="string"?i:`${s?`${s}__`:""}${Object.keys(i).sort().map(n=>`${n}=${i[n]}`).join("&")}`}function YB(i,s,e){return i<s?Sa(Math.abs(i-s),1,s)/s:i>e?-Sa(Math.abs(i-e),1,s)/s:0}function r6(i,s,e=15,n=40){const a=YB(i.x,n,s.width-n)*e,t=YB(i.y,n,s.height-n)*e;return[a,t]}function xk(i,s){if(s){const e=i.position.x+i.dimensions.width-s.dimensions.width,n=i.position.y+i.dimensions.height-s.dimensions.height;if(e>0||n>0||i.position.x<0||i.position.y<0){let a={};if(typeof s.style=="function"?a={...s.style(s)}:s.style&&(a={...s.style}),a.width=a.width??`${s.dimensions.width}px`,a.height=a.height??`${s.dimensions.height}px`,e>0)if(typeof a.width=="string"){const t=Number(a.width.replace("px",""));a.width=`${t+e}px`}else a.width+=e;if(n>0)if(typeof a.height=="string"){const t=Number(a.height.replace("px",""));a.height=`${t+n}px`}else a.height+=n;if(i.position.x<0){const t=Math.abs(i.position.x);if(s.position.x=s.position.x-t,typeof a.width=="string"){const l=Number(a.width.replace("px",""));a.width=`${l+t}px`}else a.width+=t;i.position.x=0}if(i.position.y<0){const t=Math.abs(i.position.y);if(s.position.y=s.position.y-t,typeof a.height=="string"){const l=Number(a.height.replace("px",""));a.height=`${l+t}px`}else a.height+=t;i.position.y=0}s.dimensions.width=Number(a.width.toString().replace("px","")),s.dimensions.height=Number(a.height.toString().replace("px","")),typeof s.style=="function"?s.style=t=>{const l=s.style;return{...l(t),...a}}:s.style={...s.style,...a}}}}function XB(i,s){var e,n;const a=i.filter(l=>l.type==="add"||l.type==="remove");for(const l of a)if(l.type==="add")s.findIndex(h=>h.id===l.item.id)===-1&&s.push(l.item);else if(l.type==="remove"){const r=s.findIndex(h=>h.id===l.id);r!==-1&&s.splice(r,1)}const t=s.map(l=>l.id);for(const l of s)for(const r of i)if(r.id===l.id)switch(r.type){case"select":l.selected=r.selected;break;case"position":if(Jt(l)&&(typeof r.position<"u"&&(l.position=r.position),typeof r.dragging<"u"&&(l.dragging=r.dragging),l.expandParent&&l.parentNode)){const h=s[t.indexOf(l.parentNode)];h&&Jt(h)&&xk(l,h)}break;case"dimensions":if(Jt(l)&&(typeof r.dimensions<"u"&&(l.dimensions=r.dimensions),typeof r.updateStyle<"u"&&r.updateStyle&&(l.style={...l.style||{},width:`${(e=r.dimensions)==null?void 0:e.width}px`,height:`${(n=r.dimensions)==null?void 0:n.height}px`}),typeof r.resizing<"u"&&(l.resizing=r.resizing),l.expandParent&&l.parentNode)){const h=s[t.indexOf(l.parentNode)];h&&Jt(h)&&(!!h.dimensions.width&&!!h.dimensions.height?xk(l,h):Hi(()=>{xk(l,h)}))}break}return s}function On(i,s){return{id:i,type:"select",selected:s}}function ZB(i){return{item:i,type:"add"}}function JB(i){return{id:i,type:"remove"}}function QB(i,s,e,n,a){return{id:i,source:s,target:e,sourceHandle:n||null,targetHandle:a||null,type:"remove"}}function zn(i,s=new Set,e=!1){const n=[];for(const[a,t]of i){const l=s.has(a);!(t.selected===void 0&&!l)&&t.selected!==l&&(e&&(t.selected=l),n.push(On(t.id,l)))}return n}function fi(i){const s=new Set;let e=!1;const n=()=>s.size>0;i&&(e=!0,s.add(i));const a=r=>{s.delete(r)};return{on:r=>{i&&e&&s.delete(i),s.add(r);const h=()=>{a(r),i&&e&&s.add(i)};return vp(h),{off:h}},off:a,trigger:r=>Promise.all(Array.from(s).map(h=>h(r))),hasListeners:n,fns:s}}function i0(i,s,e){let n=i;do{if(n&&n.matches(s))return!0;if(n===e)return!1;n=n.parentElement}while(n);return!1}function zR(i,s,e,n,a){var t,l;const r=[];for(const h of i)(h.selected||h.id===a)&&(!h.parentNode||!l6(h,n))&&(h.draggable||s&&typeof h.draggable>"u")&&r.push(Ya({id:h.id,position:h.position||{x:0,y:0},distance:{x:e.x-((t=h.computedPosition)==null?void 0:t.x)||0,y:e.y-((l=h.computedPosition)==null?void 0:l.y)||0},from:h.computedPosition,extent:h.extent,parentNode:h.parentNode,dimensions:h.dimensions,expandParent:h.expandParent}));return r}function wk({id:i,dragItems:s,findNode:e}){const n=[];for(const a of s){const t=e(a.id);t&&n.push(t)}return[i?n.find(a=>a.id===i):n[0],n]}function h6(i){if(Array.isArray(i))switch(i.length){case 1:return[i[0],i[0],i[0],i[0]];case 2:return[i[0],i[1],i[0],i[1]];case 3:return[i[0],i[1],i[2],i[1]];case 4:return i;default:return[0,0,0,0]}return[i,i,i,i]}function qR(i,s,e){const[n,a,t,l]=typeof i!="string"?h6(i.padding):[0,0,0,0];return e&&typeof e.computedPosition.x<"u"&&typeof e.computedPosition.y<"u"&&typeof e.dimensions.width<"u"&&typeof e.dimensions.height<"u"?[[e.computedPosition.x+l,e.computedPosition.y+n],[e.computedPosition.x+e.dimensions.width-a,e.computedPosition.y+e.dimensions.height-t]]:!1}function HR(i,s,e,n){let a=i.extent||e;if((a==="parent"||!Array.isArray(a)&&(a==null?void 0:a.range)==="parent")&&!i.expandParent)if(i.parentNode&&n&&i.dimensions.width&&i.dimensions.height){const t=qR(a,i,n);t&&(a=t)}else s(new vs(cs.NODE_EXTENT_INVALID,i.id)),a=e;else if(Array.isArray(a)){const t=(n==null?void 0:n.computedPosition.x)||0,l=(n==null?void 0:n.computedPosition.y)||0;a=[[a[0][0]+t,a[0][1]+l],[a[1][0]+t,a[1][1]+l]]}else if(a!=="parent"&&(a!=null&&a.range)&&Array.isArray(a.range)){const[t,l,r,h]=h6(a.padding),p=(n==null?void 0:n.computedPosition.x)||0,k=(n==null?void 0:n.computedPosition.y)||0;a=[[a.range[0][0]+p+h,a.range[0][1]+k+t],[a.range[1][0]+p-l,a.range[1][1]+k-r]]}return a==="parent"?[[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY]]:a}function jR({width:i,height:s},e){return[e[0],[e[1][0]-(i||0),e[1][1]-(s||0)]]}function Bc(i,s,e,n,a){const t=jR(i.dimensions,HR(i,e,n,a)),l=J8(s,t);return{position:{x:l.x-((a==null?void 0:a.computedPosition.x)||0),y:l.y-((a==null?void 0:a.computedPosition.y)||0)},computedPosition:l}}function mt(i,s,e=Fi.Left,n=!1){const a=((s==null?void 0:s.x)??0)+i.computedPosition.x,t=((s==null?void 0:s.y)??0)+i.computedPosition.y,{width:l,height:r}=s??WR(i);if(n)return{x:a+l/2,y:t+r/2};switch((s==null?void 0:s.position)??e){case Fi.Top:return{x:a+l/2,y:t};case Fi.Right:return{x:a+l,y:t+r/2};case Fi.Bottom:return{x:a+l/2,y:t+r};case Fi.Left:return{x:a,y:t+r/2}}}function s0(i,s){return i&&(s?i.find(e=>e.id===s):i[0])||null}function UR({sourcePos:i,targetPos:s,sourceWidth:e,sourceHeight:n,targetWidth:a,targetHeight:t,width:l,height:r,viewport:h}){const p={x:Math.min(i.x,s.x),y:Math.min(i.y,s.y),x2:Math.max(i.x+e,s.x+a),y2:Math.max(i.y+n,s.y+t)};p.x===p.x2&&(p.x2+=1),p.y===p.y2&&(p.y2+=1);const k=e6({x:(0-h.x)/h.zoom,y:(0-h.y)/h.zoom,width:l/h.zoom,height:r/h.zoom}),d=Math.max(0,Math.min(k.x2,p.x2)-Math.max(k.x,p.x)),u=Math.max(0,Math.min(k.y2,p.y2)-Math.max(k.y,p.y));return Math.ceil(d*u)>0}function GR(i,s,e=!1){const n=typeof i.zIndex=="number";let a=n?i.zIndex:0;const t=s(i.source),l=s(i.target);return!t||!l?0:(e&&(a=n?i.zIndex:Math.max(t.computedPosition.z||0,l.computedPosition.z||0)),a)}var cs=(i=>(i.MISSING_STYLES="MISSING_STYLES",i.MISSING_VIEWPORT_DIMENSIONS="MISSING_VIEWPORT_DIMENSIONS",i.NODE_INVALID="NODE_INVALID",i.NODE_NOT_FOUND="NODE_NOT_FOUND",i.NODE_MISSING_PARENT="NODE_MISSING_PARENT",i.NODE_TYPE_MISSING="NODE_TYPE_MISSING",i.NODE_EXTENT_INVALID="NODE_EXTENT_INVALID",i.EDGE_INVALID="EDGE_INVALID",i.EDGE_NOT_FOUND="EDGE_NOT_FOUND",i.EDGE_SOURCE_MISSING="EDGE_SOURCE_MISSING",i.EDGE_TARGET_MISSING="EDGE_TARGET_MISSING",i.EDGE_TYPE_MISSING="EDGE_TYPE_MISSING",i.EDGE_SOURCE_TARGET_SAME="EDGE_SOURCE_TARGET_SAME",i.EDGE_SOURCE_TARGET_MISSING="EDGE_SOURCE_TARGET_MISSING",i.EDGE_ORPHANED="EDGE_ORPHANED",i.USEVUEFLOW_OPTIONS="USEVUEFLOW_OPTIONS",i))(cs||{});const e0={MISSING_STYLES:()=>"It seems that you haven't loaded the necessary styles. Please import '@vue-flow/core/dist/style.css' to ensure that the graph is rendered correctly",MISSING_VIEWPORT_DIMENSIONS:()=>"The Vue Flow parent container needs a width and a height to render the graph",NODE_INVALID:i=>`Node is invalid
Node: ${i}`,NODE_NOT_FOUND:i=>`Node not found
Node: ${i}`,NODE_MISSING_PARENT:(i,s)=>`Node is missing a parent
Node: ${i}
Parent: ${s}`,NODE_TYPE_MISSING:i=>`Node type is missing
Type: ${i}`,NODE_EXTENT_INVALID:i=>`Only child nodes can use a parent extent
Node: ${i}`,EDGE_INVALID:i=>`An edge needs a source and a target
Edge: ${i}`,EDGE_SOURCE_MISSING:(i,s)=>`Edge source is missing
Edge: ${i} 
Source: ${s}`,EDGE_TARGET_MISSING:(i,s)=>`Edge target is missing
Edge: ${i} 
Target: ${s}`,EDGE_TYPE_MISSING:i=>`Edge type is missing
Type: ${i}`,EDGE_SOURCE_TARGET_SAME:(i,s,e)=>`Edge source and target are the same
Edge: ${i} 
Source: ${s} 
Target: ${e}`,EDGE_SOURCE_TARGET_MISSING:(i,s,e)=>`Edge source or target is missing
Edge: ${i} 
Source: ${s} 
Target: ${e}`,EDGE_ORPHANED:i=>`Edge was orphaned (suddenly missing source or target) and has been removed
Edge: ${i}`,EDGE_NOT_FOUND:i=>`Edge not found
Edge: ${i}`,USEVUEFLOW_OPTIONS:()=>"The options parameter is deprecated and will be removed in the next major version. Please use the id parameter instead"};class vs extends Error{constructor(s,...e){var n;super((n=e0[s])==null?void 0:n.call(e0,...e)),this.name="VueFlowError",this.code=s,this.args=e}}function Ac(i){return"clientX"in i}function p6(i){return"sourceEvent"in i}function Yn(i,s){var e,n;const a=Ac(i),t=a?i.clientX:(e=i.touches)==null?void 0:e[0].clientX,l=a?i.clientY:(n=i.touches)==null?void 0:n[0].clientY;return{x:t-((s==null?void 0:s.left)??0),y:l-((s==null?void 0:s.top)??0)}}const Mh=()=>{var i;return typeof navigator<"u"&&((i=navigator==null?void 0:navigator.userAgent)==null?void 0:i.indexOf("Mac"))>=0};function WR(i){var s,e;return{width:((s=i.dimensions)==null?void 0:s.width)??i.width??0,height:((e=i.dimensions)==null?void 0:e.height)??i.height??0}}function Dp(i,s=[1,1]){return{x:s[0]*Math.round(i.x/s[0]),y:s[1]*Math.round(i.y/s[1])}}const KR=()=>!0;function Tk(i){i==null||i.classList.remove("valid","connecting","vue-flow__handle-valid","vue-flow__handle-connecting")}function YR(i,s,e){const n=[],a={x:i.x-e,y:i.y-e,width:e*2,height:e*2};for(const t of s.values())Nh(a,Lh(t))>0&&n.push(t);return n}const XR=250;function ZR(i,s,e,n){var a,t;let l=[],r=Number.POSITIVE_INFINITY;const h=YR(i,e,s+XR);for(const p of h){const k=[...((a=p.handleBounds)==null?void 0:a.source)??[],...((t=p.handleBounds)==null?void 0:t.target)??[]];for(const d of k){if(n.nodeId===d.nodeId&&n.type===d.type&&n.id===d.id)continue;const{x:u,y:o}=mt(p,d,d.position,!0),c=Math.sqrt((u-i.x)**2+(o-i.y)**2);c>s||(c<r?(l=[{...d,x:u,y:o}],r=c):c===r&&l.push({...d,x:u,y:o}))}}if(!l.length)return null;if(l.length>1){const p=n.type==="source"?"target":"source";return l.find(k=>k.type===p)??l[0]}return l[0]}function n0(i,{handle:s,connectionMode:e,fromNodeId:n,fromHandleId:a,fromType:t,doc:l,lib:r,flowId:h,isValidConnection:p=KR},k,d,u){const o=t==="target",c=s?l.querySelector(`.${r}-flow__handle[data-id="${h}-${s==null?void 0:s.nodeId}-${s==null?void 0:s.id}-${s==null?void 0:s.type}"]`):null,{x:A,y:g}=Yn(i),f=l.elementFromPoint(A,g),m=f!=null&&f.classList.contains(`${r}-flow__handle`)?f:c,y={handleDomNode:m,isValid:!1,connection:null,toHandle:null};if(m){const v=k6(void 0,m),C=m.getAttribute("data-nodeid"),S=m.getAttribute("data-handleid"),L=m.classList.contains("connectable"),w=m.classList.contains("connectableend");if(!C||!v)return y;const _={source:o?C:n,sourceHandle:o?S:a,target:o?n:C,targetHandle:o?a:S};y.connection=_;const N=L&&w&&(e===ia.Strict?o&&v==="source"||!o&&v==="target":C!==n||S!==a);y.isValid=N&&p(_,{nodes:d,edges:k,sourceNode:u(n),targetNode:u(C)}),y.toHandle=s}return y}function k6(i,s){return i||(s!=null&&s.classList.contains("target")?"target":s!=null&&s.classList.contains("source")?"source":null)}function JR(i,s){let e=null;return s?e="valid":i&&!s&&(e="invalid"),e}function QR(i,s){let e=null;return s?e=!0:i&&!s&&(e=!1),e}function iO(i,s,e,n,a,t=!1){var l,r,h;const p=n.get(i);if(!p)return null;const k=a===ia.Strict?(l=p.handleBounds)==null?void 0:l[s]:[...((r=p.handleBounds)==null?void 0:r.source)??[],...((h=p.handleBounds)==null?void 0:h.target)??[]],d=(e?k==null?void 0:k.find(u=>u.id===e):k==null?void 0:k[0])??null;return d&&t?{...d,...mt(p,d,d.position,!0)}:d}const Vo={[Fi.Left]:Fi.Right,[Fi.Right]:Fi.Left,[Fi.Top]:Fi.Bottom,[Fi.Bottom]:Fi.Top},sO=["production","prod"];function xp(i,...s){d6()&&console.warn(`[Vue Flow]: ${i}`,...s)}function d6(){return!sO.includes("production")}function a0(i,s,e,n){const a=s.querySelectorAll(`.vue-flow__handle.${i}`);return Array.from(a).map(l=>{const r=l.getBoundingClientRect();return{id:l.getAttribute("data-handleid"),position:l.getAttribute("data-handlepos"),nodeId:l.getAttribute("data-nodeid"),type:i,x:(r.left-e.left)/n,y:(r.top-e.top)/n,..._p(l)}})}function zo(i,s,e,n,a,t=!1,l){a.value=!1,i.selected?(t||i.selected&&s)&&(n([i]),Hi(()=>{l.blur()})):e([i])}function us(i){return typeof mi(i)<"u"}function eO(i,s,e,n){if(!i||!i.source||!i.target)return e(new vs(cs.EDGE_INVALID,(i==null?void 0:i.id)??"[ID UNKNOWN]")),!1;let a;return sa(i)?a=i:a={...i,id:s6(i)},a=Q8(a,void 0,n),NR(a,s)?!1:a}function nO(i,s,e,n,a){if(!s.source||!s.target)return a(new vs(cs.EDGE_INVALID,i.id)),!1;if(!e)return a(new vs(cs.EDGE_NOT_FOUND,i.id)),!1;const{id:t,...l}=i;return{...l,id:n?s6(s):t,source:s.source,target:s.target,sourceHandle:s.sourceHandle,targetHandle:s.targetHandle}}function t0(i,s,e){const n={},a=[];for(let t=0;t<i.length;++t){const l=i[t];if(!ba(l)){e(new vs(cs.NODE_INVALID,l==null?void 0:l.id)||`[ID UNKNOWN|INDEX ${t}]`);continue}const r=OR(l,s(l.id),l.parentNode);l.parentNode&&(n[l.parentNode]=!0),a[t]=r}for(const t of a){const l=s(t.parentNode)||a.find(r=>r.id===t.parentNode);t.parentNode&&!l&&e(new vs(cs.NODE_MISSING_PARENT,t.id,t.parentNode)),(t.parentNode||n[t.id])&&(n[t.id]&&(t.isParent=!0),l&&(l.isParent=!0))}return a}function l0(i,s,e,n,a,t){let l=a;const r=n.get(l)||new Map;n.set(l,r.set(e,s)),l=`${a}-${i}`;const h=n.get(l)||new Map;if(n.set(l,h.set(e,s)),t){l=`${a}-${i}-${t}`;const p=n.get(l)||new Map;n.set(l,p.set(e,s))}}function Sk(i,s,e){i.clear(),s.clear();for(const n of e){const{source:a,target:t,sourceHandle:l=null,targetHandle:r=null}=n,h={edgeId:n.id,source:a,target:t,sourceHandle:l,targetHandle:r},p=`${a}-${l}--${t}-${r}`,k=`${t}-${r}--${a}-${l}`;l0("source",h,k,i,a,l),l0("target",h,p,i,t,r),s.set(n.id,n)}}function r0(i,s){if(i.size!==s.size)return!1;for(const e of i)if(!s.has(e))return!1;return!0}function Ik(i,s,e,n,a,t,l,r){const h=[];for(const p of i){const k=sa(p)?p:eO(p,r,a,t);if(!k)continue;const d=e(k.source),u=e(k.target);if(!d||!u){a(new vs(cs.EDGE_SOURCE_TARGET_MISSING,k.id,k.source,k.target));continue}if(!d){a(new vs(cs.EDGE_SOURCE_MISSING,k.id,k.source));continue}if(!u){a(new vs(cs.EDGE_TARGET_MISSING,k.id,k.target));continue}if(s&&!s(k,{edges:r,nodes:l,sourceNode:d,targetNode:u})){a(new vs(cs.EDGE_INVALID,k.id));continue}const o=n(k.id);h.push({...Q8(k,o,t),sourceNode:d,targetNode:u})}return h}const h0=Symbol("vueFlow"),o6=Symbol("nodeId"),u6=Symbol("nodeRef"),aO=Symbol("edgeId"),tO=Symbol("edgeRef"),wp=Symbol("slots");function c6(i){const{vueFlowRef:s,snapToGrid:e,snapGrid:n,noDragClassName:a,nodes:t,nodeExtent:l,nodeDragThreshold:r,viewport:h,autoPanOnNodeDrag:p,autoPanSpeed:k,nodesDraggable:d,panBy:u,findNode:o,multiSelectionActive:c,nodesSelectionActive:A,selectNodesOnDrag:g,removeSelectedElements:f,addSelectedNodes:m,updateNodePositions:y,emits:v}=Ki(),{onStart:C,onDrag:S,onStop:L,onClick:w,el:_,disabled:R,id:N,selectable:T,dragHandle:V}=i,E=Z(!1);let $=[],I,M=null,G={x:void 0,y:void 0},Y={x:0,y:0},li=null,pi=!1,ei=0,q=!1;const W=hO(),K=({x:ci,y:X})=>{G={x:ci,y:X};let x=!1;if($=$.map(F=>{const D={x:ci-F.distance.x,y:X-F.distance.y},{computedPosition:O}=Bc(F,e.value?Dp(D,n.value):D,v.error,l.value,F.parentNode?o(F.parentNode):void 0);return x=x||F.position.x!==O.x||F.position.y!==O.y,F.position=O,F}),!!x&&(y($,!0,!0),E.value=!0,li)){const[F,D]=wk({id:N,dragItems:$,findNode:o});S({event:li,node:F,nodes:D})}},ri=()=>{if(!M)return;const[ci,X]=r6(Y,M,k.value);if(ci!==0||X!==0){const x={x:(G.x??0)-ci/h.value.zoom,y:(G.y??0)-X/h.value.zoom};u({x:ci,y:X})&&K(x)}ei=requestAnimationFrame(ri)},U=(ci,X)=>{pi=!0;const x=o(N);!g.value&&!c.value&&x&&(x.selected||f()),x&&vi(T)&&g.value&&zo(x,c.value,m,f,A,!1,X);const F=W(ci.sourceEvent);if(G=F,$=zR(t.value,d.value,F,o,N),$.length){const[D,O]=wk({id:N,dragItems:$,findNode:o});C({event:ci.sourceEvent,node:D,nodes:O})}},Q=(ci,X)=>{var x;ci.sourceEvent.type==="touchmove"&&ci.sourceEvent.touches.length>1||(r.value===0&&U(ci,X),G=W(ci.sourceEvent),M=((x=s.value)==null?void 0:x.getBoundingClientRect())||null,Y=Yn(ci.sourceEvent,M))},J=(ci,X)=>{const x=W(ci.sourceEvent);if(!q&&pi&&p.value&&(q=!0,ri()),!pi){const F=x.xSnapped-(G.x??0),D=x.ySnapped-(G.y??0);Math.sqrt(F*F+D*D)>r.value&&U(ci,X)}(G.x!==x.xSnapped||G.y!==x.ySnapped)&&$.length&&pi&&(li=ci.sourceEvent,Y=Yn(ci.sourceEvent,M),K(x))},ki=ci=>{if(!p6(ci)&&!pi&&!E.value&&!c.value){const X=ci,x=W(X),F=x.xSnapped-(G.x??0),D=x.ySnapped-(G.y??0),O=Math.sqrt(F*F+D*D);O!==0&&O<=r.value&&(w==null||w(X));return}if(E.value=!1,q=!1,pi=!1,G={x:void 0,y:void 0},cancelAnimationFrame(ei),$.length){y($,!1,!1);const[X,x]=wk({id:N,dragItems:$,findNode:o});L({event:ci.sourceEvent,node:X,nodes:x})}};return bi([()=>vi(R),_],([ci,X],x,F)=>{if(X){const D=fe(X);ci||(I=MS().on("start",O=>Q(O,X)).on("drag",O=>J(O,X)).on("end",O=>ki(O)).filter(O=>{const P=O.target,H=vi(V);return!O.button&&(!a.value||!i0(P,`.${a.value}`,X)&&(!H||i0(P,H,X)))}),D.call(I)),F(()=>{D.on(".drag",null),I&&(I.on("start",null),I.on("drag",null),I.on("end",null))})}}),E}function lO(){return{doubleClick:fi(),click:fi(),mouseEnter:fi(),mouseMove:fi(),mouseLeave:fi(),contextMenu:fi(),updateStart:fi(),update:fi(),updateEnd:fi()}}function rO(i,s){const e=lO();return e.doubleClick.on(n=>{var a,t;s.edgeDoubleClick(n),(t=(a=i.events)==null?void 0:a.doubleClick)==null||t.call(a,n)}),e.click.on(n=>{var a,t;s.edgeClick(n),(t=(a=i.events)==null?void 0:a.click)==null||t.call(a,n)}),e.mouseEnter.on(n=>{var a,t;s.edgeMouseEnter(n),(t=(a=i.events)==null?void 0:a.mouseEnter)==null||t.call(a,n)}),e.mouseMove.on(n=>{var a,t;s.edgeMouseMove(n),(t=(a=i.events)==null?void 0:a.mouseMove)==null||t.call(a,n)}),e.mouseLeave.on(n=>{var a,t;s.edgeMouseLeave(n),(t=(a=i.events)==null?void 0:a.mouseLeave)==null||t.call(a,n)}),e.contextMenu.on(n=>{var a,t;s.edgeContextMenu(n),(t=(a=i.events)==null?void 0:a.contextMenu)==null||t.call(a,n)}),e.updateStart.on(n=>{var a,t;s.edgeUpdateStart(n),(t=(a=i.events)==null?void 0:a.updateStart)==null||t.call(a,n)}),e.update.on(n=>{var a,t;s.edgeUpdate(n),(t=(a=i.events)==null?void 0:a.update)==null||t.call(a,n)}),e.updateEnd.on(n=>{var a,t;s.edgeUpdateEnd(n),(t=(a=i.events)==null?void 0:a.updateEnd)==null||t.call(a,n)}),Object.entries(e).reduce((n,[a,t])=>(n.emit[a]=t.trigger,n.on[a]=t.on,n),{emit:{},on:{}})}function hO(){const{viewport:i,snapGrid:s,snapToGrid:e}=Ki();return n=>{const a=p6(n)?n.sourceEvent:n,{x:t,y:l}=Yn(a),r=Ml({x:t,y:l},i.value),{x:h,y:p}=e.value?Dp(r,s.value):r;return{xSnapped:h,ySnapped:p,...r}}}function Ur(){return!0}function g6({handleId:i,nodeId:s,type:e,isValidConnection:n,edgeUpdaterType:a,onEdgeUpdate:t,onEdgeUpdateEnd:l}){const{id:r,vueFlowRef:h,connectionMode:p,connectionRadius:k,connectOnClick:d,connectionClickStartHandle:u,nodesConnectable:o,autoPanOnConnect:c,autoPanSpeed:A,findNode:g,panBy:f,startConnection:m,updateConnection:y,endConnection:v,emits:C,viewport:S,edges:L,nodes:w,isValidConnection:_,nodeLookup:R}=Ki();let N=null,T=!1,V=null;function E(I){var M;const G=vi(e)==="target",Y=Ac(I),li=WB(I.target);if(Y&&I.button===0||!Y){let pi=function(ai){F=Yn(ai,ci),K=ZR(Ml(F,S.value,!1,[1,1]),k.value,R.value,P),D||(O(),D=!0);const gi=n0(ai,{handle:K,connectionMode:p.value,fromNodeId:vi(s),fromHandleId:vi(i),fromType:G?"target":"source",isValidConnection:W,doc:li,lib:"vue",flowId:r,nodeLookup:R.value},L.value,w.value,g);V=gi.handleDomNode,N=gi.connection,T=QR(!!K,gi.isValid);const di={...ii,isValid:T,to:K&&T?$o({x:K.x,y:K.y},S.value):F,toHandle:gi.toHandle,toPosition:T&&gi.toHandle?gi.toHandle.position:Vo[P.position],toNode:gi.toHandle?R.value.get(gi.toHandle.nodeId):null};if(!(T&&K&&(ii!=null&&ii.toHandle)&&di.toHandle&&ii.toHandle.type===di.toHandle.type&&ii.toHandle.nodeId===di.toHandle.nodeId&&ii.toHandle.id===di.toHandle.id&&ii.to.x===di.to.x&&ii.to.y===di.to.y)){if(y(K&&T?$o({x:K.x,y:K.y},S.value):F,gi.toHandle,JR(!!K,T)),ii=di,!K&&!T&&!V)return Tk(x);N&&N.source!==N.target&&V&&(Tk(x),x=V,V.classList.add("connecting","vue-flow__handle-connecting"),V.classList.toggle("valid",!!T),V.classList.toggle("vue-flow__handle-valid",!!T))}},ei=function(ai){(K||V)&&N&&T&&(t?t(ai,N):C.connect(N)),C.connectEnd(ai),a&&(l==null||l(ai)),Tk(x),cancelAnimationFrame(ri),v(ai),D=!1,T=!1,N=null,V=null,li.removeEventListener("mousemove",pi),li.removeEventListener("mouseup",ei),li.removeEventListener("touchmove",pi),li.removeEventListener("touchend",ei)};const q=g(vi(s));let W=vi(n)||_.value||Ur;!W&&q&&(W=(G?q.isValidSourcePos:q.isValidTargetPos)||Ur);let K,ri=0;const{x:U,y:Q}=Yn(I),J=li==null?void 0:li.elementFromPoint(U,Q),ki=k6(vi(a),J),ci=(M=h.value)==null?void 0:M.getBoundingClientRect();if(!ci||!ki)return;const X=iO(vi(s),ki,vi(i),R.value,p.value);if(!X)return;let x,F=Yn(I,ci),D=!1;const O=()=>{if(!c.value)return;const[ai,gi]=r6(F,ci,A.value);f({x:ai,y:gi}),ri=requestAnimationFrame(O)},P={...X,nodeId:vi(s),type:ki,position:X.position},H=R.value.get(vi(s)),ni={inProgress:!0,isValid:null,from:mt(H,P,Fi.Left,!0),fromHandle:P,fromPosition:P.position,fromNode:H,to:F,toHandle:null,toPosition:Vo[P.position],toNode:null};m({nodeId:vi(s),id:vi(i),type:ki,position:(J==null?void 0:J.getAttribute("data-handlepos"))||Fi.Top},{x:U-ci.left,y:Q-ci.top}),C.connectStart({event:I,nodeId:vi(s),handleId:vi(i),handleType:ki});let ii=ni;li.addEventListener("mousemove",pi),li.addEventListener("mouseup",ei),li.addEventListener("touchmove",pi),li.addEventListener("touchend",ei)}}function $(I){var M,G;if(!d.value)return;const Y=vi(e)==="target";if(!u.value){C.clickConnectStart({event:I,nodeId:vi(s),handleId:vi(i)}),m({nodeId:vi(s),type:vi(e),id:vi(i),position:Fi.Top},void 0,!0);return}let li=vi(n)||_.value||Ur;const pi=g(vi(s));if(!li&&pi&&(li=(Y?pi.isValidSourcePos:pi.isValidTargetPos)||Ur),pi&&(typeof pi.connectable>"u"?o.value:pi.connectable)===!1)return;const ei=WB(I.target),q=n0(I,{handle:{nodeId:vi(s),id:vi(i),type:vi(e),position:Fi.Top},connectionMode:p.value,fromNodeId:u.value.nodeId,fromHandleId:u.value.id||null,fromType:u.value.type,isValidConnection:li,doc:ei,lib:"vue",flowId:r,nodeLookup:R.value},L.value,w.value,g),W=((M=q.connection)==null?void 0:M.source)===((G=q.connection)==null?void 0:G.target);q.isValid&&q.connection&&!W&&C.connect(q.connection),C.clickConnectEnd(I),v(I,!0)}return{handlePointerDown:E,handleClick:$}}function pO(){return Ni(o6,"")}function B6(i){const s=i??pO()??"",e=Ni(u6,Z(null)),{findNode:n,edges:a,emits:t}=Ki(),l=n(s);return l||t.error(new vs(cs.NODE_NOT_FOUND,s)),{id:s,nodeEl:e,node:l,parentNode:z(()=>n(l.parentNode)),connectedEdges:z(()=>t6([l],a.value))}}function kO(){return{doubleClick:fi(),click:fi(),mouseEnter:fi(),mouseMove:fi(),mouseLeave:fi(),contextMenu:fi(),dragStart:fi(),drag:fi(),dragStop:fi()}}function dO(i,s){const e=kO();return e.doubleClick.on(n=>{var a,t;s.nodeDoubleClick(n),(t=(a=i.events)==null?void 0:a.doubleClick)==null||t.call(a,n)}),e.click.on(n=>{var a,t;s.nodeClick(n),(t=(a=i.events)==null?void 0:a.click)==null||t.call(a,n)}),e.mouseEnter.on(n=>{var a,t;s.nodeMouseEnter(n),(t=(a=i.events)==null?void 0:a.mouseEnter)==null||t.call(a,n)}),e.mouseMove.on(n=>{var a,t;s.nodeMouseMove(n),(t=(a=i.events)==null?void 0:a.mouseMove)==null||t.call(a,n)}),e.mouseLeave.on(n=>{var a,t;s.nodeMouseLeave(n),(t=(a=i.events)==null?void 0:a.mouseLeave)==null||t.call(a,n)}),e.contextMenu.on(n=>{var a,t;s.nodeContextMenu(n),(t=(a=i.events)==null?void 0:a.contextMenu)==null||t.call(a,n)}),e.dragStart.on(n=>{var a,t;s.nodeDragStart(n),(t=(a=i.events)==null?void 0:a.dragStart)==null||t.call(a,n)}),e.drag.on(n=>{var a,t;s.nodeDrag(n),(t=(a=i.events)==null?void 0:a.drag)==null||t.call(a,n)}),e.dragStop.on(n=>{var a,t;s.nodeDragStop(n),(t=(a=i.events)==null?void 0:a.dragStop)==null||t.call(a,n)}),Object.entries(e).reduce((n,[a,t])=>(n.emit[a]=t.trigger,n.on[a]=t.on,n),{emit:{},on:{}})}function A6(){const{getSelectedNodes:i,nodeExtent:s,updateNodePositions:e,findNode:n,snapGrid:a,snapToGrid:t,nodesDraggable:l,emits:r}=Ki();return(h,p=!1)=>{const k=t.value?a.value[0]:5,d=t.value?a.value[1]:5,u=p?4:1,o=h.x*k*u,c=h.y*d*u,A=[];for(const g of i.value)if(g.draggable||l&&typeof g.draggable>"u"){const f={x:g.computedPosition.x+o,y:g.computedPosition.y+c},{computedPosition:m}=Bc(g,f,r.error,s.value,g.parentNode?n(g.parentNode):void 0);A.push({id:g.id,position:m,from:g.position,distance:{x:h.x,y:h.y},dimensions:g.dimensions})}e(A,!0,!1)}}const Rk=.1;function Tn(){return xp("Viewport not initialized yet."),Promise.resolve(!1)}const oO={zoomIn:Tn,zoomOut:Tn,zoomTo:Tn,fitView:Tn,setCenter:Tn,fitBounds:Tn,project:i=>i,screenToFlowCoordinate:i=>i,flowToScreenCoordinate:i=>i,setViewport:Tn,setTransform:Tn,getViewport:()=>({x:0,y:0,zoom:1}),getTransform:()=>({x:0,y:0,zoom:1}),viewportInitialized:!1};function uO(i){function s(n,a){return new Promise(t=>{i.d3Selection&&i.d3Zoom?i.d3Zoom.scaleBy(Ok(i.d3Selection,a,()=>{t(!0)}),n):t(!1)})}function e(n,a,t,l){return new Promise(r=>{const{x:h,y:p}=J8({x:-n,y:-a},i.translateExtent),k=ft.translate(-h,-p).scale(t);i.d3Selection&&i.d3Zoom?i.d3Zoom.transform(Ok(i.d3Selection,l,()=>{r(!0)}),k):r(!1)})}return z(()=>i.d3Zoom&&i.d3Selection&&i.dimensions.width&&i.dimensions.height?{viewportInitialized:!0,zoomIn:a=>s(1.2,a==null?void 0:a.duration),zoomOut:a=>s(1/1.2,a==null?void 0:a.duration),zoomTo:(a,t)=>new Promise(l=>{i.d3Selection&&i.d3Zoom?i.d3Zoom.scaleTo(Ok(i.d3Selection,t==null?void 0:t.duration,()=>{l(!0)}),a):l(!1)}),setViewport:(a,t)=>e(a.x,a.y,a.zoom,t==null?void 0:t.duration),setTransform:(a,t)=>e(a.x,a.y,a.zoom,t==null?void 0:t.duration),getViewport:()=>({x:i.viewport.x,y:i.viewport.y,zoom:i.viewport.zoom}),getTransform:()=>({x:i.viewport.x,y:i.viewport.y,zoom:i.viewport.zoom}),fitView:(a={padding:Rk,includeHiddenNodes:!1,duration:0})=>{var t,l;const r=[];for(const u of i.nodes)u.dimensions.width&&u.dimensions.height&&((a==null?void 0:a.includeHiddenNodes)||!u.hidden)&&(!((t=a.nodes)!=null&&t.length)||(l=a.nodes)!=null&&l.length&&a.nodes.includes(u.id))&&r.push(u);if(!r.length)return Promise.resolve(!1);const h=n6(r),{x:p,y:k,zoom:d}=KB(h,i.dimensions.width,i.dimensions.height,a.minZoom??i.minZoom,a.maxZoom??i.maxZoom,a.padding??Rk,a.offset);return e(p,k,d,a==null?void 0:a.duration)},setCenter:(a,t,l)=>{const r=typeof(l==null?void 0:l.zoom)<"u"?l.zoom:i.maxZoom,h=i.dimensions.width/2-a*r,p=i.dimensions.height/2-t*r;return e(h,p,r,l==null?void 0:l.duration)},fitBounds:(a,t={padding:Rk})=>{const{x:l,y:r,zoom:h}=KB(a,i.dimensions.width,i.dimensions.height,i.minZoom,i.maxZoom,t.padding);return e(l,r,h,t==null?void 0:t.duration)},project:a=>Ml(a,i.viewport,i.snapToGrid,i.snapGrid),screenToFlowCoordinate:a=>{if(i.vueFlowRef){const{x:t,y:l}=i.vueFlowRef.getBoundingClientRect(),r={x:a.x-t,y:a.y-l};return Ml(r,i.viewport,i.snapToGrid,i.snapGrid)}return{x:0,y:0}},flowToScreenCoordinate:a=>{if(i.vueFlowRef){const{x:t,y:l}=i.vueFlowRef.getBoundingClientRect(),r={x:a.x+t,y:a.y+l};return $o(r,i.viewport)}return{x:0,y:0}}}:oO)}function Ok(i,s=0,e){return i.transition().duration(s).on("end",e)}function cO(i,s,e){const n=iy(!0);return n.run(()=>{const a=()=>{n.run(()=>{let A,g,f=!!(e.nodes.value.length||e.edges.value.length);A=$a([i.modelValue,()=>{var m,y;return(y=(m=i.modelValue)==null?void 0:m.value)==null?void 0:y.length}],([m])=>{m&&Array.isArray(m)&&(g==null||g.pause(),e.setElements(m),!g&&!f&&m.length?f=!0:g==null||g.resume())}),g=$a([e.nodes,e.edges,()=>e.edges.value.length,()=>e.nodes.value.length],([m,y])=>{var v;(v=i.modelValue)!=null&&v.value&&Array.isArray(i.modelValue.value)&&(A==null||A.pause(),i.modelValue.value=[...m,...y],Hi(()=>{A==null||A.resume()}))},{immediate:f}),el(()=>{A==null||A.stop(),g==null||g.stop()})})},t=()=>{n.run(()=>{let A,g,f=!!e.nodes.value.length;A=$a([i.nodes,()=>{var m,y;return(y=(m=i.nodes)==null?void 0:m.value)==null?void 0:y.length}],([m])=>{m&&Array.isArray(m)&&(g==null||g.pause(),e.setNodes(m),!g&&!f&&m.length?f=!0:g==null||g.resume())}),g=$a([e.nodes,()=>e.nodes.value.length],([m])=>{var y;(y=i.nodes)!=null&&y.value&&Array.isArray(i.nodes.value)&&(A==null||A.pause(),i.nodes.value=[...m],Hi(()=>{A==null||A.resume()}))},{immediate:f}),el(()=>{A==null||A.stop(),g==null||g.stop()})})},l=()=>{n.run(()=>{let A,g,f=!!e.edges.value.length;A=$a([i.edges,()=>{var m,y;return(y=(m=i.edges)==null?void 0:m.value)==null?void 0:y.length}],([m])=>{m&&Array.isArray(m)&&(g==null||g.pause(),e.setEdges(m),!g&&!f&&m.length?f=!0:g==null||g.resume())}),g=$a([e.edges,()=>e.edges.value.length],([m])=>{var y;(y=i.edges)!=null&&y.value&&Array.isArray(i.edges.value)&&(A==null||A.pause(),i.edges.value=[...m],Hi(()=>{A==null||A.resume()}))},{immediate:f}),el(()=>{A==null||A.stop(),g==null||g.stop()})})},r=()=>{n.run(()=>{bi(()=>s.maxZoom,()=>{s.maxZoom&&us(s.maxZoom)&&e.setMaxZoom(s.maxZoom)},{immediate:!0})})},h=()=>{n.run(()=>{bi(()=>s.minZoom,()=>{s.minZoom&&us(s.minZoom)&&e.setMinZoom(s.minZoom)},{immediate:!0})})},p=()=>{n.run(()=>{bi(()=>s.translateExtent,()=>{s.translateExtent&&us(s.translateExtent)&&e.setTranslateExtent(s.translateExtent)},{immediate:!0})})},k=()=>{n.run(()=>{bi(()=>s.nodeExtent,()=>{s.nodeExtent&&us(s.nodeExtent)&&e.setNodeExtent(s.nodeExtent)},{immediate:!0})})},d=()=>{n.run(()=>{bi(()=>s.applyDefault,()=>{us(s.applyDefault)&&(e.applyDefault.value=s.applyDefault)},{immediate:!0})})},u=()=>{n.run(()=>{const A=async g=>{let f=g;typeof s.autoConnect=="function"&&(f=await s.autoConnect(g)),f!==!1&&e.addEdges([f])};bi(()=>s.autoConnect,()=>{us(s.autoConnect)&&(e.autoConnect.value=s.autoConnect)},{immediate:!0}),bi(e.autoConnect,(g,f,m)=>{g?e.onConnect(A):e.hooks.value.connect.off(A),m(()=>{e.hooks.value.connect.off(A)})},{immediate:!0})})},o=()=>{const A=["id","modelValue","translateExtent","nodeExtent","edges","nodes","maxZoom","minZoom","applyDefault","autoConnect"];for(const g of Object.keys(s)){const f=g;if(!A.includes(f)){const m=Mi(()=>s[f]),y=e[f];ts(y)&&n.run(()=>{bi(m,v=>{us(v)&&(y.value=v)},{immediate:!0})})}}};(()=>{a(),t(),l(),h(),r(),p(),k(),d(),u(),o()})()}),()=>n.stop()}function gO(){return{edgesChange:fi(),nodesChange:fi(),nodeDoubleClick:fi(),nodeClick:fi(),nodeMouseEnter:fi(),nodeMouseMove:fi(),nodeMouseLeave:fi(),nodeContextMenu:fi(),nodeDragStart:fi(),nodeDrag:fi(),nodeDragStop:fi(),nodesInitialized:fi(),miniMapNodeClick:fi(),miniMapNodeDoubleClick:fi(),miniMapNodeMouseEnter:fi(),miniMapNodeMouseMove:fi(),miniMapNodeMouseLeave:fi(),connect:fi(),connectStart:fi(),connectEnd:fi(),clickConnectStart:fi(),clickConnectEnd:fi(),paneReady:fi(),init:fi(),move:fi(),moveStart:fi(),moveEnd:fi(),selectionDragStart:fi(),selectionDrag:fi(),selectionDragStop:fi(),selectionContextMenu:fi(),selectionStart:fi(),selectionEnd:fi(),viewportChangeStart:fi(),viewportChange:fi(),viewportChangeEnd:fi(),paneScroll:fi(),paneClick:fi(),paneContextMenu:fi(),paneMouseEnter:fi(),paneMouseMove:fi(),paneMouseLeave:fi(),edgeContextMenu:fi(),edgeMouseEnter:fi(),edgeMouseMove:fi(),edgeMouseLeave:fi(),edgeDoubleClick:fi(),edgeClick:fi(),edgeUpdateStart:fi(),edgeUpdate:fi(),edgeUpdateEnd:fi(),updateNodeInternals:fi(),error:fi(i=>xp(i.message))}}function BO(i,s){Ly(()=>{for(const[e,n]of Object.entries(s.value)){const a=t=>{i(e,t)};n.fns.add(a),vp(()=>{n.off(a)})}})}function y6(){return{vueFlowRef:null,viewportRef:null,nodes:[],edges:[],connectionLookup:new Map,nodeTypes:{},edgeTypes:{},initialized:!1,dimensions:{width:0,height:0},viewport:{x:0,y:0,zoom:1},d3Zoom:null,d3Selection:null,d3ZoomHandler:null,minZoom:.5,maxZoom:2,translateExtent:[[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY]],nodeExtent:[[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY]],selectionMode:gc.Full,paneDragging:!1,preventScrolling:!0,zoomOnScroll:!0,zoomOnPinch:!0,zoomOnDoubleClick:!0,panOnScroll:!1,panOnScrollSpeed:.5,panOnScrollMode:ul.Free,paneClickDistance:0,panOnDrag:!0,edgeUpdaterRadius:10,onlyRenderVisibleElements:!1,defaultViewport:{x:0,y:0,zoom:1},nodesSelectionActive:!1,userSelectionActive:!1,userSelectionRect:null,defaultMarkerColor:"#b1b1b7",connectionLineStyle:{},connectionLineType:null,connectionLineOptions:{type:ca.Bezier,style:{}},connectionMode:ia.Loose,connectionStartHandle:null,connectionEndHandle:null,connectionClickStartHandle:null,connectionPosition:{x:Number.NaN,y:Number.NaN},connectionRadius:20,connectOnClick:!0,connectionStatus:null,isValidConnection:null,snapGrid:[15,15],snapToGrid:!1,edgesUpdatable:!1,edgesFocusable:!0,nodesFocusable:!0,nodesConnectable:!0,nodesDraggable:!0,nodeDragThreshold:1,elementsSelectable:!0,selectNodesOnDrag:!0,multiSelectionActive:!1,selectionKeyCode:"Shift",multiSelectionKeyCode:Mh()?"Meta":"Control",zoomActivationKeyCode:Mh()?"Meta":"Control",deleteKeyCode:"Backspace",panActivationKeyCode:"Space",hooks:gO(),applyDefault:!0,autoConnect:!1,fitViewOnInit:!1,fitViewOnInitDone:!1,noDragClassName:"nodrag",noWheelClassName:"nowheel",noPanClassName:"nopan",defaultEdgeOptions:void 0,elevateEdgesOnSelect:!1,elevateNodesOnSelect:!0,autoPanOnNodeDrag:!0,autoPanOnConnect:!0,autoPanSpeed:15,disableKeyboardA11y:!1,ariaLiveMessage:""}}const AO=["id","vueFlowRef","viewportRef","initialized","modelValue","nodes","edges","maxZoom","minZoom","translateExtent","hooks","defaultEdgeOptions"];function yO(i,s,e){const n=uO(i),a=F=>{const D=F??[];i.hooks.updateNodeInternals.trigger(D)},t=F=>LR(F,i.nodes,i.edges),l=F=>PR(F,i.nodes,i.edges),r=F=>t6(F,i.edges),h=({id:F,type:D,nodeId:O})=>{var P;return Array.from(((P=i.connectionLookup.get(`${O}-${D}-${F??null}`))==null?void 0:P.values())??[])},p=F=>{if(F)return s.value.get(F)},k=F=>{if(F)return e.value.get(F)},d=(F,D,O)=>{var P,H;const si=[];for(const ni of F){const ii={id:ni.id,type:"position",dragging:O,from:ni.from};if(D&&(ii.position=ni.position,ni.parentNode)){const ai=p(ni.parentNode);ii.position={x:ii.position.x-(((P=ai==null?void 0:ai.computedPosition)==null?void 0:P.x)??0),y:ii.position.y-(((H=ai==null?void 0:ai.computedPosition)==null?void 0:H.y)??0)}}si.push(ii)}si!=null&&si.length&&i.hooks.nodesChange.trigger(si)},u=F=>{if(!i.vueFlowRef)return;const D=i.vueFlowRef.querySelector(".vue-flow__transformationpane");if(!D)return;const O=window.getComputedStyle(D),{m22:P}=new window.DOMMatrixReadOnly(O.transform),H=[];for(let si=0;si<F.length;++si){const ni=F[si],ii=p(ni.id);if(ii){const ai=_p(ni.nodeElement);if(!!(ai.width&&ai.height&&(ii.dimensions.width!==ai.width||ii.dimensions.height!==ai.height||ni.forceUpdate))){const di=ni.nodeElement.getBoundingClientRect();ii.dimensions=ai,ii.handleBounds.source=a0("source",ni.nodeElement,di,P),ii.handleBounds.target=a0("target",ni.nodeElement,di,P),H.push({id:ii.id,type:"dimensions",dimensions:ai})}}}!i.fitViewOnInitDone&&i.fitViewOnInit&&n.value.fitView().then(()=>{i.fitViewOnInitDone=!0}),H.length&&i.hooks.nodesChange.trigger(H)},o=(F,D)=>{const O=new Set,P=new Set;for(const ni of F)ba(ni)?O.add(ni.id):sa(ni)&&P.add(ni.id);const H=zn(s.value,O,!0),si=zn(e.value,P);if(i.multiSelectionActive){for(const ni of O)H.push(On(ni,D));for(const ni of P)si.push(On(ni,D))}H.length&&i.hooks.nodesChange.trigger(H),si.length&&i.hooks.edgesChange.trigger(si)},c=F=>{if(i.multiSelectionActive){const D=F.map(O=>On(O.id,!0));i.hooks.nodesChange.trigger(D);return}i.hooks.nodesChange.trigger(zn(s.value,new Set(F.map(D=>D.id)),!0)),i.hooks.edgesChange.trigger(zn(e.value))},A=F=>{if(i.multiSelectionActive){const D=F.map(O=>On(O.id,!0));i.hooks.edgesChange.trigger(D);return}i.hooks.edgesChange.trigger(zn(e.value,new Set(F.map(D=>D.id)))),i.hooks.nodesChange.trigger(zn(s.value,new Set,!0))},g=F=>{o(F,!0)},f=F=>{const O=(F||i.nodes).map(P=>(P.selected=!1,On(P.id,!1)));i.hooks.nodesChange.trigger(O)},m=F=>{const O=(F||i.edges).map(P=>(P.selected=!1,On(P.id,!1)));i.hooks.edgesChange.trigger(O)},y=F=>{if(!F||!F.length)return o([],!1);const D=F.reduce((O,P)=>{const H=On(P.id,!1);return ba(P)?O.nodes.push(H):O.edges.push(H),O},{nodes:[],edges:[]});D.nodes.length&&i.hooks.nodesChange.trigger(D.nodes),D.edges.length&&i.hooks.edgesChange.trigger(D.edges)},v=F=>{var D;(D=i.d3Zoom)==null||D.scaleExtent([F,i.maxZoom]),i.minZoom=F},C=F=>{var D;(D=i.d3Zoom)==null||D.scaleExtent([i.minZoom,F]),i.maxZoom=F},S=F=>{var D;(D=i.d3Zoom)==null||D.translateExtent(F),i.translateExtent=F},L=F=>{i.nodeExtent=F,a()},w=F=>{var D;(D=i.d3Zoom)==null||D.clickDistance(F)},_=F=>{i.nodesDraggable=F,i.nodesConnectable=F,i.elementsSelectable=F},R=F=>{const D=F instanceof Function?F(i.nodes):F;!i.initialized&&!D.length||(i.nodes=t0(D,p,i.hooks.error.trigger))},N=F=>{const D=F instanceof Function?F(i.edges):F;if(!i.initialized&&!D.length)return;const O=Ik(D,i.isValidConnection,p,k,i.hooks.error.trigger,i.defaultEdgeOptions,i.nodes,i.edges);Sk(i.connectionLookup,e.value,O),i.edges=O},T=F=>{const D=F instanceof Function?F([...i.nodes,...i.edges]):F;!i.initialized&&!D.length||(R(D.filter(ba)),N(D.filter(sa)))},V=F=>{let D=F instanceof Function?F(i.nodes):F;D=Array.isArray(D)?D:[D];const O=t0(D,p,i.hooks.error.trigger),P=[];for(const H of O)P.push(ZB(H));P.length&&i.hooks.nodesChange.trigger(P)},E=F=>{let D=F instanceof Function?F(i.edges):F;D=Array.isArray(D)?D:[D];const O=Ik(D,i.isValidConnection,p,k,i.hooks.error.trigger,i.defaultEdgeOptions,i.nodes,i.edges),P=[];for(const H of O)P.push(ZB(H));P.length&&i.hooks.edgesChange.trigger(P)},$=(F,D=!0,O=!1)=>{const P=F instanceof Function?F(i.nodes):F,H=Array.isArray(P)?P:[P],si=[],ni=[];function ii(gi){const di=r(gi);for(const Ai of di)(!us(Ai.deletable)||Ai.deletable)&&ni.push(QB(Ai.id,Ai.source,Ai.target,Ai.sourceHandle,Ai.targetHandle))}function ai(gi){const di=[];for(const Ai of i.nodes)Ai.parentNode===gi&&di.push(Ai);if(di.length){for(const Ai of di)si.push(JB(Ai.id));D&&ii(di);for(const Ai of di)ai(Ai.id)}}for(const gi of H){const di=typeof gi=="string"?p(gi):gi;di&&(us(di.deletable)&&!di.deletable||(si.push(JB(di.id)),D&&ii([di]),O&&ai(di.id)))}ni.length&&i.hooks.edgesChange.trigger(ni),si.length&&i.hooks.nodesChange.trigger(si)},I=F=>{const D=F instanceof Function?F(i.edges):F,O=Array.isArray(D)?D:[D],P=[];for(const H of O){const si=typeof H=="string"?k(H):H;si&&(us(si.deletable)&&!si.deletable||P.push(QB(typeof H=="string"?H:H.id,si.source,si.target,si.sourceHandle,si.targetHandle)))}i.hooks.edgesChange.trigger(P)},M=(F,D,O=!0)=>{const P=k(F.id),H=nO(F,D,P,O,i.hooks.error.trigger);if(H){const[si]=Ik([H],i.isValidConnection,p,k,i.hooks.error.trigger,i.defaultEdgeOptions,i.nodes,i.edges);return i.edges.splice(i.edges.indexOf(P),1,si),Sk(i.connectionLookup,e.value,[si]),si}return!1},G=(F,D,O={replace:!1})=>{const P=k(F);if(!P)return;const H=typeof D=="function"?D(P):D;P.data=O.replace?H:{...P.data,...H}},Y=F=>XB(F,i.nodes),li=F=>{const D=XB(F,i.edges);return Sk(i.connectionLookup,e.value,D),D},pi=(F,D,O={replace:!1})=>{const P=p(F);if(!P)return;const H=typeof D=="function"?D(P):D;O.replace?i.nodes.splice(i.nodes.indexOf(P),1,H):Object.assign(P,H)},ei=(F,D,O={replace:!1})=>{const P=p(F);if(!P)return;const H=typeof D=="function"?D(P):D;P.data=O.replace?H:{...P.data,...H}},q=(F,D,O=!1)=>{O?i.connectionClickStartHandle=F:i.connectionStartHandle=F,i.connectionEndHandle=null,i.connectionStatus=null,D&&(i.connectionPosition=D)},W=(F,D=null,O=null)=>{i.connectionStartHandle&&(i.connectionPosition=F,i.connectionEndHandle=D,i.connectionStatus=O)},K=(F,D)=>{i.connectionPosition={x:Number.NaN,y:Number.NaN},i.connectionEndHandle=null,i.connectionStatus=null,D?i.connectionClickStartHandle=null:i.connectionStartHandle=null},ri=F=>{const D=RR(F),O=D?null:Jt(F)?F:p(F.id);return!D&&!O?[null,null,D]:[D?F:Lh(O),O,D]},U=(F,D=!0,O=i.nodes)=>{const[P,H,si]=ri(F);if(!P)return[];const ni=[];for(const ii of O||i.nodes){if(!si&&(ii.id===H.id||!ii.computedPosition))continue;const ai=Lh(ii),gi=Nh(ai,P);(D&&gi>0||gi>=Number(P.width)*Number(P.height))&&ni.push(ii)}return ni},Q=(F,D,O=!0)=>{const[P]=ri(F);if(!P)return!1;const H=Nh(P,D);return O&&H>0||H>=Number(P.width)*Number(P.height)},J=F=>{const{viewport:D,dimensions:O,d3Zoom:P,d3Selection:H,translateExtent:si}=i;if(!P||!H||!F.x&&!F.y)return!1;const ni=ft.translate(D.x+F.x,D.y+F.y).scale(D.zoom),ii=[[0,0],[O.width,O.height]],ai=P.constrain()(ni,ii,si),gi=i.viewport.x!==ai.x||i.viewport.y!==ai.y||i.viewport.zoom!==ai.k;return P.transform(H,ai),gi},ki=F=>{const D=F instanceof Function?F(i):F,O=["d3Zoom","d3Selection","d3ZoomHandler","viewportRef","vueFlowRef","dimensions","hooks"];us(D.defaultEdgeOptions)&&(i.defaultEdgeOptions=D.defaultEdgeOptions);const P=D.modelValue||D.nodes||D.edges?[]:void 0;P&&(D.modelValue&&P.push(...D.modelValue),D.nodes&&P.push(...D.nodes),D.edges&&P.push(...D.edges),T(P));const H=()=>{us(D.maxZoom)&&C(D.maxZoom),us(D.minZoom)&&v(D.minZoom),us(D.translateExtent)&&S(D.translateExtent)};for(const si of Object.keys(D)){const ni=si,ii=D[ni];![...AO,...O].includes(ni)&&us(ii)&&(i[ni]=ii)}xo(()=>i.d3Zoom).not.toBeNull().then(H),i.initialized||(i.initialized=!0)};return{updateNodePositions:d,updateNodeDimensions:u,setElements:T,setNodes:R,setEdges:N,addNodes:V,addEdges:E,removeNodes:$,removeEdges:I,findNode:p,findEdge:k,updateEdge:M,updateEdgeData:G,updateNode:pi,updateNodeData:ei,applyEdgeChanges:li,applyNodeChanges:Y,addSelectedElements:g,addSelectedNodes:c,addSelectedEdges:A,setMinZoom:v,setMaxZoom:C,setTranslateExtent:S,setNodeExtent:L,setPaneClickDistance:w,removeSelectedElements:y,removeSelectedNodes:f,removeSelectedEdges:m,startConnection:q,updateConnection:W,endConnection:K,setInteractive:_,setState:ki,getIntersectingNodes:U,getIncomers:t,getOutgoers:l,getConnectedEdges:r,getHandleConnections:h,isNodeIntersecting:Q,panBy:J,fitView:F=>n.value.fitView(F),zoomIn:F=>n.value.zoomIn(F),zoomOut:F=>n.value.zoomOut(F),zoomTo:(F,D)=>n.value.zoomTo(F,D),setViewport:(F,D)=>n.value.setViewport(F,D),setTransform:(F,D)=>n.value.setTransform(F,D),getViewport:()=>n.value.getViewport(),getTransform:()=>n.value.getTransform(),setCenter:(F,D,O)=>n.value.setCenter(F,D,O),fitBounds:(F,D)=>n.value.fitBounds(F,D),project:F=>n.value.project(F),screenToFlowCoordinate:F=>n.value.screenToFlowCoordinate(F),flowToScreenCoordinate:F=>n.value.flowToScreenCoordinate(F),toObject:()=>{const F=[],D=[];for(const O of i.nodes){const{computedPosition:P,handleBounds:H,selected:si,dimensions:ni,isParent:ii,resizing:ai,dragging:gi,events:di,...Ai}=O;F.push(Ai)}for(const O of i.edges){const{selected:P,sourceNode:H,targetNode:si,events:ni,...ii}=O;D.push(ii)}return JSON.parse(JSON.stringify({nodes:F,edges:D,position:[i.viewport.x,i.viewport.y],zoom:i.viewport.zoom,viewport:i.viewport}))},fromObject:F=>new Promise(D=>{const{nodes:O,edges:P,position:H,zoom:si,viewport:ni}=F;if(O&&R(O),P&&N(P),ni!=null&&ni.x&&(ni!=null&&ni.y)||H){const ii=(ni==null?void 0:ni.x)||H[0],ai=(ni==null?void 0:ni.y)||H[1],gi=(ni==null?void 0:ni.zoom)||si||i.viewport.zoom;return xo(()=>n.value.viewportInitialized).toBe(!0).then(()=>{n.value.setViewport({x:ii,y:ai,zoom:gi}).then(()=>{D(!0)})})}else D(!0)}),updateNodeInternals:a,viewportHelper:n,$reset:()=>{const F=y6();if(i.edges=[],i.nodes=[],i.d3Zoom&&i.d3Selection){const D=ft.translate(F.defaultViewport.x??0,F.defaultViewport.y??0).scale(Sa(F.defaultViewport.zoom??1,F.minZoom,F.maxZoom)),O=i.viewportRef.getBoundingClientRect(),P=[[0,0],[O.width,O.height]],H=i.d3Zoom.constrain()(D,P,F.translateExtent);i.d3Zoom.transform(i.d3Selection,H)}ki(F)},$destroy:()=>{}}}const fO=["data-id","data-handleid","data-nodeid","data-handlepos"],mO={name:"Handle",compatConfig:{MODE:3}},vn=ti({...mO,props:{id:{default:null},type:{},position:{default:()=>Fi.Top},isValidConnection:{type:Function},connectable:{type:[Boolean,Number,String,Function],default:void 0},connectableStart:{type:Boolean,default:!0},connectableEnd:{type:Boolean,default:!0}},setup(i,{expose:s}){const e=ov(i,["position","connectable","connectableStart","connectableEnd","id"]),n=Mi(()=>e.type??"source"),a=Mi(()=>e.isValidConnection??null),{id:t,connectionStartHandle:l,connectionClickStartHandle:r,connectionEndHandle:h,vueFlowRef:p,nodesConnectable:k,noDragClassName:d,noPanClassName:u}=Ki(),{id:o,node:c,nodeEl:A,connectedEdges:g}=B6(),f=Z(),m=Mi(()=>typeof i.connectableStart<"u"?i.connectableStart:!0),y=Mi(()=>typeof i.connectableEnd<"u"?i.connectableEnd:!0),v=Mi(()=>{var N,T,V,E,$,I;return((N=l.value)==null?void 0:N.nodeId)===o&&((T=l.value)==null?void 0:T.id)===i.id&&((V=l.value)==null?void 0:V.type)===n.value||((E=h.value)==null?void 0:E.nodeId)===o&&(($=h.value)==null?void 0:$.id)===i.id&&((I=h.value)==null?void 0:I.type)===n.value}),C=Mi(()=>{var N,T,V;return((N=r.value)==null?void 0:N.nodeId)===o&&((T=r.value)==null?void 0:T.id)===i.id&&((V=r.value)==null?void 0:V.type)===n.value}),{handlePointerDown:S,handleClick:L}=g6({nodeId:o,handleId:i.id,isValidConnection:a,type:n}),w=z(()=>typeof i.connectable=="string"&&i.connectable==="single"?!g.value.some(N=>{const T=N[`${n.value}Handle`];return N[n.value]!==o?!1:T?T===i.id:!0}):typeof i.connectable=="number"?g.value.filter(N=>{const T=N[`${n.value}Handle`];return N[n.value]!==o?!1:T?T===i.id:!0}).length<i.connectable:typeof i.connectable=="function"?i.connectable(c,g.value):us(i.connectable)?i.connectable:k.value);Di(()=>{var N;if(!c.dimensions.width||!c.dimensions.height)return;const T=(N=c.handleBounds[n.value])==null?void 0:N.find(Y=>Y.id===i.id);if(!p.value||T)return;const V=p.value.querySelector(".vue-flow__transformationpane");if(!A.value||!f.value||!V||!i.id)return;const E=A.value.getBoundingClientRect(),$=f.value.getBoundingClientRect(),I=window.getComputedStyle(V),{m22:M}=new window.DOMMatrixReadOnly(I.transform),G={id:i.id,position:i.position,x:($.left-E.left)/M,y:($.top-E.top)/M,type:n.value,nodeId:o,..._p(f.value)};c.handleBounds[n.value]=[...c.handleBounds[n.value]??[],G]}),_s(()=>{const N=c.handleBounds[n.value];N&&(c.handleBounds[n.value]=N.filter(T=>T.id!==i.id))});function _(N){const T=Ac(N);w.value&&m.value&&(T&&N.button===0||!T)&&S(N)}function R(N){!o||!r.value&&!m.value||w.value&&L(N)}return s({handleClick:L,handlePointerDown:S,onClick:R,onPointerDown:_}),(N,T)=>(hi(),oi("div",{ref_key:"handle",ref:f,"data-id":`${mi(t)}-${mi(o)}-${i.id}-${n.value}`,"data-handleid":i.id,"data-nodeid":mi(o),"data-handlepos":N.position,class:Ii(["vue-flow__handle",[`vue-flow__handle-${N.position}`,`vue-flow__handle-${i.id}`,mi(d),mi(u),n.value,{connectable:w.value,connecting:C.value,connectablestart:m.value,connectableend:y.value,connectionindicator:w.value&&(m.value&&!v.value||y.value&&v.value)}]]),onMousedown:_,onTouchstartPassive:_,onClick:R},[ne(N.$slots,"default",{id:N.id})],42,fO))}}),Tp=function({sourcePosition:i=Fi.Bottom,targetPosition:s=Fi.Top,label:e,connectable:n=!0,isValidTargetPos:a,isValidSourcePos:t,data:l}){const r=l.label||e;return[B(vn,{type:"target",position:s,connectable:n,isValidConnection:a}),typeof r!="string"&&r?B(r):B(_i,[r]),B(vn,{type:"source",position:i,connectable:n,isValidConnection:t})]};Tp.props=["sourcePosition","targetPosition","label","isValidTargetPos","isValidSourcePos","connectable","data"];Tp.inheritAttrs=!1;Tp.compatConfig={MODE:3};const vO=Tp,Sp=function({targetPosition:i=Fi.Top,label:s,connectable:e=!0,isValidTargetPos:n,data:a}){const t=a.label||s;return[B(vn,{type:"target",position:i,connectable:e,isValidConnection:n}),typeof t!="string"&&t?B(t):B(_i,[t])]};Sp.props=["targetPosition","label","isValidTargetPos","connectable","data"];Sp.inheritAttrs=!1;Sp.compatConfig={MODE:3};const FO=Sp,Ip=function({sourcePosition:i=Fi.Bottom,label:s,connectable:e=!0,isValidSourcePos:n,data:a}){const t=a.label||s;return[typeof t!="string"&&t?B(t):B(_i,[t]),B(vn,{type:"source",position:i,connectable:e,isValidConnection:n})]};Ip.props=["sourcePosition","label","isValidSourcePos","connectable","data"];Ip.inheritAttrs=!1;Ip.compatConfig={MODE:3};const EO=Ip,bO=["transform"],CO=["width","height","x","y","rx","ry"],_O=["y"],DO={name:"EdgeText",compatConfig:{MODE:3}},xO=ti({...DO,props:{x:{},y:{},label:{},labelStyle:{default:()=>({})},labelShowBg:{type:Boolean,default:!0},labelBgStyle:{default:()=>({})},labelBgPadding:{default:()=>[2,4]},labelBgBorderRadius:{default:2}},setup(i){const s=Z({x:0,y:0,width:0,height:0}),e=Z(null),n=z(()=>`translate(${i.x-s.value.width/2} ${i.y-s.value.height/2})`);Di(a),bi([()=>i.x,()=>i.y,e,()=>i.label],a);function a(){if(!e.value)return;const t=e.value.getBBox();(t.width!==s.value.width||t.height!==s.value.height)&&(s.value=t)}return(t,l)=>(hi(),oi("g",{transform:n.value,class:"vue-flow__edge-textwrapper"},[t.labelShowBg?(hi(),oi("rect",{key:0,class:"vue-flow__edge-textbg",width:`${s.value.width+2*t.labelBgPadding[0]}px`,height:`${s.value.height+2*t.labelBgPadding[1]}px`,x:-t.labelBgPadding[0],y:-t.labelBgPadding[1],style:ds(t.labelBgStyle),rx:t.labelBgBorderRadius,ry:t.labelBgBorderRadius},null,12,CO)):yi("",!0),j("text",mu(t.$attrs,{ref_key:"el",ref:e,class:"vue-flow__edge-text",y:s.value.height/2,dy:"0.3em",style:t.labelStyle}),[ne(t.$slots,"default",{},()=>[typeof t.label!="string"?(hi(),rs(hv(t.label),{key:0})):(hi(),oi(_i,{key:1},[ks(Li(t.label),1)],64))])],16,_O)],8,bO))}}),wO=["id","d","marker-end","marker-start"],TO=["d","stroke-width"],SO={name:"BaseEdge",inheritAttrs:!1,compatConfig:{MODE:3}},Rp=ti({...SO,props:{id:{},labelX:{},labelY:{},path:{},label:{},markerStart:{},markerEnd:{},interactionWidth:{default:20},labelStyle:{},labelShowBg:{type:Boolean},labelBgStyle:{},labelBgPadding:{},labelBgBorderRadius:{}},setup(i,{expose:s}){const e=Z(null),n=Z(null),a=Z(null),t=dv();return s({pathEl:e,interactionEl:n,labelEl:a}),(l,r)=>(hi(),oi(_i,null,[j("path",mu(mi(t),{id:l.id,ref_key:"pathEl",ref:e,d:l.path,class:"vue-flow__edge-path","marker-end":l.markerEnd,"marker-start":l.markerStart}),null,16,wO),l.interactionWidth?(hi(),oi("path",{key:0,ref_key:"interactionEl",ref:n,fill:"none",d:l.path,"stroke-width":l.interactionWidth,"stroke-opacity":0,class:"vue-flow__edge-interaction"},null,8,TO)):yi("",!0),l.label&&l.labelX&&l.labelY?(hi(),rs(xO,{key:1,ref_key:"labelEl",ref:a,x:l.labelX,y:l.labelY,label:l.label,"label-show-bg":l.labelShowBg,"label-bg-style":l.labelBgStyle,"label-bg-padding":l.labelBgPadding,"label-bg-border-radius":l.labelBgBorderRadius,"label-style":l.labelStyle},null,8,["x","y","label","label-show-bg","label-bg-style","label-bg-padding","label-bg-border-radius","label-style"])):yi("",!0)],64))}});function f6({sourceX:i,sourceY:s,targetX:e,targetY:n}){const a=Math.abs(e-i)/2,t=e<i?e+a:e-a,l=Math.abs(n-s)/2,r=n<s?n+l:n-l;return[t,r,a,l]}function m6({sourceX:i,sourceY:s,targetX:e,targetY:n,sourceControlX:a,sourceControlY:t,targetControlX:l,targetControlY:r}){const h=i*.125+a*.375+l*.375+e*.125,p=s*.125+t*.375+r*.375+n*.125,k=Math.abs(h-i),d=Math.abs(p-s);return[h,p,k,d]}function Gr(i,s){return i>=0?.5*i:s*25*Math.sqrt(-i)}function p0({pos:i,x1:s,y1:e,x2:n,y2:a,c:t}){let l,r;switch(i){case Fi.Left:l=s-Gr(s-n,t),r=e;break;case Fi.Right:l=s+Gr(n-s,t),r=e;break;case Fi.Top:l=s,r=e-Gr(e-a,t);break;case Fi.Bottom:l=s,r=e+Gr(a-e,t);break}return[l,r]}function v6(i){const{sourceX:s,sourceY:e,sourcePosition:n=Fi.Bottom,targetX:a,targetY:t,targetPosition:l=Fi.Top,curvature:r=.25}=i,[h,p]=p0({pos:n,x1:s,y1:e,x2:a,y2:t,c:r}),[k,d]=p0({pos:l,x1:a,y1:t,x2:s,y2:e,c:r}),[u,o,c,A]=m6({sourceX:s,sourceY:e,targetX:a,targetY:t,sourceControlX:h,sourceControlY:p,targetControlX:k,targetControlY:d});return[`M${s},${e} C${h},${p} ${k},${d} ${a},${t}`,u,o,c,A]}function k0({pos:i,x1:s,y1:e,x2:n,y2:a}){let t,l;switch(i){case Fi.Left:case Fi.Right:t=.5*(s+n),l=e;break;case Fi.Top:case Fi.Bottom:t=s,l=.5*(e+a);break}return[t,l]}function F6(i){const{sourceX:s,sourceY:e,sourcePosition:n=Fi.Bottom,targetX:a,targetY:t,targetPosition:l=Fi.Top}=i,[r,h]=k0({pos:n,x1:s,y1:e,x2:a,y2:t}),[p,k]=k0({pos:l,x1:a,y1:t,x2:s,y2:e}),[d,u,o,c]=m6({sourceX:s,sourceY:e,targetX:a,targetY:t,sourceControlX:r,sourceControlY:h,targetControlX:p,targetControlY:k});return[`M${s},${e} C${r},${h} ${p},${k} ${a},${t}`,d,u,o,c]}const d0={[Fi.Left]:{x:-1,y:0},[Fi.Right]:{x:1,y:0},[Fi.Top]:{x:0,y:-1},[Fi.Bottom]:{x:0,y:1}};function IO({source:i,sourcePosition:s=Fi.Bottom,target:e}){return s===Fi.Left||s===Fi.Right?i.x<e.x?{x:1,y:0}:{x:-1,y:0}:i.y<e.y?{x:0,y:1}:{x:0,y:-1}}function o0(i,s){return Math.sqrt((s.x-i.x)**2+(s.y-i.y)**2)}function RO({source:i,sourcePosition:s=Fi.Bottom,target:e,targetPosition:n=Fi.Top,center:a,offset:t}){const l=d0[s],r=d0[n],h={x:i.x+l.x*t,y:i.y+l.y*t},p={x:e.x+r.x*t,y:e.y+r.y*t},k=IO({source:h,sourcePosition:s,target:p}),d=k.x!==0?"x":"y",u=k[d];let o,c,A;const g={x:0,y:0},f={x:0,y:0},[m,y,v,C]=f6({sourceX:i.x,sourceY:i.y,targetX:e.x,targetY:e.y});if(l[d]*r[d]===-1){c=a.x??m,A=a.y??y;const L=[{x:c,y:h.y},{x:c,y:p.y}],w=[{x:h.x,y:A},{x:p.x,y:A}];l[d]===u?o=d==="x"?L:w:o=d==="x"?w:L}else{const L=[{x:h.x,y:p.y}],w=[{x:p.x,y:h.y}];if(d==="x"?o=l.x===u?w:L:o=l.y===u?L:w,s===n){const V=Math.abs(i[d]-e[d]);if(V<=t){const E=Math.min(t-1,t-V);l[d]===u?g[d]=(h[d]>i[d]?-1:1)*E:f[d]=(p[d]>e[d]?-1:1)*E}}if(s!==n){const V=d==="x"?"y":"x",E=l[d]===r[V],$=h[V]>p[V],I=h[V]<p[V];(l[d]===1&&(!E&&$||E&&I)||l[d]!==1&&(!E&&I||E&&$))&&(o=d==="x"?L:w)}const _={x:h.x+g.x,y:h.y+g.y},R={x:p.x+f.x,y:p.y+f.y},N=Math.max(Math.abs(_.x-o[0].x),Math.abs(R.x-o[0].x)),T=Math.max(Math.abs(_.y-o[0].y),Math.abs(R.y-o[0].y));N>=T?(c=(_.x+R.x)/2,A=o[0].y):(c=o[0].x,A=(_.y+R.y)/2)}return[[i,{x:h.x+g.x,y:h.y+g.y},...o,{x:p.x+f.x,y:p.y+f.y},e],c,A,v,C]}function OO(i,s,e,n){const a=Math.min(o0(i,s)/2,o0(s,e)/2,n),{x:t,y:l}=s;if(i.x===t&&t===e.x||i.y===l&&l===e.y)return`L${t} ${l}`;if(i.y===l){const p=i.x<e.x?-1:1,k=i.y<e.y?1:-1;return`L ${t+a*p},${l}Q ${t},${l} ${t},${l+a*k}`}const r=i.x<e.x?1:-1,h=i.y<e.y?-1:1;return`L ${t},${l+a*h}Q ${t},${l} ${t+a*r},${l}`}function qo(i){const{sourceX:s,sourceY:e,sourcePosition:n=Fi.Bottom,targetX:a,targetY:t,targetPosition:l=Fi.Top,borderRadius:r=5,centerX:h,centerY:p,offset:k=20}=i,[d,u,o,c,A]=RO({source:{x:s,y:e},sourcePosition:n,target:{x:a,y:t},targetPosition:l,center:{x:h,y:p},offset:k});return[d.reduce((f,m,y)=>{let v;return y>0&&y<d.length-1?v=OO(d[y-1],m,d[y+1],r):v=`${y===0?"M":"L"}${m.x} ${m.y}`,f+=v,f},""),u,o,c,A]}function PO(i){const{sourceX:s,sourceY:e,targetX:n,targetY:a}=i,[t,l,r,h]=f6({sourceX:s,sourceY:e,targetX:n,targetY:a});return[`M ${s},${e}L ${n},${a}`,t,l,r,h]}const LO=ti({name:"StraightEdge",props:["label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","markerEnd","markerStart","interactionWidth"],compatConfig:{MODE:3},setup(i,{attrs:s}){return()=>{const[e,n,a]=PO(i);return B(Rp,{path:e,labelX:n,labelY:a,...s,...i})}}}),NO=LO,MO=ti({name:"SmoothStepEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","borderRadius","markerEnd","markerStart","interactionWidth","offset"],compatConfig:{MODE:3},setup(i,{attrs:s}){return()=>{const[e,n,a]=qo({...i,sourcePosition:i.sourcePosition??Fi.Bottom,targetPosition:i.targetPosition??Fi.Top});return B(Rp,{path:e,labelX:n,labelY:a,...s,...i})}}}),E6=MO,$O=ti({name:"StepEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","markerEnd","markerStart","interactionWidth"],setup(i,{attrs:s}){return()=>B(E6,{...i,...s,borderRadius:0})}}),VO=$O,zO=ti({name:"BezierEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","curvature","markerEnd","markerStart","interactionWidth"],compatConfig:{MODE:3},setup(i,{attrs:s}){return()=>{const[e,n,a]=v6({...i,sourcePosition:i.sourcePosition??Fi.Bottom,targetPosition:i.targetPosition??Fi.Top});return B(Rp,{path:e,labelX:n,labelY:a,...s,...i})}}}),qO=zO,HO=ti({name:"SimpleBezierEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","markerEnd","markerStart","interactionWidth"],compatConfig:{MODE:3},setup(i,{attrs:s}){return()=>{const[e,n,a]=F6({...i,sourcePosition:i.sourcePosition??Fi.Bottom,targetPosition:i.targetPosition??Fi.Top});return B(Rp,{path:e,labelX:n,labelY:a,...s,...i})}}}),jO=HO,UO={input:EO,default:vO,output:FO},GO={default:qO,straight:NO,step:VO,smoothstep:E6,simplebezier:jO};function WO(i,s,e){const n=z(()=>A=>s.value.get(A)),a=z(()=>A=>e.value.get(A)),t=z(()=>{const A={...GO,...i.edgeTypes},g=Object.keys(A);for(const f of i.edges)f.type&&!g.includes(f.type)&&(A[f.type]=f.type);return A}),l=z(()=>{const A={...UO,...i.nodeTypes},g=Object.keys(A);for(const f of i.nodes)f.type&&!g.includes(f.type)&&(A[f.type]=f.type);return A}),r=z(()=>i.onlyRenderVisibleElements?a6(i.nodes,{x:0,y:0,width:i.dimensions.width,height:i.dimensions.height},i.viewport,!0):i.nodes),h=z(()=>{if(i.onlyRenderVisibleElements){const A=[];for(const g of i.edges){const f=s.value.get(g.source),m=s.value.get(g.target);UR({sourcePos:f.computedPosition||{x:0,y:0},targetPos:m.computedPosition||{x:0,y:0},sourceWidth:f.dimensions.width,sourceHeight:f.dimensions.height,targetWidth:m.dimensions.width,targetHeight:m.dimensions.height,width:i.dimensions.width,height:i.dimensions.height,viewport:i.viewport})&&A.push(g)}return A}return i.edges}),p=z(()=>[...r.value,...h.value]),k=z(()=>{const A=[];for(const g of i.nodes)g.selected&&A.push(g);return A}),d=z(()=>{const A=[];for(const g of i.edges)g.selected&&A.push(g);return A}),u=z(()=>[...k.value,...d.value]),o=z(()=>{const A=[];for(const g of i.nodes)g.dimensions.width&&g.dimensions.height&&g.handleBounds!==void 0&&A.push(g);return A}),c=z(()=>r.value.length>0&&o.value.length===r.value.length);return{getNode:n,getEdge:a,getElements:p,getEdgeTypes:t,getNodeTypes:l,getEdges:h,getNodes:r,getSelectedElements:u,getSelectedNodes:k,getSelectedEdges:d,getNodesInitialized:o,areNodesInitialized:c}}let KO=class qa{constructor(){this.currentId=0,this.flows=new Map}static getInstance(){var s;const e=(s=pe())==null?void 0:s.appContext.app,n=(e==null?void 0:e.config.globalProperties.$vueFlowStorage)??qa.instance;return qa.instance=n??new qa,e&&(e.config.globalProperties.$vueFlowStorage=qa.instance),qa.instance}set(s,e){return this.flows.set(s,e)}get(s){return this.flows.get(s)}remove(s){return this.flows.delete(s)}create(s,e){const n=y6(),a=Xn(n),t={};for(const[u,o]of Object.entries(a.hooks)){const c=`on${u.charAt(0).toUpperCase()+u.slice(1)}`;t[c]=o.on}const l={};for(const[u,o]of Object.entries(a.hooks))l[u]=o.trigger;const r=z(()=>{const u=new Map;for(const o of a.nodes)u.set(o.id,o);return u}),h=z(()=>{const u=new Map;for(const o of a.edges)u.set(o.id,o);return u}),p=WO(a,r,h),k=yO(a,r,h);k.setState({...a,...e});const d={...t,...p,...k,...Ww(a),nodeLookup:r,edgeLookup:h,emits:l,id:s,vueFlowVersion:"1.42.1",$destroy:()=>{this.remove(s)}};return this.set(s,d),d}getId(){return`vue-flow-${this.currentId++}`}};function Ki(i){const s=KO.getInstance(),e=Zh(),n=typeof i=="object",a=n?i:{id:i},t=a.id,l=t??(e==null?void 0:e.vueFlowId);let r;if(e){const h=Ni(h0,null);typeof h<"u"&&h!==null&&(!l||h.id===l)&&(r=h)}if(r||l&&(r=s.get(l)),!r||l&&r.id!==l){const h=t??s.getId(),p=s.create(h,a);r=p,(e??iy(!0)).run(()=>{bi(p.applyDefault,(d,u,o)=>{const c=g=>{p.applyNodeChanges(g)},A=g=>{p.applyEdgeChanges(g)};d?(p.onNodesChange(c),p.onEdgesChange(A)):(p.hooks.value.nodesChange.off(c),p.hooks.value.edgesChange.off(A)),o(()=>{p.hooks.value.nodesChange.off(c),p.hooks.value.edgesChange.off(A)})},{immediate:!0}),vp(()=>{if(r){const d=s.get(r.id);d?d.$destroy():xp(`No store instance found for id ${r.id} in storage.`)}})})}else n&&r.setState(a);if(e&&(Ds(h0,r),e.vueFlowId=r.id),n){const h=pe();(h==null?void 0:h.type.name)!=="VueFlow"&&r.emits.error(new vs(cs.USEVUEFLOW_OPTIONS))}return r}function YO(i){const{emits:s,dimensions:e}=Ki();let n;Di(()=>{const a=i.value,t=()=>{if(!a)return;const l=_p(a);(l.width===0||l.height===0)&&s.error(new vs(cs.MISSING_VIEWPORT_DIMENSIONS)),e.value={width:l.width||500,height:l.height||500}};t(),window.addEventListener("resize",t),a&&(n=new ResizeObserver(()=>t()),n.observe(a)),xt(()=>{window.removeEventListener("resize",t),n&&a&&n.unobserve(a)})})}const XO={name:"UserSelection",compatConfig:{MODE:3}},ZO=ti({...XO,props:{userSelectionRect:{}},setup(i){return(s,e)=>(hi(),oi("div",{class:"vue-flow__selection vue-flow__container",style:ds({width:`${s.userSelectionRect.width}px`,height:`${s.userSelectionRect.height}px`,transform:`translate(${s.userSelectionRect.x}px, ${s.userSelectionRect.y}px)`})},null,4))}}),JO=["tabIndex"],QO={name:"NodesSelection",compatConfig:{MODE:3}},iP=ti({...QO,setup(i){const{emits:s,viewport:e,getSelectedNodes:n,noPanClassName:a,disableKeyboardA11y:t,userSelectionActive:l}=Ki(),r=A6(),h=Z(null),p=c6({el:h,onStart(c){s.selectionDragStart(c)},onDrag(c){s.selectionDrag(c)},onStop(c){s.selectionDragStop(c)}});Di(()=>{var c;t.value||(c=h.value)==null||c.focus({preventScroll:!0})});const k=z(()=>n6(n.value)),d=z(()=>({width:`${k.value.width}px`,height:`${k.value.height}px`,top:`${k.value.y}px`,left:`${k.value.x}px`}));function u(c){s.selectionContextMenu({event:c,nodes:n.value})}function o(c){t||at[c.key]&&(c.preventDefault(),r({x:at[c.key].x,y:at[c.key].y},c.shiftKey))}return(c,A)=>!mi(l)&&k.value.width&&k.value.height?(hi(),oi("div",{key:0,class:Ii(["vue-flow__nodesselection vue-flow__container",mi(a)]),style:ds({transform:`translate(${mi(e).x}px,${mi(e).y}px) scale(${mi(e).zoom})`})},[j("div",{ref_key:"el",ref:h,class:Ii([{dragging:mi(p)},"vue-flow__nodesselection-rect"]),style:ds(d.value),tabIndex:mi(t)?void 0:-1,onContextmenu:u,onKeydown:o},null,46,JO)],6)):yi("",!0)}});function sP(i,s){return{x:i.clientX-s.left,y:i.clientY-s.top}}const eP={name:"Pane",compatConfig:{MODE:3}},nP=ti({...eP,props:{isSelecting:{type:Boolean},selectionKeyPressed:{type:Boolean}},setup(i){const{vueFlowRef:s,nodes:e,viewport:n,emits:a,userSelectionActive:t,removeSelectedElements:l,userSelectionRect:r,elementsSelectable:h,nodesSelectionActive:p,getSelectedEdges:k,getSelectedNodes:d,removeNodes:u,removeEdges:o,selectionMode:c,deleteKeyCode:A,multiSelectionKeyCode:g,multiSelectionActive:f,edgeLookup:m,nodeLookup:y,connectionLookup:v,defaultEdgeOptions:C}=Ki(),S=Z(null),L=Z(new Set),w=Z(new Set),_=Z(),R=Mi(()=>h.value&&(i.isSelecting||t.value));let N=!1,T=!1;const V=cl(A,{actInsideInputWithModifier:!1}),E=cl(g);bi(V,ei=>{ei&&(u(d.value),o(k.value),p.value=!1)}),bi(E,ei=>{f.value=ei});function $(ei,q){return W=>{W.target===q&&(ei==null||ei(W))}}function I(ei){if(N){N=!1;return}a.paneClick(ei),l(),p.value=!1}function M(ei){ei.preventDefault(),ei.stopPropagation(),a.paneContextMenu(ei)}function G(ei){a.paneScroll(ei)}function Y(ei){var q,W,K;if(_.value=(q=s.value)==null?void 0:q.getBoundingClientRect(),!h.value||!i.isSelecting||ei.button!==0||ei.target!==S.value||!_.value)return;(K=(W=ei.target)==null?void 0:W.setPointerCapture)==null||K.call(W,ei.pointerId);const{x:ri,y:U}=sP(ei,_.value);T=!0,N=!1,l(),r.value={width:0,height:0,startX:ri,startY:U,x:ri,y:U},a.selectionStart(ei)}function li(ei){var q;if(!_.value||!r.value)return;N=!0;const{x:W,y:K}=Yn(ei,_.value),{startX:ri=0,startY:U=0}=r.value,Q={startX:ri,startY:U,x:W<ri?W:ri,y:K<U?K:U,width:Math.abs(W-ri),height:Math.abs(K-U)},J=L.value,ki=w.value;L.value=new Set(a6(e.value,Q,n.value,c.value===gc.Partial,!0).map(X=>X.id)),w.value=new Set;const ci=((q=C.value)==null?void 0:q.selectable)??!0;for(const X of L.value){const x=v.value.get(X);if(x)for(const{edgeId:F}of x.values()){const D=m.value.get(F);D&&(D.selectable??ci)&&w.value.add(F)}}if(!r0(J,L.value)){const X=zn(y.value,L.value,!0);a.nodesChange(X)}if(!r0(ki,w.value)){const X=zn(m.value,w.value);a.edgesChange(X)}r.value=Q,t.value=!0,p.value=!1}function pi(ei){var q;ei.button!==0||!T||((q=ei.target)==null||q.releasePointerCapture(ei.pointerId),!t.value&&r.value&&ei.target===S.value&&I(ei),t.value=!1,r.value=null,p.value=L.value.size>0,a.selectionEnd(ei),i.selectionKeyPressed&&(N=!1),T=!1)}return(ei,q)=>(hi(),oi("div",{ref_key:"container",ref:S,class:Ii(["vue-flow__pane vue-flow__container",{selection:ei.isSelecting}]),onClick:q[0]||(q[0]=W=>R.value?void 0:$(I,S.value)(W)),onContextmenu:q[1]||(q[1]=W=>$(M,S.value)(W)),onWheelPassive:q[2]||(q[2]=W=>$(G,S.value)(W)),onPointerenter:q[3]||(q[3]=W=>R.value?void 0:mi(a).paneMouseEnter(W)),onPointerdown:q[4]||(q[4]=W=>R.value?Y(W):mi(a).paneMouseMove(W)),onPointermove:q[5]||(q[5]=W=>R.value?li(W):mi(a).paneMouseMove(W)),onPointerup:q[6]||(q[6]=W=>R.value?pi(W):void 0),onPointerleave:q[7]||(q[7]=W=>mi(a).paneMouseLeave(W))},[ne(ei.$slots,"default"),mi(t)&&mi(r)?(hi(),rs(ZO,{key:0,"user-selection-rect":mi(r)},null,8,["user-selection-rect"])):yi("",!0),mi(p)&&mi(d).length?(hi(),rs(iP,{key:1})):yi("",!0)],34))}}),aP={name:"Transform",compatConfig:{MODE:3}},tP=ti({...aP,setup(i){const{viewport:s,fitViewOnInit:e,fitViewOnInitDone:n}=Ki(),a=z(()=>e.value?!n.value:!1),t=z(()=>`translate(${s.value.x}px,${s.value.y}px) scale(${s.value.zoom})`);return(l,r)=>(hi(),oi("div",{class:"vue-flow__transformationpane vue-flow__container",style:ds({transform:t.value,opacity:a.value?0:void 0})},[ne(l.$slots,"default")],4))}}),lP={name:"Viewport",compatConfig:{MODE:3}},rP=ti({...lP,setup(i){const{minZoom:s,maxZoom:e,defaultViewport:n,translateExtent:a,zoomActivationKeyCode:t,selectionKeyCode:l,panActivationKeyCode:r,panOnScroll:h,panOnScrollMode:p,panOnScrollSpeed:k,panOnDrag:d,zoomOnDoubleClick:u,zoomOnPinch:o,zoomOnScroll:c,preventScrolling:A,noWheelClassName:g,noPanClassName:f,emits:m,connectionStartHandle:y,userSelectionActive:v,paneDragging:C,d3Zoom:S,d3Selection:L,d3ZoomHandler:w,viewport:_,viewportRef:R,paneClickDistance:N}=Ki();YO(R);const T=Z(!1),V=Z(!1);let E=null,$=!1,I=0,M={x:0,y:0,zoom:0};const G=cl(r),Y=cl(l),li=cl(t),pi=Mi(()=>(!Y.value||Y.value&&l.value===!0)&&(G.value||d.value)),ei=Mi(()=>G.value||h.value),q=Mi(()=>Y.value||l.value===!0&&pi.value!==!0);Di(()=>{if(!R.value){xp("Viewport element is missing");return}const J=R.value,ki=J.getBoundingClientRect(),ci=xR().clickDistance(N.value).scaleExtent([s.value,e.value]).translateExtent(a.value),X=fe(J).call(ci),x=X.on("wheel.zoom"),F=ft.translate(n.value.x??0,n.value.y??0).scale(Sa(n.value.zoom??1,s.value,e.value)),D=[[0,0],[ki.width,ki.height]],O=ci.constrain()(F,D,a.value);ci.transform(X,O),ci.wheelDelta(K),S.value=ci,L.value=X,w.value=x,_.value={x:O.x,y:O.y,zoom:O.k},ci.on("start",P=>{var H;if(!P.sourceEvent)return null;I=P.sourceEvent.button,T.value=!0;const si=U(P.transform);((H=P.sourceEvent)==null?void 0:H.type)==="mousedown"&&(C.value=!0),M=si,m.viewportChangeStart(si),m.moveStart({event:P,flowTransform:si})}),ci.on("end",P=>{if(!P.sourceEvent)return null;if(T.value=!1,C.value=!1,W(pi.value,I??0)&&!$&&m.paneContextMenu(P.sourceEvent),$=!1,ri(M,P.transform)){const H=U(P.transform);M=H,m.viewportChangeEnd(H),m.moveEnd({event:P,flowTransform:H})}}),ci.filter(P=>{var H;const si=li.value||c.value,ni=o.value&&P.ctrlKey,ii=P.button;if(ii===1&&P.type==="mousedown"&&(Q(P,"vue-flow__node")||Q(P,"vue-flow__edge")))return!0;if(!pi.value&&!si&&!ei.value&&!u.value&&!o.value||v.value||!u.value&&P.type==="dblclick"||Q(P,g.value)&&P.type==="wheel"||Q(P,f.value)&&(P.type!=="wheel"||ei.value&&P.type==="wheel"&&!li.value)||!o.value&&P.ctrlKey&&P.type==="wheel"||!si&&!ei.value&&!ni&&P.type==="wheel")return!1;if(!o&&P.type==="touchstart"&&((H=P.touches)==null?void 0:H.length)>1)return P.preventDefault(),!1;if(!pi.value&&(P.type==="mousedown"||P.type==="touchstart")||l.value===!0&&Array.isArray(d.value)&&d.value.includes(0)&&ii===0||Array.isArray(d.value)&&!d.value.includes(ii)&&(P.type==="mousedown"||P.type==="touchstart"))return!1;const ai=Array.isArray(d.value)&&d.value.includes(ii)||l.value===!0&&Array.isArray(d.value)&&!d.value.includes(0)||!ii||ii<=1;return(!P.ctrlKey||G.value||P.type==="wheel")&&ai}),bi([v,pi],()=>{v.value&&!T.value?ci.on("zoom",null):v.value||ci.on("zoom",P=>{_.value={x:P.transform.x,y:P.transform.y,zoom:P.transform.k};const H=U(P.transform);$=W(pi.value,I??0),m.viewportChange(H),m.move({event:P,flowTransform:H})})},{immediate:!0}),bi([v,ei,p,li,o,A,g],()=>{ei.value&&!li.value&&!v.value?X.on("wheel.zoom",P=>{if(Q(P,g.value))return!1;const H=li.value||c.value,si=o.value&&P.ctrlKey;if(!(!A.value||ei.value||H||si))return!1;P.preventDefault(),P.stopImmediatePropagation();const ii=X.property("__zoom").k||1,ai=Mh();if(!G.value&&P.ctrlKey&&o.value&&ai){const Si=Me(P),Xi=K(P),zi=ii*2**Xi;ci.scaleTo(X,zi,Si,P);return}const gi=P.deltaMode===1?20:1;let di=p.value===ul.Vertical?0:P.deltaX*gi,Ai=p.value===ul.Horizontal?0:P.deltaY*gi;!ai&&P.shiftKey&&p.value!==ul.Vertical&&!di&&Ai&&(di=Ai,Ai=0),ci.translateBy(X,-(di/ii)*k.value,-(Ai/ii)*k.value);const Ci=U(X.property("__zoom"));E&&clearTimeout(E),V.value?(m.move({event:P,flowTransform:Ci}),m.viewportChange(Ci),E=setTimeout(()=>{m.moveEnd({event:P,flowTransform:Ci}),m.viewportChangeEnd(Ci),V.value=!1},150)):(V.value=!0,m.moveStart({event:P,flowTransform:Ci}),m.viewportChangeStart(Ci))},{passive:!1}):typeof x<"u"&&X.on("wheel.zoom",function(P,H){const si=!A.value&&P.type==="wheel"&&!P.ctrlKey,ni=li.value||c.value,ii=o.value&&P.ctrlKey;if(!ni&&!h.value&&!ii&&P.type==="wheel"||si||Q(P,g.value))return null;P.preventDefault(),x.call(this,P,H)},{passive:!1})},{immediate:!0})});function W(J,ki){return ki===2&&Array.isArray(J)&&J.includes(2)}function K(J){const ki=J.ctrlKey&&Mh()?10:1;return-J.deltaY*(J.deltaMode===1?.05:J.deltaMode?1:.002)*ki}function ri(J,ki){return J.x!==ki.x&&!Number.isNaN(ki.x)||J.y!==ki.y&&!Number.isNaN(ki.y)||J.zoom!==ki.k&&!Number.isNaN(ki.k)}function U(J){return{x:J.x,y:J.y,zoom:J.k}}function Q(J,ki){return J.target.closest(`.${ki}`)}return(J,ki)=>(hi(),oi("div",{ref_key:"viewportRef",ref:R,class:"vue-flow__viewport vue-flow__container"},[Bi(nP,{"is-selecting":q.value,"selection-key-pressed":mi(Y),class:Ii({connecting:!!mi(y),dragging:mi(C),draggable:mi(d)===!0||Array.isArray(mi(d))&&mi(d).includes(0)})},{default:$i(()=>[Bi(tP,null,{default:$i(()=>[ne(J.$slots,"default")]),_:3})]),_:3},8,["is-selecting","selection-key-pressed","class"])],512))}}),hP=["id"],pP=["id"],kP=["id"],dP={name:"A11yDescriptions",compatConfig:{MODE:3}},oP=ti({...dP,setup(i){const{id:s,disableKeyboardA11y:e,ariaLiveMessage:n}=Ki();return(a,t)=>(hi(),oi(_i,null,[j("div",{id:`${mi(Y8)}-${mi(s)}`,style:{display:"none"}}," Press enter or space to select a node. "+Li(mi(e)?"":"You can then use the arrow keys to move the node around.")+" You can then use the arrow keys to move the node around, press delete to remove it and press escape to cancel. ",9,hP),j("div",{id:`${mi(X8)}-${mi(s)}`,style:{display:"none"}}," Press enter or space to select an edge. You can then press delete to remove it or press escape to cancel. ",8,pP),mi(e)?yi("",!0):(hi(),oi("div",{key:0,id:`${mi(IR)}-${mi(s)}`,"aria-live":"assertive","aria-atomic":"true",style:{position:"absolute",width:"1px",height:"1px",margin:"-1px",border:"0",padding:"0",overflow:"hidden",clip:"rect(0px, 0px, 0px, 0px)","clip-path":"inset(100%)"}},Li(mi(n)),9,kP))],64))}});function uP(){const i=Ki();bi(()=>i.viewportHelper.value.viewportInitialized,s=>{s&&setTimeout(()=>{i.emits.init(i),i.emits.paneReady(i)},1)})}function cP(i,s,e){return e===Fi.Left?i-s:e===Fi.Right?i+s:i}function gP(i,s,e){return e===Fi.Top?i-s:e===Fi.Bottom?i+s:i}const yc=function({radius:i=10,centerX:s=0,centerY:e=0,position:n=Fi.Top,type:a}){return B("circle",{class:`vue-flow__edgeupdater vue-flow__edgeupdater-${a}`,cx:cP(s,i,n),cy:gP(e,i,n),r:i,stroke:"transparent",fill:"transparent"})};yc.props=["radius","centerX","centerY","position","type"];yc.compatConfig={MODE:3};const u0=yc,BP=ti({name:"Edge",compatConfig:{MODE:3},props:["id"],setup(i){const{id:s,addSelectedEdges:e,connectionMode:n,edgeUpdaterRadius:a,emits:t,nodesSelectionActive:l,noPanClassName:r,getEdgeTypes:h,removeSelectedEdges:p,findEdge:k,findNode:d,isValidConnection:u,multiSelectionActive:o,disableKeyboardA11y:c,elementsSelectable:A,edgesUpdatable:g,edgesFocusable:f,hooks:m}=Ki(),y=z(()=>k(i.id)),{emit:v,on:C}=rO(y.value,t),S=Ni(wp),L=pe(),w=Z(!1),_=Z(!1),R=Z(""),N=Z(null),T=Z("source"),V=Z(null),E=Mi(()=>typeof y.value.selectable>"u"?A.value:y.value.selectable),$=Mi(()=>typeof y.value.updatable>"u"?g.value:y.value.updatable),I=Mi(()=>typeof y.value.focusable>"u"?f.value:y.value.focusable);Ds(aO,i.id),Ds(tO,V);const M=z(()=>y.value.class instanceof Function?y.value.class(y.value):y.value.class),G=z(()=>y.value.style instanceof Function?y.value.style(y.value):y.value.style),Y=z(()=>{const D=y.value.type||"default",O=S==null?void 0:S[`edge-${D}`];if(O)return O;let P=y.value.template??h.value[D];if(typeof P=="string"&&L){const H=Object.keys(L.appContext.components);H&&H.includes(D)&&(P=Wi(D,!1))}return P&&typeof P!="string"?P:(t.error(new vs(cs.EDGE_TYPE_MISSING,P)),!1)}),{handlePointerDown:li}=g6({nodeId:R,handleId:N,type:T,isValidConnection:u,edgeUpdaterType:T,onEdgeUpdate:q,onEdgeUpdateEnd:W});return()=>{const D=d(y.value.source),O=d(y.value.target),P="pathOptions"in y.value?y.value.pathOptions:{};if(!D&&!O)return t.error(new vs(cs.EDGE_SOURCE_TARGET_MISSING,y.value.id,y.value.source,y.value.target)),null;if(!D)return t.error(new vs(cs.EDGE_SOURCE_MISSING,y.value.id,y.value.source)),null;if(!O)return t.error(new vs(cs.EDGE_TARGET_MISSING,y.value.id,y.value.target)),null;if(!y.value||y.value.hidden||D.hidden||O.hidden)return null;let H;n.value===ia.Strict?H=D.handleBounds.source:H=[...D.handleBounds.source||[],...D.handleBounds.target||[]];const si=s0(H,y.value.sourceHandle);let ni;n.value===ia.Strict?ni=O.handleBounds.target:ni=[...O.handleBounds.target||[],...O.handleBounds.source||[]];const ii=s0(ni,y.value.targetHandle),ai=(si==null?void 0:si.position)||Fi.Bottom,gi=(ii==null?void 0:ii.position)||Fi.Top,{x:di,y:Ai}=mt(D,si,ai),{x:Ci,y:Si}=mt(O,ii,gi);return y.value.sourceX=di,y.value.sourceY=Ai,y.value.targetX=Ci,y.value.targetY=Si,B("g",{ref:V,key:i.id,"data-id":i.id,class:["vue-flow__edge",`vue-flow__edge-${Y.value===!1?"default":y.value.type||"default"}`,r.value,M.value,{updating:w.value,selected:y.value.selected,animated:y.value.animated,inactive:!E.value&&!m.value.edgeClick.hasListeners()}],onClick:ri,onContextmenu:U,onDblclick:Q,onMouseenter:J,onMousemove:ki,onMouseleave:ci,onKeyDown:I.value?F:void 0,tabIndex:I.value?0:void 0,"aria-label":y.value.ariaLabel===null?void 0:y.value.ariaLabel||`Edge from ${y.value.source} to ${y.value.target}`,"aria-describedby":I.value?`${X8}-${s}`:void 0,role:I.value?"button":"img"},[_.value?null:B(Y.value===!1?h.value.default:Y.value,{id:i.id,sourceNode:D,targetNode:O,source:y.value.source,target:y.value.target,type:y.value.type,updatable:$.value,selected:y.value.selected,animated:y.value.animated,label:y.value.label,labelStyle:y.value.labelStyle,labelShowBg:y.value.labelShowBg,labelBgStyle:y.value.labelBgStyle,labelBgPadding:y.value.labelBgPadding,labelBgBorderRadius:y.value.labelBgBorderRadius,data:y.value.data,events:{...y.value.events,...C},style:G.value,markerStart:`url('#${$l(y.value.markerStart,s)}')`,markerEnd:`url('#${$l(y.value.markerEnd,s)}')`,sourcePosition:ai,targetPosition:gi,sourceX:di,sourceY:Ai,targetX:Ci,targetY:Si,sourceHandleId:y.value.sourceHandle,targetHandleId:y.value.targetHandle,interactionWidth:y.value.interactionWidth,...P}),[$.value==="source"||$.value===!0?[B("g",{onMousedown:X,onMouseenter:pi,onMouseout:ei},B(u0,{position:ai,centerX:di,centerY:Ai,radius:a.value,type:"source","data-type":"source"}))]:null,$.value==="target"||$.value===!0?[B("g",{onMousedown:x,onMouseenter:pi,onMouseout:ei},B(u0,{position:gi,centerX:Ci,centerY:Si,radius:a.value,type:"target","data-type":"target"}))]:null]])};function pi(){w.value=!0}function ei(){w.value=!1}function q(D,O){v.update({event:D,edge:y.value,connection:O})}function W(D){v.updateEnd({event:D,edge:y.value}),_.value=!1}function K(D,O){D.button===0&&(_.value=!0,R.value=O?y.value.target:y.value.source,N.value=(O?y.value.targetHandle:y.value.sourceHandle)??"",T.value=O?"target":"source",v.updateStart({event:D,edge:y.value}),li(D))}function ri(D){var O;const P={event:D,edge:y.value};E.value&&(l.value=!1,y.value.selected&&o.value?(p([y.value]),(O=V.value)==null||O.blur()):e([y.value])),v.click(P)}function U(D){v.contextMenu({event:D,edge:y.value})}function Q(D){v.doubleClick({event:D,edge:y.value})}function J(D){v.mouseEnter({event:D,edge:y.value})}function ki(D){v.mouseMove({event:D,edge:y.value})}function ci(D){v.mouseLeave({event:D,edge:y.value})}function X(D){K(D,!0)}function x(D){K(D,!1)}function F(D){var O;!c.value&&Z8.includes(D.key)&&E.value&&(D.key==="Escape"?((O=V.value)==null||O.blur(),p([k(i.id)])):e([k(i.id)]))}}}),AP=BP,yP=ti({name:"ConnectionLine",compatConfig:{MODE:3},setup(){var i;const{id:s,connectionMode:e,connectionStartHandle:n,connectionEndHandle:a,connectionPosition:t,connectionLineType:l,connectionLineStyle:r,connectionLineOptions:h,connectionStatus:p,viewport:k,findNode:d}=Ki(),u=(i=Ni(wp))==null?void 0:i["connection-line"],o=z(()=>{var m;return d((m=n.value)==null?void 0:m.nodeId)}),c=z(()=>{var m;return d((m=a.value)==null?void 0:m.nodeId)??null}),A=z(()=>({x:(t.value.x-k.value.x)/k.value.zoom,y:(t.value.y-k.value.y)/k.value.zoom})),g=z(()=>h.value.markerStart?`url(#${$l(h.value.markerStart,s)})`:""),f=z(()=>h.value.markerEnd?`url(#${$l(h.value.markerEnd,s)})`:"");return()=>{var m,y,v;if(!o.value||!n.value)return null;const C=n.value.id,S=n.value.type,L=o.value.handleBounds;let w=(L==null?void 0:L[S])||[];if(e.value===ia.Loose){const G=(L==null?void 0:L[S==="source"?"target":"source"])||[];w=[...w,...G]}if(!w)return null;const _=(C?w.find(G=>G.id===C):w[0])??null,R=(_==null?void 0:_.position)||Fi.Top,{x:N,y:T}=mt(o.value,_,R);let V=null;c.value&&(e.value===ia.Strict?V=((m=c.value.handleBounds[S==="source"?"target":"source"])==null?void 0:m.find(G=>{var Y;return G.id===((Y=a.value)==null?void 0:Y.id)}))||null:V=((y=[...c.value.handleBounds.source||[],...c.value.handleBounds.target||[]])==null?void 0:y.find(G=>{var Y;return G.id===((Y=a.value)==null?void 0:Y.id)}))||null);const E=((v=a.value)==null?void 0:v.position)??(R?Vo[R]:null);if(!R||!E)return null;const $=l.value??h.value.type??ca.Bezier;let I="";const M={sourceX:N,sourceY:T,sourcePosition:R,targetX:A.value.x,targetY:A.value.y,targetPosition:E};return $===ca.Bezier?[I]=v6(M):$===ca.Step?[I]=qo({...M,borderRadius:0}):$===ca.SmoothStep?[I]=qo(M):$===ca.SimpleBezier?[I]=F6(M):I=`M${N},${T} ${A.value.x},${A.value.y}`,B("svg",{class:"vue-flow__edges vue-flow__connectionline vue-flow__container"},B("g",{class:"vue-flow__connection"},u?B(u,{sourceX:N,sourceY:T,sourcePosition:R,targetX:A.value.x,targetY:A.value.y,targetPosition:E,sourceNode:o.value,sourceHandle:_,targetNode:c.value,targetHandle:V,markerEnd:f.value,markerStart:g.value,connectionStatus:p.value}):B("path",{d:I,class:[h.value.class,p,"vue-flow__connection-path"],style:{...r.value,...h.value.style},"marker-end":f.value,"marker-start":g.value})))}}}),fP=yP,mP=["id","markerWidth","markerHeight","markerUnits","orient"],vP={name:"MarkerType",compatConfig:{MODE:3}},FP=ti({...vP,props:{id:{},type:{},color:{default:"none"},width:{default:12.5},height:{default:12.5},markerUnits:{default:"strokeWidth"},orient:{default:"auto-start-reverse"},strokeWidth:{default:1}},setup(i){return(s,e)=>(hi(),oi("marker",{id:s.id,class:"vue-flow__arrowhead",viewBox:"-10 -10 20 20",refX:"0",refY:"0",markerWidth:`${s.width}`,markerHeight:`${s.height}`,markerUnits:s.markerUnits,orient:s.orient},[s.type===mi(No).ArrowClosed?(hi(),oi("polyline",{key:0,style:ds({stroke:s.color,fill:s.color,strokeWidth:s.strokeWidth}),"stroke-linecap":"round","stroke-linejoin":"round",points:"-5,-4 0,0 -5,4 -5,-4"},null,4)):yi("",!0),s.type===mi(No).Arrow?(hi(),oi("polyline",{key:1,style:ds({stroke:s.color,strokeWidth:s.strokeWidth}),"stroke-linecap":"round","stroke-linejoin":"round",fill:"none",points:"-5,-4 0,0 -5,4"},null,4)):yi("",!0)],8,mP))}}),EP={class:"vue-flow__marker vue-flow__container"},bP={name:"MarkerDefinitions",compatConfig:{MODE:3}},CP=ti({...bP,setup(i){const{id:s,edges:e,connectionLineOptions:n,defaultMarkerColor:a}=Ki(),t=z(()=>{const l=new Set,r=[],h=p=>{if(p){const k=$l(p,s);l.has(k)||(typeof p=="object"?r.push({...p,id:k,color:p.color||a.value}):r.push({id:k,color:a.value,type:p}),l.add(k))}};for(const p of[n.value.markerEnd,n.value.markerStart])h(p);for(const p of e.value)for(const k of[p.markerStart,p.markerEnd])h(k);return r.sort((p,k)=>p.id.localeCompare(k.id))});return(l,r)=>(hi(),oi("svg",EP,[j("defs",null,[(hi(!0),oi(_i,null,bs(t.value,h=>(hi(),rs(FP,{id:h.id,key:h.id,type:h.type,color:h.color,width:h.width,height:h.height,markerUnits:h.markerUnits,"stroke-width":h.strokeWidth,orient:h.orient},null,8,["id","type","color","width","height","markerUnits","stroke-width","orient"]))),128))])]))}}),_P={name:"Edges",compatConfig:{MODE:3}},DP=ti({..._P,setup(i){const{findNode:s,getEdges:e,elevateEdgesOnSelect:n}=Ki();return(a,t)=>(hi(),oi(_i,null,[Bi(CP),(hi(!0),oi(_i,null,bs(mi(e),l=>(hi(),oi("svg",{key:l.id,class:"vue-flow__edges vue-flow__container",style:ds({zIndex:mi(GR)(l,mi(s),mi(n))})},[Bi(mi(AP),{id:l.id},null,8,["id"])],4))),128)),Bi(mi(fP))],64))}}),xP=ti({name:"Node",compatConfig:{MODE:3},props:["id","resizeObserver"],setup(i){const{id:s,noPanClassName:e,selectNodesOnDrag:n,nodesSelectionActive:a,multiSelectionActive:t,emits:l,removeSelectedNodes:r,addSelectedNodes:h,updateNodeDimensions:p,onUpdateNodeInternals:k,getNodeTypes:d,nodeExtent:u,elevateNodesOnSelect:o,disableKeyboardA11y:c,ariaLiveMessage:A,snapToGrid:g,snapGrid:f,nodeDragThreshold:m,nodesDraggable:y,elementsSelectable:v,nodesConnectable:C,nodesFocusable:S,hooks:L}=Ki(),w=Z(null);Ds(u6,w),Ds(o6,i.id);const _=Ni(wp),R=pe(),N=A6(),{node:T,parentNode:V}=B6(i.id),{emit:E,on:$}=dO(T,l),I=Mi(()=>typeof T.draggable>"u"?y.value:T.draggable),M=Mi(()=>typeof T.selectable>"u"?v.value:T.selectable),G=Mi(()=>typeof T.connectable>"u"?C.value:T.connectable),Y=Mi(()=>typeof T.focusable>"u"?S.value:T.focusable),li=Mi(()=>M.value||I.value||L.value.nodeClick.hasListeners()||L.value.nodeDoubleClick.hasListeners()||L.value.nodeMouseEnter.hasListeners()||L.value.nodeMouseMove.hasListeners()||L.value.nodeMouseLeave.hasListeners()),pi=Mi(()=>!!T.dimensions.width&&!!T.dimensions.height),ei=z(()=>{const O=T.type||"default",P=_==null?void 0:_[`node-${O}`];if(P)return P;let H=T.template||d.value[O];if(typeof H=="string"&&R){const si=Object.keys(R.appContext.components);si&&si.includes(O)&&(H=Wi(O,!1))}return H&&typeof H!="string"?H:(l.error(new vs(cs.NODE_TYPE_MISSING,H)),!1)}),q=c6({id:i.id,el:w,disabled:()=>!I.value,selectable:M,dragHandle:()=>T.dragHandle,onStart(O){E.dragStart(O)},onDrag(O){E.drag(O)},onStop(O){E.dragStop(O)},onClick(O){F(O)}}),W=z(()=>T.class instanceof Function?T.class(T):T.class),K=z(()=>{const O=(T.style instanceof Function?T.style(T):T.style)||{},P=T.width instanceof Function?T.width(T):T.width,H=T.height instanceof Function?T.height(T):T.height;return!O.width&&P&&(O.width=typeof P=="string"?P:`${P}px`),!O.height&&H&&(O.height=typeof H=="string"?H:`${H}px`),O}),ri=Mi(()=>Number(T.zIndex??K.value.zIndex??0));return k(O=>{(O.includes(i.id)||!O.length)&&Q()}),Di(()=>{bi(()=>T.hidden,(O=!1,P,H)=>{!O&&w.value&&(i.resizeObserver.observe(w.value),H(()=>{w.value&&i.resizeObserver.unobserve(w.value)}))},{immediate:!0,flush:"post"})}),bi([()=>T.type,()=>T.sourcePosition,()=>T.targetPosition],()=>{Hi(()=>{p([{id:i.id,nodeElement:w.value,forceUpdate:!0}])})}),bi([()=>T.position.x,()=>T.position.y,()=>{var O;return(O=V.value)==null?void 0:O.computedPosition.x},()=>{var O;return(O=V.value)==null?void 0:O.computedPosition.y},()=>{var O;return(O=V.value)==null?void 0:O.computedPosition.z},ri,()=>T.selected,()=>T.dimensions.height,()=>T.dimensions.width,()=>{var O;return(O=V.value)==null?void 0:O.dimensions.height},()=>{var O;return(O=V.value)==null?void 0:O.dimensions.width}],([O,P,H,si,ni,ii])=>{const ai={x:O,y:P,z:ii+(o.value&&T.selected?1e3:0)};typeof H<"u"&&typeof si<"u"?T.computedPosition=VR({x:H,y:si,z:ni},ai):T.computedPosition=ai},{flush:"post",immediate:!0}),bi([()=>T.extent,u],([O,P],[H,si])=>{(O!==H||P!==si)&&U()}),T.extent==="parent"||typeof T.extent=="object"&&"range"in T.extent&&T.extent.range==="parent"?xo(()=>pi).toBe(!0).then(U):U(),()=>T.hidden?null:B("div",{ref:w,"data-id":T.id,class:["vue-flow__node",`vue-flow__node-${ei.value===!1?"default":T.type||"default"}`,{[e.value]:I.value,dragging:q==null?void 0:q.value,draggable:I.value,selected:T.selected,selectable:M.value,parent:T.isParent},W.value],style:{visibility:pi.value?"visible":"hidden",zIndex:T.computedPosition.z??ri.value,transform:`translate(${T.computedPosition.x}px,${T.computedPosition.y}px)`,pointerEvents:li.value?"all":"none",...K.value},tabIndex:Y.value?0:void 0,role:Y.value?"button":void 0,"aria-describedby":c.value?void 0:`${Y8}-${s}`,"aria-label":T.ariaLabel,onMouseenter:J,onMousemove:ki,onMouseleave:ci,onContextmenu:X,onClick:F,onDblclick:x,onKeydown:D},[B(ei.value===!1?d.value.default:ei.value,{id:T.id,type:T.type,data:T.data,events:{...T.events,...$},selected:T.selected,resizing:T.resizing,dragging:q.value,connectable:G.value,position:T.computedPosition,dimensions:T.dimensions,isValidTargetPos:T.isValidTargetPos,isValidSourcePos:T.isValidSourcePos,parent:T.parentNode,parentNodeId:T.parentNode,zIndex:T.computedPosition.z??ri.value,targetPosition:T.targetPosition,sourcePosition:T.sourcePosition,label:T.label,dragHandle:T.dragHandle,onUpdateNodeInternals:Q})]);function U(){const O=T.computedPosition,{computedPosition:P,position:H}=Bc(T,g.value?Dp(O,f.value):O,l.error,u.value,V.value);(T.computedPosition.x!==P.x||T.computedPosition.y!==P.y)&&(T.computedPosition={...T.computedPosition,...P}),(T.position.x!==H.x||T.position.y!==H.y)&&(T.position=H)}function Q(){w.value&&p([{id:i.id,nodeElement:w.value,forceUpdate:!0}])}function J(O){q!=null&&q.value||E.mouseEnter({event:O,node:T})}function ki(O){q!=null&&q.value||E.mouseMove({event:O,node:T})}function ci(O){q!=null&&q.value||E.mouseLeave({event:O,node:T})}function X(O){return E.contextMenu({event:O,node:T})}function x(O){return E.doubleClick({event:O,node:T})}function F(O){M.value&&(!n.value||!I.value||m.value>0)&&zo(T,t.value,h,r,a,!1,w.value),E.click({event:O,node:T})}function D(O){if(!(Mo(O)||c.value))if(Z8.includes(O.key)&&M.value){const P=O.key==="Escape";zo(T,t.value,h,r,a,P,w.value)}else I.value&&T.selected&&at[O.key]&&(O.preventDefault(),A.value=`Moved selected node ${O.key.replace("Arrow","").toLowerCase()}. New position, x: ${~~T.position.x}, y: ${~~T.position.y}`,N({x:at[O.key].x,y:at[O.key].y},O.shiftKey))}}}),wP=xP;function TP(i={includeHiddenNodes:!1}){const{nodes:s}=Ki();return z(()=>{if(s.value.length===0)return!1;for(const e of s.value)if((i.includeHiddenNodes||!e.hidden)&&((e==null?void 0:e.handleBounds)===void 0||e.dimensions.width===0||e.dimensions.height===0))return!1;return!0})}const SP={class:"vue-flow__nodes vue-flow__container"},IP={name:"Nodes",compatConfig:{MODE:3}},RP=ti({...IP,setup(i){const{getNodes:s,updateNodeDimensions:e,emits:n}=Ki(),a=TP(),t=Z();return bi(a,l=>{l&&Hi(()=>{n.nodesInitialized(s.value)})},{immediate:!0}),Di(()=>{t.value=new ResizeObserver(l=>{const r=l.map(h=>({id:h.target.getAttribute("data-id"),nodeElement:h.target,forceUpdate:!0}));Hi(()=>e(r))})}),xt(()=>{var l;return(l=t.value)==null?void 0:l.disconnect()}),(l,r)=>(hi(),oi("div",SP,[t.value?(hi(!0),oi(_i,{key:0},bs(mi(s),(h,p,k,d)=>{const u=[h.id];if(d&&d.key===h.id&&Yv(d,u))return d;const o=(hi(),rs(mi(wP),{id:h.id,key:h.id,"resize-observer":t.value},null,8,["id","resize-observer"]));return o.memo=u,o},r,0),128)):yi("",!0)]))}});function OP(){const{emits:i}=Ki();Di(()=>{if(d6()){const s=document.querySelector(".vue-flow__pane");s&&window.getComputedStyle(s).zIndex!=="1"&&i.error(new vs(cs.MISSING_STYLES))}})}const PP=j("div",{class:"vue-flow__edge-labels"},null,-1),LP={name:"VueFlow",compatConfig:{MODE:3}},NP=ti({...LP,props:{id:{},modelValue:{},nodes:{},edges:{},edgeTypes:{},nodeTypes:{},connectionMode:{},connectionLineType:{},connectionLineStyle:{default:void 0},connectionLineOptions:{default:void 0},connectionRadius:{},isValidConnection:{type:[Function,null],default:void 0},deleteKeyCode:{default:void 0},selectionKeyCode:{type:[Boolean,null],default:void 0},multiSelectionKeyCode:{default:void 0},zoomActivationKeyCode:{default:void 0},panActivationKeyCode:{default:void 0},snapToGrid:{type:Boolean,default:void 0},snapGrid:{},onlyRenderVisibleElements:{type:Boolean,default:void 0},edgesUpdatable:{type:[Boolean,String],default:void 0},nodesDraggable:{type:Boolean,default:void 0},nodesConnectable:{type:Boolean,default:void 0},nodeDragThreshold:{},elementsSelectable:{type:Boolean,default:void 0},selectNodesOnDrag:{type:Boolean,default:void 0},panOnDrag:{type:[Boolean,Array],default:void 0},minZoom:{},maxZoom:{},defaultViewport:{},translateExtent:{},nodeExtent:{},defaultMarkerColor:{},zoomOnScroll:{type:Boolean,default:void 0},zoomOnPinch:{type:Boolean,default:void 0},panOnScroll:{type:Boolean,default:void 0},panOnScrollSpeed:{},panOnScrollMode:{},paneClickDistance:{},zoomOnDoubleClick:{type:Boolean,default:void 0},preventScrolling:{type:Boolean,default:void 0},selectionMode:{},edgeUpdaterRadius:{},fitViewOnInit:{type:Boolean,default:void 0},connectOnClick:{type:Boolean,default:void 0},applyDefault:{type:Boolean,default:void 0},autoConnect:{type:[Boolean,Function],default:void 0},noDragClassName:{},noWheelClassName:{},noPanClassName:{},defaultEdgeOptions:{},elevateEdgesOnSelect:{type:Boolean,default:void 0},elevateNodesOnSelect:{type:Boolean,default:void 0},disableKeyboardA11y:{type:Boolean,default:void 0},edgesFocusable:{type:Boolean,default:void 0},nodesFocusable:{type:Boolean,default:void 0},autoPanOnConnect:{type:Boolean,default:void 0},autoPanOnNodeDrag:{type:Boolean,default:void 0},autoPanSpeed:{}},emits:["nodesChange","edgesChange","nodesInitialized","paneReady","init","updateNodeInternals","error","connect","connectStart","connectEnd","clickConnectStart","clickConnectEnd","moveStart","move","moveEnd","selectionDragStart","selectionDrag","selectionDragStop","selectionContextMenu","selectionStart","selectionEnd","viewportChangeStart","viewportChange","viewportChangeEnd","paneScroll","paneClick","paneContextMenu","paneMouseEnter","paneMouseMove","paneMouseLeave","edgeUpdate","edgeContextMenu","edgeMouseEnter","edgeMouseMove","edgeMouseLeave","edgeDoubleClick","edgeClick","edgeUpdateStart","edgeUpdateEnd","nodeContextMenu","nodeMouseEnter","nodeMouseMove","nodeMouseLeave","nodeDoubleClick","nodeClick","nodeDragStart","nodeDrag","nodeDragStop","miniMapNodeClick","miniMapNodeDoubleClick","miniMapNodeMouseEnter","miniMapNodeMouseMove","miniMapNodeMouseLeave","update:modelValue","update:nodes","update:edges"],setup(i,{expose:s,emit:e}){const n=i,a=kv(),t=Ek(n,"modelValue",e),l=Ek(n,"nodes",e),r=Ek(n,"edges",e),h=Ki(n),p=cO({modelValue:t,nodes:l,edges:r},n,h);return BO(e,h.hooks),uP(),OP(),Ds(wp,a),_s(()=>{p()}),s(h),(k,d)=>(hi(),oi("div",{ref:mi(h).vueFlowRef,class:"vue-flow"},[Bi(rP,null,{default:$i(()=>[Bi(DP),PP,Bi(RP),ne(k.$slots,"zoom-pane")]),_:3}),ne(k.$slots,"default"),Bi(oP)],512))}}),MP={name:"Panel",compatConfig:{MODE:3}},$P=ti({...MP,props:{position:{}},setup(i){const s=i,{userSelectionActive:e}=Ki(),n=z(()=>`${s.position}`.split("-"));return(a,t)=>(hi(),oi("div",{class:Ii(["vue-flow__panel",n.value]),style:ds({pointerEvents:mi(e)?"none":"all"})},[ne(a.$slots,"default")],6))}}),c0={};function VP(i){let s=c0[i];if(s)return s;s=c0[i]=[];for(let e=0;e<128;e++){const n=String.fromCharCode(e);s.push(n)}for(let e=0;e<i.length;e++){const n=i.charCodeAt(e);s[n]="%"+("0"+n.toString(16).toUpperCase()).slice(-2)}return s}function vt(i,s){typeof s!="string"&&(s=vt.defaultChars);const e=VP(s);return i.replace(/(%[a-f0-9]{2})+/gi,function(n){let a="";for(let t=0,l=n.length;t<l;t+=3){const r=parseInt(n.slice(t+1,t+3),16);if(r<128){a+=e[r];continue}if((r&224)===192&&t+3<l){const h=parseInt(n.slice(t+4,t+6),16);if((h&192)===128){const p=r<<6&1984|h&63;p<128?a+="��":a+=String.fromCharCode(p),t+=3;continue}}if((r&240)===224&&t+6<l){const h=parseInt(n.slice(t+4,t+6),16),p=parseInt(n.slice(t+7,t+9),16);if((h&192)===128&&(p&192)===128){const k=r<<12&61440|h<<6&4032|p&63;k<2048||k>=55296&&k<=57343?a+="���":a+=String.fromCharCode(k),t+=6;continue}}if((r&248)===240&&t+9<l){const h=parseInt(n.slice(t+4,t+6),16),p=parseInt(n.slice(t+7,t+9),16),k=parseInt(n.slice(t+10,t+12),16);if((h&192)===128&&(p&192)===128&&(k&192)===128){let d=r<<18&1835008|h<<12&258048|p<<6&4032|k&63;d<65536||d>1114111?a+="����":(d-=65536,a+=String.fromCharCode(55296+(d>>10),56320+(d&1023))),t+=9;continue}}a+="�"}return a})}vt.defaultChars=";/?:@&=+$,#";vt.componentChars="";const g0={};function zP(i){let s=g0[i];if(s)return s;s=g0[i]=[];for(let e=0;e<128;e++){const n=String.fromCharCode(e);/^[0-9a-z]$/i.test(n)?s.push(n):s.push("%"+("0"+e.toString(16).toUpperCase()).slice(-2))}for(let e=0;e<i.length;e++)s[i.charCodeAt(e)]=i[e];return s}function Fr(i,s,e){typeof s!="string"&&(e=s,s=Fr.defaultChars),typeof e>"u"&&(e=!0);const n=zP(s);let a="";for(let t=0,l=i.length;t<l;t++){const r=i.charCodeAt(t);if(e&&r===37&&t+2<l&&/^[0-9a-f]{2}$/i.test(i.slice(t+1,t+3))){a+=i.slice(t,t+3),t+=2;continue}if(r<128){a+=n[r];continue}if(r>=55296&&r<=57343){if(r>=55296&&r<=56319&&t+1<l){const h=i.charCodeAt(t+1);if(h>=56320&&h<=57343){a+=encodeURIComponent(i[t]+i[t+1]),t++;continue}}a+="%EF%BF%BD";continue}a+=encodeURIComponent(i[t])}return a}Fr.defaultChars=";/?:@&=+$,-_.!~*'()#";Fr.componentChars="-_.!~*'()";function fc(i){let s="";return s+=i.protocol||"",s+=i.slashes?"//":"",s+=i.auth?i.auth+"@":"",i.hostname&&i.hostname.indexOf(":")!==-1?s+="["+i.hostname+"]":s+=i.hostname||"",s+=i.port?":"+i.port:"",s+=i.pathname||"",s+=i.search||"",s+=i.hash||"",s}function $h(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}const qP=/^([a-z0-9.+-]+:)/i,HP=/:[0-9]*$/,jP=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,UP=["<",">",'"',"`"," ","\r",`
`,"	"],GP=["{","}","|","\\","^","`"].concat(UP),WP=["'"].concat(GP),B0=["%","/","?",";","#"].concat(WP),A0=["/","?","#"],KP=255,y0=/^[+a-z0-9A-Z_-]{0,63}$/,YP=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,f0={javascript:!0,"javascript:":!0},m0={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function mc(i,s){if(i&&i instanceof $h)return i;const e=new $h;return e.parse(i,s),e}$h.prototype.parse=function(i,s){let e,n,a,t=i;if(t=t.trim(),!s&&i.split("#").length===1){const p=jP.exec(t);if(p)return this.pathname=p[1],p[2]&&(this.search=p[2]),this}let l=qP.exec(t);if(l&&(l=l[0],e=l.toLowerCase(),this.protocol=l,t=t.substr(l.length)),(s||l||t.match(/^\/\/[^@\/]+@[^@\/]+/))&&(a=t.substr(0,2)==="//",a&&!(l&&f0[l])&&(t=t.substr(2),this.slashes=!0)),!f0[l]&&(a||l&&!m0[l])){let p=-1;for(let c=0;c<A0.length;c++)n=t.indexOf(A0[c]),n!==-1&&(p===-1||n<p)&&(p=n);let k,d;p===-1?d=t.lastIndexOf("@"):d=t.lastIndexOf("@",p),d!==-1&&(k=t.slice(0,d),t=t.slice(d+1),this.auth=k),p=-1;for(let c=0;c<B0.length;c++)n=t.indexOf(B0[c]),n!==-1&&(p===-1||n<p)&&(p=n);p===-1&&(p=t.length),t[p-1]===":"&&p--;const u=t.slice(0,p);t=t.slice(p),this.parseHost(u),this.hostname=this.hostname||"";const o=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!o){const c=this.hostname.split(/\./);for(let A=0,g=c.length;A<g;A++){const f=c[A];if(f&&!f.match(y0)){let m="";for(let y=0,v=f.length;y<v;y++)f.charCodeAt(y)>127?m+="x":m+=f[y];if(!m.match(y0)){const y=c.slice(0,A),v=c.slice(A+1),C=f.match(YP);C&&(y.push(C[1]),v.unshift(C[2])),v.length&&(t=v.join(".")+t),this.hostname=y.join(".");break}}}}this.hostname.length>KP&&(this.hostname=""),o&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}const r=t.indexOf("#");r!==-1&&(this.hash=t.substr(r),t=t.slice(0,r));const h=t.indexOf("?");return h!==-1&&(this.search=t.substr(h),t=t.slice(0,h)),t&&(this.pathname=t),m0[e]&&this.hostname&&!this.pathname&&(this.pathname=""),this};$h.prototype.parseHost=function(i){let s=HP.exec(i);s&&(s=s[0],s!==":"&&(this.port=s.substr(1)),i=i.substr(0,i.length-s.length)),i&&(this.hostname=i)};const XP=Object.freeze(Object.defineProperty({__proto__:null,decode:vt,encode:Fr,format:fc,parse:mc},Symbol.toStringTag,{value:"Module"})),b6=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,C6=/[\0-\x1F\x7F-\x9F]/,ZP=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/,vc=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,_6=/[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/,D6=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/,JP=Object.freeze(Object.defineProperty({__proto__:null,Any:b6,Cc:C6,Cf:ZP,P:vc,S:_6,Z:D6},Symbol.toStringTag,{value:"Module"})),QP=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(i=>i.charCodeAt(0))),iL=new Uint16Array("Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(i=>i.charCodeAt(0)));var Pk;const sL=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]),eL=(Pk=String.fromCodePoint)!==null&&Pk!==void 0?Pk:function(i){let s="";return i>65535&&(i-=65536,s+=String.fromCharCode(i>>>10&1023|55296),i=56320|i&1023),s+=String.fromCharCode(i),s};function nL(i){var s;return i>=55296&&i<=57343||i>1114111?65533:(s=sL.get(i))!==null&&s!==void 0?s:i}var Cs;(function(i){i[i.NUM=35]="NUM",i[i.SEMI=59]="SEMI",i[i.EQUALS=61]="EQUALS",i[i.ZERO=48]="ZERO",i[i.NINE=57]="NINE",i[i.LOWER_A=97]="LOWER_A",i[i.LOWER_F=102]="LOWER_F",i[i.LOWER_X=120]="LOWER_X",i[i.LOWER_Z=122]="LOWER_Z",i[i.UPPER_A=65]="UPPER_A",i[i.UPPER_F=70]="UPPER_F",i[i.UPPER_Z=90]="UPPER_Z"})(Cs||(Cs={}));const aL=32;var Gn;(function(i){i[i.VALUE_LENGTH=49152]="VALUE_LENGTH",i[i.BRANCH_LENGTH=16256]="BRANCH_LENGTH",i[i.JUMP_TABLE=127]="JUMP_TABLE"})(Gn||(Gn={}));function Ho(i){return i>=Cs.ZERO&&i<=Cs.NINE}function tL(i){return i>=Cs.UPPER_A&&i<=Cs.UPPER_F||i>=Cs.LOWER_A&&i<=Cs.LOWER_F}function lL(i){return i>=Cs.UPPER_A&&i<=Cs.UPPER_Z||i>=Cs.LOWER_A&&i<=Cs.LOWER_Z||Ho(i)}function rL(i){return i===Cs.EQUALS||lL(i)}var Es;(function(i){i[i.EntityStart=0]="EntityStart",i[i.NumericStart=1]="NumericStart",i[i.NumericDecimal=2]="NumericDecimal",i[i.NumericHex=3]="NumericHex",i[i.NamedEntity=4]="NamedEntity"})(Es||(Es={}));var Un;(function(i){i[i.Legacy=0]="Legacy",i[i.Strict=1]="Strict",i[i.Attribute=2]="Attribute"})(Un||(Un={}));class hL{constructor(s,e,n){this.decodeTree=s,this.emitCodePoint=e,this.errors=n,this.state=Es.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=Un.Strict}startEntity(s){this.decodeMode=s,this.state=Es.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1}write(s,e){switch(this.state){case Es.EntityStart:return s.charCodeAt(e)===Cs.NUM?(this.state=Es.NumericStart,this.consumed+=1,this.stateNumericStart(s,e+1)):(this.state=Es.NamedEntity,this.stateNamedEntity(s,e));case Es.NumericStart:return this.stateNumericStart(s,e);case Es.NumericDecimal:return this.stateNumericDecimal(s,e);case Es.NumericHex:return this.stateNumericHex(s,e);case Es.NamedEntity:return this.stateNamedEntity(s,e)}}stateNumericStart(s,e){return e>=s.length?-1:(s.charCodeAt(e)|aL)===Cs.LOWER_X?(this.state=Es.NumericHex,this.consumed+=1,this.stateNumericHex(s,e+1)):(this.state=Es.NumericDecimal,this.stateNumericDecimal(s,e))}addToNumericResult(s,e,n,a){if(e!==n){const t=n-e;this.result=this.result*Math.pow(a,t)+parseInt(s.substr(e,t),a),this.consumed+=t}}stateNumericHex(s,e){const n=e;for(;e<s.length;){const a=s.charCodeAt(e);if(Ho(a)||tL(a))e+=1;else return this.addToNumericResult(s,n,e,16),this.emitNumericEntity(a,3)}return this.addToNumericResult(s,n,e,16),-1}stateNumericDecimal(s,e){const n=e;for(;e<s.length;){const a=s.charCodeAt(e);if(Ho(a))e+=1;else return this.addToNumericResult(s,n,e,10),this.emitNumericEntity(a,2)}return this.addToNumericResult(s,n,e,10),-1}emitNumericEntity(s,e){var n;if(this.consumed<=e)return(n=this.errors)===null||n===void 0||n.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(s===Cs.SEMI)this.consumed+=1;else if(this.decodeMode===Un.Strict)return 0;return this.emitCodePoint(nL(this.result),this.consumed),this.errors&&(s!==Cs.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed}stateNamedEntity(s,e){const{decodeTree:n}=this;let a=n[this.treeIndex],t=(a&Gn.VALUE_LENGTH)>>14;for(;e<s.length;e++,this.excess++){const l=s.charCodeAt(e);if(this.treeIndex=pL(n,a,this.treeIndex+Math.max(1,t),l),this.treeIndex<0)return this.result===0||this.decodeMode===Un.Attribute&&(t===0||rL(l))?0:this.emitNotTerminatedNamedEntity();if(a=n[this.treeIndex],t=(a&Gn.VALUE_LENGTH)>>14,t!==0){if(l===Cs.SEMI)return this.emitNamedEntityData(this.treeIndex,t,this.consumed+this.excess);this.decodeMode!==Un.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1}emitNotTerminatedNamedEntity(){var s;const{result:e,decodeTree:n}=this,a=(n[e]&Gn.VALUE_LENGTH)>>14;return this.emitNamedEntityData(e,a,this.consumed),(s=this.errors)===null||s===void 0||s.missingSemicolonAfterCharacterReference(),this.consumed}emitNamedEntityData(s,e,n){const{decodeTree:a}=this;return this.emitCodePoint(e===1?a[s]&~Gn.VALUE_LENGTH:a[s+1],n),e===3&&this.emitCodePoint(a[s+2],n),n}end(){var s;switch(this.state){case Es.NamedEntity:return this.result!==0&&(this.decodeMode!==Un.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0;case Es.NumericDecimal:return this.emitNumericEntity(0,2);case Es.NumericHex:return this.emitNumericEntity(0,3);case Es.NumericStart:return(s=this.errors)===null||s===void 0||s.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case Es.EntityStart:return 0}}}function x6(i){let s="";const e=new hL(i,n=>s+=eL(n));return function(a,t){let l=0,r=0;for(;(r=a.indexOf("&",r))>=0;){s+=a.slice(l,r),e.startEntity(t);const p=e.write(a,r+1);if(p<0){l=r+e.end();break}l=r+p,r=p===0?l+1:l}const h=s+a.slice(l);return s="",h}}function pL(i,s,e,n){const a=(s&Gn.BRANCH_LENGTH)>>7,t=s&Gn.JUMP_TABLE;if(a===0)return t!==0&&n===t?e:-1;if(t){const h=n-t;return h<0||h>=a?-1:i[e+h]-1}let l=e,r=l+a-1;for(;l<=r;){const h=l+r>>>1,p=i[h];if(p<n)l=h+1;else if(p>n)r=h-1;else return i[h+a]}return-1}const kL=x6(QP);x6(iL);function w6(i,s=Un.Legacy){return kL(i,s)}function dL(i){return Object.prototype.toString.call(i)}function Fc(i){return dL(i)==="[object String]"}const oL=Object.prototype.hasOwnProperty;function uL(i,s){return oL.call(i,s)}function Op(i){return Array.prototype.slice.call(arguments,1).forEach(function(e){if(e){if(typeof e!="object")throw new TypeError(e+"must be object");Object.keys(e).forEach(function(n){i[n]=e[n]})}}),i}function T6(i,s,e){return[].concat(i.slice(0,s),e,i.slice(s+1))}function Ec(i){return!(i>=55296&&i<=57343||i>=64976&&i<=65007||(i&65535)===65535||(i&65535)===65534||i>=0&&i<=8||i===11||i>=14&&i<=31||i>=127&&i<=159||i>1114111)}function Vh(i){if(i>65535){i-=65536;const s=55296+(i>>10),e=56320+(i&1023);return String.fromCharCode(s,e)}return String.fromCharCode(i)}const S6=/\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g,cL=/&([a-z#][a-z0-9]{1,31});/gi,gL=new RegExp(S6.source+"|"+cL.source,"gi"),BL=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;function AL(i,s){if(s.charCodeAt(0)===35&&BL.test(s)){const n=s[1].toLowerCase()==="x"?parseInt(s.slice(2),16):parseInt(s.slice(1),10);return Ec(n)?Vh(n):i}const e=w6(i);return e!==i?e:i}function yL(i){return i.indexOf("\\")<0?i:i.replace(S6,"$1")}function Ft(i){return i.indexOf("\\")<0&&i.indexOf("&")<0?i:i.replace(gL,function(s,e,n){return e||AL(s,n)})}const fL=/[&<>"]/,mL=/[&<>"]/g,vL={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function FL(i){return vL[i]}function ea(i){return fL.test(i)?i.replace(mL,FL):i}const EL=/[.?*+^$[\]\\(){}|-]/g;function bL(i){return i.replace(EL,"\\$&")}function is(i){switch(i){case 9:case 32:return!0}return!1}function Vl(i){if(i>=8192&&i<=8202)return!0;switch(i){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1}function zl(i){return vc.test(i)||_6.test(i)}function ql(i){switch(i){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}}function Pp(i){return i=i.trim().replace(/\s+/g," "),"ẞ".toLowerCase()==="Ṿ"&&(i=i.replace(/ẞ/g,"ß")),i.toLowerCase().toUpperCase()}const CL={mdurl:XP,ucmicro:JP},_L=Object.freeze(Object.defineProperty({__proto__:null,arrayReplaceAt:T6,assign:Op,escapeHtml:ea,escapeRE:bL,fromCodePoint:Vh,has:uL,isMdAsciiPunct:ql,isPunctChar:zl,isSpace:is,isString:Fc,isValidEntityCode:Ec,isWhiteSpace:Vl,lib:CL,normalizeReference:Pp,unescapeAll:Ft,unescapeMd:yL},Symbol.toStringTag,{value:"Module"}));function DL(i,s,e){let n,a,t,l;const r=i.posMax,h=i.pos;for(i.pos=s+1,n=1;i.pos<r;){if(t=i.src.charCodeAt(i.pos),t===93&&(n--,n===0)){a=!0;break}if(l=i.pos,i.md.inline.skipToken(i),t===91){if(l===i.pos-1)n++;else if(e)return i.pos=h,-1}}let p=-1;return a&&(p=i.pos),i.pos=h,p}function xL(i,s,e){let n,a=s;const t={ok:!1,pos:0,str:""};if(i.charCodeAt(a)===60){for(a++;a<e;){if(n=i.charCodeAt(a),n===10||n===60)return t;if(n===62)return t.pos=a+1,t.str=Ft(i.slice(s+1,a)),t.ok=!0,t;if(n===92&&a+1<e){a+=2;continue}a++}return t}let l=0;for(;a<e&&(n=i.charCodeAt(a),!(n===32||n<32||n===127));){if(n===92&&a+1<e){if(i.charCodeAt(a+1)===32)break;a+=2;continue}if(n===40&&(l++,l>32))return t;if(n===41){if(l===0)break;l--}a++}return s===a||l!==0||(t.str=Ft(i.slice(s,a)),t.pos=a,t.ok=!0),t}function wL(i,s,e,n){let a,t=s;const l={ok:!1,can_continue:!1,pos:0,str:"",marker:0};if(n)l.str=n.str,l.marker=n.marker;else{if(t>=e)return l;let r=i.charCodeAt(t);if(r!==34&&r!==39&&r!==40)return l;s++,t++,r===40&&(r=41),l.marker=r}for(;t<e;){if(a=i.charCodeAt(t),a===l.marker)return l.pos=t+1,l.str+=Ft(i.slice(s,t)),l.ok=!0,l;if(a===40&&l.marker===41)return l;a===92&&t+1<e&&t++,t++}return l.can_continue=!0,l.str+=Ft(i.slice(s,t)),l}const TL=Object.freeze(Object.defineProperty({__proto__:null,parseLinkDestination:xL,parseLinkLabel:DL,parseLinkTitle:wL},Symbol.toStringTag,{value:"Module"})),Je={};Je.code_inline=function(i,s,e,n,a){const t=i[s];return"<code"+a.renderAttrs(t)+">"+ea(t.content)+"</code>"};Je.code_block=function(i,s,e,n,a){const t=i[s];return"<pre"+a.renderAttrs(t)+"><code>"+ea(i[s].content)+`</code></pre>
`};Je.fence=function(i,s,e,n,a){const t=i[s],l=t.info?Ft(t.info).trim():"";let r="",h="";if(l){const k=l.split(/(\s+)/g);r=k[0],h=k.slice(2).join("")}let p;if(e.highlight?p=e.highlight(t.content,r,h)||ea(t.content):p=ea(t.content),p.indexOf("<pre")===0)return p+`
`;if(l){const k=t.attrIndex("class"),d=t.attrs?t.attrs.slice():[];k<0?d.push(["class",e.langPrefix+r]):(d[k]=d[k].slice(),d[k][1]+=" "+e.langPrefix+r);const u={attrs:d};return`<pre><code${a.renderAttrs(u)}>${p}</code></pre>
`}return`<pre><code${a.renderAttrs(t)}>${p}</code></pre>
`};Je.image=function(i,s,e,n,a){const t=i[s];return t.attrs[t.attrIndex("alt")][1]=a.renderInlineAsText(t.children,e,n),a.renderToken(i,s,e)};Je.hardbreak=function(i,s,e){return e.xhtmlOut?`<br />
`:`<br>
`};Je.softbreak=function(i,s,e){return e.breaks?e.xhtmlOut?`<br />
`:`<br>
`:`
`};Je.text=function(i,s){return ea(i[s].content)};Je.html_block=function(i,s){return i[s].content};Je.html_inline=function(i,s){return i[s].content};function Ot(){this.rules=Op({},Je)}Ot.prototype.renderAttrs=function(s){let e,n,a;if(!s.attrs)return"";for(a="",e=0,n=s.attrs.length;e<n;e++)a+=" "+ea(s.attrs[e][0])+'="'+ea(s.attrs[e][1])+'"';return a};Ot.prototype.renderToken=function(s,e,n){const a=s[e];let t="";if(a.hidden)return"";a.block&&a.nesting!==-1&&e&&s[e-1].hidden&&(t+=`
`),t+=(a.nesting===-1?"</":"<")+a.tag,t+=this.renderAttrs(a),a.nesting===0&&n.xhtmlOut&&(t+=" /");let l=!1;if(a.block&&(l=!0,a.nesting===1&&e+1<s.length)){const r=s[e+1];(r.type==="inline"||r.hidden||r.nesting===-1&&r.tag===a.tag)&&(l=!1)}return t+=l?`>
`:">",t};Ot.prototype.renderInline=function(i,s,e){let n="";const a=this.rules;for(let t=0,l=i.length;t<l;t++){const r=i[t].type;typeof a[r]<"u"?n+=a[r](i,t,s,e,this):n+=this.renderToken(i,t,s)}return n};Ot.prototype.renderInlineAsText=function(i,s,e){let n="";for(let a=0,t=i.length;a<t;a++)switch(i[a].type){case"text":n+=i[a].content;break;case"image":n+=this.renderInlineAsText(i[a].children,s,e);break;case"html_inline":case"html_block":n+=i[a].content;break;case"softbreak":case"hardbreak":n+=`
`;break}return n};Ot.prototype.render=function(i,s,e){let n="";const a=this.rules;for(let t=0,l=i.length;t<l;t++){const r=i[t].type;r==="inline"?n+=this.renderInline(i[t].children,s,e):typeof a[r]<"u"?n+=a[r](i,t,s,e,this):n+=this.renderToken(i,t,s,e)}return n};function Ys(){this.__rules__=[],this.__cache__=null}Ys.prototype.__find__=function(i){for(let s=0;s<this.__rules__.length;s++)if(this.__rules__[s].name===i)return s;return-1};Ys.prototype.__compile__=function(){const i=this,s=[""];i.__rules__.forEach(function(e){e.enabled&&e.alt.forEach(function(n){s.indexOf(n)<0&&s.push(n)})}),i.__cache__={},s.forEach(function(e){i.__cache__[e]=[],i.__rules__.forEach(function(n){n.enabled&&(e&&n.alt.indexOf(e)<0||i.__cache__[e].push(n.fn))})})};Ys.prototype.at=function(i,s,e){const n=this.__find__(i),a=e||{};if(n===-1)throw new Error("Parser rule not found: "+i);this.__rules__[n].fn=s,this.__rules__[n].alt=a.alt||[],this.__cache__=null};Ys.prototype.before=function(i,s,e,n){const a=this.__find__(i),t=n||{};if(a===-1)throw new Error("Parser rule not found: "+i);this.__rules__.splice(a,0,{name:s,enabled:!0,fn:e,alt:t.alt||[]}),this.__cache__=null};Ys.prototype.after=function(i,s,e,n){const a=this.__find__(i),t=n||{};if(a===-1)throw new Error("Parser rule not found: "+i);this.__rules__.splice(a+1,0,{name:s,enabled:!0,fn:e,alt:t.alt||[]}),this.__cache__=null};Ys.prototype.push=function(i,s,e){const n=e||{};this.__rules__.push({name:i,enabled:!0,fn:s,alt:n.alt||[]}),this.__cache__=null};Ys.prototype.enable=function(i,s){Array.isArray(i)||(i=[i]);const e=[];return i.forEach(function(n){const a=this.__find__(n);if(a<0){if(s)return;throw new Error("Rules manager: invalid rule name "+n)}this.__rules__[a].enabled=!0,e.push(n)},this),this.__cache__=null,e};Ys.prototype.enableOnly=function(i,s){Array.isArray(i)||(i=[i]),this.__rules__.forEach(function(e){e.enabled=!1}),this.enable(i,s)};Ys.prototype.disable=function(i,s){Array.isArray(i)||(i=[i]);const e=[];return i.forEach(function(n){const a=this.__find__(n);if(a<0){if(s)return;throw new Error("Rules manager: invalid rule name "+n)}this.__rules__[a].enabled=!1,e.push(n)},this),this.__cache__=null,e};Ys.prototype.getRules=function(i){return this.__cache__===null&&this.__compile__(),this.__cache__[i]||[]};function Te(i,s,e){this.type=i,this.tag=s,this.attrs=null,this.map=null,this.nesting=e,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}Te.prototype.attrIndex=function(s){if(!this.attrs)return-1;const e=this.attrs;for(let n=0,a=e.length;n<a;n++)if(e[n][0]===s)return n;return-1};Te.prototype.attrPush=function(s){this.attrs?this.attrs.push(s):this.attrs=[s]};Te.prototype.attrSet=function(s,e){const n=this.attrIndex(s),a=[s,e];n<0?this.attrPush(a):this.attrs[n]=a};Te.prototype.attrGet=function(s){const e=this.attrIndex(s);let n=null;return e>=0&&(n=this.attrs[e][1]),n};Te.prototype.attrJoin=function(s,e){const n=this.attrIndex(s);n<0?this.attrPush([s,e]):this.attrs[n][1]=this.attrs[n][1]+" "+e};function I6(i,s,e){this.src=i,this.env=e,this.tokens=[],this.inlineMode=!1,this.md=s}I6.prototype.Token=Te;const SL=/\r\n?|\n/g,IL=/\0/g;function RL(i){let s;s=i.src.replace(SL,`
`),s=s.replace(IL,"�"),i.src=s}function OL(i){let s;i.inlineMode?(s=new i.Token("inline","",0),s.content=i.src,s.map=[0,1],s.children=[],i.tokens.push(s)):i.md.block.parse(i.src,i.md,i.env,i.tokens)}function PL(i){const s=i.tokens;for(let e=0,n=s.length;e<n;e++){const a=s[e];a.type==="inline"&&i.md.inline.parse(a.content,i.md,i.env,a.children)}}function LL(i){return/^<a[>\s]/i.test(i)}function NL(i){return/^<\/a\s*>/i.test(i)}function ML(i){const s=i.tokens;if(i.md.options.linkify)for(let e=0,n=s.length;e<n;e++){if(s[e].type!=="inline"||!i.md.linkify.pretest(s[e].content))continue;let a=s[e].children,t=0;for(let l=a.length-1;l>=0;l--){const r=a[l];if(r.type==="link_close"){for(l--;a[l].level!==r.level&&a[l].type!=="link_open";)l--;continue}if(r.type==="html_inline"&&(LL(r.content)&&t>0&&t--,NL(r.content)&&t++),!(t>0)&&r.type==="text"&&i.md.linkify.test(r.content)){const h=r.content;let p=i.md.linkify.match(h);const k=[];let d=r.level,u=0;p.length>0&&p[0].index===0&&l>0&&a[l-1].type==="text_special"&&(p=p.slice(1));for(let o=0;o<p.length;o++){const c=p[o].url,A=i.md.normalizeLink(c);if(!i.md.validateLink(A))continue;let g=p[o].text;p[o].schema?p[o].schema==="mailto:"&&!/^mailto:/i.test(g)?g=i.md.normalizeLinkText("mailto:"+g).replace(/^mailto:/,""):g=i.md.normalizeLinkText(g):g=i.md.normalizeLinkText("http://"+g).replace(/^http:\/\//,"");const f=p[o].index;if(f>u){const C=new i.Token("text","",0);C.content=h.slice(u,f),C.level=d,k.push(C)}const m=new i.Token("link_open","a",1);m.attrs=[["href",A]],m.level=d++,m.markup="linkify",m.info="auto",k.push(m);const y=new i.Token("text","",0);y.content=g,y.level=d,k.push(y);const v=new i.Token("link_close","a",-1);v.level=--d,v.markup="linkify",v.info="auto",k.push(v),u=p[o].lastIndex}if(u<h.length){const o=new i.Token("text","",0);o.content=h.slice(u),o.level=d,k.push(o)}s[e].children=a=T6(a,l,k)}}}}const R6=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,$L=/\((c|tm|r)\)/i,VL=/\((c|tm|r)\)/ig,zL={c:"©",r:"®",tm:"™"};function qL(i,s){return zL[s.toLowerCase()]}function HL(i){let s=0;for(let e=i.length-1;e>=0;e--){const n=i[e];n.type==="text"&&!s&&(n.content=n.content.replace(VL,qL)),n.type==="link_open"&&n.info==="auto"&&s--,n.type==="link_close"&&n.info==="auto"&&s++}}function jL(i){let s=0;for(let e=i.length-1;e>=0;e--){const n=i[e];n.type==="text"&&!s&&R6.test(n.content)&&(n.content=n.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---(?=[^-]|$)/mg,"$1—").replace(/(^|\s)--(?=\s|$)/mg,"$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg,"$1–")),n.type==="link_open"&&n.info==="auto"&&s--,n.type==="link_close"&&n.info==="auto"&&s++}}function UL(i){let s;if(i.md.options.typographer)for(s=i.tokens.length-1;s>=0;s--)i.tokens[s].type==="inline"&&($L.test(i.tokens[s].content)&&HL(i.tokens[s].children),R6.test(i.tokens[s].content)&&jL(i.tokens[s].children))}const GL=/['"]/,v0=/['"]/g,F0="’";function Wr(i,s,e){return i.slice(0,s)+e+i.slice(s+1)}function WL(i,s){let e;const n=[];for(let a=0;a<i.length;a++){const t=i[a],l=i[a].level;for(e=n.length-1;e>=0&&!(n[e].level<=l);e--);if(n.length=e+1,t.type!=="text")continue;let r=t.content,h=0,p=r.length;i:for(;h<p;){v0.lastIndex=h;const k=v0.exec(r);if(!k)break;let d=!0,u=!0;h=k.index+1;const o=k[0]==="'";let c=32;if(k.index-1>=0)c=r.charCodeAt(k.index-1);else for(e=a-1;e>=0&&!(i[e].type==="softbreak"||i[e].type==="hardbreak");e--)if(i[e].content){c=i[e].content.charCodeAt(i[e].content.length-1);break}let A=32;if(h<p)A=r.charCodeAt(h);else for(e=a+1;e<i.length&&!(i[e].type==="softbreak"||i[e].type==="hardbreak");e++)if(i[e].content){A=i[e].content.charCodeAt(0);break}const g=ql(c)||zl(String.fromCharCode(c)),f=ql(A)||zl(String.fromCharCode(A)),m=Vl(c),y=Vl(A);if(y?d=!1:f&&(m||g||(d=!1)),m?u=!1:g&&(y||f||(u=!1)),A===34&&k[0]==='"'&&c>=48&&c<=57&&(u=d=!1),d&&u&&(d=g,u=f),!d&&!u){o&&(t.content=Wr(t.content,k.index,F0));continue}if(u)for(e=n.length-1;e>=0;e--){let v=n[e];if(n[e].level<l)break;if(v.single===o&&n[e].level===l){v=n[e];let C,S;o?(C=s.md.options.quotes[2],S=s.md.options.quotes[3]):(C=s.md.options.quotes[0],S=s.md.options.quotes[1]),t.content=Wr(t.content,k.index,S),i[v.token].content=Wr(i[v.token].content,v.pos,C),h+=S.length-1,v.token===a&&(h+=C.length-1),r=t.content,p=r.length,n.length=e;continue i}}d?n.push({token:a,pos:k.index,single:o,level:l}):u&&o&&(t.content=Wr(t.content,k.index,F0))}}}function KL(i){if(i.md.options.typographer)for(let s=i.tokens.length-1;s>=0;s--)i.tokens[s].type!=="inline"||!GL.test(i.tokens[s].content)||WL(i.tokens[s].children,i)}function YL(i){let s,e;const n=i.tokens,a=n.length;for(let t=0;t<a;t++){if(n[t].type!=="inline")continue;const l=n[t].children,r=l.length;for(s=0;s<r;s++)l[s].type==="text_special"&&(l[s].type="text");for(s=e=0;s<r;s++)l[s].type==="text"&&s+1<r&&l[s+1].type==="text"?l[s+1].content=l[s].content+l[s+1].content:(s!==e&&(l[e]=l[s]),e++);s!==e&&(l.length=e)}}const Lk=[["normalize",RL],["block",OL],["inline",PL],["linkify",ML],["replacements",UL],["smartquotes",KL],["text_join",YL]];function bc(){this.ruler=new Ys;for(let i=0;i<Lk.length;i++)this.ruler.push(Lk[i][0],Lk[i][1])}bc.prototype.process=function(i){const s=this.ruler.getRules("");for(let e=0,n=s.length;e<n;e++)s[e](i)};bc.prototype.State=I6;function Qe(i,s,e,n){this.src=i,this.md=s,this.env=e,this.tokens=n,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType="root",this.level=0;const a=this.src;for(let t=0,l=0,r=0,h=0,p=a.length,k=!1;l<p;l++){const d=a.charCodeAt(l);if(!k)if(is(d)){r++,d===9?h+=4-h%4:h++;continue}else k=!0;(d===10||l===p-1)&&(d!==10&&l++,this.bMarks.push(t),this.eMarks.push(l),this.tShift.push(r),this.sCount.push(h),this.bsCount.push(0),k=!1,r=0,h=0,t=l+1)}this.bMarks.push(a.length),this.eMarks.push(a.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}Qe.prototype.push=function(i,s,e){const n=new Te(i,s,e);return n.block=!0,e<0&&this.level--,n.level=this.level,e>0&&this.level++,this.tokens.push(n),n};Qe.prototype.isEmpty=function(s){return this.bMarks[s]+this.tShift[s]>=this.eMarks[s]};Qe.prototype.skipEmptyLines=function(s){for(let e=this.lineMax;s<e&&!(this.bMarks[s]+this.tShift[s]<this.eMarks[s]);s++);return s};Qe.prototype.skipSpaces=function(s){for(let e=this.src.length;s<e;s++){const n=this.src.charCodeAt(s);if(!is(n))break}return s};Qe.prototype.skipSpacesBack=function(s,e){if(s<=e)return s;for(;s>e;)if(!is(this.src.charCodeAt(--s)))return s+1;return s};Qe.prototype.skipChars=function(s,e){for(let n=this.src.length;s<n&&this.src.charCodeAt(s)===e;s++);return s};Qe.prototype.skipCharsBack=function(s,e,n){if(s<=n)return s;for(;s>n;)if(e!==this.src.charCodeAt(--s))return s+1;return s};Qe.prototype.getLines=function(s,e,n,a){if(s>=e)return"";const t=new Array(e-s);for(let l=0,r=s;r<e;r++,l++){let h=0;const p=this.bMarks[r];let k=p,d;for(r+1<e||a?d=this.eMarks[r]+1:d=this.eMarks[r];k<d&&h<n;){const u=this.src.charCodeAt(k);if(is(u))u===9?h+=4-(h+this.bsCount[r])%4:h++;else if(k-p<this.tShift[r])h++;else break;k++}h>n?t[l]=new Array(h-n+1).join(" ")+this.src.slice(k,d):t[l]=this.src.slice(k,d)}return t.join("")};Qe.prototype.Token=Te;const XL=65536;function Nk(i,s){const e=i.bMarks[s]+i.tShift[s],n=i.eMarks[s];return i.src.slice(e,n)}function E0(i){const s=[],e=i.length;let n=0,a=i.charCodeAt(n),t=!1,l=0,r="";for(;n<e;)a===124&&(t?(r+=i.substring(l,n-1),l=n):(s.push(r+i.substring(l,n)),r="",l=n+1)),t=a===92,n++,a=i.charCodeAt(n);return s.push(r+i.substring(l)),s}function ZL(i,s,e,n){if(s+2>e)return!1;let a=s+1;if(i.sCount[a]<i.blkIndent||i.sCount[a]-i.blkIndent>=4)return!1;let t=i.bMarks[a]+i.tShift[a];if(t>=i.eMarks[a])return!1;const l=i.src.charCodeAt(t++);if(l!==124&&l!==45&&l!==58||t>=i.eMarks[a])return!1;const r=i.src.charCodeAt(t++);if(r!==124&&r!==45&&r!==58&&!is(r)||l===45&&is(r))return!1;for(;t<i.eMarks[a];){const v=i.src.charCodeAt(t);if(v!==124&&v!==45&&v!==58&&!is(v))return!1;t++}let h=Nk(i,s+1),p=h.split("|");const k=[];for(let v=0;v<p.length;v++){const C=p[v].trim();if(!C){if(v===0||v===p.length-1)continue;return!1}if(!/^:?-+:?$/.test(C))return!1;C.charCodeAt(C.length-1)===58?k.push(C.charCodeAt(0)===58?"center":"right"):C.charCodeAt(0)===58?k.push("left"):k.push("")}if(h=Nk(i,s).trim(),h.indexOf("|")===-1||i.sCount[s]-i.blkIndent>=4)return!1;p=E0(h),p.length&&p[0]===""&&p.shift(),p.length&&p[p.length-1]===""&&p.pop();const d=p.length;if(d===0||d!==k.length)return!1;if(n)return!0;const u=i.parentType;i.parentType="table";const o=i.md.block.ruler.getRules("blockquote"),c=i.push("table_open","table",1),A=[s,0];c.map=A;const g=i.push("thead_open","thead",1);g.map=[s,s+1];const f=i.push("tr_open","tr",1);f.map=[s,s+1];for(let v=0;v<p.length;v++){const C=i.push("th_open","th",1);k[v]&&(C.attrs=[["style","text-align:"+k[v]]]);const S=i.push("inline","",0);S.content=p[v].trim(),S.children=[],i.push("th_close","th",-1)}i.push("tr_close","tr",-1),i.push("thead_close","thead",-1);let m,y=0;for(a=s+2;a<e&&!(i.sCount[a]<i.blkIndent);a++){let v=!1;for(let S=0,L=o.length;S<L;S++)if(o[S](i,a,e,!0)){v=!0;break}if(v||(h=Nk(i,a).trim(),!h)||i.sCount[a]-i.blkIndent>=4||(p=E0(h),p.length&&p[0]===""&&p.shift(),p.length&&p[p.length-1]===""&&p.pop(),y+=d-p.length,y>XL))break;if(a===s+2){const S=i.push("tbody_open","tbody",1);S.map=m=[s+2,0]}const C=i.push("tr_open","tr",1);C.map=[a,a+1];for(let S=0;S<d;S++){const L=i.push("td_open","td",1);k[S]&&(L.attrs=[["style","text-align:"+k[S]]]);const w=i.push("inline","",0);w.content=p[S]?p[S].trim():"",w.children=[],i.push("td_close","td",-1)}i.push("tr_close","tr",-1)}return m&&(i.push("tbody_close","tbody",-1),m[1]=a),i.push("table_close","table",-1),A[1]=a,i.parentType=u,i.line=a,!0}function JL(i,s,e){if(i.sCount[s]-i.blkIndent<4)return!1;let n=s+1,a=n;for(;n<e;){if(i.isEmpty(n)){n++;continue}if(i.sCount[n]-i.blkIndent>=4){n++,a=n;continue}break}i.line=a;const t=i.push("code_block","code",0);return t.content=i.getLines(s,a,4+i.blkIndent,!1)+`
`,t.map=[s,i.line],!0}function QL(i,s,e,n){let a=i.bMarks[s]+i.tShift[s],t=i.eMarks[s];if(i.sCount[s]-i.blkIndent>=4||a+3>t)return!1;const l=i.src.charCodeAt(a);if(l!==126&&l!==96)return!1;let r=a;a=i.skipChars(a,l);let h=a-r;if(h<3)return!1;const p=i.src.slice(r,a),k=i.src.slice(a,t);if(l===96&&k.indexOf(String.fromCharCode(l))>=0)return!1;if(n)return!0;let d=s,u=!1;for(;d++,!(d>=e||(a=r=i.bMarks[d]+i.tShift[d],t=i.eMarks[d],a<t&&i.sCount[d]<i.blkIndent));)if(i.src.charCodeAt(a)===l&&!(i.sCount[d]-i.blkIndent>=4)&&(a=i.skipChars(a,l),!(a-r<h)&&(a=i.skipSpaces(a),!(a<t)))){u=!0;break}h=i.sCount[s],i.line=d+(u?1:0);const o=i.push("fence","code",0);return o.info=k,o.content=i.getLines(s+1,d,h,!0),o.markup=p,o.map=[s,i.line],!0}function iN(i,s,e,n){let a=i.bMarks[s]+i.tShift[s],t=i.eMarks[s];const l=i.lineMax;if(i.sCount[s]-i.blkIndent>=4||i.src.charCodeAt(a)!==62)return!1;if(n)return!0;const r=[],h=[],p=[],k=[],d=i.md.block.ruler.getRules("blockquote"),u=i.parentType;i.parentType="blockquote";let o=!1,c;for(c=s;c<e;c++){const y=i.sCount[c]<i.blkIndent;if(a=i.bMarks[c]+i.tShift[c],t=i.eMarks[c],a>=t)break;if(i.src.charCodeAt(a++)===62&&!y){let C=i.sCount[c]+1,S,L;i.src.charCodeAt(a)===32?(a++,C++,L=!1,S=!0):i.src.charCodeAt(a)===9?(S=!0,(i.bsCount[c]+C)%4===3?(a++,C++,L=!1):L=!0):S=!1;let w=C;for(r.push(i.bMarks[c]),i.bMarks[c]=a;a<t;){const _=i.src.charCodeAt(a);if(is(_))_===9?w+=4-(w+i.bsCount[c]+(L?1:0))%4:w++;else break;a++}o=a>=t,h.push(i.bsCount[c]),i.bsCount[c]=i.sCount[c]+1+(S?1:0),p.push(i.sCount[c]),i.sCount[c]=w-C,k.push(i.tShift[c]),i.tShift[c]=a-i.bMarks[c];continue}if(o)break;let v=!1;for(let C=0,S=d.length;C<S;C++)if(d[C](i,c,e,!0)){v=!0;break}if(v){i.lineMax=c,i.blkIndent!==0&&(r.push(i.bMarks[c]),h.push(i.bsCount[c]),k.push(i.tShift[c]),p.push(i.sCount[c]),i.sCount[c]-=i.blkIndent);break}r.push(i.bMarks[c]),h.push(i.bsCount[c]),k.push(i.tShift[c]),p.push(i.sCount[c]),i.sCount[c]=-1}const A=i.blkIndent;i.blkIndent=0;const g=i.push("blockquote_open","blockquote",1);g.markup=">";const f=[s,0];g.map=f,i.md.block.tokenize(i,s,c);const m=i.push("blockquote_close","blockquote",-1);m.markup=">",i.lineMax=l,i.parentType=u,f[1]=i.line;for(let y=0;y<k.length;y++)i.bMarks[y+s]=r[y],i.tShift[y+s]=k[y],i.sCount[y+s]=p[y],i.bsCount[y+s]=h[y];return i.blkIndent=A,!0}function sN(i,s,e,n){const a=i.eMarks[s];if(i.sCount[s]-i.blkIndent>=4)return!1;let t=i.bMarks[s]+i.tShift[s];const l=i.src.charCodeAt(t++);if(l!==42&&l!==45&&l!==95)return!1;let r=1;for(;t<a;){const p=i.src.charCodeAt(t++);if(p!==l&&!is(p))return!1;p===l&&r++}if(r<3)return!1;if(n)return!0;i.line=s+1;const h=i.push("hr","hr",0);return h.map=[s,i.line],h.markup=Array(r+1).join(String.fromCharCode(l)),!0}function b0(i,s){const e=i.eMarks[s];let n=i.bMarks[s]+i.tShift[s];const a=i.src.charCodeAt(n++);if(a!==42&&a!==45&&a!==43)return-1;if(n<e){const t=i.src.charCodeAt(n);if(!is(t))return-1}return n}function C0(i,s){const e=i.bMarks[s]+i.tShift[s],n=i.eMarks[s];let a=e;if(a+1>=n)return-1;let t=i.src.charCodeAt(a++);if(t<48||t>57)return-1;for(;;){if(a>=n)return-1;if(t=i.src.charCodeAt(a++),t>=48&&t<=57){if(a-e>=10)return-1;continue}if(t===41||t===46)break;return-1}return a<n&&(t=i.src.charCodeAt(a),!is(t))?-1:a}function eN(i,s){const e=i.level+2;for(let n=s+2,a=i.tokens.length-2;n<a;n++)i.tokens[n].level===e&&i.tokens[n].type==="paragraph_open"&&(i.tokens[n+2].hidden=!0,i.tokens[n].hidden=!0,n+=2)}function nN(i,s,e,n){let a,t,l,r,h=s,p=!0;if(i.sCount[h]-i.blkIndent>=4||i.listIndent>=0&&i.sCount[h]-i.listIndent>=4&&i.sCount[h]<i.blkIndent)return!1;let k=!1;n&&i.parentType==="paragraph"&&i.sCount[h]>=i.blkIndent&&(k=!0);let d,u,o;if((o=C0(i,h))>=0){if(d=!0,l=i.bMarks[h]+i.tShift[h],u=Number(i.src.slice(l,o-1)),k&&u!==1)return!1}else if((o=b0(i,h))>=0)d=!1;else return!1;if(k&&i.skipSpaces(o)>=i.eMarks[h])return!1;if(n)return!0;const c=i.src.charCodeAt(o-1),A=i.tokens.length;d?(r=i.push("ordered_list_open","ol",1),u!==1&&(r.attrs=[["start",u]])):r=i.push("bullet_list_open","ul",1);const g=[h,0];r.map=g,r.markup=String.fromCharCode(c);let f=!1;const m=i.md.block.ruler.getRules("list"),y=i.parentType;for(i.parentType="list";h<e;){t=o,a=i.eMarks[h];const v=i.sCount[h]+o-(i.bMarks[h]+i.tShift[h]);let C=v;for(;t<a;){const $=i.src.charCodeAt(t);if($===9)C+=4-(C+i.bsCount[h])%4;else if($===32)C++;else break;t++}const S=t;let L;S>=a?L=1:L=C-v,L>4&&(L=1);const w=v+L;r=i.push("list_item_open","li",1),r.markup=String.fromCharCode(c);const _=[h,0];r.map=_,d&&(r.info=i.src.slice(l,o-1));const R=i.tight,N=i.tShift[h],T=i.sCount[h],V=i.listIndent;if(i.listIndent=i.blkIndent,i.blkIndent=w,i.tight=!0,i.tShift[h]=S-i.bMarks[h],i.sCount[h]=C,S>=a&&i.isEmpty(h+1)?i.line=Math.min(i.line+2,e):i.md.block.tokenize(i,h,e,!0),(!i.tight||f)&&(p=!1),f=i.line-h>1&&i.isEmpty(i.line-1),i.blkIndent=i.listIndent,i.listIndent=V,i.tShift[h]=N,i.sCount[h]=T,i.tight=R,r=i.push("list_item_close","li",-1),r.markup=String.fromCharCode(c),h=i.line,_[1]=h,h>=e||i.sCount[h]<i.blkIndent||i.sCount[h]-i.blkIndent>=4)break;let E=!1;for(let $=0,I=m.length;$<I;$++)if(m[$](i,h,e,!0)){E=!0;break}if(E)break;if(d){if(o=C0(i,h),o<0)break;l=i.bMarks[h]+i.tShift[h]}else if(o=b0(i,h),o<0)break;if(c!==i.src.charCodeAt(o-1))break}return d?r=i.push("ordered_list_close","ol",-1):r=i.push("bullet_list_close","ul",-1),r.markup=String.fromCharCode(c),g[1]=h,i.line=h,i.parentType=y,p&&eN(i,A),!0}function aN(i,s,e,n){let a=i.bMarks[s]+i.tShift[s],t=i.eMarks[s],l=s+1;if(i.sCount[s]-i.blkIndent>=4||i.src.charCodeAt(a)!==91)return!1;function r(m){const y=i.lineMax;if(m>=y||i.isEmpty(m))return null;let v=!1;if(i.sCount[m]-i.blkIndent>3&&(v=!0),i.sCount[m]<0&&(v=!0),!v){const L=i.md.block.ruler.getRules("reference"),w=i.parentType;i.parentType="reference";let _=!1;for(let R=0,N=L.length;R<N;R++)if(L[R](i,m,y,!0)){_=!0;break}if(i.parentType=w,_)return null}const C=i.bMarks[m]+i.tShift[m],S=i.eMarks[m];return i.src.slice(C,S+1)}let h=i.src.slice(a,t+1);t=h.length;let p=-1;for(a=1;a<t;a++){const m=h.charCodeAt(a);if(m===91)return!1;if(m===93){p=a;break}else if(m===10){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}else if(m===92&&(a++,a<t&&h.charCodeAt(a)===10)){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}}if(p<0||h.charCodeAt(p+1)!==58)return!1;for(a=p+2;a<t;a++){const m=h.charCodeAt(a);if(m===10){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}else if(!is(m))break}const k=i.md.helpers.parseLinkDestination(h,a,t);if(!k.ok)return!1;const d=i.md.normalizeLink(k.str);if(!i.md.validateLink(d))return!1;a=k.pos;const u=a,o=l,c=a;for(;a<t;a++){const m=h.charCodeAt(a);if(m===10){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}else if(!is(m))break}let A=i.md.helpers.parseLinkTitle(h,a,t);for(;A.can_continue;){const m=r(l);if(m===null)break;h+=m,a=t,t=h.length,l++,A=i.md.helpers.parseLinkTitle(h,a,t,A)}let g;for(a<t&&c!==a&&A.ok?(g=A.str,a=A.pos):(g="",a=u,l=o);a<t;){const m=h.charCodeAt(a);if(!is(m))break;a++}if(a<t&&h.charCodeAt(a)!==10&&g)for(g="",a=u,l=o;a<t;){const m=h.charCodeAt(a);if(!is(m))break;a++}if(a<t&&h.charCodeAt(a)!==10)return!1;const f=Pp(h.slice(1,p));return f?(n||(typeof i.env.references>"u"&&(i.env.references={}),typeof i.env.references[f]>"u"&&(i.env.references[f]={title:g,href:d}),i.line=l),!0):!1}const tN=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],lN="[a-zA-Z_:][a-zA-Z0-9:._-]*",rN="[^\"'=<>`\\x00-\\x20]+",hN="'[^']*'",pN='"[^"]*"',kN="(?:"+rN+"|"+hN+"|"+pN+")",dN="(?:\\s+"+lN+"(?:\\s*=\\s*"+kN+")?)",O6="<[A-Za-z][A-Za-z0-9\\-]*"+dN+"*\\s*\\/?>",P6="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",oN="<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->",uN="<[?][\\s\\S]*?[?]>",cN="<![A-Za-z][^>]*>",gN="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",BN=new RegExp("^(?:"+O6+"|"+P6+"|"+oN+"|"+uN+"|"+cN+"|"+gN+")"),AN=new RegExp("^(?:"+O6+"|"+P6+")"),Va=[[/^<(script|pre|style|textarea)(?=(\s|>|$))/i,/<\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+tN.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(AN.source+"\\s*$"),/^$/,!1]];function yN(i,s,e,n){let a=i.bMarks[s]+i.tShift[s],t=i.eMarks[s];if(i.sCount[s]-i.blkIndent>=4||!i.md.options.html||i.src.charCodeAt(a)!==60)return!1;let l=i.src.slice(a,t),r=0;for(;r<Va.length&&!Va[r][0].test(l);r++);if(r===Va.length)return!1;if(n)return Va[r][2];let h=s+1;if(!Va[r][1].test(l)){for(;h<e&&!(i.sCount[h]<i.blkIndent);h++)if(a=i.bMarks[h]+i.tShift[h],t=i.eMarks[h],l=i.src.slice(a,t),Va[r][1].test(l)){l.length!==0&&h++;break}}i.line=h;const p=i.push("html_block","",0);return p.map=[s,h],p.content=i.getLines(s,h,i.blkIndent,!0),!0}function fN(i,s,e,n){let a=i.bMarks[s]+i.tShift[s],t=i.eMarks[s];if(i.sCount[s]-i.blkIndent>=4)return!1;let l=i.src.charCodeAt(a);if(l!==35||a>=t)return!1;let r=1;for(l=i.src.charCodeAt(++a);l===35&&a<t&&r<=6;)r++,l=i.src.charCodeAt(++a);if(r>6||a<t&&!is(l))return!1;if(n)return!0;t=i.skipSpacesBack(t,a);const h=i.skipCharsBack(t,35,a);h>a&&is(i.src.charCodeAt(h-1))&&(t=h),i.line=s+1;const p=i.push("heading_open","h"+String(r),1);p.markup="########".slice(0,r),p.map=[s,i.line];const k=i.push("inline","",0);k.content=i.src.slice(a,t).trim(),k.map=[s,i.line],k.children=[];const d=i.push("heading_close","h"+String(r),-1);return d.markup="########".slice(0,r),!0}function mN(i,s,e){const n=i.md.block.ruler.getRules("paragraph");if(i.sCount[s]-i.blkIndent>=4)return!1;const a=i.parentType;i.parentType="paragraph";let t=0,l,r=s+1;for(;r<e&&!i.isEmpty(r);r++){if(i.sCount[r]-i.blkIndent>3)continue;if(i.sCount[r]>=i.blkIndent){let o=i.bMarks[r]+i.tShift[r];const c=i.eMarks[r];if(o<c&&(l=i.src.charCodeAt(o),(l===45||l===61)&&(o=i.skipChars(o,l),o=i.skipSpaces(o),o>=c))){t=l===61?1:2;break}}if(i.sCount[r]<0)continue;let u=!1;for(let o=0,c=n.length;o<c;o++)if(n[o](i,r,e,!0)){u=!0;break}if(u)break}if(!t)return!1;const h=i.getLines(s,r,i.blkIndent,!1).trim();i.line=r+1;const p=i.push("heading_open","h"+String(t),1);p.markup=String.fromCharCode(l),p.map=[s,i.line];const k=i.push("inline","",0);k.content=h,k.map=[s,i.line-1],k.children=[];const d=i.push("heading_close","h"+String(t),-1);return d.markup=String.fromCharCode(l),i.parentType=a,!0}function vN(i,s,e){const n=i.md.block.ruler.getRules("paragraph"),a=i.parentType;let t=s+1;for(i.parentType="paragraph";t<e&&!i.isEmpty(t);t++){if(i.sCount[t]-i.blkIndent>3||i.sCount[t]<0)continue;let p=!1;for(let k=0,d=n.length;k<d;k++)if(n[k](i,t,e,!0)){p=!0;break}if(p)break}const l=i.getLines(s,t,i.blkIndent,!1).trim();i.line=t;const r=i.push("paragraph_open","p",1);r.map=[s,i.line];const h=i.push("inline","",0);return h.content=l,h.map=[s,i.line],h.children=[],i.push("paragraph_close","p",-1),i.parentType=a,!0}const Kr=[["table",ZL,["paragraph","reference"]],["code",JL],["fence",QL,["paragraph","reference","blockquote","list"]],["blockquote",iN,["paragraph","reference","blockquote","list"]],["hr",sN,["paragraph","reference","blockquote","list"]],["list",nN,["paragraph","reference","blockquote"]],["reference",aN],["html_block",yN,["paragraph","reference","blockquote"]],["heading",fN,["paragraph","reference","blockquote"]],["lheading",mN],["paragraph",vN]];function Lp(){this.ruler=new Ys;for(let i=0;i<Kr.length;i++)this.ruler.push(Kr[i][0],Kr[i][1],{alt:(Kr[i][2]||[]).slice()})}Lp.prototype.tokenize=function(i,s,e){const n=this.ruler.getRules(""),a=n.length,t=i.md.options.maxNesting;let l=s,r=!1;for(;l<e&&(i.line=l=i.skipEmptyLines(l),!(l>=e||i.sCount[l]<i.blkIndent));){if(i.level>=t){i.line=e;break}const h=i.line;let p=!1;for(let k=0;k<a;k++)if(p=n[k](i,l,e,!1),p){if(h>=i.line)throw new Error("block rule didn't increment state.line");break}if(!p)throw new Error("none of the block rules matched");i.tight=!r,i.isEmpty(i.line-1)&&(r=!0),l=i.line,l<e&&i.isEmpty(l)&&(r=!0,l++,i.line=l)}};Lp.prototype.parse=function(i,s,e,n){if(!i)return;const a=new this.State(i,s,e,n);this.tokenize(a,a.line,a.lineMax)};Lp.prototype.State=Qe;function Er(i,s,e,n){this.src=i,this.env=e,this.md=s,this.tokens=n,this.tokens_meta=Array(n.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}Er.prototype.pushPending=function(){const i=new Te("text","",0);return i.content=this.pending,i.level=this.pendingLevel,this.tokens.push(i),this.pending="",i};Er.prototype.push=function(i,s,e){this.pending&&this.pushPending();const n=new Te(i,s,e);let a=null;return e<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),n.level=this.level,e>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],a={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(n),this.tokens_meta.push(a),n};Er.prototype.scanDelims=function(i,s){const e=this.posMax,n=this.src.charCodeAt(i),a=i>0?this.src.charCodeAt(i-1):32;let t=i;for(;t<e&&this.src.charCodeAt(t)===n;)t++;const l=t-i,r=t<e?this.src.charCodeAt(t):32,h=ql(a)||zl(String.fromCharCode(a)),p=ql(r)||zl(String.fromCharCode(r)),k=Vl(a),d=Vl(r),u=!d&&(!p||k||h),o=!k&&(!h||d||p);return{can_open:u&&(s||!o||h),can_close:o&&(s||!u||p),length:l}};Er.prototype.Token=Te;function FN(i){switch(i){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}function EN(i,s){let e=i.pos;for(;e<i.posMax&&!FN(i.src.charCodeAt(e));)e++;return e===i.pos?!1:(s||(i.pending+=i.src.slice(i.pos,e)),i.pos=e,!0)}const bN=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;function CN(i,s){if(!i.md.options.linkify||i.linkLevel>0)return!1;const e=i.pos,n=i.posMax;if(e+3>n||i.src.charCodeAt(e)!==58||i.src.charCodeAt(e+1)!==47||i.src.charCodeAt(e+2)!==47)return!1;const a=i.pending.match(bN);if(!a)return!1;const t=a[1],l=i.md.linkify.matchAtStart(i.src.slice(e-t.length));if(!l)return!1;let r=l.url;if(r.length<=t.length)return!1;r=r.replace(/\*+$/,"");const h=i.md.normalizeLink(r);if(!i.md.validateLink(h))return!1;if(!s){i.pending=i.pending.slice(0,-t.length);const p=i.push("link_open","a",1);p.attrs=[["href",h]],p.markup="linkify",p.info="auto";const k=i.push("text","",0);k.content=i.md.normalizeLinkText(r);const d=i.push("link_close","a",-1);d.markup="linkify",d.info="auto"}return i.pos+=r.length-t.length,!0}function _N(i,s){let e=i.pos;if(i.src.charCodeAt(e)!==10)return!1;const n=i.pending.length-1,a=i.posMax;if(!s)if(n>=0&&i.pending.charCodeAt(n)===32)if(n>=1&&i.pending.charCodeAt(n-1)===32){let t=n-1;for(;t>=1&&i.pending.charCodeAt(t-1)===32;)t--;i.pending=i.pending.slice(0,t),i.push("hardbreak","br",0)}else i.pending=i.pending.slice(0,-1),i.push("softbreak","br",0);else i.push("softbreak","br",0);for(e++;e<a&&is(i.src.charCodeAt(e));)e++;return i.pos=e,!0}const Cc=[];for(let i=0;i<256;i++)Cc.push(0);"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(i){Cc[i.charCodeAt(0)]=1});function DN(i,s){let e=i.pos;const n=i.posMax;if(i.src.charCodeAt(e)!==92||(e++,e>=n))return!1;let a=i.src.charCodeAt(e);if(a===10){for(s||i.push("hardbreak","br",0),e++;e<n&&(a=i.src.charCodeAt(e),!!is(a));)e++;return i.pos=e,!0}let t=i.src[e];if(a>=55296&&a<=56319&&e+1<n){const r=i.src.charCodeAt(e+1);r>=56320&&r<=57343&&(t+=i.src[e+1],e++)}const l="\\"+t;if(!s){const r=i.push("text_special","",0);a<256&&Cc[a]!==0?r.content=t:r.content=l,r.markup=l,r.info="escape"}return i.pos=e+1,!0}function xN(i,s){let e=i.pos;if(i.src.charCodeAt(e)!==96)return!1;const a=e;e++;const t=i.posMax;for(;e<t&&i.src.charCodeAt(e)===96;)e++;const l=i.src.slice(a,e),r=l.length;if(i.backticksScanned&&(i.backticks[r]||0)<=a)return s||(i.pending+=l),i.pos+=r,!0;let h=e,p;for(;(p=i.src.indexOf("`",h))!==-1;){for(h=p+1;h<t&&i.src.charCodeAt(h)===96;)h++;const k=h-p;if(k===r){if(!s){const d=i.push("code_inline","code",0);d.markup=l,d.content=i.src.slice(e,p).replace(/\n/g," ").replace(/^ (.+) $/,"$1")}return i.pos=h,!0}i.backticks[k]=p}return i.backticksScanned=!0,s||(i.pending+=l),i.pos+=r,!0}function wN(i,s){const e=i.pos,n=i.src.charCodeAt(e);if(s||n!==126)return!1;const a=i.scanDelims(i.pos,!0);let t=a.length;const l=String.fromCharCode(n);if(t<2)return!1;let r;t%2&&(r=i.push("text","",0),r.content=l,t--);for(let h=0;h<t;h+=2)r=i.push("text","",0),r.content=l+l,i.delimiters.push({marker:n,length:0,token:i.tokens.length-1,end:-1,open:a.can_open,close:a.can_close});return i.pos+=a.length,!0}function _0(i,s){let e;const n=[],a=s.length;for(let t=0;t<a;t++){const l=s[t];if(l.marker!==126||l.end===-1)continue;const r=s[l.end];e=i.tokens[l.token],e.type="s_open",e.tag="s",e.nesting=1,e.markup="~~",e.content="",e=i.tokens[r.token],e.type="s_close",e.tag="s",e.nesting=-1,e.markup="~~",e.content="",i.tokens[r.token-1].type==="text"&&i.tokens[r.token-1].content==="~"&&n.push(r.token-1)}for(;n.length;){const t=n.pop();let l=t+1;for(;l<i.tokens.length&&i.tokens[l].type==="s_close";)l++;l--,t!==l&&(e=i.tokens[l],i.tokens[l]=i.tokens[t],i.tokens[t]=e)}}function TN(i){const s=i.tokens_meta,e=i.tokens_meta.length;_0(i,i.delimiters);for(let n=0;n<e;n++)s[n]&&s[n].delimiters&&_0(i,s[n].delimiters)}const L6={tokenize:wN,postProcess:TN};function SN(i,s){const e=i.pos,n=i.src.charCodeAt(e);if(s||n!==95&&n!==42)return!1;const a=i.scanDelims(i.pos,n===42);for(let t=0;t<a.length;t++){const l=i.push("text","",0);l.content=String.fromCharCode(n),i.delimiters.push({marker:n,length:a.length,token:i.tokens.length-1,end:-1,open:a.can_open,close:a.can_close})}return i.pos+=a.length,!0}function D0(i,s){const e=s.length;for(let n=e-1;n>=0;n--){const a=s[n];if(a.marker!==95&&a.marker!==42||a.end===-1)continue;const t=s[a.end],l=n>0&&s[n-1].end===a.end+1&&s[n-1].marker===a.marker&&s[n-1].token===a.token-1&&s[a.end+1].token===t.token+1,r=String.fromCharCode(a.marker),h=i.tokens[a.token];h.type=l?"strong_open":"em_open",h.tag=l?"strong":"em",h.nesting=1,h.markup=l?r+r:r,h.content="";const p=i.tokens[t.token];p.type=l?"strong_close":"em_close",p.tag=l?"strong":"em",p.nesting=-1,p.markup=l?r+r:r,p.content="",l&&(i.tokens[s[n-1].token].content="",i.tokens[s[a.end+1].token].content="",n--)}}function IN(i){const s=i.tokens_meta,e=i.tokens_meta.length;D0(i,i.delimiters);for(let n=0;n<e;n++)s[n]&&s[n].delimiters&&D0(i,s[n].delimiters)}const N6={tokenize:SN,postProcess:IN};function RN(i,s){let e,n,a,t,l="",r="",h=i.pos,p=!0;if(i.src.charCodeAt(i.pos)!==91)return!1;const k=i.pos,d=i.posMax,u=i.pos+1,o=i.md.helpers.parseLinkLabel(i,i.pos,!0);if(o<0)return!1;let c=o+1;if(c<d&&i.src.charCodeAt(c)===40){for(p=!1,c++;c<d&&(e=i.src.charCodeAt(c),!(!is(e)&&e!==10));c++);if(c>=d)return!1;if(h=c,a=i.md.helpers.parseLinkDestination(i.src,c,i.posMax),a.ok){for(l=i.md.normalizeLink(a.str),i.md.validateLink(l)?c=a.pos:l="",h=c;c<d&&(e=i.src.charCodeAt(c),!(!is(e)&&e!==10));c++);if(a=i.md.helpers.parseLinkTitle(i.src,c,i.posMax),c<d&&h!==c&&a.ok)for(r=a.str,c=a.pos;c<d&&(e=i.src.charCodeAt(c),!(!is(e)&&e!==10));c++);}(c>=d||i.src.charCodeAt(c)!==41)&&(p=!0),c++}if(p){if(typeof i.env.references>"u")return!1;if(c<d&&i.src.charCodeAt(c)===91?(h=c+1,c=i.md.helpers.parseLinkLabel(i,c),c>=0?n=i.src.slice(h,c++):c=o+1):c=o+1,n||(n=i.src.slice(u,o)),t=i.env.references[Pp(n)],!t)return i.pos=k,!1;l=t.href,r=t.title}if(!s){i.pos=u,i.posMax=o;const A=i.push("link_open","a",1),g=[["href",l]];A.attrs=g,r&&g.push(["title",r]),i.linkLevel++,i.md.inline.tokenize(i),i.linkLevel--,i.push("link_close","a",-1)}return i.pos=c,i.posMax=d,!0}function ON(i,s){let e,n,a,t,l,r,h,p,k="";const d=i.pos,u=i.posMax;if(i.src.charCodeAt(i.pos)!==33||i.src.charCodeAt(i.pos+1)!==91)return!1;const o=i.pos+2,c=i.md.helpers.parseLinkLabel(i,i.pos+1,!1);if(c<0)return!1;if(t=c+1,t<u&&i.src.charCodeAt(t)===40){for(t++;t<u&&(e=i.src.charCodeAt(t),!(!is(e)&&e!==10));t++);if(t>=u)return!1;for(p=t,r=i.md.helpers.parseLinkDestination(i.src,t,i.posMax),r.ok&&(k=i.md.normalizeLink(r.str),i.md.validateLink(k)?t=r.pos:k=""),p=t;t<u&&(e=i.src.charCodeAt(t),!(!is(e)&&e!==10));t++);if(r=i.md.helpers.parseLinkTitle(i.src,t,i.posMax),t<u&&p!==t&&r.ok)for(h=r.str,t=r.pos;t<u&&(e=i.src.charCodeAt(t),!(!is(e)&&e!==10));t++);else h="";if(t>=u||i.src.charCodeAt(t)!==41)return i.pos=d,!1;t++}else{if(typeof i.env.references>"u")return!1;if(t<u&&i.src.charCodeAt(t)===91?(p=t+1,t=i.md.helpers.parseLinkLabel(i,t),t>=0?a=i.src.slice(p,t++):t=c+1):t=c+1,a||(a=i.src.slice(o,c)),l=i.env.references[Pp(a)],!l)return i.pos=d,!1;k=l.href,h=l.title}if(!s){n=i.src.slice(o,c);const A=[];i.md.inline.parse(n,i.md,i.env,A);const g=i.push("image","img",0),f=[["src",k],["alt",""]];g.attrs=f,g.children=A,g.content=n,h&&f.push(["title",h])}return i.pos=t,i.posMax=u,!0}const PN=/^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,LN=/^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;function NN(i,s){let e=i.pos;if(i.src.charCodeAt(e)!==60)return!1;const n=i.pos,a=i.posMax;for(;;){if(++e>=a)return!1;const l=i.src.charCodeAt(e);if(l===60)return!1;if(l===62)break}const t=i.src.slice(n+1,e);if(LN.test(t)){const l=i.md.normalizeLink(t);if(!i.md.validateLink(l))return!1;if(!s){const r=i.push("link_open","a",1);r.attrs=[["href",l]],r.markup="autolink",r.info="auto";const h=i.push("text","",0);h.content=i.md.normalizeLinkText(t);const p=i.push("link_close","a",-1);p.markup="autolink",p.info="auto"}return i.pos+=t.length+2,!0}if(PN.test(t)){const l=i.md.normalizeLink("mailto:"+t);if(!i.md.validateLink(l))return!1;if(!s){const r=i.push("link_open","a",1);r.attrs=[["href",l]],r.markup="autolink",r.info="auto";const h=i.push("text","",0);h.content=i.md.normalizeLinkText(t);const p=i.push("link_close","a",-1);p.markup="autolink",p.info="auto"}return i.pos+=t.length+2,!0}return!1}function MN(i){return/^<a[>\s]/i.test(i)}function $N(i){return/^<\/a\s*>/i.test(i)}function VN(i){const s=i|32;return s>=97&&s<=122}function zN(i,s){if(!i.md.options.html)return!1;const e=i.posMax,n=i.pos;if(i.src.charCodeAt(n)!==60||n+2>=e)return!1;const a=i.src.charCodeAt(n+1);if(a!==33&&a!==63&&a!==47&&!VN(a))return!1;const t=i.src.slice(n).match(BN);if(!t)return!1;if(!s){const l=i.push("html_inline","",0);l.content=t[0],MN(l.content)&&i.linkLevel++,$N(l.content)&&i.linkLevel--}return i.pos+=t[0].length,!0}const qN=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,HN=/^&([a-z][a-z0-9]{1,31});/i;function jN(i,s){const e=i.pos,n=i.posMax;if(i.src.charCodeAt(e)!==38||e+1>=n)return!1;if(i.src.charCodeAt(e+1)===35){const t=i.src.slice(e).match(qN);if(t){if(!s){const l=t[1][0].toLowerCase()==="x"?parseInt(t[1].slice(1),16):parseInt(t[1],10),r=i.push("text_special","",0);r.content=Ec(l)?Vh(l):Vh(65533),r.markup=t[0],r.info="entity"}return i.pos+=t[0].length,!0}}else{const t=i.src.slice(e).match(HN);if(t){const l=w6(t[0]);if(l!==t[0]){if(!s){const r=i.push("text_special","",0);r.content=l,r.markup=t[0],r.info="entity"}return i.pos+=t[0].length,!0}}}return!1}function x0(i){const s={},e=i.length;if(!e)return;let n=0,a=-2;const t=[];for(let l=0;l<e;l++){const r=i[l];if(t.push(0),(i[n].marker!==r.marker||a!==r.token-1)&&(n=l),a=r.token,r.length=r.length||0,!r.close)continue;s.hasOwnProperty(r.marker)||(s[r.marker]=[-1,-1,-1,-1,-1,-1]);const h=s[r.marker][(r.open?3:0)+r.length%3];let p=n-t[n]-1,k=p;for(;p>h;p-=t[p]+1){const d=i[p];if(d.marker===r.marker&&d.open&&d.end<0){let u=!1;if((d.close||r.open)&&(d.length+r.length)%3===0&&(d.length%3!==0||r.length%3!==0)&&(u=!0),!u){const o=p>0&&!i[p-1].open?t[p-1]+1:0;t[l]=l-p+o,t[p]=o,r.open=!1,d.end=l,d.close=!1,k=-1,a=-2;break}}}k!==-1&&(s[r.marker][(r.open?3:0)+(r.length||0)%3]=k)}}function UN(i){const s=i.tokens_meta,e=i.tokens_meta.length;x0(i.delimiters);for(let n=0;n<e;n++)s[n]&&s[n].delimiters&&x0(s[n].delimiters)}function GN(i){let s,e,n=0;const a=i.tokens,t=i.tokens.length;for(s=e=0;s<t;s++)a[s].nesting<0&&n--,a[s].level=n,a[s].nesting>0&&n++,a[s].type==="text"&&s+1<t&&a[s+1].type==="text"?a[s+1].content=a[s].content+a[s+1].content:(s!==e&&(a[e]=a[s]),e++);s!==e&&(a.length=e)}const Mk=[["text",EN],["linkify",CN],["newline",_N],["escape",DN],["backticks",xN],["strikethrough",L6.tokenize],["emphasis",N6.tokenize],["link",RN],["image",ON],["autolink",NN],["html_inline",zN],["entity",jN]],$k=[["balance_pairs",UN],["strikethrough",L6.postProcess],["emphasis",N6.postProcess],["fragments_join",GN]];function br(){this.ruler=new Ys;for(let i=0;i<Mk.length;i++)this.ruler.push(Mk[i][0],Mk[i][1]);this.ruler2=new Ys;for(let i=0;i<$k.length;i++)this.ruler2.push($k[i][0],$k[i][1])}br.prototype.skipToken=function(i){const s=i.pos,e=this.ruler.getRules(""),n=e.length,a=i.md.options.maxNesting,t=i.cache;if(typeof t[s]<"u"){i.pos=t[s];return}let l=!1;if(i.level<a){for(let r=0;r<n;r++)if(i.level++,l=e[r](i,!0),i.level--,l){if(s>=i.pos)throw new Error("inline rule didn't increment state.pos");break}}else i.pos=i.posMax;l||i.pos++,t[s]=i.pos};br.prototype.tokenize=function(i){const s=this.ruler.getRules(""),e=s.length,n=i.posMax,a=i.md.options.maxNesting;for(;i.pos<n;){const t=i.pos;let l=!1;if(i.level<a){for(let r=0;r<e;r++)if(l=s[r](i,!1),l){if(t>=i.pos)throw new Error("inline rule didn't increment state.pos");break}}if(l){if(i.pos>=n)break;continue}i.pending+=i.src[i.pos++]}i.pending&&i.pushPending()};br.prototype.parse=function(i,s,e,n){const a=new this.State(i,s,e,n);this.tokenize(a);const t=this.ruler2.getRules(""),l=t.length;for(let r=0;r<l;r++)t[r](a)};br.prototype.State=Er;function WN(i){const s={};i=i||{},s.src_Any=b6.source,s.src_Cc=C6.source,s.src_Z=D6.source,s.src_P=vc.source,s.src_ZPCc=[s.src_Z,s.src_P,s.src_Cc].join("|"),s.src_ZCc=[s.src_Z,s.src_Cc].join("|");const e="[><｜]";return s.src_pseudo_letter="(?:(?!"+e+"|"+s.src_ZPCc+")"+s.src_Any+")",s.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",s.src_auth="(?:(?:(?!"+s.src_ZCc+"|[@/\\[\\]()]).)+@)?",s.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",s.src_host_terminator="(?=$|"+e+"|"+s.src_ZPCc+")(?!"+(i["---"]?"-(?!--)|":"-|")+"_|:\\d|\\.-|\\.(?!$|"+s.src_ZPCc+"))",s.src_path="(?:[/?#](?:(?!"+s.src_ZCc+"|"+e+`|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!`+s.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+s.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+s.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+s.src_ZCc+`|["]).)+\\"|\\'(?:(?!`+s.src_ZCc+"|[']).)+\\'|\\'(?="+s.src_pseudo_letter+"|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!"+s.src_ZCc+"|[.]|$)|"+(i["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+",(?!"+s.src_ZCc+"|$)|;(?!"+s.src_ZCc+"|$)|\\!+(?!"+s.src_ZCc+"|[!]|$)|\\?(?!"+s.src_ZCc+"|[?]|$))+|\\/)?",s.src_email_name='[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',s.src_xn="xn--[a-z0-9\\-]{1,59}",s.src_domain_root="(?:"+s.src_xn+"|"+s.src_pseudo_letter+"{1,63})",s.src_domain="(?:"+s.src_xn+"|(?:"+s.src_pseudo_letter+")|(?:"+s.src_pseudo_letter+"(?:-|"+s.src_pseudo_letter+"){0,61}"+s.src_pseudo_letter+"))",s.src_host="(?:(?:(?:(?:"+s.src_domain+")\\.)*"+s.src_domain+"))",s.tpl_host_fuzzy="(?:"+s.src_ip4+"|(?:(?:(?:"+s.src_domain+")\\.)+(?:%TLDS%)))",s.tpl_host_no_ip_fuzzy="(?:(?:(?:"+s.src_domain+")\\.)+(?:%TLDS%))",s.src_host_strict=s.src_host+s.src_host_terminator,s.tpl_host_fuzzy_strict=s.tpl_host_fuzzy+s.src_host_terminator,s.src_host_port_strict=s.src_host+s.src_port+s.src_host_terminator,s.tpl_host_port_fuzzy_strict=s.tpl_host_fuzzy+s.src_port+s.src_host_terminator,s.tpl_host_port_no_ip_fuzzy_strict=s.tpl_host_no_ip_fuzzy+s.src_port+s.src_host_terminator,s.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+s.src_ZPCc+"|>|$))",s.tpl_email_fuzzy="(^|"+e+'|"|\\(|'+s.src_ZCc+")("+s.src_email_name+"@"+s.tpl_host_fuzzy_strict+")",s.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+s.src_ZPCc+"))((?![$+<=>^`|｜])"+s.tpl_host_port_fuzzy_strict+s.src_path+")",s.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+s.src_ZPCc+"))((?![$+<=>^`|｜])"+s.tpl_host_port_no_ip_fuzzy_strict+s.src_path+")",s}function jo(i){return Array.prototype.slice.call(arguments,1).forEach(function(e){e&&Object.keys(e).forEach(function(n){i[n]=e[n]})}),i}function Np(i){return Object.prototype.toString.call(i)}function KN(i){return Np(i)==="[object String]"}function YN(i){return Np(i)==="[object Object]"}function XN(i){return Np(i)==="[object RegExp]"}function w0(i){return Np(i)==="[object Function]"}function ZN(i){return i.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}const M6={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};function JN(i){return Object.keys(i||{}).reduce(function(s,e){return s||M6.hasOwnProperty(e)},!1)}const QN={"http:":{validate:function(i,s,e){const n=i.slice(s);return e.re.http||(e.re.http=new RegExp("^\\/\\/"+e.re.src_auth+e.re.src_host_port_strict+e.re.src_path,"i")),e.re.http.test(n)?n.match(e.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(i,s,e){const n=i.slice(s);return e.re.no_http||(e.re.no_http=new RegExp("^"+e.re.src_auth+"(?:localhost|(?:(?:"+e.re.src_domain+")\\.)+"+e.re.src_domain_root+")"+e.re.src_port+e.re.src_host_terminator+e.re.src_path,"i")),e.re.no_http.test(n)?s>=3&&i[s-3]===":"||s>=3&&i[s-3]==="/"?0:n.match(e.re.no_http)[0].length:0}},"mailto:":{validate:function(i,s,e){const n=i.slice(s);return e.re.mailto||(e.re.mailto=new RegExp("^"+e.re.src_email_name+"@"+e.re.src_host_strict,"i")),e.re.mailto.test(n)?n.match(e.re.mailto)[0].length:0}}},iM="a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]",sM="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function eM(i){i.__index__=-1,i.__text_cache__=""}function nM(i){return function(s,e){const n=s.slice(e);return i.test(n)?n.match(i)[0].length:0}}function T0(){return function(i,s){s.normalize(i)}}function zh(i){const s=i.re=WN(i.__opts__),e=i.__tlds__.slice();i.onCompile(),i.__tlds_replaced__||e.push(iM),e.push(s.src_xn),s.src_tlds=e.join("|");function n(r){return r.replace("%TLDS%",s.src_tlds)}s.email_fuzzy=RegExp(n(s.tpl_email_fuzzy),"i"),s.link_fuzzy=RegExp(n(s.tpl_link_fuzzy),"i"),s.link_no_ip_fuzzy=RegExp(n(s.tpl_link_no_ip_fuzzy),"i"),s.host_fuzzy_test=RegExp(n(s.tpl_host_fuzzy_test),"i");const a=[];i.__compiled__={};function t(r,h){throw new Error('(LinkifyIt) Invalid schema "'+r+'": '+h)}Object.keys(i.__schemas__).forEach(function(r){const h=i.__schemas__[r];if(h===null)return;const p={validate:null,link:null};if(i.__compiled__[r]=p,YN(h)){XN(h.validate)?p.validate=nM(h.validate):w0(h.validate)?p.validate=h.validate:t(r,h),w0(h.normalize)?p.normalize=h.normalize:h.normalize?t(r,h):p.normalize=T0();return}if(KN(h)){a.push(r);return}t(r,h)}),a.forEach(function(r){i.__compiled__[i.__schemas__[r]]&&(i.__compiled__[r].validate=i.__compiled__[i.__schemas__[r]].validate,i.__compiled__[r].normalize=i.__compiled__[i.__schemas__[r]].normalize)}),i.__compiled__[""]={validate:null,normalize:T0()};const l=Object.keys(i.__compiled__).filter(function(r){return r.length>0&&i.__compiled__[r]}).map(ZN).join("|");i.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+s.src_ZPCc+"))("+l+")","i"),i.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+s.src_ZPCc+"))("+l+")","ig"),i.re.schema_at_start=RegExp("^"+i.re.schema_search.source,"i"),i.re.pretest=RegExp("("+i.re.schema_test.source+")|("+i.re.host_fuzzy_test.source+")|@","i"),eM(i)}function aM(i,s){const e=i.__index__,n=i.__last_index__,a=i.__text_cache__.slice(e,n);this.schema=i.__schema__.toLowerCase(),this.index=e+s,this.lastIndex=n+s,this.raw=a,this.text=a,this.url=a}function Uo(i,s){const e=new aM(i,s);return i.__compiled__[e.schema].normalize(e,i),e}function re(i,s){if(!(this instanceof re))return new re(i,s);s||JN(i)&&(s=i,i={}),this.__opts__=jo({},M6,s),this.__index__=-1,this.__last_index__=-1,this.__schema__="",this.__text_cache__="",this.__schemas__=jo({},QN,i),this.__compiled__={},this.__tlds__=sM,this.__tlds_replaced__=!1,this.re={},zh(this)}re.prototype.add=function(s,e){return this.__schemas__[s]=e,zh(this),this};re.prototype.set=function(s){return this.__opts__=jo(this.__opts__,s),this};re.prototype.test=function(s){if(this.__text_cache__=s,this.__index__=-1,!s.length)return!1;let e,n,a,t,l,r,h,p,k;if(this.re.schema_test.test(s)){for(h=this.re.schema_search,h.lastIndex=0;(e=h.exec(s))!==null;)if(t=this.testSchemaAt(s,e[2],h.lastIndex),t){this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+t;break}}return this.__opts__.fuzzyLink&&this.__compiled__["http:"]&&(p=s.search(this.re.host_fuzzy_test),p>=0&&(this.__index__<0||p<this.__index__)&&(n=s.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))!==null&&(l=n.index+n[1].length,(this.__index__<0||l<this.__index__)&&(this.__schema__="",this.__index__=l,this.__last_index__=n.index+n[0].length))),this.__opts__.fuzzyEmail&&this.__compiled__["mailto:"]&&(k=s.indexOf("@"),k>=0&&(a=s.match(this.re.email_fuzzy))!==null&&(l=a.index+a[1].length,r=a.index+a[0].length,(this.__index__<0||l<this.__index__||l===this.__index__&&r>this.__last_index__)&&(this.__schema__="mailto:",this.__index__=l,this.__last_index__=r))),this.__index__>=0};re.prototype.pretest=function(s){return this.re.pretest.test(s)};re.prototype.testSchemaAt=function(s,e,n){return this.__compiled__[e.toLowerCase()]?this.__compiled__[e.toLowerCase()].validate(s,n,this):0};re.prototype.match=function(s){const e=[];let n=0;this.__index__>=0&&this.__text_cache__===s&&(e.push(Uo(this,n)),n=this.__last_index__);let a=n?s.slice(n):s;for(;this.test(a);)e.push(Uo(this,n)),a=a.slice(this.__last_index__),n+=this.__last_index__;return e.length?e:null};re.prototype.matchAtStart=function(s){if(this.__text_cache__=s,this.__index__=-1,!s.length)return null;const e=this.re.schema_at_start.exec(s);if(!e)return null;const n=this.testSchemaAt(s,e[2],e[0].length);return n?(this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+n,Uo(this,0)):null};re.prototype.tlds=function(s,e){return s=Array.isArray(s)?s:[s],e?(this.__tlds__=this.__tlds__.concat(s).sort().filter(function(n,a,t){return n!==t[a-1]}).reverse(),zh(this),this):(this.__tlds__=s.slice(),this.__tlds_replaced__=!0,zh(this),this)};re.prototype.normalize=function(s){s.schema||(s.url="http://"+s.url),s.schema==="mailto:"&&!/^mailto:/i.test(s.url)&&(s.url="mailto:"+s.url)};re.prototype.onCompile=function(){};const tt=2147483647,ze=36,_c=1,Hl=26,tM=38,lM=700,$6=72,V6=128,z6="-",rM=/^xn--/,hM=/[^\0-\x7F]/,pM=/[\x2E\u3002\uFF0E\uFF61]/g,kM={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},Vk=ze-_c,qe=Math.floor,zk=String.fromCharCode;function qn(i){throw new RangeError(kM[i])}function dM(i,s){const e=[];let n=i.length;for(;n--;)e[n]=s(i[n]);return e}function q6(i,s){const e=i.split("@");let n="";e.length>1&&(n=e[0]+"@",i=e[1]),i=i.replace(pM,".");const a=i.split("."),t=dM(a,s).join(".");return n+t}function H6(i){const s=[];let e=0;const n=i.length;for(;e<n;){const a=i.charCodeAt(e++);if(a>=55296&&a<=56319&&e<n){const t=i.charCodeAt(e++);(t&64512)==56320?s.push(((a&1023)<<10)+(t&1023)+65536):(s.push(a),e--)}else s.push(a)}return s}const oM=i=>String.fromCodePoint(...i),uM=function(i){return i>=48&&i<58?26+(i-48):i>=65&&i<91?i-65:i>=97&&i<123?i-97:ze},S0=function(i,s){return i+22+75*(i<26)-((s!=0)<<5)},j6=function(i,s,e){let n=0;for(i=e?qe(i/lM):i>>1,i+=qe(i/s);i>Vk*Hl>>1;n+=ze)i=qe(i/Vk);return qe(n+(Vk+1)*i/(i+tM))},U6=function(i){const s=[],e=i.length;let n=0,a=V6,t=$6,l=i.lastIndexOf(z6);l<0&&(l=0);for(let r=0;r<l;++r)i.charCodeAt(r)>=128&&qn("not-basic"),s.push(i.charCodeAt(r));for(let r=l>0?l+1:0;r<e;){const h=n;for(let k=1,d=ze;;d+=ze){r>=e&&qn("invalid-input");const u=uM(i.charCodeAt(r++));u>=ze&&qn("invalid-input"),u>qe((tt-n)/k)&&qn("overflow"),n+=u*k;const o=d<=t?_c:d>=t+Hl?Hl:d-t;if(u<o)break;const c=ze-o;k>qe(tt/c)&&qn("overflow"),k*=c}const p=s.length+1;t=j6(n-h,p,h==0),qe(n/p)>tt-a&&qn("overflow"),a+=qe(n/p),n%=p,s.splice(n++,0,a)}return String.fromCodePoint(...s)},G6=function(i){const s=[];i=H6(i);const e=i.length;let n=V6,a=0,t=$6;for(const h of i)h<128&&s.push(zk(h));const l=s.length;let r=l;for(l&&s.push(z6);r<e;){let h=tt;for(const k of i)k>=n&&k<h&&(h=k);const p=r+1;h-n>qe((tt-a)/p)&&qn("overflow"),a+=(h-n)*p,n=h;for(const k of i)if(k<n&&++a>tt&&qn("overflow"),k===n){let d=a;for(let u=ze;;u+=ze){const o=u<=t?_c:u>=t+Hl?Hl:u-t;if(d<o)break;const c=d-o,A=ze-o;s.push(zk(S0(o+c%A,0))),d=qe(c/A)}s.push(zk(S0(d,0))),t=j6(a,p,r===l),a=0,++r}++a,++n}return s.join("")},cM=function(i){return q6(i,function(s){return rM.test(s)?U6(s.slice(4).toLowerCase()):s})},gM=function(i){return q6(i,function(s){return hM.test(s)?"xn--"+G6(s):s})},W6={version:"2.3.1",ucs2:{decode:H6,encode:oM},decode:U6,encode:G6,toASCII:gM,toUnicode:cM},BM={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},AM={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","fragments_join"]}}},yM={options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","fragments_join"]}}},fM={default:BM,zero:AM,commonmark:yM},mM=/^(vbscript|javascript|file|data):/,vM=/^data:image\/(gif|png|jpeg|webp);/;function FM(i){const s=i.trim().toLowerCase();return mM.test(s)?vM.test(s):!0}const K6=["http:","https:","mailto:"];function EM(i){const s=mc(i,!0);if(s.hostname&&(!s.protocol||K6.indexOf(s.protocol)>=0))try{s.hostname=W6.toASCII(s.hostname)}catch{}return Fr(fc(s))}function bM(i){const s=mc(i,!0);if(s.hostname&&(!s.protocol||K6.indexOf(s.protocol)>=0))try{s.hostname=W6.toUnicode(s.hostname)}catch{}return vt(fc(s),vt.defaultChars+"%")}function ge(i,s){if(!(this instanceof ge))return new ge(i,s);s||Fc(i)||(s=i||{},i="default"),this.inline=new br,this.block=new Lp,this.core=new bc,this.renderer=new Ot,this.linkify=new re,this.validateLink=FM,this.normalizeLink=EM,this.normalizeLinkText=bM,this.utils=_L,this.helpers=Op({},TL),this.options={},this.configure(i),s&&this.set(s)}ge.prototype.set=function(i){return Op(this.options,i),this};ge.prototype.configure=function(i){const s=this;if(Fc(i)){const e=i;if(i=fM[e],!i)throw new Error('Wrong `markdown-it` preset "'+e+'", check name')}if(!i)throw new Error("Wrong `markdown-it` preset, can't be empty");return i.options&&s.set(i.options),i.components&&Object.keys(i.components).forEach(function(e){i.components[e].rules&&s[e].ruler.enableOnly(i.components[e].rules),i.components[e].rules2&&s[e].ruler2.enableOnly(i.components[e].rules2)}),this};ge.prototype.enable=function(i,s){let e=[];Array.isArray(i)||(i=[i]),["core","block","inline"].forEach(function(a){e=e.concat(this[a].ruler.enable(i,!0))},this),e=e.concat(this.inline.ruler2.enable(i,!0));const n=i.filter(function(a){return e.indexOf(a)<0});if(n.length&&!s)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+n);return this};ge.prototype.disable=function(i,s){let e=[];Array.isArray(i)||(i=[i]),["core","block","inline"].forEach(function(a){e=e.concat(this[a].ruler.disable(i,!0))},this),e=e.concat(this.inline.ruler2.disable(i,!0));const n=i.filter(function(a){return e.indexOf(a)<0});if(n.length&&!s)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+n);return this};ge.prototype.use=function(i){const s=[this].concat(Array.prototype.slice.call(arguments,1));return i.apply(i,s),this};ge.prototype.parse=function(i,s){if(typeof i!="string")throw new Error("Input data should be a String");const e=new this.core.State(i,this,s);return this.core.process(e),e.tokens};ge.prototype.render=function(i,s){return s=s||{},this.renderer.render(this.parse(i,s),this.options,s)};ge.prototype.parseInline=function(i,s){const e=new this.core.State(i,this,s);return e.inlineMode=!0,this.core.process(e),e.tokens};ge.prototype.renderInline=function(i,s){return s=s||{},this.renderer.render(this.parseInline(i,s),this.options,s)};const CM=ti({__name:"MarkdownItem",props:{data:{}},setup(i,{expose:s}){s();const e=i,n=Z();let a;function t(h){a=h}const l=ge();t((h,p,k)=>{p.classList.add("markdown-rendered");const d=l.render(h),u=document.createElement("div");p.appendChild(u),u.innerHTML=d}),Di(()=>{!n.value||!a||a(e.data.value,n.value)});const r={props:e,MdArea:n,get renderMarkdownFn(){return a},set renderMarkdownFn(h){a=h},redefine_renderMarkdown:t,md:l};return Object.defineProperty(r,"__isScriptSetup",{enumerable:!1,value:!0}),r}}),ns=(i,s)=>{const e=i.__vccOpts||i;for(const[n,a]of s)e[n]=a;return e},_M={key:0,class:"node-item-name"},DM={key:1,class:"node-item-value",ref:"MdArea"};function xM(i,s,e,n,a,t){return hi(),oi("div",{class:Ii("markdown-item  node-item-slot "+n.props.data.refType)},[n.props.data.name?(hi(),oi("span",_M,Li(n.props.data.name),1)):yi("v-if",!0),n.props.data.value?(hi(),oi("div",DM,[yi(" 脚本填充内容 ")],512)):yi("v-if",!0),s[0]||(s[0]=j("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const Y6=ns(CM,[["render",xM],["__scopeId","data-v-c080c403"],["__file","MarkdownItem.vue"]]),wM=ti({__name:"ObcanvasNode",props:{id:{},data:{}},setup(i,{expose:s}){s();const e=i,n=Z({name:"",value:e.data.label,refType:"value",valueType:"item-markdown"}),a={props:e,newData:n,get Handle(){return vn},get Position(){return Fi},MarkdownItem:Y6};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}}),TM={class:"obcanvas-node"};function SM(i,s,e,n,a,t){return hi(),oi(_i,null,[j("div",TM,[Bi(n.MarkdownItem,{data:n.newData},null,8,["data"])]),Bi(n.Handle,{id:"left",type:"target",position:n.Position.Left},null,8,["position"]),Bi(n.Handle,{id:"top",type:"target",position:n.Position.Top},null,8,["position"]),Bi(n.Handle,{id:"right",type:"source",position:n.Position.Right},null,8,["position"]),Bi(n.Handle,{id:"bottom",type:"source",position:n.Position.Bottom},null,8,["position"])],64)}const IM=ns(wM,[["render",SM],["__scopeId","data-v-ee6e5543"],["__file","ObcanvasNode.vue"]]),RM=ti({__name:"ComfyUINode",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(i,{expose:s}){var t,l,r,h;s();const e=i,n=Z(!1);n.value=((l=(t=e.data)==null?void 0:t.inputs)==null?void 0:l.length)!=0||((h=(r=e.data)==null?void 0:r.outputs)==null?void 0:h.length)!=0;const a={props:e,hasCustomHandle:n,get Handle(){return vn},get Position(){return Fi}};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}}),OM={class:"comfyui-node"},PM={class:"node-id"},LM=["aria-label"],NM={class:"node-title"},MM={style:{display:"inline-block","margin-left":"10px"}},$M={class:"node-content"},VM={class:"node-handle-name"},zM={class:"left"},qM={class:"item"},HM={class:"right"},jM={class:"item"},UM={class:"node-self-attr"},GM={class:"item-c"},WM={class:"item"};function KM(i,s,e,n,a,t){return hi(),oi("div",OM,[j("div",PM,[j("div",null," #"+Li(e.id),1)]),yi(` <NodeToolbar :is-visible="true" :position="Position.Top" class="comfyui-id">
      <div>
        #{{ id }}
      </div>
    </NodeToolbar> `),j("div",{class:"node-main","aria-label":e.data.label},[j("div",NM,[s[0]||(s[0]=j("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),j("span",MM,Li(e.data.label),1)]),j("div",$M,[j("div",VM,[j("div",zM,[(hi(!0),oi(_i,null,bs(e.data.inputs,(l,r)=>(hi(),oi("div",qM,Li(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1))),256))]),j("div",HM,[(hi(!0),oi(_i,null,bs(e.data.outputs,(l,r)=>(hi(),oi("div",jM,Li(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1))),256))])]),j("div",UM,[(hi(!0),oi(_i,null,bs(e.data.widgets_values,(l,r)=>(hi(),oi("div",GM,[j("div",WM,Li(l),1)]))),256)),yi(" 注意data.widgets_values可能是列表也可能是json ")])]),yi(" Handle - 根据数据自动生成 "),(hi(!0),oi(_i,null,bs(e.data.inputs,(l,r)=>(hi(),rs(n.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"target-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type).toLowerCase().charCodeAt(0)%20,type:"target",position:n.Position.Left},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128)),(hi(!0),oi(_i,null,bs(e.data.outputs,(l,r)=>(hi(),rs(n.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"source-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type).toLowerCase().charCodeAt(0)%20,type:"source",position:n.Position.Right},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128))],8,LM)])}const YM=ns(RM,[["render",KM],["__file","ComfyUINode.vue"]]),XM=ti({__name:"ComfyUINodeGroup",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(i,{expose:s}){s();const n={props:i};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}}),ZM=["aria-label"],JM={class:"comfyui-node-title"},QM={style:{display:"inline-block","margin-left":"10px"}};function i$(i,s,e,n,a,t){return hi(),oi("div",{class:"comfyui-node comfyui-group","aria-label":e.data.label},[j("div",JM,[s[0]||(s[0]=j("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),j("span",QM,Li(e.data.label),1)])],8,ZM)}const s$=ns(XM,[["render",i$],["__scopeId","data-v-df954eaa"],["__file","ComfyUINodeGroup.vue"]]),e$=ti({__name:"CommonNode",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(i,{expose:s}){var t,l,r,h;s();const e=i,n=Z(!1);n.value=((l=(t=e.data)==null?void 0:t.inputs)==null?void 0:l.length)!=0||((h=(r=e.data)==null?void 0:r.outputs)==null?void 0:h.length)!=0;const a={props:e,hasCustomHandle:n,get Handle(){return vn},get Position(){return Fi}};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}}),n$={class:"common-node"},a$={class:"node-id"},t$=["aria-label"],l$={class:"node-title"},r$={style:{display:"inline-block","margin-left":"10px"}},h$={class:"node-content"},p$={class:"node-content-handle"},k$={class:"left"},d$={class:"line"},o$={class:"item-sub item-name"},u$={key:0,class:"item-sub item-value"},c$={class:"item-sub-sub"},g$={class:"left"},B$={class:"right"},A$={class:"line"},y$={class:"item-sub item-name"},f$={key:0,class:"item-sub item-value"},m$={class:"node-content-self"},v$={class:"line"},F$={class:"item-sub"},E$={class:"item-name"},b$={class:"item-value"};function C$(i,s,e,n,a,t){return hi(),oi("div",n$,[yi(" 节点id "),j("div",a$,[j("div",null," #"+Li(e.id),1)]),yi(` <NodeToolbar :is-visible="true" :position="Position.Top" class="common-id">
      <div>
        #{{ id }}
      </div>
    </NodeToolbar> `),yi(" 节点 "),j("div",{class:"node-main","aria-label":e.data.label},[yi(" 节点标题 "),j("div",l$,[s[0]||(s[0]=j("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),j("span",r$,Li(e.data.label),1)]),yi(" 节点内容 "),j("div",h$,[j("div",p$,[j("div",k$,[(hi(!0),oi(_i,null,bs(e.data.inputs,(l,r)=>(hi(),oi("div",d$,[j("span",o$,Li(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1),l.value?(hi(),oi("span",u$,[j("div",c$,[j("span",g$,Li(l.value),1)])])):yi("v-if",!0)]))),256))]),j("div",B$,[(hi(!0),oi(_i,null,bs(e.data.outputs,(l,r)=>(hi(),oi("div",A$,[j("span",y$,Li(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1),l.value?(hi(),oi("span",f$,[j("div",null,Li(l.value),1)])):yi("v-if",!0)]))),256))])]),j("div",m$,[(hi(!0),oi(_i,null,bs(e.data.values,(l,r)=>(hi(),oi("div",v$,[j("div",F$,[j("span",E$,Li(l.name),1),j("span",b$,Li(l.value),1),s[1]||(s[1]=j("div",{style:{height:"0",clear:"both"}},null,-1))])]))),256))])]),yi(" Handle - 根据数据自动生成 "),yi(" 注意这里的MapAttr暂时用的id，而comfyui那边用的type "),(hi(!0),oi(_i,null,bs(e.data.inputs,(l,r)=>(hi(),rs(n.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"target-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("id")?l.id:"target-"+r).toLowerCase().charCodeAt(0)%20,type:"target",position:n.Position.Left},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128)),(hi(!0),oi(_i,null,bs(e.data.outputs,(l,r)=>(hi(),rs(n.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"source-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("id")?l.id:"target-"+r).toLowerCase().charCodeAt(0)%20,type:"source",position:n.Position.Right},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128)),yi(" Handle - 默认隐藏 "),os(Bi(n.Handle,{id:"l",class:"default",type:"target",position:n.Position.Left},null,8,["position"]),[[ga,!n.hasCustomHandle]]),os(Bi(n.Handle,{id:"t",class:"default",position:n.Position.Top},null,8,["position"]),[[ga,!n.hasCustomHandle]]),os(Bi(n.Handle,{id:"r",class:"default",type:"source",position:n.Position.Right},null,8,["position"]),[[ga,!n.hasCustomHandle]]),os(Bi(n.Handle,{id:"b",class:"default",position:n.Position.Bottom},null,8,["position"]),[[ga,!n.hasCustomHandle]])],8,t$)])}const _$=ns(e$,[["render",C$],["__file","CommonNode.vue"]]),D$=ti({__name:"ItemNodeSlot",props:{index:{type:Number,required:!0},item:{type:Object,required:!0}},setup(i,{expose:s}){s();const n={props:i,get Handle(){return vn},get Position(){return Fi}};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}});function x$(i,s,e,n,a,t){return hi(),oi(_i,null,[e.item.refType==="input"||e.item.refType==="i"?(hi(),rs(n.Handle,{key:0,class:"node-item-handle",id:e.item.hasOwnProperty("id")?e.item.id:"target-"+e.index,indexAttr:e.index,nameAttr:e.item.hasOwnProperty("label")?e.item.label:e.item.hasOwnProperty("name")?e.item.name:e.item.type,nameMapAttr:(e.item.hasOwnProperty("id")?e.item.id:"target-"+e.index).toLowerCase().charCodeAt(0)%20,type:"target",position:n.Position.Left},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"])):yi("v-if",!0),e.item.refType==="output"||e.item.refType==="o"?(hi(),rs(n.Handle,{key:1,class:"node-item-handle",id:e.item.hasOwnProperty("id")?e.item.id:"source-"+e.index,indexAttr:e.index,nameAttr:e.item.hasOwnProperty("label")?e.item.label:e.item.hasOwnProperty("name")?e.item.name:e.item.type,nameMapAttr:(e.item.hasOwnProperty("id")?e.item.id:"target-"+e.index).toLowerCase().charCodeAt(0)%20,type:"source",position:n.Position.Right},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"])):yi("v-if",!0),ne(i.$slots,n.props.item.valueType,{id:n.props.item.id,data:n.props.item})],64)}const w$=ns(D$,[["render",x$],["__file","ItemNodeSlot.vue"]]),T$=ti({__name:"DefaultItem",props:{data:{}},setup(i,{expose:s}){s();const e=i,n=Z(null);function a(r){t(r.target)}function t(r){r&&(r.style.height="auto",r.scrollHeight&&(r.style.height=r.scrollHeight<30?"20px":r.scrollHeight+"px"),r.style.width="auto",r.scrollWidth&&(r.style.width=r.scrollWidth+12+"px"))}Di(()=>{t(n.value),Hi(()=>{t(n.value)})});const l={props:e,TextArea3:n,handleInput:a,autoSize:t};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}}),S$={key:0,class:"node-item-name"},I$=["rows"];function R$(i,s,e,n,a,t){return hi(),oi("div",{ref:"TextArea2",class:Ii("default-item  node-item-slot "+n.props.data.refType+(n.props.data.value?" has-value":""))},[n.props.data.name?(hi(),oi("span",S$,Li(n.props.data.name),1)):yi("v-if",!0),n.props.data.value?os((hi(),oi("textarea",{key:1,class:"node-item-value","onUpdate:modelValue":s[0]||(s[0]=l=>n.props.data.value=l),rows:n.props.data.value.split(`
`).length,cols:"10",onInput:n.handleInput,ref:"TextArea3"},null,40,I$)),[[EF,n.props.data.value]]):yi("v-if",!0),s[1]||(s[1]=j("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const O$=ns(T$,[["render",R$],["__scopeId","data-v-7ae699f1"],["__file","DefaultItem.vue"]]),P$=ti({__name:"ColorItem",props:{data:{}},setup(i,{expose:s}){s();const e=i;function n(t){t=t.replace(/^#/,""),t.length===3&&(t=t.split("").map(k=>k+k).join(""));var l=parseInt(t.substr(0,2),16),r=parseInt(t.substr(2,2),16),h=parseInt(t.substr(4,2),16),p=(l+r+h)/3;return p>128?"black":"white"}const a={props:e,getHighContrastTextColor:n};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}}),L$={key:0,class:"node-item-name"};function N$(i,s,e,n,a,t){return hi(),oi("div",{class:Ii("color-item  node-item-slot "+n.props.data.refType+(n.props.data.value?" has-value":""))},[n.props.data.name?(hi(),oi("span",L$,Li(n.props.data.name),1)):yi("v-if",!0),n.props.data.value?(hi(),oi("div",{key:1,class:"node-item-value",style:ds("background:"+n.props.data.value+"; color:"+n.getHighContrastTextColor(n.props.data.value))},Li(n.props.data.value),5)):yi("v-if",!0),s[0]||(s[0]=j("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const M$=ns(P$,[["render",N$],["__scopeId","data-v-e91f1578"],["__file","ColorItem.vue"]]),$$=ti({__name:"DropdownItem",props:{data:{}},setup(i,{expose:s}){s();const e=i,n=z(()=>e.data.value.split("|"));n.value.length==0&&(e.data.value=[""]);const a=Z(n.value[0]),t={props:e,enum_data:n,enum_current:a};return Object.defineProperty(t,"__isScriptSetup",{enumerable:!1,value:!0}),t}}),V$={key:0,class:"node-item-name"},z$=["value"];function q$(i,s,e,n,a,t){return hi(),oi("div",{class:Ii("dropdown-item  node-item-slot "+n.props.data.refType+(n.props.data.value?" has-value":""))},[n.props.data.name?(hi(),oi("span",V$,Li(n.props.data.name),1)):yi("v-if",!0),n.props.data.value?(hi(),oi("div",{key:1,class:"node-item-value",style:ds("background:"+n.props.data.value)},[os(j("select",{"onUpdate:modelValue":s[0]||(s[0]=l=>n.enum_current=l)},[(hi(!0),oi(_i,null,bs(n.enum_data,l=>(hi(),oi("option",{value:l},Li(l),9,z$))),256))],512),[[_4,n.enum_current]])],4)):yi("v-if",!0),s[1]||(s[1]=j("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const H$=ns($$,[["render",q$],["__scopeId","data-v-6bbe612a"],["__file","DropdownItem.vue"]]),j$=ti({__name:"ItemNode",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(i,{expose:s}){var h,p;s();const e=i,n=z(()=>e.data.items.filter(k=>k.refType==="input")),a=z(()=>e.data.items.filter(k=>k.refType==="output")),t=z(()=>e.data.items.filter(k=>k.refType==="value")),l=Z(!1);l.value=((p=(h=e.data)==null?void 0:h.items)==null?void 0:p.length)!=0;const r={props:e,inputItems:n,outputItems:a,valueItems:t,hasCustomHandle:l,get Handle(){return vn},get Position(){return Fi},ItemNodeSlot:w$,DefaultItem:O$,MarkdownItem:Y6,ColorItem:M$,DropdownItem:H$};return Object.defineProperty(r,"__isScriptSetup",{enumerable:!1,value:!0}),r}}),U$={class:"item-node"},G$=["v-show"],W$=["aria-label"],K$={class:"node-title"},Y$={style:{display:"inline-block","margin-left":"10px"}},X$={class:"node-content"};function Z$(i,s,e,n,a,t){const l=Wi("ItemNode",!0);return hi(),oi("div",U$,[yi(" id项 "),j("div",{"v-show":e.id!="",class:"node-id"},[j("div",null,"#"+Li(e.id),1)],8,G$),j("div",{class:"common-node node-main","aria-label":e.data.label},[yi(" 标题项 "),j("div",K$,[s[0]||(s[0]=j("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),j("span",Y$,Li(e.data.hasOwnProperty("label")?e.data.label:e.data.hasOwnProperty("name")?e.data.name:e.data.id),1)]),yi(" 项集 "),j("div",X$,[(hi(!0),oi(_i,null,bs(e.data.items,(r,h)=>(hi(),oi("div",{class:Ii("line node-item "+r.refType)},[Bi(n.ItemNodeSlot,{index:h,item:r},{"item-default":$i(p=>[Bi(n.DefaultItem,{data:p.data},null,8,["data"])]),"item-markdown":$i(p=>[Bi(n.MarkdownItem,{data:p.data},null,8,["data"])]),"item-color":$i(p=>[Bi(n.ColorItem,{data:p.data},null,8,["data"])]),"item-dropdown":$i(p=>[Bi(n.DropdownItem,{data:p.data},null,8,["data"])]),"item-item":$i(p=>[Bi(l,{id:"",data:p.data},null,8,["data"])]),_:2},1032,["index","item"])],2))),256))]),yi(" Handle - 默认隐藏 "),os(j("div",null,[Bi(n.Handle,{id:"l",class:"default",type:"target",position:n.Position.Left},null,8,["position"]),Bi(n.Handle,{id:"t",class:"default",position:n.Position.Top},null,8,["position"]),Bi(n.Handle,{id:"r",class:"default",type:"source",position:n.Position.Right},null,8,["position"]),Bi(n.Handle,{id:"b",class:"default",position:n.Position.Bottom},null,8,["position"])],512),[[ga,!n.hasCustomHandle]])],8,W$)])}const J$=ns(j$,[["render",Z$],["__file","ItemNode.vue"]]),Q$=ti({__name:"InteractionControls",setup(i,{expose:s}){s();const{nodesDraggable:e,nodesConnectable:n,elementsSelectable:a,zoomOnScroll:t,zoomOnDoubleClick:l,zoomOnPinch:r,panOnScroll:h,panOnScrollMode:p,panOnDrag:k,onConnect:d,onNodeDragStop:u,onPaneClick:o,onPaneScroll:c,onPaneContextMenu:A,onNodeDragStart:g,onMoveEnd:f,addEdges:m,zoomIn:y,zoomOut:v,setMinZoom:C,setMaxZoom:S}=Ki();let L=Z(!0);const w=()=>{S(3),y()};w();const _=()=>{C(.1),v()};_();const R=Z(!1),N=Z(!1);d(V=>m(V)),g(V=>$n.isDebug),u(V=>$n.isDebug),o(V=>$n.isDebug),c(V=>$n.isDebug),A(V=>$n.isDebug),f(V=>$n.isDebug);const T={nodesDraggable:e,nodesConnectable:n,elementsSelectable:a,zoomOnScroll:t,zoomOnDoubleClick:l,zoomOnPinch:r,panOnScroll:h,panOnScrollMode:p,panOnDrag:k,onConnect:d,onNodeDragStop:u,onPaneClick:o,onPaneScroll:c,onPaneContextMenu:A,onNodeDragStart:g,onMoveEnd:f,addEdges:m,zoomIn:y,zoomOut:v,setMinZoom:C,setMaxZoom:S,get isFold(){return L},set isFold(V){L=V},onZoomIn:w,onZoomOut:_,captureZoomClick:R,captureZoomScroll:N,get Panel(){return $P}};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}}),iV={class:"fold-title"},sV={class:"fold-content"},eV={class:"label",for:"draggable"},nV={class:"label",for:"connectable"},aV={class:"label",for:"selectable"},tV={class:"label",for:"zoomonscroll"},lV={class:"label",for:"zoomonpinch"},rV={class:"label",for:"panonscroll"},hV={class:"label"},pV={class:"label",for:"zoomondbl"},kV={class:"label",for:"panemoveable"},dV={class:"label",for:"capturezoompaneclick"},oV={class:"label",for:"capturezoompanescroll"};function uV(i,s,e,n,a,t){return hi(),rs(n.Panel,{position:"top-right"},{default:$i(()=>[j("div",iV,[j("button",{id:"zoomin",onClick:s[0]||(s[0]=l=>n.isFold=!n.isFold)},"Fold")]),os(j("div",sV,[j("div",null,[j("label",eV,[s[12]||(s[12]=ks(" Nodes draggable ")),os(j("input",{id:"draggable","onUpdate:modelValue":s[1]||(s[1]=l=>n.nodesDraggable=l),type:"checkbox",class:"vue-flow__draggable"},null,512),[[Re,n.nodesDraggable]])])]),j("div",null,[j("label",nV,[s[13]||(s[13]=ks(" Nodes connectable ")),os(j("input",{id:"connectable","onUpdate:modelValue":s[2]||(s[2]=l=>n.nodesConnectable=l),type:"checkbox",class:"vue-flow__connectable"},null,512),[[Re,n.nodesConnectable]])])]),j("div",null,[j("label",aV,[s[14]||(s[14]=ks(" Elements selectable ")),os(j("input",{id:"selectable","onUpdate:modelValue":s[3]||(s[3]=l=>n.elementsSelectable=l),type:"checkbox",class:"vue-flow__selectable"},null,512),[[Re,n.elementsSelectable]])])]),j("div",null,[j("label",tV,[s[15]||(s[15]=ks(" Zoom on scroll ")),os(j("input",{id:"zoomonscroll","onUpdate:modelValue":s[4]||(s[4]=l=>n.zoomOnScroll=l),type:"checkbox",class:"vue-flow__zoomonscroll"},null,512),[[Re,n.zoomOnScroll]])])]),j("div",null,[j("label",lV,[s[16]||(s[16]=ks(" Zoom on pinch ")),os(j("input",{id:"zoomonpinch","onUpdate:modelValue":s[5]||(s[5]=l=>n.zoomOnPinch=l),type:"checkbox",class:"vue-flow__zoomonpinch"},null,512),[[Re,n.zoomOnPinch]])])]),j("div",null,[j("label",rV,[s[17]||(s[17]=ks(" Pan on scroll ")),os(j("input",{id:"panonscroll","onUpdate:modelValue":s[6]||(s[6]=l=>n.panOnScroll=l),type:"checkbox",class:"vue-flow__panonscroll"},null,512),[[Re,n.panOnScroll]])])]),j("div",null,[j("label",hV,[s[19]||(s[19]=ks(" Pan on scroll mode ")),os(j("select",{id:"panonscrollmode","onUpdate:modelValue":s[7]||(s[7]=l=>n.panOnScrollMode=l),class:"vue-flow__panonscrollmode"},s[18]||(s[18]=[j("option",{value:"free"},"Free",-1),j("option",{value:"horizontal"},"Horizontal",-1),j("option",{value:"vertical"},"Vertical",-1)]),512),[[_4,n.panOnScrollMode]])])]),j("div",null,[j("label",pV,[s[20]||(s[20]=ks(" Zoom on double click ")),os(j("input",{id:"zoomondbl","onUpdate:modelValue":s[8]||(s[8]=l=>n.zoomOnDoubleClick=l),type:"checkbox",class:"vue-flow__zoomondbl"},null,512),[[Re,n.zoomOnDoubleClick]])])]),j("div",null,[j("label",kV,[s[21]||(s[21]=ks(" Pane movable ")),os(j("input",{id:"panemoveable","onUpdate:modelValue":s[9]||(s[9]=l=>n.panOnDrag=l),type:"checkbox",class:"vue-flow__panemoveable"},null,512),[[Re,n.panOnDrag]])])]),j("div",null,[j("label",dV,[s[22]||(s[22]=ks(" Capture on pane click ")),os(j("input",{id:"capturezoompaneclick","onUpdate:modelValue":s[10]||(s[10]=l=>n.captureZoomClick=l),type:"checkbox",class:"vue-flow__capturezoompaneclick"},null,512),[[Re,n.captureZoomClick]])])]),j("div",null,[j("label",oV,[s[23]||(s[23]=ks(" Capture on pane scroll ")),os(j("input",{id:"capturezoompanescroll","onUpdate:modelValue":s[11]||(s[11]=l=>n.captureZoomScroll=l),type:"checkbox",class:"vue-flow__capturezoompanescroll"},null,512),[[Re,n.captureZoomScroll]])])]),j("div",null,[j("label",{class:"label"},[s[24]||(s[24]=ks(" Zoom in ")),j("button",{id:"zoomin",onclick:n.onZoomIn,class:"vue-flow__capturezoompanescroll"},"+")])]),j("div",null,[j("label",{class:"label"},[s[25]||(s[25]=ks(" Zoom out ")),j("button",{id:"zoomout",onclick:n.onZoomOut,class:"vue-flow__capturezoompanescroll"},"-")])])],512),[[ga,!n.isFold]])]),_:1})}const cV=ns(Q$,[["render",uV],["__scopeId","data-v-c524bd80"],["__file","InteractionControls.vue"]]);var Bn=(i=>(i.Lines="lines",i.Dots="dots",i))(Bn||{});const X6=function({dimensions:i,size:s,color:e}){return B("path",{stroke:e,"stroke-width":s,d:`M${i[0]/2} 0 V${i[1]} M0 ${i[1]/2} H${i[0]}`})},Z6=function({radius:i,color:s}){return B("circle",{cx:i,cy:i,r:i,fill:s})};Bn.Lines+"",Bn.Dots+"";const gV={[Bn.Dots]:"#81818a",[Bn.Lines]:"#eee"},BV=["id","x","y","width","height","patternTransform"],AV={key:2,height:"100",width:"100"},yV=["fill"],fV=["x","y","fill"],mV={name:"Background",compatConfig:{MODE:3}},vV=ti({...mV,props:{id:{},variant:{default:()=>Bn.Dots},gap:{default:20},size:{default:1},lineWidth:{default:1},patternColor:{},color:{},bgColor:{},height:{default:100},width:{default:100},x:{default:0},y:{default:0},offset:{default:0}},setup(i){const{id:s,viewport:e}=Ki(),n=z(()=>{const l=e.value.zoom,[r,h]=Array.isArray(i.gap)?i.gap:[i.gap,i.gap],p=[r*l||1,h*l||1],k=i.size*l,[d,u]=Array.isArray(i.offset)?i.offset:[i.offset,i.offset],o=[d*l||1+p[0]/2,u*l||1+p[1]/2];return{scaledGap:p,offset:o,size:k}}),a=Mi(()=>`pattern-${s}${i.id?`-${i.id}`:""}`),t=Mi(()=>i.color||i.patternColor||gV[i.variant||Bn.Dots]);return(l,r)=>(hi(),oi("svg",{class:"vue-flow__background vue-flow__container",style:ds({height:`${l.height>100?100:l.height}%`,width:`${l.width>100?100:l.width}%`})},[ne(l.$slots,"pattern-container",{id:a.value},()=>[j("pattern",{id:a.value,x:mi(e).x%n.value.scaledGap[0],y:mi(e).y%n.value.scaledGap[1],width:n.value.scaledGap[0],height:n.value.scaledGap[1],patternTransform:`translate(-${n.value.offset[0]},-${n.value.offset[1]})`,patternUnits:"userSpaceOnUse"},[ne(l.$slots,"pattern",{},()=>[l.variant===mi(Bn).Lines?(hi(),rs(mi(X6),{key:0,size:l.lineWidth,color:t.value,dimensions:n.value.scaledGap},null,8,["size","color","dimensions"])):l.variant===mi(Bn).Dots?(hi(),rs(mi(Z6),{key:1,color:t.value,radius:n.value.size/2},null,8,["color","radius"])):yi("",!0),l.bgColor?(hi(),oi("svg",AV,[j("rect",{width:"100%",height:"100%",fill:l.bgColor},null,8,yV)])):yi("",!0)])],8,BV)]),j("rect",{x:l.x,y:l.y,width:"100%",height:"100%",fill:`url(#${a.value})`},null,8,fV),ne(l.$slots,"default",{id:a.value})],4))}});function FV(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var qk,I0;function Dc(){if(I0)return qk;I0=1;var i="\0",s="\0",e="";class n{constructor(k){hs(this,"_isDirected",!0);hs(this,"_isMultigraph",!1);hs(this,"_isCompound",!1);hs(this,"_label");hs(this,"_defaultNodeLabelFn",()=>{});hs(this,"_defaultEdgeLabelFn",()=>{});hs(this,"_nodes",{});hs(this,"_in",{});hs(this,"_preds",{});hs(this,"_out",{});hs(this,"_sucs",{});hs(this,"_edgeObjs",{});hs(this,"_edgeLabels",{});hs(this,"_nodeCount",0);hs(this,"_edgeCount",0);hs(this,"_parent");hs(this,"_children");k&&(this._isDirected=Object.hasOwn(k,"directed")?k.directed:!0,this._isMultigraph=Object.hasOwn(k,"multigraph")?k.multigraph:!1,this._isCompound=Object.hasOwn(k,"compound")?k.compound:!1),this._isCompound&&(this._parent={},this._children={},this._children[s]={})}isDirected(){return this._isDirected}isMultigraph(){return this._isMultigraph}isCompound(){return this._isCompound}setGraph(k){return this._label=k,this}graph(){return this._label}setDefaultNodeLabel(k){return this._defaultNodeLabelFn=k,typeof k!="function"&&(this._defaultNodeLabelFn=()=>k),this}nodeCount(){return this._nodeCount}nodes(){return Object.keys(this._nodes)}sources(){var k=this;return this.nodes().filter(d=>Object.keys(k._in[d]).length===0)}sinks(){var k=this;return this.nodes().filter(d=>Object.keys(k._out[d]).length===0)}setNodes(k,d){var u=arguments,o=this;return k.forEach(function(c){u.length>1?o.setNode(c,d):o.setNode(c)}),this}setNode(k,d){return Object.hasOwn(this._nodes,k)?(arguments.length>1&&(this._nodes[k]=d),this):(this._nodes[k]=arguments.length>1?d:this._defaultNodeLabelFn(k),this._isCompound&&(this._parent[k]=s,this._children[k]={},this._children[s][k]=!0),this._in[k]={},this._preds[k]={},this._out[k]={},this._sucs[k]={},++this._nodeCount,this)}node(k){return this._nodes[k]}hasNode(k){return Object.hasOwn(this._nodes,k)}removeNode(k){var d=this;if(Object.hasOwn(this._nodes,k)){var u=o=>d.removeEdge(d._edgeObjs[o]);delete this._nodes[k],this._isCompound&&(this._removeFromParentsChildList(k),delete this._parent[k],this.children(k).forEach(function(o){d.setParent(o)}),delete this._children[k]),Object.keys(this._in[k]).forEach(u),delete this._in[k],delete this._preds[k],Object.keys(this._out[k]).forEach(u),delete this._out[k],delete this._sucs[k],--this._nodeCount}return this}setParent(k,d){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(d===void 0)d=s;else{d+="";for(var u=d;u!==void 0;u=this.parent(u))if(u===k)throw new Error("Setting "+d+" as parent of "+k+" would create a cycle");this.setNode(d)}return this.setNode(k),this._removeFromParentsChildList(k),this._parent[k]=d,this._children[d][k]=!0,this}_removeFromParentsChildList(k){delete this._children[this._parent[k]][k]}parent(k){if(this._isCompound){var d=this._parent[k];if(d!==s)return d}}children(k=s){if(this._isCompound){var d=this._children[k];if(d)return Object.keys(d)}else{if(k===s)return this.nodes();if(this.hasNode(k))return[]}}predecessors(k){var d=this._preds[k];if(d)return Object.keys(d)}successors(k){var d=this._sucs[k];if(d)return Object.keys(d)}neighbors(k){var d=this.predecessors(k);if(d){const o=new Set(d);for(var u of this.successors(k))o.add(u);return Array.from(o.values())}}isLeaf(k){var d;return this.isDirected()?d=this.successors(k):d=this.neighbors(k),d.length===0}filterNodes(k){var d=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});d.setGraph(this.graph());var u=this;Object.entries(this._nodes).forEach(function([A,g]){k(A)&&d.setNode(A,g)}),Object.values(this._edgeObjs).forEach(function(A){d.hasNode(A.v)&&d.hasNode(A.w)&&d.setEdge(A,u.edge(A))});var o={};function c(A){var g=u.parent(A);return g===void 0||d.hasNode(g)?(o[A]=g,g):g in o?o[g]:c(g)}return this._isCompound&&d.nodes().forEach(A=>d.setParent(A,c(A))),d}setDefaultEdgeLabel(k){return this._defaultEdgeLabelFn=k,typeof k!="function"&&(this._defaultEdgeLabelFn=()=>k),this}edgeCount(){return this._edgeCount}edges(){return Object.values(this._edgeObjs)}setPath(k,d){var u=this,o=arguments;return k.reduce(function(c,A){return o.length>1?u.setEdge(c,A,d):u.setEdge(c,A),A}),this}setEdge(){var k,d,u,o,c=!1,A=arguments[0];typeof A=="object"&&A!==null&&"v"in A?(k=A.v,d=A.w,u=A.name,arguments.length===2&&(o=arguments[1],c=!0)):(k=A,d=arguments[1],u=arguments[3],arguments.length>2&&(o=arguments[2],c=!0)),k=""+k,d=""+d,u!==void 0&&(u=""+u);var g=l(this._isDirected,k,d,u);if(Object.hasOwn(this._edgeLabels,g))return c&&(this._edgeLabels[g]=o),this;if(u!==void 0&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(k),this.setNode(d),this._edgeLabels[g]=c?o:this._defaultEdgeLabelFn(k,d,u);var f=r(this._isDirected,k,d,u);return k=f.v,d=f.w,Object.freeze(f),this._edgeObjs[g]=f,a(this._preds[d],k),a(this._sucs[k],d),this._in[d][g]=f,this._out[k][g]=f,this._edgeCount++,this}edge(k,d,u){var o=arguments.length===1?h(this._isDirected,arguments[0]):l(this._isDirected,k,d,u);return this._edgeLabels[o]}edgeAsObj(){const k=this.edge(...arguments);return typeof k!="object"?{label:k}:k}hasEdge(k,d,u){var o=arguments.length===1?h(this._isDirected,arguments[0]):l(this._isDirected,k,d,u);return Object.hasOwn(this._edgeLabels,o)}removeEdge(k,d,u){var o=arguments.length===1?h(this._isDirected,arguments[0]):l(this._isDirected,k,d,u),c=this._edgeObjs[o];return c&&(k=c.v,d=c.w,delete this._edgeLabels[o],delete this._edgeObjs[o],t(this._preds[d],k),t(this._sucs[k],d),delete this._in[d][o],delete this._out[k][o],this._edgeCount--),this}inEdges(k,d){var u=this._in[k];if(u){var o=Object.values(u);return d?o.filter(c=>c.v===d):o}}outEdges(k,d){var u=this._out[k];if(u){var o=Object.values(u);return d?o.filter(c=>c.w===d):o}}nodeEdges(k,d){var u=this.inEdges(k,d);if(u)return u.concat(this.outEdges(k,d))}}function a(p,k){p[k]?p[k]++:p[k]=1}function t(p,k){--p[k]||delete p[k]}function l(p,k,d,u){var o=""+k,c=""+d;if(!p&&o>c){var A=o;o=c,c=A}return o+e+c+e+(u===void 0?i:u)}function r(p,k,d,u){var o=""+k,c=""+d;if(!p&&o>c){var A=o;o=c,c=A}var g={v:o,w:c};return u&&(g.name=u),g}function h(p,k){return l(p,k.v,k.w,k.name)}return qk=n,qk}var Hk,R0;function EV(){return R0||(R0=1,Hk="2.2.4"),Hk}var jk,O0;function bV(){return O0||(O0=1,jk={Graph:Dc(),version:EV()}),jk}var Uk,P0;function CV(){if(P0)return Uk;P0=1;var i=Dc();Uk={write:s,read:a};function s(t){var l={options:{directed:t.isDirected(),multigraph:t.isMultigraph(),compound:t.isCompound()},nodes:e(t),edges:n(t)};return t.graph()!==void 0&&(l.value=structuredClone(t.graph())),l}function e(t){return t.nodes().map(function(l){var r=t.node(l),h=t.parent(l),p={v:l};return r!==void 0&&(p.value=r),h!==void 0&&(p.parent=h),p})}function n(t){return t.edges().map(function(l){var r=t.edge(l),h={v:l.v,w:l.w};return l.name!==void 0&&(h.name=l.name),r!==void 0&&(h.value=r),h})}function a(t){var l=new i(t.options).setGraph(t.value);return t.nodes.forEach(function(r){l.setNode(r.v,r.value),r.parent&&l.setParent(r.v,r.parent)}),t.edges.forEach(function(r){l.setEdge({v:r.v,w:r.w,name:r.name},r.value)}),l}return Uk}var Gk,L0;function _V(){if(L0)return Gk;L0=1,Gk=i;function i(s){var e={},n=[],a;function t(l){Object.hasOwn(e,l)||(e[l]=!0,a.push(l),s.successors(l).forEach(t),s.predecessors(l).forEach(t))}return s.nodes().forEach(function(l){a=[],t(l),a.length&&n.push(a)}),n}return Gk}var Wk,N0;function J6(){if(N0)return Wk;N0=1;class i{constructor(){hs(this,"_arr",[]);hs(this,"_keyIndices",{})}size(){return this._arr.length}keys(){return this._arr.map(function(e){return e.key})}has(e){return Object.hasOwn(this._keyIndices,e)}priority(e){var n=this._keyIndices[e];if(n!==void 0)return this._arr[n].priority}min(){if(this.size()===0)throw new Error("Queue underflow");return this._arr[0].key}add(e,n){var a=this._keyIndices;if(e=String(e),!Object.hasOwn(a,e)){var t=this._arr,l=t.length;return a[e]=l,t.push({key:e,priority:n}),this._decrease(l),!0}return!1}removeMin(){this._swap(0,this._arr.length-1);var e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key}decrease(e,n){var a=this._keyIndices[e];if(n>this._arr[a].priority)throw new Error("New priority is greater than current priority. Key: "+e+" Old: "+this._arr[a].priority+" New: "+n);this._arr[a].priority=n,this._decrease(a)}_heapify(e){var n=this._arr,a=2*e,t=a+1,l=e;a<n.length&&(l=n[a].priority<n[l].priority?a:l,t<n.length&&(l=n[t].priority<n[l].priority?t:l),l!==e&&(this._swap(e,l),this._heapify(l)))}_decrease(e){for(var n=this._arr,a=n[e].priority,t;e!==0&&(t=e>>1,!(n[t].priority<a));)this._swap(e,t),e=t}_swap(e,n){var a=this._arr,t=this._keyIndices,l=a[e],r=a[n];a[e]=r,a[n]=l,t[r.key]=e,t[l.key]=n}}return Wk=i,Wk}var Kk,M0;function Q6(){if(M0)return Kk;M0=1;var i=J6();Kk=e;var s=()=>1;function e(a,t,l,r){return n(a,String(t),l||s,r||function(h){return a.outEdges(h)})}function n(a,t,l,r){var h={},p=new i,k,d,u=function(o){var c=o.v!==k?o.v:o.w,A=h[c],g=l(o),f=d.distance+g;if(g<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+o+" Weight: "+g);f<A.distance&&(A.distance=f,A.predecessor=k,p.decrease(c,f))};for(a.nodes().forEach(function(o){var c=o===t?0:Number.POSITIVE_INFINITY;h[o]={distance:c},p.add(o,c)});p.size()>0&&(k=p.removeMin(),d=h[k],d.distance!==Number.POSITIVE_INFINITY);)r(k).forEach(u);return h}return Kk}var Yk,$0;function DV(){if($0)return Yk;$0=1;var i=Q6();Yk=s;function s(e,n,a){return e.nodes().reduce(function(t,l){return t[l]=i(e,l,n,a),t},{})}return Yk}var Xk,V0;function i1(){if(V0)return Xk;V0=1,Xk=i;function i(s){var e=0,n=[],a={},t=[];function l(r){var h=a[r]={onStack:!0,lowlink:e,index:e++};if(n.push(r),s.successors(r).forEach(function(d){Object.hasOwn(a,d)?a[d].onStack&&(h.lowlink=Math.min(h.lowlink,a[d].index)):(l(d),h.lowlink=Math.min(h.lowlink,a[d].lowlink))}),h.lowlink===h.index){var p=[],k;do k=n.pop(),a[k].onStack=!1,p.push(k);while(r!==k);t.push(p)}}return s.nodes().forEach(function(r){Object.hasOwn(a,r)||l(r)}),t}return Xk}var Zk,z0;function xV(){if(z0)return Zk;z0=1;var i=i1();Zk=s;function s(e){return i(e).filter(function(n){return n.length>1||n.length===1&&e.hasEdge(n[0],n[0])})}return Zk}var Jk,q0;function wV(){if(q0)return Jk;q0=1,Jk=s;var i=()=>1;function s(n,a,t){return e(n,a||i,t||function(l){return n.outEdges(l)})}function e(n,a,t){var l={},r=n.nodes();return r.forEach(function(h){l[h]={},l[h][h]={distance:0},r.forEach(function(p){h!==p&&(l[h][p]={distance:Number.POSITIVE_INFINITY})}),t(h).forEach(function(p){var k=p.v===h?p.w:p.v,d=a(p);l[h][k]={distance:d,predecessor:h}})}),r.forEach(function(h){var p=l[h];r.forEach(function(k){var d=l[k];r.forEach(function(u){var o=d[h],c=p[u],A=d[u],g=o.distance+c.distance;g<A.distance&&(A.distance=g,A.predecessor=c.predecessor)})})}),l}return Jk}var Qk,H0;function s1(){if(H0)return Qk;H0=1;function i(e){var n={},a={},t=[];function l(r){if(Object.hasOwn(a,r))throw new s;Object.hasOwn(n,r)||(a[r]=!0,n[r]=!0,e.predecessors(r).forEach(l),delete a[r],t.push(r))}if(e.sinks().forEach(l),Object.keys(n).length!==e.nodeCount())throw new s;return t}class s extends Error{constructor(){super(...arguments)}}return Qk=i,i.CycleException=s,Qk}var id,j0;function TV(){if(j0)return id;j0=1;var i=s1();id=s;function s(e){try{i(e)}catch(n){if(n instanceof i.CycleException)return!1;throw n}return!0}return id}var sd,U0;function e1(){if(U0)return sd;U0=1,sd=i;function i(a,t,l){Array.isArray(t)||(t=[t]);var r=a.isDirected()?d=>a.successors(d):d=>a.neighbors(d),h=l==="post"?s:e,p=[],k={};return t.forEach(d=>{if(!a.hasNode(d))throw new Error("Graph does not have node: "+d);h(d,r,k,p)}),p}function s(a,t,l,r){for(var h=[[a,!1]];h.length>0;){var p=h.pop();p[1]?r.push(p[0]):Object.hasOwn(l,p[0])||(l[p[0]]=!0,h.push([p[0],!0]),n(t(p[0]),k=>h.push([k,!1])))}}function e(a,t,l,r){for(var h=[a];h.length>0;){var p=h.pop();Object.hasOwn(l,p)||(l[p]=!0,r.push(p),n(t(p),k=>h.push(k)))}}function n(a,t){for(var l=a.length;l--;)t(a[l],l,a);return a}return sd}var ed,G0;function SV(){if(G0)return ed;G0=1;var i=e1();ed=s;function s(e,n){return i(e,n,"post")}return ed}var nd,W0;function IV(){if(W0)return nd;W0=1;var i=e1();nd=s;function s(e,n){return i(e,n,"pre")}return nd}var ad,K0;function RV(){if(K0)return ad;K0=1;var i=Dc(),s=J6();ad=e;function e(n,a){var t=new i,l={},r=new s,h;function p(d){var u=d.v===h?d.w:d.v,o=r.priority(u);if(o!==void 0){var c=a(d);c<o&&(l[u]=h,r.decrease(u,c))}}if(n.nodeCount()===0)return t;n.nodes().forEach(function(d){r.add(d,Number.POSITIVE_INFINITY),t.setNode(d)}),r.decrease(n.nodes()[0],0);for(var k=!1;r.size()>0;){if(h=r.removeMin(),Object.hasOwn(l,h))t.setEdge(h,l[h]);else{if(k)throw new Error("Input graph is not connected: "+n);k=!0}n.nodeEdges(h).forEach(p)}return t}return ad}var td,Y0;function OV(){return Y0||(Y0=1,td={components:_V(),dijkstra:Q6(),dijkstraAll:DV(),findCycles:xV(),floydWarshall:wV(),isAcyclic:TV(),postorder:SV(),preorder:IV(),prim:RV(),tarjan:i1(),topsort:s1()}),td}var ld,X0;function _e(){if(X0)return ld;X0=1;var i=bV();return ld={Graph:i.Graph,json:CV(),alg:OV(),version:i.version},ld}var rd,Z0;function PV(){if(Z0)return rd;Z0=1;class i{constructor(){let a={};a._next=a._prev=a,this._sentinel=a}dequeue(){let a=this._sentinel,t=a._prev;if(t!==a)return s(t),t}enqueue(a){let t=this._sentinel;a._prev&&a._next&&s(a),a._next=t._next,t._next._prev=a,t._next=a,a._prev=t}toString(){let a=[],t=this._sentinel,l=t._prev;for(;l!==t;)a.push(JSON.stringify(l,e)),l=l._prev;return"["+a.join(", ")+"]"}}function s(n){n._prev._next=n._next,n._next._prev=n._prev,delete n._next,delete n._prev}function e(n,a){if(n!=="_next"&&n!=="_prev")return a}return rd=i,rd}var hd,J0;function LV(){if(J0)return hd;J0=1;let i=_e().Graph,s=PV();hd=n;let e=()=>1;function n(p,k){if(p.nodeCount()<=1)return[];let d=l(p,k||e);return a(d.graph,d.buckets,d.zeroIdx).flatMap(o=>p.outEdges(o.v,o.w))}function a(p,k,d){let u=[],o=k[k.length-1],c=k[0],A;for(;p.nodeCount();){for(;A=c.dequeue();)t(p,k,d,A);for(;A=o.dequeue();)t(p,k,d,A);if(p.nodeCount()){for(let g=k.length-2;g>0;--g)if(A=k[g].dequeue(),A){u=u.concat(t(p,k,d,A,!0));break}}}return u}function t(p,k,d,u,o){let c=o?[]:void 0;return p.inEdges(u.v).forEach(A=>{let g=p.edge(A),f=p.node(A.v);o&&c.push({v:A.v,w:A.w}),f.out-=g,r(k,d,f)}),p.outEdges(u.v).forEach(A=>{let g=p.edge(A),f=A.w,m=p.node(f);m.in-=g,r(k,d,m)}),p.removeNode(u.v),c}function l(p,k){let d=new i,u=0,o=0;p.nodes().forEach(g=>{d.setNode(g,{v:g,in:0,out:0})}),p.edges().forEach(g=>{let f=d.edge(g.v,g.w)||0,m=k(g),y=f+m;d.setEdge(g.v,g.w,y),o=Math.max(o,d.node(g.v).out+=m),u=Math.max(u,d.node(g.w).in+=m)});let c=h(o+u+3).map(()=>new s),A=u+1;return d.nodes().forEach(g=>{r(c,A,d.node(g))}),{graph:d,buckets:c,zeroIdx:A}}function r(p,k,d){d.out?d.in?p[d.out-d.in+k].enqueue(d):p[p.length-1].enqueue(d):p[0].enqueue(d)}function h(p){const k=[];for(let d=0;d<p;d++)k.push(d);return k}return hd}var pd,Q0;function gs(){if(Q0)return pd;Q0=1;let i=_e().Graph;pd={addBorderNode:k,addDummyNode:s,applyWithChunking:o,asNonCompoundGraph:n,buildLayerMatrix:r,intersectRect:l,mapValues:S,maxRank:c,normalizeRanks:h,notime:f,partition:A,pick:C,predecessorWeights:t,range:v,removeEmptyRanks:p,simplify:e,successorWeights:a,time:g,uniqueId:y,zipObject:L};function s(w,_,R,N){let T;do T=y(N);while(w.hasNode(T));return R.dummy=_,w.setNode(T,R),T}function e(w){let _=new i().setGraph(w.graph());return w.nodes().forEach(R=>_.setNode(R,w.node(R))),w.edges().forEach(R=>{let N=_.edge(R.v,R.w)||{weight:0,minlen:1},T=w.edge(R);_.setEdge(R.v,R.w,{weight:N.weight+T.weight,minlen:Math.max(N.minlen,T.minlen)})}),_}function n(w){let _=new i({multigraph:w.isMultigraph()}).setGraph(w.graph());return w.nodes().forEach(R=>{w.children(R).length||_.setNode(R,w.node(R))}),w.edges().forEach(R=>{_.setEdge(R,w.edge(R))}),_}function a(w){let _=w.nodes().map(R=>{let N={};return w.outEdges(R).forEach(T=>{N[T.w]=(N[T.w]||0)+w.edge(T).weight}),N});return L(w.nodes(),_)}function t(w){let _=w.nodes().map(R=>{let N={};return w.inEdges(R).forEach(T=>{N[T.v]=(N[T.v]||0)+w.edge(T).weight}),N});return L(w.nodes(),_)}function l(w,_){let R=w.x,N=w.y,T=_.x-R,V=_.y-N,E=w.width/2,$=w.height/2;if(!T&&!V)throw new Error("Not possible to find intersection inside of the rectangle");let I,M;return Math.abs(V)*E>Math.abs(T)*$?(V<0&&($=-$),I=$*T/V,M=$):(T<0&&(E=-E),I=E,M=E*V/T),{x:R+I,y:N+M}}function r(w){let _=v(c(w)+1).map(()=>[]);return w.nodes().forEach(R=>{let N=w.node(R),T=N.rank;T!==void 0&&(_[T][N.order]=R)}),_}function h(w){let _=w.nodes().map(N=>{let T=w.node(N).rank;return T===void 0?Number.MAX_VALUE:T}),R=o(Math.min,_);w.nodes().forEach(N=>{let T=w.node(N);Object.hasOwn(T,"rank")&&(T.rank-=R)})}function p(w){let _=w.nodes().map(E=>w.node(E).rank),R=o(Math.min,_),N=[];w.nodes().forEach(E=>{let $=w.node(E).rank-R;N[$]||(N[$]=[]),N[$].push(E)});let T=0,V=w.graph().nodeRankFactor;Array.from(N).forEach((E,$)=>{E===void 0&&$%V!==0?--T:E!==void 0&&T&&E.forEach(I=>w.node(I).rank+=T)})}function k(w,_,R,N){let T={width:0,height:0};return arguments.length>=4&&(T.rank=R,T.order=N),s(w,"border",T,_)}function d(w,_=u){const R=[];for(let N=0;N<w.length;N+=_){const T=w.slice(N,N+_);R.push(T)}return R}const u=65535;function o(w,_){if(_.length>u){const R=d(_);return w.apply(null,R.map(N=>w.apply(null,N)))}else return w.apply(null,_)}function c(w){const R=w.nodes().map(N=>{let T=w.node(N).rank;return T===void 0?Number.MIN_VALUE:T});return o(Math.max,R)}function A(w,_){let R={lhs:[],rhs:[]};return w.forEach(N=>{_(N)?R.lhs.push(N):R.rhs.push(N)}),R}function g(w,_){let R=Date.now();try{return _()}finally{console.log(w+" time: "+(Date.now()-R)+"ms")}}function f(w,_){return _()}let m=0;function y(w){var _=++m;return toString(w)+_}function v(w,_,R=1){_==null&&(_=w,w=0);let N=V=>V<_;R<0&&(N=V=>_<V);const T=[];for(let V=w;N(V);V+=R)T.push(V);return T}function C(w,_){const R={};for(const N of _)w[N]!==void 0&&(R[N]=w[N]);return R}function S(w,_){let R=_;return typeof _=="string"&&(R=N=>N[_]),Object.entries(w).reduce((N,[T,V])=>(N[T]=R(V,T),N),{})}function L(w,_){return w.reduce((R,N,T)=>(R[N]=_[T],R),{})}return pd}var kd,iA;function NV(){if(iA)return kd;iA=1;let i=LV(),s=gs().uniqueId;kd={run:e,undo:a};function e(t){(t.graph().acyclicer==="greedy"?i(t,r(t)):n(t)).forEach(h=>{let p=t.edge(h);t.removeEdge(h),p.forwardName=h.name,p.reversed=!0,t.setEdge(h.w,h.v,p,s("rev"))});function r(h){return p=>h.edge(p).weight}}function n(t){let l=[],r={},h={};function p(k){Object.hasOwn(h,k)||(h[k]=!0,r[k]=!0,t.outEdges(k).forEach(d=>{Object.hasOwn(r,d.w)?l.push(d):p(d.w)}),delete r[k])}return t.nodes().forEach(p),l}function a(t){t.edges().forEach(l=>{let r=t.edge(l);if(r.reversed){t.removeEdge(l);let h=r.forwardName;delete r.reversed,delete r.forwardName,t.setEdge(l.w,l.v,r,h)}})}return kd}var dd,sA;function MV(){if(sA)return dd;sA=1;let i=gs();dd={run:s,undo:n};function s(a){a.graph().dummyChains=[],a.edges().forEach(t=>e(a,t))}function e(a,t){let l=t.v,r=a.node(l).rank,h=t.w,p=a.node(h).rank,k=t.name,d=a.edge(t),u=d.labelRank;if(p===r+1)return;a.removeEdge(t);let o,c,A;for(A=0,++r;r<p;++A,++r)d.points=[],c={width:0,height:0,edgeLabel:d,edgeObj:t,rank:r},o=i.addDummyNode(a,"edge",c,"_d"),r===u&&(c.width=d.width,c.height=d.height,c.dummy="edge-label",c.labelpos=d.labelpos),a.setEdge(l,o,{weight:d.weight},k),A===0&&a.graph().dummyChains.push(o),l=o;a.setEdge(l,h,{weight:d.weight},k)}function n(a){a.graph().dummyChains.forEach(t=>{let l=a.node(t),r=l.edgeLabel,h;for(a.setEdge(l.edgeObj,r);l.dummy;)h=a.successors(t)[0],a.removeNode(t),r.points.push({x:l.x,y:l.y}),l.dummy==="edge-label"&&(r.x=l.x,r.y=l.y,r.width=l.width,r.height=l.height),t=h,l=a.node(t)})}return dd}var od,eA;function qh(){if(eA)return od;eA=1;const{applyWithChunking:i}=gs();od={longestPath:s,slack:e};function s(n){var a={};function t(l){var r=n.node(l);if(Object.hasOwn(a,l))return r.rank;a[l]=!0;let h=n.outEdges(l).map(k=>k==null?Number.POSITIVE_INFINITY:t(k.w)-n.edge(k).minlen);var p=i(Math.min,h);return p===Number.POSITIVE_INFINITY&&(p=0),r.rank=p}n.sources().forEach(t)}function e(n,a){return n.node(a.w).rank-n.node(a.v).rank-n.edge(a).minlen}return od}var ud,nA;function n1(){if(nA)return ud;nA=1;var i=_e().Graph,s=qh().slack;ud=e;function e(l){var r=new i({directed:!1}),h=l.nodes()[0],p=l.nodeCount();r.setNode(h,{});for(var k,d;n(r,l)<p;)k=a(r,l),d=r.hasNode(k.v)?s(l,k):-s(l,k),t(r,l,d);return r}function n(l,r){function h(p){r.nodeEdges(p).forEach(k=>{var d=k.v,u=p===d?k.w:d;!l.hasNode(u)&&!s(r,k)&&(l.setNode(u,{}),l.setEdge(p,u,{}),h(u))})}return l.nodes().forEach(h),l.nodeCount()}function a(l,r){return r.edges().reduce((p,k)=>{let d=Number.POSITIVE_INFINITY;return l.hasNode(k.v)!==l.hasNode(k.w)&&(d=s(r,k)),d<p[0]?[d,k]:p},[Number.POSITIVE_INFINITY,null])[1]}function t(l,r,h){l.nodes().forEach(p=>r.node(p).rank+=h)}return ud}var cd,aA;function $V(){if(aA)return cd;aA=1;var i=n1(),s=qh().slack,e=qh().longestPath,n=_e().alg.preorder,a=_e().alg.postorder,t=gs().simplify;cd=l,l.initLowLimValues=k,l.initCutValues=r,l.calcCutValue=p,l.leaveEdge=u,l.enterEdge=o,l.exchangeEdges=c;function l(m){m=t(m),e(m);var y=i(m);k(y),r(y,m);for(var v,C;v=u(y);)C=o(y,m,v),c(y,m,v,C)}function r(m,y){var v=a(m,m.nodes());v=v.slice(0,v.length-1),v.forEach(C=>h(m,y,C))}function h(m,y,v){var C=m.node(v),S=C.parent;m.edge(v,S).cutvalue=p(m,y,v)}function p(m,y,v){var C=m.node(v),S=C.parent,L=!0,w=y.edge(v,S),_=0;return w||(L=!1,w=y.edge(S,v)),_=w.weight,y.nodeEdges(v).forEach(R=>{var N=R.v===v,T=N?R.w:R.v;if(T!==S){var V=N===L,E=y.edge(R).weight;if(_+=V?E:-E,g(m,v,T)){var $=m.edge(v,T).cutvalue;_+=V?-$:$}}}),_}function k(m,y){arguments.length<2&&(y=m.nodes()[0]),d(m,{},1,y)}function d(m,y,v,C,S){var L=v,w=m.node(C);return y[C]=!0,m.neighbors(C).forEach(_=>{Object.hasOwn(y,_)||(v=d(m,y,v,_,C))}),w.low=L,w.lim=v++,S?w.parent=S:delete w.parent,v}function u(m){return m.edges().find(y=>m.edge(y).cutvalue<0)}function o(m,y,v){var C=v.v,S=v.w;y.hasEdge(C,S)||(C=v.w,S=v.v);var L=m.node(C),w=m.node(S),_=L,R=!1;L.lim>w.lim&&(_=w,R=!0);var N=y.edges().filter(T=>R===f(m,m.node(T.v),_)&&R!==f(m,m.node(T.w),_));return N.reduce((T,V)=>s(y,V)<s(y,T)?V:T)}function c(m,y,v,C){var S=v.v,L=v.w;m.removeEdge(S,L),m.setEdge(C.v,C.w,{}),k(m),r(m,y),A(m,y)}function A(m,y){var v=m.nodes().find(S=>!y.node(S).parent),C=n(m,v);C=C.slice(1),C.forEach(S=>{var L=m.node(S).parent,w=y.edge(S,L),_=!1;w||(w=y.edge(L,S),_=!0),y.node(S).rank=y.node(L).rank+(_?w.minlen:-w.minlen)})}function g(m,y,v){return m.hasEdge(y,v)}function f(m,y,v){return v.low<=y.lim&&y.lim<=v.lim}return cd}var gd,tA;function VV(){if(tA)return gd;tA=1;var i=qh(),s=i.longestPath,e=n1(),n=$V();gd=a;function a(h){switch(h.graph().ranker){case"network-simplex":r(h);break;case"tight-tree":l(h);break;case"longest-path":t(h);break;default:r(h)}}var t=s;function l(h){s(h),e(h)}function r(h){n(h)}return gd}var Bd,lA;function zV(){if(lA)return Bd;lA=1,Bd=i;function i(n){let a=e(n);n.graph().dummyChains.forEach(t=>{let l=n.node(t),r=l.edgeObj,h=s(n,a,r.v,r.w),p=h.path,k=h.lca,d=0,u=p[d],o=!0;for(;t!==r.w;){if(l=n.node(t),o){for(;(u=p[d])!==k&&n.node(u).maxRank<l.rank;)d++;u===k&&(o=!1)}if(!o){for(;d<p.length-1&&n.node(u=p[d+1]).minRank<=l.rank;)d++;u=p[d]}n.setParent(t,u),t=n.successors(t)[0]}})}function s(n,a,t,l){let r=[],h=[],p=Math.min(a[t].low,a[l].low),k=Math.max(a[t].lim,a[l].lim),d,u;d=t;do d=n.parent(d),r.push(d);while(d&&(a[d].low>p||k>a[d].lim));for(u=d,d=l;(d=n.parent(d))!==u;)h.push(d);return{path:r.concat(h.reverse()),lca:u}}function e(n){let a={},t=0;function l(r){let h=t;n.children(r).forEach(l),a[r]={low:h,lim:t++}}return n.children().forEach(l),a}return Bd}var Ad,rA;function qV(){if(rA)return Ad;rA=1;let i=gs();Ad={run:s,cleanup:t};function s(l){let r=i.addDummyNode(l,"root",{},"_root"),h=n(l),p=Object.values(h),k=i.applyWithChunking(Math.max,p)-1,d=2*k+1;l.graph().nestingRoot=r,l.edges().forEach(o=>l.edge(o).minlen*=d);let u=a(l)+1;l.children().forEach(o=>e(l,r,d,u,k,h,o)),l.graph().nodeRankFactor=d}function e(l,r,h,p,k,d,u){let o=l.children(u);if(!o.length){u!==r&&l.setEdge(r,u,{weight:0,minlen:h});return}let c=i.addBorderNode(l,"_bt"),A=i.addBorderNode(l,"_bb"),g=l.node(u);l.setParent(c,u),g.borderTop=c,l.setParent(A,u),g.borderBottom=A,o.forEach(f=>{e(l,r,h,p,k,d,f);let m=l.node(f),y=m.borderTop?m.borderTop:f,v=m.borderBottom?m.borderBottom:f,C=m.borderTop?p:2*p,S=y!==v?1:k-d[u]+1;l.setEdge(c,y,{weight:C,minlen:S,nestingEdge:!0}),l.setEdge(v,A,{weight:C,minlen:S,nestingEdge:!0})}),l.parent(u)||l.setEdge(r,c,{weight:0,minlen:k+d[u]})}function n(l){var r={};function h(p,k){var d=l.children(p);d&&d.length&&d.forEach(u=>h(u,k+1)),r[p]=k}return l.children().forEach(p=>h(p,1)),r}function a(l){return l.edges().reduce((r,h)=>r+l.edge(h).weight,0)}function t(l){var r=l.graph();l.removeNode(r.nestingRoot),delete r.nestingRoot,l.edges().forEach(h=>{var p=l.edge(h);p.nestingEdge&&l.removeEdge(h)})}return Ad}var yd,hA;function HV(){if(hA)return yd;hA=1;let i=gs();yd=s;function s(n){function a(t){let l=n.children(t),r=n.node(t);if(l.length&&l.forEach(a),Object.hasOwn(r,"minRank")){r.borderLeft=[],r.borderRight=[];for(let h=r.minRank,p=r.maxRank+1;h<p;++h)e(n,"borderLeft","_bl",t,r,h),e(n,"borderRight","_br",t,r,h)}}n.children().forEach(a)}function e(n,a,t,l,r,h){let p={width:0,height:0,rank:h,borderType:a},k=r[a][h-1],d=i.addDummyNode(n,"border",p,t);r[a][h]=d,n.setParent(d,l),k&&n.setEdge(k,d,{weight:1})}return yd}var fd,pA;function jV(){if(pA)return fd;pA=1,fd={adjust:i,undo:s};function i(h){let p=h.graph().rankdir.toLowerCase();(p==="lr"||p==="rl")&&e(h)}function s(h){let p=h.graph().rankdir.toLowerCase();(p==="bt"||p==="rl")&&a(h),(p==="lr"||p==="rl")&&(l(h),e(h))}function e(h){h.nodes().forEach(p=>n(h.node(p))),h.edges().forEach(p=>n(h.edge(p)))}function n(h){let p=h.width;h.width=h.height,h.height=p}function a(h){h.nodes().forEach(p=>t(h.node(p))),h.edges().forEach(p=>{let k=h.edge(p);k.points.forEach(t),Object.hasOwn(k,"y")&&t(k)})}function t(h){h.y=-h.y}function l(h){h.nodes().forEach(p=>r(h.node(p))),h.edges().forEach(p=>{let k=h.edge(p);k.points.forEach(r),Object.hasOwn(k,"x")&&r(k)})}function r(h){let p=h.x;h.x=h.y,h.y=p}return fd}var md,kA;function UV(){if(kA)return md;kA=1;let i=gs();md=s;function s(e){let n={},a=e.nodes().filter(k=>!e.children(k).length),t=a.map(k=>e.node(k).rank),l=i.applyWithChunking(Math.max,t),r=i.range(l+1).map(()=>[]);function h(k){if(n[k])return;n[k]=!0;let d=e.node(k);r[d.rank].push(k),e.successors(k).forEach(h)}return a.sort((k,d)=>e.node(k).rank-e.node(d).rank).forEach(h),r}return md}var vd,dA;function GV(){if(dA)return vd;dA=1;let i=gs().zipObject;vd=s;function s(n,a){let t=0;for(let l=1;l<a.length;++l)t+=e(n,a[l-1],a[l]);return t}function e(n,a,t){let l=i(t,t.map((u,o)=>o)),r=a.flatMap(u=>n.outEdges(u).map(o=>({pos:l[o.w],weight:n.edge(o).weight})).sort((o,c)=>o.pos-c.pos)),h=1;for(;h<t.length;)h<<=1;let p=2*h-1;h-=1;let k=new Array(p).fill(0),d=0;return r.forEach(u=>{let o=u.pos+h;k[o]+=u.weight;let c=0;for(;o>0;)o%2&&(c+=k[o+1]),o=o-1>>1,k[o]+=u.weight;d+=u.weight*c}),d}return vd}var Fd,oA;function WV(){if(oA)return Fd;oA=1,Fd=i;function i(s,e=[]){return e.map(n=>{let a=s.inEdges(n);if(a.length){let t=a.reduce((l,r)=>{let h=s.edge(r),p=s.node(r.v);return{sum:l.sum+h.weight*p.order,weight:l.weight+h.weight}},{sum:0,weight:0});return{v:n,barycenter:t.sum/t.weight,weight:t.weight}}else return{v:n}})}return Fd}var Ed,uA;function KV(){if(uA)return Ed;uA=1;let i=gs();Ed=s;function s(a,t){let l={};a.forEach((h,p)=>{let k=l[h.v]={indegree:0,in:[],out:[],vs:[h.v],i:p};h.barycenter!==void 0&&(k.barycenter=h.barycenter,k.weight=h.weight)}),t.edges().forEach(h=>{let p=l[h.v],k=l[h.w];p!==void 0&&k!==void 0&&(k.indegree++,p.out.push(l[h.w]))});let r=Object.values(l).filter(h=>!h.indegree);return e(r)}function e(a){let t=[];function l(h){return p=>{p.merged||(p.barycenter===void 0||h.barycenter===void 0||p.barycenter>=h.barycenter)&&n(h,p)}}function r(h){return p=>{p.in.push(h),--p.indegree===0&&a.push(p)}}for(;a.length;){let h=a.pop();t.push(h),h.in.reverse().forEach(l(h)),h.out.forEach(r(h))}return t.filter(h=>!h.merged).map(h=>i.pick(h,["vs","i","barycenter","weight"]))}function n(a,t){let l=0,r=0;a.weight&&(l+=a.barycenter*a.weight,r+=a.weight),t.weight&&(l+=t.barycenter*t.weight,r+=t.weight),a.vs=t.vs.concat(a.vs),a.barycenter=l/r,a.weight=r,a.i=Math.min(t.i,a.i),t.merged=!0}return Ed}var bd,cA;function YV(){if(cA)return bd;cA=1;let i=gs();bd=s;function s(a,t){let l=i.partition(a,c=>Object.hasOwn(c,"barycenter")),r=l.lhs,h=l.rhs.sort((c,A)=>A.i-c.i),p=[],k=0,d=0,u=0;r.sort(n(!!t)),u=e(p,h,u),r.forEach(c=>{u+=c.vs.length,p.push(c.vs),k+=c.barycenter*c.weight,d+=c.weight,u=e(p,h,u)});let o={vs:p.flat(!0)};return d&&(o.barycenter=k/d,o.weight=d),o}function e(a,t,l){let r;for(;t.length&&(r=t[t.length-1]).i<=l;)t.pop(),a.push(r.vs),l++;return l}function n(a){return(t,l)=>t.barycenter<l.barycenter?-1:t.barycenter>l.barycenter?1:a?l.i-t.i:t.i-l.i}return bd}var Cd,gA;function XV(){if(gA)return Cd;gA=1;let i=WV(),s=KV(),e=YV();Cd=n;function n(l,r,h,p){let k=l.children(r),d=l.node(r),u=d?d.borderLeft:void 0,o=d?d.borderRight:void 0,c={};u&&(k=k.filter(m=>m!==u&&m!==o));let A=i(l,k);A.forEach(m=>{if(l.children(m.v).length){let y=n(l,m.v,h,p);c[m.v]=y,Object.hasOwn(y,"barycenter")&&t(m,y)}});let g=s(A,h);a(g,c);let f=e(g,p);if(u&&(f.vs=[u,f.vs,o].flat(!0),l.predecessors(u).length)){let m=l.node(l.predecessors(u)[0]),y=l.node(l.predecessors(o)[0]);Object.hasOwn(f,"barycenter")||(f.barycenter=0,f.weight=0),f.barycenter=(f.barycenter*f.weight+m.order+y.order)/(f.weight+2),f.weight+=2}return f}function a(l,r){l.forEach(h=>{h.vs=h.vs.flatMap(p=>r[p]?r[p].vs:p)})}function t(l,r){l.barycenter!==void 0?(l.barycenter=(l.barycenter*l.weight+r.barycenter*r.weight)/(l.weight+r.weight),l.weight+=r.weight):(l.barycenter=r.barycenter,l.weight=r.weight)}return Cd}var _d,BA;function ZV(){if(BA)return _d;BA=1;let i=_e().Graph,s=gs();_d=e;function e(a,t,l){let r=n(a),h=new i({compound:!0}).setGraph({root:r}).setDefaultNodeLabel(p=>a.node(p));return a.nodes().forEach(p=>{let k=a.node(p),d=a.parent(p);(k.rank===t||k.minRank<=t&&t<=k.maxRank)&&(h.setNode(p),h.setParent(p,d||r),a[l](p).forEach(u=>{let o=u.v===p?u.w:u.v,c=h.edge(o,p),A=c!==void 0?c.weight:0;h.setEdge(o,p,{weight:a.edge(u).weight+A})}),Object.hasOwn(k,"minRank")&&h.setNode(p,{borderLeft:k.borderLeft[t],borderRight:k.borderRight[t]}))}),h}function n(a){for(var t;a.hasNode(t=s.uniqueId("_root")););return t}return _d}var Dd,AA;function JV(){if(AA)return Dd;AA=1,Dd=i;function i(s,e,n){let a={},t;n.forEach(l=>{let r=s.parent(l),h,p;for(;r;){if(h=s.parent(r),h?(p=a[h],a[h]=r):(p=t,t=r),p&&p!==r){e.setEdge(p,r);return}r=h}})}return Dd}var xd,yA;function QV(){if(yA)return xd;yA=1;let i=UV(),s=GV(),e=XV(),n=ZV(),a=JV(),t=_e().Graph,l=gs();xd=r;function r(d,u){if(u&&typeof u.customOrder=="function"){u.customOrder(d,r);return}let o=l.maxRank(d),c=h(d,l.range(1,o+1),"inEdges"),A=h(d,l.range(o-1,-1,-1),"outEdges"),g=i(d);if(k(d,g),u&&u.disableOptimalOrderHeuristic)return;let f=Number.POSITIVE_INFINITY,m;for(let y=0,v=0;v<4;++y,++v){p(y%2?c:A,y%4>=2),g=l.buildLayerMatrix(d);let C=s(d,g);C<f&&(v=0,m=Object.assign({},g),f=C)}k(d,m)}function h(d,u,o){return u.map(function(c){return n(d,c,o)})}function p(d,u){let o=new t;d.forEach(function(c){let A=c.graph().root,g=e(c,A,o,u);g.vs.forEach((f,m)=>c.node(f).order=m),a(c,o,g.vs)})}function k(d,u){Object.values(u).forEach(o=>o.forEach((c,A)=>d.node(c).order=A))}return xd}var wd,fA;function iz(){if(fA)return wd;fA=1;let i=_e().Graph,s=gs();wd={positionX:o,findType1Conflicts:e,findType2Conflicts:n,addConflict:t,hasConflict:l,verticalAlignment:r,horizontalCompaction:h,alignCoordinates:d,findSmallestWidthAlignment:k,balance:u};function e(g,f){let m={};function y(v,C){let S=0,L=0,w=v.length,_=C[C.length-1];return C.forEach((R,N)=>{let T=a(g,R),V=T?g.node(T).order:w;(T||R===_)&&(C.slice(L,N+1).forEach(E=>{g.predecessors(E).forEach($=>{let I=g.node($),M=I.order;(M<S||V<M)&&!(I.dummy&&g.node(E).dummy)&&t(m,$,E)})}),L=N+1,S=V)}),C}return f.length&&f.reduce(y),m}function n(g,f){let m={};function y(C,S,L,w,_){let R;s.range(S,L).forEach(N=>{R=C[N],g.node(R).dummy&&g.predecessors(R).forEach(T=>{let V=g.node(T);V.dummy&&(V.order<w||V.order>_)&&t(m,T,R)})})}function v(C,S){let L=-1,w,_=0;return S.forEach((R,N)=>{if(g.node(R).dummy==="border"){let T=g.predecessors(R);T.length&&(w=g.node(T[0]).order,y(S,_,N,L,w),_=N,L=w)}y(S,_,S.length,w,C.length)}),S}return f.length&&f.reduce(v),m}function a(g,f){if(g.node(f).dummy)return g.predecessors(f).find(m=>g.node(m).dummy)}function t(g,f,m){if(f>m){let v=f;f=m,m=v}let y=g[f];y||(g[f]=y={}),y[m]=!0}function l(g,f,m){if(f>m){let y=f;f=m,m=y}return!!g[f]&&Object.hasOwn(g[f],m)}function r(g,f,m,y){let v={},C={},S={};return f.forEach(L=>{L.forEach((w,_)=>{v[w]=w,C[w]=w,S[w]=_})}),f.forEach(L=>{let w=-1;L.forEach(_=>{let R=y(_);if(R.length){R=R.sort((T,V)=>S[T]-S[V]);let N=(R.length-1)/2;for(let T=Math.floor(N),V=Math.ceil(N);T<=V;++T){let E=R[T];C[_]===_&&w<S[E]&&!l(m,_,E)&&(C[E]=_,C[_]=v[_]=v[E],w=S[E])}}})}),{root:v,align:C}}function h(g,f,m,y,v){let C={},S=p(g,f,m,v),L=v?"borderLeft":"borderRight";function w(N,T){let V=S.nodes(),E=V.pop(),$={};for(;E;)$[E]?N(E):($[E]=!0,V.push(E),V=V.concat(T(E))),E=V.pop()}function _(N){C[N]=S.inEdges(N).reduce((T,V)=>Math.max(T,C[V.v]+S.edge(V)),0)}function R(N){let T=S.outEdges(N).reduce((E,$)=>Math.min(E,C[$.w]-S.edge($)),Number.POSITIVE_INFINITY),V=g.node(N);T!==Number.POSITIVE_INFINITY&&V.borderType!==L&&(C[N]=Math.max(C[N],T))}return w(_,S.predecessors.bind(S)),w(R,S.successors.bind(S)),Object.keys(y).forEach(N=>C[N]=C[m[N]]),C}function p(g,f,m,y){let v=new i,C=g.graph(),S=c(C.nodesep,C.edgesep,y);return f.forEach(L=>{let w;L.forEach(_=>{let R=m[_];if(v.setNode(R),w){var N=m[w],T=v.edge(N,R);v.setEdge(N,R,Math.max(S(g,_,w),T||0))}w=_})}),v}function k(g,f){return Object.values(f).reduce((m,y)=>{let v=Number.NEGATIVE_INFINITY,C=Number.POSITIVE_INFINITY;Object.entries(y).forEach(([L,w])=>{let _=A(g,L)/2;v=Math.max(w+_,v),C=Math.min(w-_,C)});const S=v-C;return S<m[0]&&(m=[S,y]),m},[Number.POSITIVE_INFINITY,null])[1]}function d(g,f){let m=Object.values(f),y=s.applyWithChunking(Math.min,m),v=s.applyWithChunking(Math.max,m);["u","d"].forEach(C=>{["l","r"].forEach(S=>{let L=C+S,w=g[L];if(w===f)return;let _=Object.values(w),R=y-s.applyWithChunking(Math.min,_);S!=="l"&&(R=v-s.applyWithChunking(Math.max,_)),R&&(g[L]=s.mapValues(w,N=>N+R))})})}function u(g,f){return s.mapValues(g.ul,(m,y)=>{if(f)return g[f.toLowerCase()][y];{let v=Object.values(g).map(C=>C[y]).sort((C,S)=>C-S);return(v[1]+v[2])/2}})}function o(g){let f=s.buildLayerMatrix(g),m=Object.assign(e(g,f),n(g,f)),y={},v;["u","d"].forEach(S=>{v=S==="u"?f:Object.values(f).reverse(),["l","r"].forEach(L=>{L==="r"&&(v=v.map(N=>Object.values(N).reverse()));let w=(S==="u"?g.predecessors:g.successors).bind(g),_=r(g,v,m,w),R=h(g,v,_.root,_.align,L==="r");L==="r"&&(R=s.mapValues(R,N=>-N)),y[S+L]=R})});let C=k(g,y);return d(y,C),u(y,g.graph().align)}function c(g,f,m){return(y,v,C)=>{let S=y.node(v),L=y.node(C),w=0,_;if(w+=S.width/2,Object.hasOwn(S,"labelpos"))switch(S.labelpos.toLowerCase()){case"l":_=-S.width/2;break;case"r":_=S.width/2;break}if(_&&(w+=m?_:-_),_=0,w+=(S.dummy?f:g)/2,w+=(L.dummy?f:g)/2,w+=L.width/2,Object.hasOwn(L,"labelpos"))switch(L.labelpos.toLowerCase()){case"l":_=L.width/2;break;case"r":_=-L.width/2;break}return _&&(w+=m?_:-_),_=0,w}}function A(g,f){return g.node(f).width}return wd}var Td,mA;function sz(){if(mA)return Td;mA=1;let i=gs(),s=iz().positionX;Td=e;function e(a){a=i.asNonCompoundGraph(a),n(a),Object.entries(s(a)).forEach(([t,l])=>a.node(t).x=l)}function n(a){let t=i.buildLayerMatrix(a),l=a.graph().ranksep,r=0;t.forEach(h=>{const p=h.reduce((k,d)=>{const u=a.node(d).height;return k>u?k:u},0);h.forEach(k=>a.node(k).y=r+p/2),r+=p+l})}return Td}var Sd,vA;function ez(){if(vA)return Sd;vA=1;let i=NV(),s=MV(),e=VV(),n=gs().normalizeRanks,a=zV(),t=gs().removeEmptyRanks,l=qV(),r=HV(),h=jV(),p=QV(),k=sz(),d=gs(),u=_e().Graph;Sd=o;function o(q,W){let K=W&&W.debugTiming?d.time:d.notime;K("layout",()=>{let ri=K("  buildLayoutGraph",()=>w(q));K("  runLayout",()=>c(ri,K,W)),K("  updateInputGraph",()=>A(q,ri))})}function c(q,W,K){W("    makeSpaceForEdgeLabels",()=>_(q)),W("    removeSelfEdges",()=>G(q)),W("    acyclic",()=>i.run(q)),W("    nestingGraph.run",()=>l.run(q)),W("    rank",()=>e(d.asNonCompoundGraph(q))),W("    injectEdgeLabelProxies",()=>R(q)),W("    removeEmptyRanks",()=>t(q)),W("    nestingGraph.cleanup",()=>l.cleanup(q)),W("    normalizeRanks",()=>n(q)),W("    assignRankMinMax",()=>N(q)),W("    removeEdgeLabelProxies",()=>T(q)),W("    normalize.run",()=>s.run(q)),W("    parentDummyChains",()=>a(q)),W("    addBorderSegments",()=>r(q)),W("    order",()=>p(q,K)),W("    insertSelfEdges",()=>Y(q)),W("    adjustCoordinateSystem",()=>h.adjust(q)),W("    position",()=>k(q)),W("    positionSelfEdges",()=>li(q)),W("    removeBorderNodes",()=>M(q)),W("    normalize.undo",()=>s.undo(q)),W("    fixupEdgeLabelCoords",()=>$(q)),W("    undoCoordinateSystem",()=>h.undo(q)),W("    translateGraph",()=>V(q)),W("    assignNodeIntersects",()=>E(q)),W("    reversePoints",()=>I(q)),W("    acyclic.undo",()=>i.undo(q))}function A(q,W){q.nodes().forEach(K=>{let ri=q.node(K),U=W.node(K);ri&&(ri.x=U.x,ri.y=U.y,ri.rank=U.rank,W.children(K).length&&(ri.width=U.width,ri.height=U.height))}),q.edges().forEach(K=>{let ri=q.edge(K),U=W.edge(K);ri.points=U.points,Object.hasOwn(U,"x")&&(ri.x=U.x,ri.y=U.y)}),q.graph().width=W.graph().width,q.graph().height=W.graph().height}let g=["nodesep","edgesep","ranksep","marginx","marginy"],f={ranksep:50,edgesep:20,nodesep:50,rankdir:"tb"},m=["acyclicer","ranker","rankdir","align"],y=["width","height"],v={width:0,height:0},C=["minlen","weight","width","height","labeloffset"],S={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"},L=["labelpos"];function w(q){let W=new u({multigraph:!0,compound:!0}),K=ei(q.graph());return W.setGraph(Object.assign({},f,pi(K,g),d.pick(K,m))),q.nodes().forEach(ri=>{let U=ei(q.node(ri));const Q=pi(U,y);Object.keys(v).forEach(J=>{Q[J]===void 0&&(Q[J]=v[J])}),W.setNode(ri,Q),W.setParent(ri,q.parent(ri))}),q.edges().forEach(ri=>{let U=ei(q.edge(ri));W.setEdge(ri,Object.assign({},S,pi(U,C),d.pick(U,L)))}),W}function _(q){let W=q.graph();W.ranksep/=2,q.edges().forEach(K=>{let ri=q.edge(K);ri.minlen*=2,ri.labelpos.toLowerCase()!=="c"&&(W.rankdir==="TB"||W.rankdir==="BT"?ri.width+=ri.labeloffset:ri.height+=ri.labeloffset)})}function R(q){q.edges().forEach(W=>{let K=q.edge(W);if(K.width&&K.height){let ri=q.node(W.v),Q={rank:(q.node(W.w).rank-ri.rank)/2+ri.rank,e:W};d.addDummyNode(q,"edge-proxy",Q,"_ep")}})}function N(q){let W=0;q.nodes().forEach(K=>{let ri=q.node(K);ri.borderTop&&(ri.minRank=q.node(ri.borderTop).rank,ri.maxRank=q.node(ri.borderBottom).rank,W=Math.max(W,ri.maxRank))}),q.graph().maxRank=W}function T(q){q.nodes().forEach(W=>{let K=q.node(W);K.dummy==="edge-proxy"&&(q.edge(K.e).labelRank=K.rank,q.removeNode(W))})}function V(q){let W=Number.POSITIVE_INFINITY,K=0,ri=Number.POSITIVE_INFINITY,U=0,Q=q.graph(),J=Q.marginx||0,ki=Q.marginy||0;function ci(X){let x=X.x,F=X.y,D=X.width,O=X.height;W=Math.min(W,x-D/2),K=Math.max(K,x+D/2),ri=Math.min(ri,F-O/2),U=Math.max(U,F+O/2)}q.nodes().forEach(X=>ci(q.node(X))),q.edges().forEach(X=>{let x=q.edge(X);Object.hasOwn(x,"x")&&ci(x)}),W-=J,ri-=ki,q.nodes().forEach(X=>{let x=q.node(X);x.x-=W,x.y-=ri}),q.edges().forEach(X=>{let x=q.edge(X);x.points.forEach(F=>{F.x-=W,F.y-=ri}),Object.hasOwn(x,"x")&&(x.x-=W),Object.hasOwn(x,"y")&&(x.y-=ri)}),Q.width=K-W+J,Q.height=U-ri+ki}function E(q){q.edges().forEach(W=>{let K=q.edge(W),ri=q.node(W.v),U=q.node(W.w),Q,J;K.points?(Q=K.points[0],J=K.points[K.points.length-1]):(K.points=[],Q=U,J=ri),K.points.unshift(d.intersectRect(ri,Q)),K.points.push(d.intersectRect(U,J))})}function $(q){q.edges().forEach(W=>{let K=q.edge(W);if(Object.hasOwn(K,"x"))switch((K.labelpos==="l"||K.labelpos==="r")&&(K.width-=K.labeloffset),K.labelpos){case"l":K.x-=K.width/2+K.labeloffset;break;case"r":K.x+=K.width/2+K.labeloffset;break}})}function I(q){q.edges().forEach(W=>{let K=q.edge(W);K.reversed&&K.points.reverse()})}function M(q){q.nodes().forEach(W=>{if(q.children(W).length){let K=q.node(W),ri=q.node(K.borderTop),U=q.node(K.borderBottom),Q=q.node(K.borderLeft[K.borderLeft.length-1]),J=q.node(K.borderRight[K.borderRight.length-1]);K.width=Math.abs(J.x-Q.x),K.height=Math.abs(U.y-ri.y),K.x=Q.x+K.width/2,K.y=ri.y+K.height/2}}),q.nodes().forEach(W=>{q.node(W).dummy==="border"&&q.removeNode(W)})}function G(q){q.edges().forEach(W=>{if(W.v===W.w){var K=q.node(W.v);K.selfEdges||(K.selfEdges=[]),K.selfEdges.push({e:W,label:q.edge(W)}),q.removeEdge(W)}})}function Y(q){var W=d.buildLayerMatrix(q);W.forEach(K=>{var ri=0;K.forEach((U,Q)=>{var J=q.node(U);J.order=Q+ri,(J.selfEdges||[]).forEach(ki=>{d.addDummyNode(q,"selfedge",{width:ki.label.width,height:ki.label.height,rank:J.rank,order:Q+ ++ri,e:ki.e,label:ki.label},"_se")}),delete J.selfEdges})})}function li(q){q.nodes().forEach(W=>{var K=q.node(W);if(K.dummy==="selfedge"){var ri=q.node(K.e.v),U=ri.x+ri.width/2,Q=ri.y,J=K.x-U,ki=ri.height/2;q.setEdge(K.e,K.label),q.removeNode(W),K.label.points=[{x:U+2*J/3,y:Q-ki},{x:U+5*J/6,y:Q-ki},{x:U+J,y:Q},{x:U+5*J/6,y:Q+ki},{x:U+2*J/3,y:Q+ki}],K.label.x=K.x,K.label.y=K.y}})}function pi(q,W){return d.mapValues(d.pick(q,W),Number)}function ei(q){var W={};return q&&Object.entries(q).forEach(([K,ri])=>{typeof K=="string"&&(K=K.toLowerCase()),W[K]=ri}),W}return Sd}var Id,FA;function nz(){if(FA)return Id;FA=1;let i=gs(),s=_e().Graph;Id={debugOrdering:e};function e(n){let a=i.buildLayerMatrix(n),t=new s({compound:!0,multigraph:!0}).setGraph({});return n.nodes().forEach(l=>{t.setNode(l,{label:l}),t.setParent(l,"layer"+n.node(l).rank)}),n.edges().forEach(l=>t.setEdge(l.v,l.w,{},l.name)),a.forEach((l,r)=>{let h="layer"+r;t.setNode(h,{rank:"same"}),l.reduce((p,k)=>(t.setEdge(p,k,{style:"invis"}),k))}),t}return Id}var Rd,EA;function az(){return EA||(EA=1,Rd="1.1.4"),Rd}var Od,bA;function tz(){return bA||(bA=1,Od={graphlib:_e(),layout:ez(),debug:nz(),util:{time:gs().time,notime:gs().notime},version:az()}),Od}var lz=tz();const Pd=FV(lz);function rz(){const{findNode:i}=Ki(),s=Z(new Pd.graphlib.Graph),e=Z("LR");function n(a,t,l){var h,p;const r=new Pd.graphlib.Graph;r.setDefaultEdgeLabel(()=>({})),r.setGraph({rankdir:l}),s.value=r,e.value=l;for(const k of a){if(k.data.type=="group")continue;const d=i(k.id);r.setNode(k.id,{width:((h=d==null?void 0:d.dimensions)==null?void 0:h.width)??150,height:((p=d==null?void 0:d.dimensions)==null?void 0:p.height)??50})}for(const k of t)r.setEdge(k.source,k.target);return Pd.layout(r),a.map(k=>{if(k.data.type=="group")return k;const d=r.node(k.id);return{...k,targetPosition:l==="LR"?Fi.Left:Fi.Top,sourcePosition:l==="LR"?Fi.Right:Fi.Bottom,position:{x:d.x,y:d.y}}})}return{layout:n}}const hz=ti({__name:"NodeFlow",props:{jsonData:{},isMini:{type:Boolean}},setup(i,{expose:s}){const e=i;let n=Z([]),a=Z([]);{let d=!0;if(e.jsonData)try{n=Z(e.jsonData.nodes),a=Z(e.jsonData.edges),d=!1}catch(u){console.error("Failed to parse json:",u,"rawJson:",JSON.stringify(e.jsonData))}}if(e.isMini){const{zoomOnScroll:d,zoomOnDoubleClick:u}=Ki();d.value=!1,u.value=!1}const{layout:t}=rz();async function l(d){n.value=t(n.value,a.value,d);const{fitView:u}=Ki();Hi(()=>{u()})}const r=Z(!1);bi(r,(d,u)=>{u==!1&&d==!0&&n.value.length>1&&n.value[0].position.x==0&&n.value[0].position.y==0&&n.value[1].position.x==0&&n.value[1].position.y==0&&l("LR")}),s({layoutGraph:l});const{findEdge:h}=Ki();function p(d){for(const u of d)if(u.hasOwnProperty("selected")){const o=h(u.id);o.animated=u.selected}}const k={props:e,get nodes(){return n},set nodes(d){n=d},get edges(){return a},set edges(d){a=d},layout:t,layoutGraph:l,isNodeInitialized:r,findEdge:h,edgeAnimated:p,ObcanvasNode:IM,ComfyUINode:YM,ComfyUINodeGroup:s$,CommonNode:_$,ItemNode:J$,InteractionControls:cV,get Background(){return vV},get VueFlow(){return NP}};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}});function pz(i,s,e,n,a,t){return hi(),rs(n.VueFlow,{class:"nf-node-flow",nodes:n.nodes,edges:n.edges,"prevent-scrolling":!0,"fit-view-on-init":"",onEdgesChange:n.edgeAnimated,onNodesInitialized:s[0]||(s[0]=l=>n.isNodeInitialized=!0)},{"node-obcanvas":$i(l=>[Bi(n.ObcanvasNode,{id:l.id,data:l.data},null,8,["id","data"])]),"node-comfyui":$i(l=>[Bi(n.ComfyUINode,{id:l.id,data:l.data},null,8,["id","data"])]),"node-comfyui-group":$i(l=>[Bi(n.ComfyUINodeGroup,{id:l.id,data:l.data},null,8,["id","data"])]),"node-common":$i(l=>[Bi(n.CommonNode,{id:l.id,data:l.data},null,8,["id","data"])]),"node-item":$i(l=>[Bi(n.ItemNode,{id:l.id,data:l.data},null,8,["id","data"])]),default:$i(()=>[Bi(n.Background,{style:{"background-color":"#222222"},"pattern-color":"#191919",variant:"lines",gap:16}),n.props.isMini?yi("v-if",!0):(hi(),rs(n.InteractionControls,{key:0}))]),_:1},8,["nodes","edges"])}const kz=ns(hz,[["render",pz],["__file","NodeFlow.vue"]]),dz=ti({__name:"dropdownButton",props:{label:{},fn:{type:Function}},setup(i,{expose:s}){s();const e=i,n=Z(e.label),a=Z(e.fn);function t(){l.value=!l.value}const l=Z(!1);function r(u,o){n.value=u,a.value=o,a.value&&a.value(),l.value=!1}function h(){a.value&&a.value()}function p(u){k.value&&!k.value.contains(u.target)&&(l.value=!1)}const k=Z(null);Di(()=>{document.addEventListener("click",p)}),xt(()=>{document.removeEventListener("click",p)});const d={props:e,currentLabel:n,currentFn:a,toggleDropdown:t,isOpen:l,selectItem:r,onClickMainBtn:h,handleClickOutside:p,ddButtonRef:k};return Object.defineProperty(d,"__isScriptSetup",{enumerable:!1,value:!0}),d}}),oz={class:"dd-button",ref:"ddButtonRef"},uz={key:0,class:"dd-button-menu"};function cz(i,s,e,n,a,t){return hi(),oi("div",oz,[yi(" 主按钮 "),j("button",{class:"dd-button-main",onClick:n.onClickMainBtn},Li(n.currentLabel),1),yi(" 唤出菜单 "),j("button",{class:"dd-button-dropdown",onClick:n.toggleDropdown},"^"),yi(" 菜单 "),Bi(xa,{name:"fade"},{default:$i(()=>[n.isOpen?(hi(),oi("ul",uz,[ne(i.$slots,"default",{selectItem:n.selectItem})])):yi("v-if",!0)]),_:3})],512)}const gz=ns(dz,[["render",cz],["__file","dropdownButton.vue"]]);function Bz(i,s){return new Promise((e,n)=>{i&&(s.value?(s.value=!1,i.requestFullscreen?i.requestFullscreen():i.webkitRequestFullScreen?i.webkitRequestFullScreen():i.mozRequestFullScreen?i.mozRequestFullScreen():i.msRequestFullscreen&&i.msRequestFullscreen(),Az(s)):(s.value=!0,document.exitFullscreen?document.exitFullscreen():i.webkitCancelFullScreen?i.webkitCancelFullScreen():i.mozCancelFullScreen?i.mozCancelFullScreen():i.msExitFullscreen&&i.msExitFullscreen()))})}function Az(i){document.addEventListener("fullscreenchange",s),document.addEventListener("webkitfullscreenchange",s),document.addEventListener("mozfullscreenchange",s),document.addEventListener("MSFullscreenChange",s);function s(){document.fullscreenElement||(i.value=!0,document.removeEventListener("fullscreenchange",s),document.removeEventListener("webkitfullscreenchange",s),document.removeEventListener("mozfullscreenchange",s),document.removeEventListener("MSFullscreenChange",s))}}const yz=ti({__name:"NodeFlowContainerS",props:{rawData:{},mdData:{},jsonType:{},jsonData:{},isMini:{type:Boolean},fn_newView:{type:Function}},setup(i,{expose:s}){s();const e=i,n=z(()=>e.fn_newView||k),a=Z(e.isMini),t=Z();function l(c){var A;(A=t.value)==null||A.layoutGraph(c)}const r=Z(!0);function h(){const c=document.body,A=document.querySelector(".markdown-source-view .cm-scroller");r.value?(r.value=!1,c&&c.classList.add("nf-style-overflow-hidden"),A&&A.classList.add("nf-style-overflow-hidden")):(r.value=!0,c&&c.classList.remove("nf-style-overflow-hidden"),A&&A.classList.remove("nf-style-overflow-hidden"))}const p=Z();function k(){Bz(p.value,a)}function d(c){let A;c=="mdData"?A=`
`+e.mdData:c=="rawData"?A=`
`+e.rawData:A=e.jsonData,console.log("Debug json:",A)}function u(c){let A;c=="mdData"?A=e.mdData:c=="rawData"?A=e.rawData:A=z(()=>e.rawData||"error: get raw data error").value,navigator.clipboard.writeText(A).then(()=>{console.log("Info: copy success")},()=>{console.error("Error: copy fail")})}const o={props:e,_fn_newView:n,_isMini:a,RefChild:t,fn_autoPos:l,isAllowScroll:r,fn_switchAllowScroll:h,CanFullScreen:p,fn_fullScreen:k,fn_printData:d,fn_copyData:u,NodeFlow:kz,DropdownButton:gz};return Object.defineProperty(o,"__isScriptSetup",{enumerable:!1,value:!0}),o}}),fz={class:"nf-toolbar"},mz=["onClick"],vz=["onClick"],Fz=["onClick"],Ez=["onClick"],bz=["onClick"],Cz=["onClick"],_z=["onClick"],Dz=["onClick"];function xz(i,s,e,n,a,t){return hi(),oi("div",{ref:"CanFullScreen",class:Ii(n._isMini?"normal-size":"full-size")},[yi(" 主画布 "),yi(" TODO 有空捋一下这里，全屏这块有些代码应该抽离复用 "),j("div",{class:Ii(n._isMini?"nf-shell-mini":"nf-shell-view")},[Bi(n.NodeFlow,{ref:"RefChild",jsonData:e.jsonData,isMini:n._isMini},null,8,["jsonData","isMini"])],2),yi(" 工具栏 "),j("div",fz,[j("button",{class:"nf-btn",onClick:s[0]||(s[0]=l=>n.fn_fullScreen())},"Full screen"),j("button",{class:"nf-btn",onClick:s[1]||(s[1]=l=>n._fn_newView())},"New view"),Bi(n.DropdownButton,{class:"nf-btn",label:"LR layout",fn:()=>n.fn_autoPos("LR")},{default:$i(({selectItem:l})=>[j("button",{class:"nf-btn",onClick:r=>l("LR layout",()=>n.fn_autoPos("LR"))},"LR layout",8,mz),j("button",{class:"nf-btn",onClick:r=>l("TB layout",()=>n.fn_autoPos("TB"))},"TB layout",8,vz)]),_:1},8,["fn"]),Bi(n.DropdownButton,{class:"nf-btn",label:"Copy md",fn:()=>n.fn_copyData("mdData")},{default:$i(({selectItem:l})=>[j("button",{class:"nf-btn",onClick:r=>l("Print json",()=>n.fn_printData("jsonData"))},"Print json",8,Fz),j("button",{class:"nf-btn",onClick:r=>l("Print md",()=>n.fn_printData("mdData"))},"Print md",8,Ez),j("button",{class:"nf-btn",onClick:r=>l("Print raw",()=>n.fn_printData("rawData"))},"Print raw",8,bz),j("button",{class:"nf-btn",onClick:r=>l("Copy json",()=>n.fn_copyData("jsonData"))},"Copy json",8,Cz),j("button",{class:"nf-btn",onClick:r=>l("Copy md",()=>n.fn_copyData("mdData"))},"Copy md",8,_z),j("button",{class:"nf-btn",onClick:r=>l("Copy raw",()=>n.fn_copyData("rawData"))},"Copy raw",8,Dz)]),_:1},8,["fn"]),j("button",{class:"nf-btn",onClick:s[2]||(s[2]=l=>n.fn_switchAllowScroll())},"Ex lock")])],2)}const wz=ns(yz,[["render",xz],["__scopeId","data-v-35bb69e2"],["__file","NodeFlowContainerS.vue"]]),Tz=ti({__name:"MyVueFlow",props:{type:{},data:{}},setup(i,{expose:s}){s();const e=i,n=Mw(e.type,e.data.trim());let a=Z({});n.code==0?a.value=n.data:a.value={nodes:[],edges:[]};const t={props:e,result:n,get jsonData(){return a},set jsonData(l){a=l},NodeFlowContainer:wz};return Object.defineProperty(t,"__isScriptSetup",{enumerable:!1,value:!0}),t}}),Sz={key:0};function Iz(i,s,e,n,a,t){return hi(),oi(_i,null,[j("div",null,[n.result.code==0?(hi(),rs(n.NodeFlowContainer,{key:0,jsonData:n.jsonData,jsonType:n.props.type,isMini:!0,rawData:e.data},null,8,["jsonData","jsonType","rawData"])):yi("v-if",!0)]),n.result.code!=0?(hi(),oi("div",Sz,Li(n.result.msg),1)):yi("v-if",!0)],64)}const Rz=ns(Tz,[["render",Iz],["__file","MyVueFlow.vue"]]),Oz=Ts({enhance:({app:i,router:s,siteData:e})=>{i.component("VueFlow",Rz)}}),Pz=Object.freeze(Object.defineProperty({__proto__:null,default:Oz},Symbol.toStringTag,{value:"Module"})),Lz=ti({__name:"Tikz",props:{data:{}},setup(i,{expose:s}){s();const e=i;function n(){var o;if(document.querySelector("#tikzjax")){console.log("window.tikzJax2",window,window.tikzjax,(o=window.tikzjax)==null?void 0:o.render),a(),n();return}r();const d=document.createElement("link");document.head.appendChild(d),d.rel="stylesheet",d.type="text/css",d.href="https://tikzjax.com/v1/fonts.css";const u=document.createElement("script");document.head.appendChild(u),u.id="tikzjax",u.type="text/javascript",u.src="https://tikzjax.com/v1/tikzjax.js",u.onload=()=>{console.log("TikZJax loaded successfully")},u.onerror=()=>{console.error("Failed to load TikZJax")},document.addEventListener("tikzjax-load-finished",p)}function a(){const d=document.querySelectorAll("#tikzjax");for(const u of d)u.remove();document.removeEventListener("tikzjax-load-finished",p)}async function t(){a(),await setTimeout(()=>{n()},2e3)}Di(()=>{n()}),_s(()=>{a()});const l=Z(null);function r(){if(!l.value)return;const d=document.createElement("script");l.value.appendChild(d),d.setAttribute("type","text/tikz"),d.setAttribute("data-show-console","true"),d.textContent=h(e.data),console.log("readyTikzscript yet")}function h(d){d=d.replaceAll("&nbsp;","");let o=d.split(`
`);return o=o.map(c=>c.trim()),o=o.filter(c=>c),o.join(`
`)}function p(d){console.log(`tikz finish-------------------------------
`,d)}const k={props:e,loadTikZJax:n,unloadTikZJax:a,reloadTikZJax:t,ref_tikz:l,readyTikzScript:r,readyTikzScript_tidy:h,onTikzFinish:p};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}}),Nz={class:"tikz"},Mz={class:"tikz-ref",ref:"ref_tikz"};function $z(i,s,e,n,a,t){return hi(),oi("div",Nz,[j("div",Mz,null,512),yi(" TODO 在未加载出来之前，给个占位和提示文字 "),yi(` <button @click="readyTikzScript">准备Tikz内容</button>
    <button @click="reloadTikZJax">重新加载Tikz</button> `)])}const Vz=ns(Lz,[["render",$z],["__file","Tikz.vue"]]),zz=Ts({enhance:({app:i,router:s,siteData:e})=>{i.component("Tikz",Vz)}}),qz=Object.freeze(Object.defineProperty({__proto__:null,default:zz},Symbol.toStringTag,{value:"Module"})),Hz=ti({__name:"backlink",setup(i,{expose:s}){var r;s();const e=Bs(),n=(r=e.value)==null?void 0:r.bioChainData,a=z(()=>{var h;return(n==null?void 0:n.backlink)&&((h=n==null?void 0:n.backlink)==null?void 0:h.length)>0}),t=z(()=>{var h;return(h=n==null?void 0:n.backlink)==null?void 0:h.length}),l={data:e,biodata:n,hasBacklink:a,tot_link:t,get withBase(){return Gi}};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}}),jz={class:"backlink-container"},Uz={class:"backlink-header"},Gz={key:0},Wz={key:1},Kz={class:"backlink-item"};function Yz(i,s,e,n,a,t){const l=Wi("router-link");return hi(),oi("div",jz,[j("div",Uz,[s[0]||(s[0]=j("span",null,"链接到当前文件 ",-1)),j("span",null,Li(n.tot_link),1)]),n.hasBacklink?(hi(),oi("div",Wz,[(hi(!0),oi(_i,null,bs(n.biodata.backlink,r=>(hi(),oi("div",Kz,[Bi(l,{to:n.withBase(r.link)},{default:$i(()=>[ks(Li(r.title),1)]),_:2},1032,["to"])]))),256))])):(hi(),oi("div",Gz,"没有文件链接到当前文件"))])}const a1=ns(Hz,[["render",Yz],["__scopeId","data-v-dd26a662"],["__file","backlink.vue"]]);var Xz={value:()=>{}};function Mp(){for(var i=0,s=arguments.length,e={},n;i<s;++i){if(!(n=arguments[i]+"")||n in e||/[\s.]/.test(n))throw new Error("illegal type: "+n);e[n]=[]}return new oh(e)}function oh(i){this._=i}function Zz(i,s){return i.trim().split(/^|\s+/).map(function(e){var n="",a=e.indexOf(".");if(a>=0&&(n=e.slice(a+1),e=e.slice(0,a)),e&&!s.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}})}oh.prototype=Mp.prototype={constructor:oh,on:function(i,s){var e=this._,n=Zz(i+"",e),a,t=-1,l=n.length;if(arguments.length<2){for(;++t<l;)if((a=(i=n[t]).type)&&(a=Jz(e[a],i.name)))return a;return}if(s!=null&&typeof s!="function")throw new Error("invalid callback: "+s);for(;++t<l;)if(a=(i=n[t]).type)e[a]=CA(e[a],i.name,s);else if(s==null)for(a in e)e[a]=CA(e[a],i.name,null);return this},copy:function(){var i={},s=this._;for(var e in s)i[e]=s[e].slice();return new oh(i)},call:function(i,s){if((a=arguments.length-2)>0)for(var e=new Array(a),n=0,a,t;n<a;++n)e[n]=arguments[n+2];if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(t=this._[i],n=0,a=t.length;n<a;++n)t[n].value.apply(s,e)},apply:function(i,s,e){if(!this._.hasOwnProperty(i))throw new Error("unknown type: "+i);for(var n=this._[i],a=0,t=n.length;a<t;++a)n[a].value.apply(s,e)}};function Jz(i,s){for(var e=0,n=i.length,a;e<n;++e)if((a=i[e]).name===s)return a.value}function CA(i,s,e){for(var n=0,a=i.length;n<a;++n)if(i[n].name===s){i[n]=Xz,i=i.slice(0,n).concat(i.slice(n+1));break}return e!=null&&i.push({name:s,value:e}),i}var Go="http://www.w3.org/1999/xhtml";const _A={svg:"http://www.w3.org/2000/svg",xhtml:Go,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function $p(i){var s=i+="",e=s.indexOf(":");return e>=0&&(s=i.slice(0,e))!=="xmlns"&&(i=i.slice(e+1)),_A.hasOwnProperty(s)?{space:_A[s],local:i}:i}function Qz(i){return function(){var s=this.ownerDocument,e=this.namespaceURI;return e===Go&&s.documentElement.namespaceURI===Go?s.createElement(i):s.createElementNS(e,i)}}function iq(i){return function(){return this.ownerDocument.createElementNS(i.space,i.local)}}function t1(i){var s=$p(i);return(s.local?iq:Qz)(s)}function sq(){}function xc(i){return i==null?sq:function(){return this.querySelector(i)}}function eq(i){typeof i!="function"&&(i=xc(i));for(var s=this._groups,e=s.length,n=new Array(e),a=0;a<e;++a)for(var t=s[a],l=t.length,r=n[a]=new Array(l),h,p,k=0;k<l;++k)(h=t[k])&&(p=i.call(h,h.__data__,k,t))&&("__data__"in h&&(p.__data__=h.__data__),r[k]=p);return new he(n,this._parents)}function nq(i){return i==null?[]:Array.isArray(i)?i:Array.from(i)}function aq(){return[]}function l1(i){return i==null?aq:function(){return this.querySelectorAll(i)}}function tq(i){return function(){return nq(i.apply(this,arguments))}}function lq(i){typeof i=="function"?i=tq(i):i=l1(i);for(var s=this._groups,e=s.length,n=[],a=[],t=0;t<e;++t)for(var l=s[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&(n.push(i.call(h,h.__data__,p,l)),a.push(h));return new he(n,a)}function r1(i){return function(){return this.matches(i)}}function h1(i){return function(s){return s.matches(i)}}var rq=Array.prototype.find;function hq(i){return function(){return rq.call(this.children,i)}}function pq(){return this.firstElementChild}function kq(i){return this.select(i==null?pq:hq(typeof i=="function"?i:h1(i)))}var dq=Array.prototype.filter;function oq(){return Array.from(this.children)}function uq(i){return function(){return dq.call(this.children,i)}}function cq(i){return this.selectAll(i==null?oq:uq(typeof i=="function"?i:h1(i)))}function gq(i){typeof i!="function"&&(i=r1(i));for(var s=this._groups,e=s.length,n=new Array(e),a=0;a<e;++a)for(var t=s[a],l=t.length,r=n[a]=[],h,p=0;p<l;++p)(h=t[p])&&i.call(h,h.__data__,p,t)&&r.push(h);return new he(n,this._parents)}function p1(i){return new Array(i.length)}function Bq(){return new he(this._enter||this._groups.map(p1),this._parents)}function Hh(i,s){this.ownerDocument=i.ownerDocument,this.namespaceURI=i.namespaceURI,this._next=null,this._parent=i,this.__data__=s}Hh.prototype={constructor:Hh,appendChild:function(i){return this._parent.insertBefore(i,this._next)},insertBefore:function(i,s){return this._parent.insertBefore(i,s)},querySelector:function(i){return this._parent.querySelector(i)},querySelectorAll:function(i){return this._parent.querySelectorAll(i)}};function Aq(i){return function(){return i}}function yq(i,s,e,n,a,t){for(var l=0,r,h=s.length,p=t.length;l<p;++l)(r=s[l])?(r.__data__=t[l],n[l]=r):e[l]=new Hh(i,t[l]);for(;l<h;++l)(r=s[l])&&(a[l]=r)}function fq(i,s,e,n,a,t,l){var r,h,p=new Map,k=s.length,d=t.length,u=new Array(k),o;for(r=0;r<k;++r)(h=s[r])&&(u[r]=o=l.call(h,h.__data__,r,s)+"",p.has(o)?a[r]=h:p.set(o,h));for(r=0;r<d;++r)o=l.call(i,t[r],r,t)+"",(h=p.get(o))?(n[r]=h,h.__data__=t[r],p.delete(o)):e[r]=new Hh(i,t[r]);for(r=0;r<k;++r)(h=s[r])&&p.get(u[r])===h&&(a[r]=h)}function mq(i){return i.__data__}function vq(i,s){if(!arguments.length)return Array.from(this,mq);var e=s?fq:yq,n=this._parents,a=this._groups;typeof i!="function"&&(i=Aq(i));for(var t=a.length,l=new Array(t),r=new Array(t),h=new Array(t),p=0;p<t;++p){var k=n[p],d=a[p],u=d.length,o=Fq(i.call(k,k&&k.__data__,p,n)),c=o.length,A=r[p]=new Array(c),g=l[p]=new Array(c),f=h[p]=new Array(u);e(k,d,A,g,f,o,s);for(var m=0,y=0,v,C;m<c;++m)if(v=A[m]){for(m>=y&&(y=m+1);!(C=g[y])&&++y<c;);v._next=C||null}}return l=new he(l,n),l._enter=r,l._exit=h,l}function Fq(i){return typeof i=="object"&&"length"in i?i:Array.from(i)}function Eq(){return new he(this._exit||this._groups.map(p1),this._parents)}function bq(i,s,e){var n=this.enter(),a=this,t=this.exit();return typeof i=="function"?(n=i(n),n&&(n=n.selection())):n=n.append(i+""),s!=null&&(a=s(a),a&&(a=a.selection())),e==null?t.remove():e(t),n&&a?n.merge(a).order():a}function Cq(i){for(var s=i.selection?i.selection():i,e=this._groups,n=s._groups,a=e.length,t=n.length,l=Math.min(a,t),r=new Array(a),h=0;h<l;++h)for(var p=e[h],k=n[h],d=p.length,u=r[h]=new Array(d),o,c=0;c<d;++c)(o=p[c]||k[c])&&(u[c]=o);for(;h<a;++h)r[h]=e[h];return new he(r,this._parents)}function _q(){for(var i=this._groups,s=-1,e=i.length;++s<e;)for(var n=i[s],a=n.length-1,t=n[a],l;--a>=0;)(l=n[a])&&(t&&l.compareDocumentPosition(t)^4&&t.parentNode.insertBefore(l,t),t=l);return this}function Dq(i){i||(i=xq);function s(d,u){return d&&u?i(d.__data__,u.__data__):!d-!u}for(var e=this._groups,n=e.length,a=new Array(n),t=0;t<n;++t){for(var l=e[t],r=l.length,h=a[t]=new Array(r),p,k=0;k<r;++k)(p=l[k])&&(h[k]=p);h.sort(s)}return new he(a,this._parents).order()}function xq(i,s){return i<s?-1:i>s?1:i>=s?0:NaN}function wq(){var i=arguments[0];return arguments[0]=this,i.apply(null,arguments),this}function Tq(){return Array.from(this)}function Sq(){for(var i=this._groups,s=0,e=i.length;s<e;++s)for(var n=i[s],a=0,t=n.length;a<t;++a){var l=n[a];if(l)return l}return null}function Iq(){let i=0;for(const s of this)++i;return i}function Rq(){return!this.node()}function Oq(i){for(var s=this._groups,e=0,n=s.length;e<n;++e)for(var a=s[e],t=0,l=a.length,r;t<l;++t)(r=a[t])&&i.call(r,r.__data__,t,a);return this}function Pq(i){return function(){this.removeAttribute(i)}}function Lq(i){return function(){this.removeAttributeNS(i.space,i.local)}}function Nq(i,s){return function(){this.setAttribute(i,s)}}function Mq(i,s){return function(){this.setAttributeNS(i.space,i.local,s)}}function $q(i,s){return function(){var e=s.apply(this,arguments);e==null?this.removeAttribute(i):this.setAttribute(i,e)}}function Vq(i,s){return function(){var e=s.apply(this,arguments);e==null?this.removeAttributeNS(i.space,i.local):this.setAttributeNS(i.space,i.local,e)}}function zq(i,s){var e=$p(i);if(arguments.length<2){var n=this.node();return e.local?n.getAttributeNS(e.space,e.local):n.getAttribute(e)}return this.each((s==null?e.local?Lq:Pq:typeof s=="function"?e.local?Vq:$q:e.local?Mq:Nq)(e,s))}function k1(i){return i.ownerDocument&&i.ownerDocument.defaultView||i.document&&i||i.defaultView}function qq(i){return function(){this.style.removeProperty(i)}}function Hq(i,s,e){return function(){this.style.setProperty(i,s,e)}}function jq(i,s,e){return function(){var n=s.apply(this,arguments);n==null?this.style.removeProperty(i):this.style.setProperty(i,n,e)}}function Uq(i,s,e){return arguments.length>1?this.each((s==null?qq:typeof s=="function"?jq:Hq)(i,s,e??"")):Et(this.node(),i)}function Et(i,s){return i.style.getPropertyValue(s)||k1(i).getComputedStyle(i,null).getPropertyValue(s)}function Gq(i){return function(){delete this[i]}}function Wq(i,s){return function(){this[i]=s}}function Kq(i,s){return function(){var e=s.apply(this,arguments);e==null?delete this[i]:this[i]=e}}function Yq(i,s){return arguments.length>1?this.each((s==null?Gq:typeof s=="function"?Kq:Wq)(i,s)):this.node()[i]}function d1(i){return i.trim().split(/^|\s+/)}function wc(i){return i.classList||new o1(i)}function o1(i){this._node=i,this._names=d1(i.getAttribute("class")||"")}o1.prototype={add:function(i){var s=this._names.indexOf(i);s<0&&(this._names.push(i),this._node.setAttribute("class",this._names.join(" ")))},remove:function(i){var s=this._names.indexOf(i);s>=0&&(this._names.splice(s,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(i){return this._names.indexOf(i)>=0}};function u1(i,s){for(var e=wc(i),n=-1,a=s.length;++n<a;)e.add(s[n])}function c1(i,s){for(var e=wc(i),n=-1,a=s.length;++n<a;)e.remove(s[n])}function Xq(i){return function(){u1(this,i)}}function Zq(i){return function(){c1(this,i)}}function Jq(i,s){return function(){(s.apply(this,arguments)?u1:c1)(this,i)}}function Qq(i,s){var e=d1(i+"");if(arguments.length<2){for(var n=wc(this.node()),a=-1,t=e.length;++a<t;)if(!n.contains(e[a]))return!1;return!0}return this.each((typeof s=="function"?Jq:s?Xq:Zq)(e,s))}function iH(){this.textContent=""}function sH(i){return function(){this.textContent=i}}function eH(i){return function(){var s=i.apply(this,arguments);this.textContent=s??""}}function nH(i){return arguments.length?this.each(i==null?iH:(typeof i=="function"?eH:sH)(i)):this.node().textContent}function aH(){this.innerHTML=""}function tH(i){return function(){this.innerHTML=i}}function lH(i){return function(){var s=i.apply(this,arguments);this.innerHTML=s??""}}function rH(i){return arguments.length?this.each(i==null?aH:(typeof i=="function"?lH:tH)(i)):this.node().innerHTML}function hH(){this.nextSibling&&this.parentNode.appendChild(this)}function pH(){return this.each(hH)}function kH(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function dH(){return this.each(kH)}function oH(i){var s=typeof i=="function"?i:t1(i);return this.select(function(){return this.appendChild(s.apply(this,arguments))})}function uH(){return null}function cH(i,s){var e=typeof i=="function"?i:t1(i),n=s==null?uH:typeof s=="function"?s:xc(s);return this.select(function(){return this.insertBefore(e.apply(this,arguments),n.apply(this,arguments)||null)})}function gH(){var i=this.parentNode;i&&i.removeChild(this)}function BH(){return this.each(gH)}function AH(){var i=this.cloneNode(!1),s=this.parentNode;return s?s.insertBefore(i,this.nextSibling):i}function yH(){var i=this.cloneNode(!0),s=this.parentNode;return s?s.insertBefore(i,this.nextSibling):i}function fH(i){return this.select(i?yH:AH)}function mH(i){return arguments.length?this.property("__data__",i):this.node().__data__}function vH(i){return function(s){i.call(this,s,this.__data__)}}function FH(i){return i.trim().split(/^|\s+/).map(function(s){var e="",n=s.indexOf(".");return n>=0&&(e=s.slice(n+1),s=s.slice(0,n)),{type:s,name:e}})}function EH(i){return function(){var s=this.__on;if(s){for(var e=0,n=-1,a=s.length,t;e<a;++e)t=s[e],(!i.type||t.type===i.type)&&t.name===i.name?this.removeEventListener(t.type,t.listener,t.options):s[++n]=t;++n?s.length=n:delete this.__on}}}function bH(i,s,e){return function(){var n=this.__on,a,t=vH(s);if(n){for(var l=0,r=n.length;l<r;++l)if((a=n[l]).type===i.type&&a.name===i.name){this.removeEventListener(a.type,a.listener,a.options),this.addEventListener(a.type,a.listener=t,a.options=e),a.value=s;return}}this.addEventListener(i.type,t,e),a={type:i.type,name:i.name,value:s,listener:t,options:e},n?n.push(a):this.__on=[a]}}function CH(i,s,e){var n=FH(i+""),a,t=n.length,l;if(arguments.length<2){var r=this.node().__on;if(r){for(var h=0,p=r.length,k;h<p;++h)for(a=0,k=r[h];a<t;++a)if((l=n[a]).type===k.type&&l.name===k.name)return k.value}return}for(r=s?bH:EH,a=0;a<t;++a)this.each(r(n[a],s,e));return this}function g1(i,s,e){var n=k1(i),a=n.CustomEvent;typeof a=="function"?a=new a(s,e):(a=n.document.createEvent("Event"),e?(a.initEvent(s,e.bubbles,e.cancelable),a.detail=e.detail):a.initEvent(s,!1,!1)),i.dispatchEvent(a)}function _H(i,s){return function(){return g1(this,i,s)}}function DH(i,s){return function(){return g1(this,i,s.apply(this,arguments))}}function xH(i,s){return this.each((typeof s=="function"?DH:_H)(i,s))}function*wH(){for(var i=this._groups,s=0,e=i.length;s<e;++s)for(var n=i[s],a=0,t=n.length,l;a<t;++a)(l=n[a])&&(yield l)}var B1=[null];function he(i,s){this._groups=i,this._parents=s}function Cr(){return new he([[document.documentElement]],B1)}function TH(){return this}he.prototype=Cr.prototype={constructor:he,select:eq,selectAll:lq,selectChild:kq,selectChildren:cq,filter:gq,data:vq,enter:Bq,exit:Eq,join:bq,merge:Cq,selection:TH,order:_q,sort:Dq,call:wq,nodes:Tq,node:Sq,size:Iq,empty:Rq,each:Oq,attr:zq,style:Uq,property:Yq,classed:Qq,text:nH,html:rH,raise:pH,lower:dH,append:oH,insert:cH,remove:BH,clone:fH,datum:mH,on:CH,dispatch:xH,[Symbol.iterator]:wH};function cn(i){return typeof i=="string"?new he([[document.querySelector(i)]],[document.documentElement]):new he([[i]],B1)}function SH(i){let s;for(;s=i.sourceEvent;)i=s;return i}function pn(i,s){if(i=SH(i),s===void 0&&(s=i.currentTarget),s){var e=s.ownerSVGElement||s;if(e.createSVGPoint){var n=e.createSVGPoint();return n.x=i.clientX,n.y=i.clientY,n=n.matrixTransform(s.getScreenCTM().inverse()),[n.x,n.y]}if(s.getBoundingClientRect){var a=s.getBoundingClientRect();return[i.clientX-a.left-s.clientLeft,i.clientY-a.top-s.clientTop]}}return[i.pageX,i.pageY]}const Wo={capture:!0,passive:!1};function Ko(i){i.preventDefault(),i.stopImmediatePropagation()}function IH(i){var s=i.document.documentElement,e=cn(i).on("dragstart.drag",Ko,Wo);"onselectstart"in s?e.on("selectstart.drag",Ko,Wo):(s.__noselect=s.style.MozUserSelect,s.style.MozUserSelect="none")}function RH(i,s){var e=i.document.documentElement,n=cn(i).on("dragstart.drag",null);s&&(n.on("click.drag",Ko,Wo),setTimeout(function(){n.on("click.drag",null)},0)),"onselectstart"in e?n.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function Tc(i,s,e){i.prototype=s.prototype=e,e.constructor=i}function A1(i,s){var e=Object.create(i.prototype);for(var n in s)e[n]=s[n];return e}function _r(){}var jl=.7,jh=1/jl,lt="\\s*([+-]?\\d+)\\s*",Ul="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",Ue="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",OH=/^#([0-9a-f]{3,8})$/,PH=new RegExp(`^rgb\\(${lt},${lt},${lt}\\)$`),LH=new RegExp(`^rgb\\(${Ue},${Ue},${Ue}\\)$`),NH=new RegExp(`^rgba\\(${lt},${lt},${lt},${Ul}\\)$`),MH=new RegExp(`^rgba\\(${Ue},${Ue},${Ue},${Ul}\\)$`),$H=new RegExp(`^hsl\\(${Ul},${Ue},${Ue}\\)$`),VH=new RegExp(`^hsla\\(${Ul},${Ue},${Ue},${Ul}\\)$`),DA={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Tc(_r,Gl,{copy(i){return Object.assign(new this.constructor,this,i)},displayable(){return this.rgb().displayable()},hex:xA,formatHex:xA,formatHex8:zH,formatHsl:qH,formatRgb:wA,toString:wA});function xA(){return this.rgb().formatHex()}function zH(){return this.rgb().formatHex8()}function qH(){return y1(this).formatHsl()}function wA(){return this.rgb().formatRgb()}function Gl(i){var s,e;return i=(i+"").trim().toLowerCase(),(s=OH.exec(i))?(e=s[1].length,s=parseInt(s[1],16),e===6?TA(s):e===3?new Us(s>>8&15|s>>4&240,s>>4&15|s&240,(s&15)<<4|s&15,1):e===8?Yr(s>>24&255,s>>16&255,s>>8&255,(s&255)/255):e===4?Yr(s>>12&15|s>>8&240,s>>8&15|s>>4&240,s>>4&15|s&240,((s&15)<<4|s&15)/255):null):(s=PH.exec(i))?new Us(s[1],s[2],s[3],1):(s=LH.exec(i))?new Us(s[1]*255/100,s[2]*255/100,s[3]*255/100,1):(s=NH.exec(i))?Yr(s[1],s[2],s[3],s[4]):(s=MH.exec(i))?Yr(s[1]*255/100,s[2]*255/100,s[3]*255/100,s[4]):(s=$H.exec(i))?RA(s[1],s[2]/100,s[3]/100,1):(s=VH.exec(i))?RA(s[1],s[2]/100,s[3]/100,s[4]):DA.hasOwnProperty(i)?TA(DA[i]):i==="transparent"?new Us(NaN,NaN,NaN,0):null}function TA(i){return new Us(i>>16&255,i>>8&255,i&255,1)}function Yr(i,s,e,n){return n<=0&&(i=s=e=NaN),new Us(i,s,e,n)}function HH(i){return i instanceof _r||(i=Gl(i)),i?(i=i.rgb(),new Us(i.r,i.g,i.b,i.opacity)):new Us}function Yo(i,s,e,n){return arguments.length===1?HH(i):new Us(i,s,e,n??1)}function Us(i,s,e,n){this.r=+i,this.g=+s,this.b=+e,this.opacity=+n}Tc(Us,Yo,A1(_r,{brighter(i){return i=i==null?jh:Math.pow(jh,i),new Us(this.r*i,this.g*i,this.b*i,this.opacity)},darker(i){return i=i==null?jl:Math.pow(jl,i),new Us(this.r*i,this.g*i,this.b*i,this.opacity)},rgb(){return this},clamp(){return new Us(Ca(this.r),Ca(this.g),Ca(this.b),Uh(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:SA,formatHex:SA,formatHex8:jH,formatRgb:IA,toString:IA}));function SA(){return`#${fa(this.r)}${fa(this.g)}${fa(this.b)}`}function jH(){return`#${fa(this.r)}${fa(this.g)}${fa(this.b)}${fa((isNaN(this.opacity)?1:this.opacity)*255)}`}function IA(){const i=Uh(this.opacity);return`${i===1?"rgb(":"rgba("}${Ca(this.r)}, ${Ca(this.g)}, ${Ca(this.b)}${i===1?")":`, ${i})`}`}function Uh(i){return isNaN(i)?1:Math.max(0,Math.min(1,i))}function Ca(i){return Math.max(0,Math.min(255,Math.round(i)||0))}function fa(i){return i=Ca(i),(i<16?"0":"")+i.toString(16)}function RA(i,s,e,n){return n<=0?i=s=e=NaN:e<=0||e>=1?i=s=NaN:s<=0&&(i=NaN),new ve(i,s,e,n)}function y1(i){if(i instanceof ve)return new ve(i.h,i.s,i.l,i.opacity);if(i instanceof _r||(i=Gl(i)),!i)return new ve;if(i instanceof ve)return i;i=i.rgb();var s=i.r/255,e=i.g/255,n=i.b/255,a=Math.min(s,e,n),t=Math.max(s,e,n),l=NaN,r=t-a,h=(t+a)/2;return r?(s===t?l=(e-n)/r+(e<n)*6:e===t?l=(n-s)/r+2:l=(s-e)/r+4,r/=h<.5?t+a:2-t-a,l*=60):r=h>0&&h<1?0:l,new ve(l,r,h,i.opacity)}function UH(i,s,e,n){return arguments.length===1?y1(i):new ve(i,s,e,n??1)}function ve(i,s,e,n){this.h=+i,this.s=+s,this.l=+e,this.opacity=+n}Tc(ve,UH,A1(_r,{brighter(i){return i=i==null?jh:Math.pow(jh,i),new ve(this.h,this.s,this.l*i,this.opacity)},darker(i){return i=i==null?jl:Math.pow(jl,i),new ve(this.h,this.s,this.l*i,this.opacity)},rgb(){var i=this.h%360+(this.h<0)*360,s=isNaN(i)||isNaN(this.s)?0:this.s,e=this.l,n=e+(e<.5?e:1-e)*s,a=2*e-n;return new Us(Ld(i>=240?i-240:i+120,a,n),Ld(i,a,n),Ld(i<120?i+240:i-120,a,n),this.opacity)},clamp(){return new ve(OA(this.h),Xr(this.s),Xr(this.l),Uh(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const i=Uh(this.opacity);return`${i===1?"hsl(":"hsla("}${OA(this.h)}, ${Xr(this.s)*100}%, ${Xr(this.l)*100}%${i===1?")":`, ${i})`}`}}));function OA(i){return i=(i||0)%360,i<0?i+360:i}function Xr(i){return Math.max(0,Math.min(1,i||0))}function Ld(i,s,e){return(i<60?s+(e-s)*i/60:i<180?e:i<240?s+(e-s)*(240-i)/60:s)*255}const f1=i=>()=>i;function GH(i,s){return function(e){return i+e*s}}function WH(i,s,e){return i=Math.pow(i,e),s=Math.pow(s,e)-i,e=1/e,function(n){return Math.pow(i+n*s,e)}}function KH(i){return(i=+i)==1?m1:function(s,e){return e-s?WH(s,e,i):f1(isNaN(s)?e:s)}}function m1(i,s){var e=s-i;return e?GH(i,e):f1(isNaN(i)?s:i)}const PA=function i(s){var e=KH(s);function n(a,t){var l=e((a=Yo(a)).r,(t=Yo(t)).r),r=e(a.g,t.g),h=e(a.b,t.b),p=m1(a.opacity,t.opacity);return function(k){return a.r=l(k),a.g=r(k),a.b=h(k),a.opacity=p(k),a+""}}return n.gamma=i,n}(1);function Hn(i,s){return i=+i,s=+s,function(e){return i*(1-e)+s*e}}var Xo=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Nd=new RegExp(Xo.source,"g");function YH(i){return function(){return i}}function XH(i){return function(s){return i(s)+""}}function ZH(i,s){var e=Xo.lastIndex=Nd.lastIndex=0,n,a,t,l=-1,r=[],h=[];for(i=i+"",s=s+"";(n=Xo.exec(i))&&(a=Nd.exec(s));)(t=a.index)>e&&(t=s.slice(e,t),r[l]?r[l]+=t:r[++l]=t),(n=n[0])===(a=a[0])?r[l]?r[l]+=a:r[++l]=a:(r[++l]=null,h.push({i:l,x:Hn(n,a)})),e=Nd.lastIndex;return e<s.length&&(t=s.slice(e),r[l]?r[l]+=t:r[++l]=t),r.length<2?h[0]?XH(h[0].x):YH(s):(s=h.length,function(p){for(var k=0,d;k<s;++k)r[(d=h[k]).i]=d.x(p);return r.join("")})}var LA=180/Math.PI,Zo={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function v1(i,s,e,n,a,t){var l,r,h;return(l=Math.sqrt(i*i+s*s))&&(i/=l,s/=l),(h=i*e+s*n)&&(e-=i*h,n-=s*h),(r=Math.sqrt(e*e+n*n))&&(e/=r,n/=r,h/=r),i*n<s*e&&(i=-i,s=-s,h=-h,l=-l),{translateX:a,translateY:t,rotate:Math.atan2(s,i)*LA,skewX:Math.atan(h)*LA,scaleX:l,scaleY:r}}var Zr;function JH(i){const s=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(i+"");return s.isIdentity?Zo:v1(s.a,s.b,s.c,s.d,s.e,s.f)}function QH(i){return i==null||(Zr||(Zr=document.createElementNS("http://www.w3.org/2000/svg","g")),Zr.setAttribute("transform",i),!(i=Zr.transform.baseVal.consolidate()))?Zo:(i=i.matrix,v1(i.a,i.b,i.c,i.d,i.e,i.f))}function F1(i,s,e,n){function a(p){return p.length?p.pop()+" ":""}function t(p,k,d,u,o,c){if(p!==d||k!==u){var A=o.push("translate(",null,s,null,e);c.push({i:A-4,x:Hn(p,d)},{i:A-2,x:Hn(k,u)})}else(d||u)&&o.push("translate("+d+s+u+e)}function l(p,k,d,u){p!==k?(p-k>180?k+=360:k-p>180&&(p+=360),u.push({i:d.push(a(d)+"rotate(",null,n)-2,x:Hn(p,k)})):k&&d.push(a(d)+"rotate("+k+n)}function r(p,k,d,u){p!==k?u.push({i:d.push(a(d)+"skewX(",null,n)-2,x:Hn(p,k)}):k&&d.push(a(d)+"skewX("+k+n)}function h(p,k,d,u,o,c){if(p!==d||k!==u){var A=o.push(a(o)+"scale(",null,",",null,")");c.push({i:A-4,x:Hn(p,d)},{i:A-2,x:Hn(k,u)})}else(d!==1||u!==1)&&o.push(a(o)+"scale("+d+","+u+")")}return function(p,k){var d=[],u=[];return p=i(p),k=i(k),t(p.translateX,p.translateY,k.translateX,k.translateY,d,u),l(p.rotate,k.rotate,d,u),r(p.skewX,k.skewX,d,u),h(p.scaleX,p.scaleY,k.scaleX,k.scaleY,d,u),p=k=null,function(o){for(var c=-1,A=u.length,g;++c<A;)d[(g=u[c]).i]=g.x(o);return d.join("")}}}var ij=F1(JH,"px, ","px)","deg)"),sj=F1(QH,", ",")",")"),ej=1e-12;function NA(i){return((i=Math.exp(i))+1/i)/2}function nj(i){return((i=Math.exp(i))-1/i)/2}function aj(i){return((i=Math.exp(2*i))-1)/(i+1)}const tj=function i(s,e,n){function a(t,l){var r=t[0],h=t[1],p=t[2],k=l[0],d=l[1],u=l[2],o=k-r,c=d-h,A=o*o+c*c,g,f;if(A<ej)f=Math.log(u/p)/s,g=function(L){return[r+L*o,h+L*c,p*Math.exp(s*L*f)]};else{var m=Math.sqrt(A),y=(u*u-p*p+n*A)/(2*p*e*m),v=(u*u-p*p-n*A)/(2*u*e*m),C=Math.log(Math.sqrt(y*y+1)-y),S=Math.log(Math.sqrt(v*v+1)-v);f=(S-C)/s,g=function(L){var w=L*f,_=NA(C),R=p/(e*m)*(_*aj(s*w+C)-nj(C));return[r+R*o,h+R*c,p*_/NA(s*w+C)]}}return g.duration=f*1e3*s/Math.SQRT2,g}return a.rho=function(t){var l=Math.max(.001,+t),r=l*l,h=r*r;return i(l,r,h)},a}(Math.SQRT2,2,4);var bt=0,Qt=0,jt=0,E1=1e3,Gh,il,Wh=0,Ia=0,Vp=0,Wl=typeof performance=="object"&&performance.now?performance:Date,b1=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(i){setTimeout(i,17)};function Sc(){return Ia||(b1(lj),Ia=Wl.now()+Vp)}function lj(){Ia=0}function Kh(){this._call=this._time=this._next=null}Kh.prototype=Ic.prototype={constructor:Kh,restart:function(i,s,e){if(typeof i!="function")throw new TypeError("callback is not a function");e=(e==null?Sc():+e)+(s==null?0:+s),!this._next&&il!==this&&(il?il._next=this:Gh=this,il=this),this._call=i,this._time=e,Jo()},stop:function(){this._call&&(this._call=null,this._time=1/0,Jo())}};function Ic(i,s,e){var n=new Kh;return n.restart(i,s,e),n}function rj(){Sc(),++bt;for(var i=Gh,s;i;)(s=Ia-i._time)>=0&&i._call.call(void 0,s),i=i._next;--bt}function MA(){Ia=(Wh=Wl.now())+Vp,bt=Qt=0;try{rj()}finally{bt=0,pj(),Ia=0}}function hj(){var i=Wl.now(),s=i-Wh;s>E1&&(Vp-=s,Wh=i)}function pj(){for(var i,s=Gh,e,n=1/0;s;)s._call?(n>s._time&&(n=s._time),i=s,s=s._next):(e=s._next,s._next=null,s=i?i._next=e:Gh=e);il=i,Jo(n)}function Jo(i){if(!bt){Qt&&(Qt=clearTimeout(Qt));var s=i-Ia;s>24?(i<1/0&&(Qt=setTimeout(MA,i-Wl.now()-Vp)),jt&&(jt=clearInterval(jt))):(jt||(Wh=Wl.now(),jt=setInterval(hj,E1)),bt=1,b1(MA))}}function $A(i,s,e){var n=new Kh;return s=s==null?0:+s,n.restart(a=>{n.stop(),i(a+s)},s,e),n}var kj=Mp("start","end","cancel","interrupt"),dj=[],C1=0,VA=1,Qo=2,uh=3,zA=4,iu=5,ch=6;function zp(i,s,e,n,a,t){var l=i.__transition;if(!l)i.__transition={};else if(e in l)return;oj(i,e,{name:s,index:n,group:a,on:kj,tween:dj,time:t.time,delay:t.delay,duration:t.duration,ease:t.ease,timer:null,state:C1})}function Rc(i,s){var e=Se(i,s);if(e.state>C1)throw new Error("too late; already scheduled");return e}function sn(i,s){var e=Se(i,s);if(e.state>uh)throw new Error("too late; already running");return e}function Se(i,s){var e=i.__transition;if(!e||!(e=e[s]))throw new Error("transition not found");return e}function oj(i,s,e){var n=i.__transition,a;n[s]=e,e.timer=Ic(t,0,e.time);function t(p){e.state=VA,e.timer.restart(l,e.delay,e.time),e.delay<=p&&l(p-e.delay)}function l(p){var k,d,u,o;if(e.state!==VA)return h();for(k in n)if(o=n[k],o.name===e.name){if(o.state===uh)return $A(l);o.state===zA?(o.state=ch,o.timer.stop(),o.on.call("interrupt",i,i.__data__,o.index,o.group),delete n[k]):+k<s&&(o.state=ch,o.timer.stop(),o.on.call("cancel",i,i.__data__,o.index,o.group),delete n[k])}if($A(function(){e.state===uh&&(e.state=zA,e.timer.restart(r,e.delay,e.time),r(p))}),e.state=Qo,e.on.call("start",i,i.__data__,e.index,e.group),e.state===Qo){for(e.state=uh,a=new Array(u=e.tween.length),k=0,d=-1;k<u;++k)(o=e.tween[k].value.call(i,i.__data__,e.index,e.group))&&(a[++d]=o);a.length=d+1}}function r(p){for(var k=p<e.duration?e.ease.call(null,p/e.duration):(e.timer.restart(h),e.state=iu,1),d=-1,u=a.length;++d<u;)a[d].call(i,k);e.state===iu&&(e.on.call("end",i,i.__data__,e.index,e.group),h())}function h(){e.state=ch,e.timer.stop(),delete n[s];for(var p in n)return;delete i.__transition}}function gh(i,s){var e=i.__transition,n,a,t=!0,l;if(e){s=s==null?null:s+"";for(l in e){if((n=e[l]).name!==s){t=!1;continue}a=n.state>Qo&&n.state<iu,n.state=ch,n.timer.stop(),n.on.call(a?"interrupt":"cancel",i,i.__data__,n.index,n.group),delete e[l]}t&&delete i.__transition}}function uj(i){return this.each(function(){gh(this,i)})}function cj(i,s){var e,n;return function(){var a=sn(this,i),t=a.tween;if(t!==e){n=e=t;for(var l=0,r=n.length;l<r;++l)if(n[l].name===s){n=n.slice(),n.splice(l,1);break}}a.tween=n}}function gj(i,s,e){var n,a;if(typeof e!="function")throw new Error;return function(){var t=sn(this,i),l=t.tween;if(l!==n){a=(n=l).slice();for(var r={name:s,value:e},h=0,p=a.length;h<p;++h)if(a[h].name===s){a[h]=r;break}h===p&&a.push(r)}t.tween=a}}function Bj(i,s){var e=this._id;if(i+="",arguments.length<2){for(var n=Se(this.node(),e).tween,a=0,t=n.length,l;a<t;++a)if((l=n[a]).name===i)return l.value;return null}return this.each((s==null?cj:gj)(e,i,s))}function Oc(i,s,e){var n=i._id;return i.each(function(){var a=sn(this,n);(a.value||(a.value={}))[s]=e.apply(this,arguments)}),function(a){return Se(a,n).value[s]}}function _1(i,s){var e;return(typeof s=="number"?Hn:s instanceof Gl?PA:(e=Gl(s))?(s=e,PA):ZH)(i,s)}function Aj(i){return function(){this.removeAttribute(i)}}function yj(i){return function(){this.removeAttributeNS(i.space,i.local)}}function fj(i,s,e){var n,a=e+"",t;return function(){var l=this.getAttribute(i);return l===a?null:l===n?t:t=s(n=l,e)}}function mj(i,s,e){var n,a=e+"",t;return function(){var l=this.getAttributeNS(i.space,i.local);return l===a?null:l===n?t:t=s(n=l,e)}}function vj(i,s,e){var n,a,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttribute(i):(l=this.getAttribute(i),h=r+"",l===h?null:l===n&&h===a?t:(a=h,t=s(n=l,r)))}}function Fj(i,s,e){var n,a,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttributeNS(i.space,i.local):(l=this.getAttributeNS(i.space,i.local),h=r+"",l===h?null:l===n&&h===a?t:(a=h,t=s(n=l,r)))}}function Ej(i,s){var e=$p(i),n=e==="transform"?sj:_1;return this.attrTween(i,typeof s=="function"?(e.local?Fj:vj)(e,n,Oc(this,"attr."+i,s)):s==null?(e.local?yj:Aj)(e):(e.local?mj:fj)(e,n,s))}function bj(i,s){return function(e){this.setAttribute(i,s.call(this,e))}}function Cj(i,s){return function(e){this.setAttributeNS(i.space,i.local,s.call(this,e))}}function _j(i,s){var e,n;function a(){var t=s.apply(this,arguments);return t!==n&&(e=(n=t)&&Cj(i,t)),e}return a._value=s,a}function Dj(i,s){var e,n;function a(){var t=s.apply(this,arguments);return t!==n&&(e=(n=t)&&bj(i,t)),e}return a._value=s,a}function xj(i,s){var e="attr."+i;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(s==null)return this.tween(e,null);if(typeof s!="function")throw new Error;var n=$p(i);return this.tween(e,(n.local?_j:Dj)(n,s))}function wj(i,s){return function(){Rc(this,i).delay=+s.apply(this,arguments)}}function Tj(i,s){return s=+s,function(){Rc(this,i).delay=s}}function Sj(i){var s=this._id;return arguments.length?this.each((typeof i=="function"?wj:Tj)(s,i)):Se(this.node(),s).delay}function Ij(i,s){return function(){sn(this,i).duration=+s.apply(this,arguments)}}function Rj(i,s){return s=+s,function(){sn(this,i).duration=s}}function Oj(i){var s=this._id;return arguments.length?this.each((typeof i=="function"?Ij:Rj)(s,i)):Se(this.node(),s).duration}function Pj(i,s){if(typeof s!="function")throw new Error;return function(){sn(this,i).ease=s}}function Lj(i){var s=this._id;return arguments.length?this.each(Pj(s,i)):Se(this.node(),s).ease}function Nj(i,s){return function(){var e=s.apply(this,arguments);if(typeof e!="function")throw new Error;sn(this,i).ease=e}}function Mj(i){if(typeof i!="function")throw new Error;return this.each(Nj(this._id,i))}function $j(i){typeof i!="function"&&(i=r1(i));for(var s=this._groups,e=s.length,n=new Array(e),a=0;a<e;++a)for(var t=s[a],l=t.length,r=n[a]=[],h,p=0;p<l;++p)(h=t[p])&&i.call(h,h.__data__,p,t)&&r.push(h);return new Fn(n,this._parents,this._name,this._id)}function Vj(i){if(i._id!==this._id)throw new Error;for(var s=this._groups,e=i._groups,n=s.length,a=e.length,t=Math.min(n,a),l=new Array(n),r=0;r<t;++r)for(var h=s[r],p=e[r],k=h.length,d=l[r]=new Array(k),u,o=0;o<k;++o)(u=h[o]||p[o])&&(d[o]=u);for(;r<n;++r)l[r]=s[r];return new Fn(l,this._parents,this._name,this._id)}function zj(i){return(i+"").trim().split(/^|\s+/).every(function(s){var e=s.indexOf(".");return e>=0&&(s=s.slice(0,e)),!s||s==="start"})}function qj(i,s,e){var n,a,t=zj(s)?Rc:sn;return function(){var l=t(this,i),r=l.on;r!==n&&(a=(n=r).copy()).on(s,e),l.on=a}}function Hj(i,s){var e=this._id;return arguments.length<2?Se(this.node(),e).on.on(i):this.each(qj(e,i,s))}function jj(i){return function(){var s=this.parentNode;for(var e in this.__transition)if(+e!==i)return;s&&s.removeChild(this)}}function Uj(){return this.on("end.remove",jj(this._id))}function Gj(i){var s=this._name,e=this._id;typeof i!="function"&&(i=xc(i));for(var n=this._groups,a=n.length,t=new Array(a),l=0;l<a;++l)for(var r=n[l],h=r.length,p=t[l]=new Array(h),k,d,u=0;u<h;++u)(k=r[u])&&(d=i.call(k,k.__data__,u,r))&&("__data__"in k&&(d.__data__=k.__data__),p[u]=d,zp(p[u],s,e,u,p,Se(k,e)));return new Fn(t,this._parents,s,e)}function Wj(i){var s=this._name,e=this._id;typeof i!="function"&&(i=l1(i));for(var n=this._groups,a=n.length,t=[],l=[],r=0;r<a;++r)for(var h=n[r],p=h.length,k,d=0;d<p;++d)if(k=h[d]){for(var u=i.call(k,k.__data__,d,h),o,c=Se(k,e),A=0,g=u.length;A<g;++A)(o=u[A])&&zp(o,s,e,A,u,c);t.push(u),l.push(k)}return new Fn(t,l,s,e)}var Kj=Cr.prototype.constructor;function Yj(){return new Kj(this._groups,this._parents)}function Xj(i,s){var e,n,a;return function(){var t=Et(this,i),l=(this.style.removeProperty(i),Et(this,i));return t===l?null:t===e&&l===n?a:a=s(e=t,n=l)}}function D1(i){return function(){this.style.removeProperty(i)}}function Zj(i,s,e){var n,a=e+"",t;return function(){var l=Et(this,i);return l===a?null:l===n?t:t=s(n=l,e)}}function Jj(i,s,e){var n,a,t;return function(){var l=Et(this,i),r=e(this),h=r+"";return r==null&&(h=r=(this.style.removeProperty(i),Et(this,i))),l===h?null:l===n&&h===a?t:(a=h,t=s(n=l,r))}}function Qj(i,s){var e,n,a,t="style."+s,l="end."+t,r;return function(){var h=sn(this,i),p=h.on,k=h.value[t]==null?r||(r=D1(s)):void 0;(p!==e||a!==k)&&(n=(e=p).copy()).on(l,a=k),h.on=n}}function iU(i,s,e){var n=(i+="")=="transform"?ij:_1;return s==null?this.styleTween(i,Xj(i,n)).on("end.style."+i,D1(i)):typeof s=="function"?this.styleTween(i,Jj(i,n,Oc(this,"style."+i,s))).each(Qj(this._id,i)):this.styleTween(i,Zj(i,n,s),e).on("end.style."+i,null)}function sU(i,s,e){return function(n){this.style.setProperty(i,s.call(this,n),e)}}function eU(i,s,e){var n,a;function t(){var l=s.apply(this,arguments);return l!==a&&(n=(a=l)&&sU(i,l,e)),n}return t._value=s,t}function nU(i,s,e){var n="style."+(i+="");if(arguments.length<2)return(n=this.tween(n))&&n._value;if(s==null)return this.tween(n,null);if(typeof s!="function")throw new Error;return this.tween(n,eU(i,s,e??""))}function aU(i){return function(){this.textContent=i}}function tU(i){return function(){var s=i(this);this.textContent=s??""}}function lU(i){return this.tween("text",typeof i=="function"?tU(Oc(this,"text",i)):aU(i==null?"":i+""))}function rU(i){return function(s){this.textContent=i.call(this,s)}}function hU(i){var s,e;function n(){var a=i.apply(this,arguments);return a!==e&&(s=(e=a)&&rU(a)),s}return n._value=i,n}function pU(i){var s="text";if(arguments.length<1)return(s=this.tween(s))&&s._value;if(i==null)return this.tween(s,null);if(typeof i!="function")throw new Error;return this.tween(s,hU(i))}function kU(){for(var i=this._name,s=this._id,e=x1(),n=this._groups,a=n.length,t=0;t<a;++t)for(var l=n[t],r=l.length,h,p=0;p<r;++p)if(h=l[p]){var k=Se(h,s);zp(h,i,e,p,l,{time:k.time+k.delay+k.duration,delay:0,duration:k.duration,ease:k.ease})}return new Fn(n,this._parents,i,e)}function dU(){var i,s,e=this,n=e._id,a=e.size();return new Promise(function(t,l){var r={value:l},h={value:function(){--a===0&&t()}};e.each(function(){var p=sn(this,n),k=p.on;k!==i&&(s=(i=k).copy(),s._.cancel.push(r),s._.interrupt.push(r),s._.end.push(h)),p.on=s}),a===0&&t()})}var oU=0;function Fn(i,s,e,n){this._groups=i,this._parents=s,this._name=e,this._id=n}function x1(){return++oU}var ln=Cr.prototype;Fn.prototype={constructor:Fn,select:Gj,selectAll:Wj,selectChild:ln.selectChild,selectChildren:ln.selectChildren,filter:$j,merge:Vj,selection:Yj,transition:kU,call:ln.call,nodes:ln.nodes,node:ln.node,size:ln.size,empty:ln.empty,each:ln.each,on:Hj,attr:Ej,attrTween:xj,style:iU,styleTween:nU,text:lU,textTween:pU,remove:Uj,tween:Bj,delay:Sj,duration:Oj,ease:Lj,easeVarying:Mj,end:dU,[Symbol.iterator]:ln[Symbol.iterator]};function uU(i){return((i*=2)<=1?i*i*i:(i-=2)*i*i+2)/2}var cU={time:null,delay:0,duration:250,ease:uU};function gU(i,s){for(var e;!(e=i.__transition)||!(e=e[s]);)if(!(i=i.parentNode))throw new Error(`transition ${s} not found`);return e}function BU(i){var s,e;i instanceof Fn?(s=i._id,i=i._name):(s=x1(),(e=cU).time=Sc(),i=i==null?null:i+"");for(var n=this._groups,a=n.length,t=0;t<a;++t)for(var l=n[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&zp(h,i,s,p,l,e||gU(h,s));return new Fn(n,this._parents,i,s)}Cr.prototype.interrupt=uj;Cr.prototype.transition=BU;function qA(i,s){var e,n=1;i==null&&(i=0),s==null&&(s=0);function a(){var t,l=e.length,r,h=0,p=0;for(t=0;t<l;++t)r=e[t],h+=r.x,p+=r.y;for(h=(h/l-i)*n,p=(p/l-s)*n,t=0;t<l;++t)r=e[t],r.x-=h,r.y-=p}return a.initialize=function(t){e=t},a.x=function(t){return arguments.length?(i=+t,a):i},a.y=function(t){return arguments.length?(s=+t,a):s},a.strength=function(t){return arguments.length?(n=+t,a):n},a}function AU(i){const s=+this._x.call(null,i),e=+this._y.call(null,i);return w1(this.cover(s,e),s,e,i)}function w1(i,s,e,n){if(isNaN(s)||isNaN(e))return i;var a,t=i._root,l={data:n},r=i._x0,h=i._y0,p=i._x1,k=i._y1,d,u,o,c,A,g,f,m;if(!t)return i._root=l,i;for(;t.length;)if((A=s>=(d=(r+p)/2))?r=d:p=d,(g=e>=(u=(h+k)/2))?h=u:k=u,a=t,!(t=t[f=g<<1|A]))return a[f]=l,i;if(o=+i._x.call(null,t.data),c=+i._y.call(null,t.data),s===o&&e===c)return l.next=t,a?a[f]=l:i._root=l,i;do a=a?a[f]=new Array(4):i._root=new Array(4),(A=s>=(d=(r+p)/2))?r=d:p=d,(g=e>=(u=(h+k)/2))?h=u:k=u;while((f=g<<1|A)===(m=(c>=u)<<1|o>=d));return a[m]=t,a[f]=l,i}function yU(i){var s,e,n=i.length,a,t,l=new Array(n),r=new Array(n),h=1/0,p=1/0,k=-1/0,d=-1/0;for(e=0;e<n;++e)isNaN(a=+this._x.call(null,s=i[e]))||isNaN(t=+this._y.call(null,s))||(l[e]=a,r[e]=t,a<h&&(h=a),a>k&&(k=a),t<p&&(p=t),t>d&&(d=t));if(h>k||p>d)return this;for(this.cover(h,p).cover(k,d),e=0;e<n;++e)w1(this,l[e],r[e],i[e]);return this}function fU(i,s){if(isNaN(i=+i)||isNaN(s=+s))return this;var e=this._x0,n=this._y0,a=this._x1,t=this._y1;if(isNaN(e))a=(e=Math.floor(i))+1,t=(n=Math.floor(s))+1;else{for(var l=a-e||1,r=this._root,h,p;e>i||i>=a||n>s||s>=t;)switch(p=(s<n)<<1|i<e,h=new Array(4),h[p]=r,r=h,l*=2,p){case 0:a=e+l,t=n+l;break;case 1:e=a-l,t=n+l;break;case 2:a=e+l,n=t-l;break;case 3:e=a-l,n=t-l;break}this._root&&this._root.length&&(this._root=r)}return this._x0=e,this._y0=n,this._x1=a,this._y1=t,this}function mU(){var i=[];return this.visit(function(s){if(!s.length)do i.push(s.data);while(s=s.next)}),i}function vU(i){return arguments.length?this.cover(+i[0][0],+i[0][1]).cover(+i[1][0],+i[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function Vs(i,s,e,n,a){this.node=i,this.x0=s,this.y0=e,this.x1=n,this.y1=a}function FU(i,s,e){var n,a=this._x0,t=this._y0,l,r,h,p,k=this._x1,d=this._y1,u=[],o=this._root,c,A;for(o&&u.push(new Vs(o,a,t,k,d)),e==null?e=1/0:(a=i-e,t=s-e,k=i+e,d=s+e,e*=e);c=u.pop();)if(!(!(o=c.node)||(l=c.x0)>k||(r=c.y0)>d||(h=c.x1)<a||(p=c.y1)<t))if(o.length){var g=(l+h)/2,f=(r+p)/2;u.push(new Vs(o[3],g,f,h,p),new Vs(o[2],l,f,g,p),new Vs(o[1],g,r,h,f),new Vs(o[0],l,r,g,f)),(A=(s>=f)<<1|i>=g)&&(c=u[u.length-1],u[u.length-1]=u[u.length-1-A],u[u.length-1-A]=c)}else{var m=i-+this._x.call(null,o.data),y=s-+this._y.call(null,o.data),v=m*m+y*y;if(v<e){var C=Math.sqrt(e=v);a=i-C,t=s-C,k=i+C,d=s+C,n=o.data}}return n}function EU(i){if(isNaN(k=+this._x.call(null,i))||isNaN(d=+this._y.call(null,i)))return this;var s,e=this._root,n,a,t,l=this._x0,r=this._y0,h=this._x1,p=this._y1,k,d,u,o,c,A,g,f;if(!e)return this;if(e.length)for(;;){if((c=k>=(u=(l+h)/2))?l=u:h=u,(A=d>=(o=(r+p)/2))?r=o:p=o,s=e,!(e=e[g=A<<1|c]))return this;if(!e.length)break;(s[g+1&3]||s[g+2&3]||s[g+3&3])&&(n=s,f=g)}for(;e.data!==i;)if(a=e,!(e=e.next))return this;return(t=e.next)&&delete e.next,a?(t?a.next=t:delete a.next,this):s?(t?s[g]=t:delete s[g],(e=s[0]||s[1]||s[2]||s[3])&&e===(s[3]||s[2]||s[1]||s[0])&&!e.length&&(n?n[f]=e:this._root=e),this):(this._root=t,this)}function bU(i){for(var s=0,e=i.length;s<e;++s)this.remove(i[s]);return this}function CU(){return this._root}function _U(){var i=0;return this.visit(function(s){if(!s.length)do++i;while(s=s.next)}),i}function DU(i){var s=[],e,n=this._root,a,t,l,r,h;for(n&&s.push(new Vs(n,this._x0,this._y0,this._x1,this._y1));e=s.pop();)if(!i(n=e.node,t=e.x0,l=e.y0,r=e.x1,h=e.y1)&&n.length){var p=(t+r)/2,k=(l+h)/2;(a=n[3])&&s.push(new Vs(a,p,k,r,h)),(a=n[2])&&s.push(new Vs(a,t,k,p,h)),(a=n[1])&&s.push(new Vs(a,p,l,r,k)),(a=n[0])&&s.push(new Vs(a,t,l,p,k))}return this}function xU(i){var s=[],e=[],n;for(this._root&&s.push(new Vs(this._root,this._x0,this._y0,this._x1,this._y1));n=s.pop();){var a=n.node;if(a.length){var t,l=n.x0,r=n.y0,h=n.x1,p=n.y1,k=(l+h)/2,d=(r+p)/2;(t=a[0])&&s.push(new Vs(t,l,r,k,d)),(t=a[1])&&s.push(new Vs(t,k,r,h,d)),(t=a[2])&&s.push(new Vs(t,l,d,k,p)),(t=a[3])&&s.push(new Vs(t,k,d,h,p))}e.push(n)}for(;n=e.pop();)i(n.node,n.x0,n.y0,n.x1,n.y1);return this}function wU(i){return i[0]}function TU(i){return arguments.length?(this._x=i,this):this._x}function SU(i){return i[1]}function IU(i){return arguments.length?(this._y=i,this):this._y}function Pc(i,s,e){var n=new Lc(s??wU,e??SU,NaN,NaN,NaN,NaN);return i==null?n:n.addAll(i)}function Lc(i,s,e,n,a,t){this._x=i,this._y=s,this._x0=e,this._y0=n,this._x1=a,this._y1=t,this._root=void 0}function HA(i){for(var s={data:i.data},e=s;i=i.next;)e=e.next={data:i.data};return s}var Hs=Pc.prototype=Lc.prototype;Hs.copy=function(){var i=new Lc(this._x,this._y,this._x0,this._y0,this._x1,this._y1),s=this._root,e,n;if(!s)return i;if(!s.length)return i._root=HA(s),i;for(e=[{source:s,target:i._root=new Array(4)}];s=e.pop();)for(var a=0;a<4;++a)(n=s.source[a])&&(n.length?e.push({source:n,target:s.target[a]=new Array(4)}):s.target[a]=HA(n));return i};Hs.add=AU;Hs.addAll=yU;Hs.cover=fU;Hs.data=mU;Hs.extent=vU;Hs.find=FU;Hs.remove=EU;Hs.removeAll=bU;Hs.root=CU;Hs.size=_U;Hs.visit=DU;Hs.visitAfter=xU;Hs.x=TU;Hs.y=IU;function qs(i){return function(){return i}}function Wn(i){return(i()-.5)*1e-6}function RU(i){return i.x+i.vx}function OU(i){return i.y+i.vy}function PU(i){var s,e,n,a=1,t=1;typeof i!="function"&&(i=qs(i==null?1:+i));function l(){for(var p,k=s.length,d,u,o,c,A,g,f=0;f<t;++f)for(d=Pc(s,RU,OU).visitAfter(r),p=0;p<k;++p)u=s[p],A=e[u.index],g=A*A,o=u.x+u.vx,c=u.y+u.vy,d.visit(m);function m(y,v,C,S,L){var w=y.data,_=y.r,R=A+_;if(w){if(w.index>u.index){var N=o-w.x-w.vx,T=c-w.y-w.vy,V=N*N+T*T;V<R*R&&(N===0&&(N=Wn(n),V+=N*N),T===0&&(T=Wn(n),V+=T*T),V=(R-(V=Math.sqrt(V)))/V*a,u.vx+=(N*=V)*(R=(_*=_)/(g+_)),u.vy+=(T*=V)*R,w.vx-=N*(R=1-R),w.vy-=T*R)}return}return v>o+R||S<o-R||C>c+R||L<c-R}}function r(p){if(p.data)return p.r=e[p.data.index];for(var k=p.r=0;k<4;++k)p[k]&&p[k].r>p.r&&(p.r=p[k].r)}function h(){if(s){var p,k=s.length,d;for(e=new Array(k),p=0;p<k;++p)d=s[p],e[d.index]=+i(d,p,s)}}return l.initialize=function(p,k){s=p,n=k,h()},l.iterations=function(p){return arguments.length?(t=+p,l):t},l.strength=function(p){return arguments.length?(a=+p,l):a},l.radius=function(p){return arguments.length?(i=typeof p=="function"?p:qs(+p),h(),l):i},l}function LU(i){return i.index}function jA(i,s){var e=i.get(s);if(!e)throw new Error("node not found: "+s);return e}function NU(i){var s=LU,e=d,n,a=qs(30),t,l,r,h,p,k=1;i==null&&(i=[]);function d(g){return 1/Math.min(r[g.source.index],r[g.target.index])}function u(g){for(var f=0,m=i.length;f<k;++f)for(var y=0,v,C,S,L,w,_,R;y<m;++y)v=i[y],C=v.source,S=v.target,L=S.x+S.vx-C.x-C.vx||Wn(p),w=S.y+S.vy-C.y-C.vy||Wn(p),_=Math.sqrt(L*L+w*w),_=(_-t[y])/_*g*n[y],L*=_,w*=_,S.vx-=L*(R=h[y]),S.vy-=w*R,C.vx+=L*(R=1-R),C.vy+=w*R}function o(){if(l){var g,f=l.length,m=i.length,y=new Map(l.map((C,S)=>[s(C,S,l),C])),v;for(g=0,r=new Array(f);g<m;++g)v=i[g],v.index=g,typeof v.source!="object"&&(v.source=jA(y,v.source)),typeof v.target!="object"&&(v.target=jA(y,v.target)),r[v.source.index]=(r[v.source.index]||0)+1,r[v.target.index]=(r[v.target.index]||0)+1;for(g=0,h=new Array(m);g<m;++g)v=i[g],h[g]=r[v.source.index]/(r[v.source.index]+r[v.target.index]);n=new Array(m),c(),t=new Array(m),A()}}function c(){if(l)for(var g=0,f=i.length;g<f;++g)n[g]=+e(i[g],g,i)}function A(){if(l)for(var g=0,f=i.length;g<f;++g)t[g]=+a(i[g],g,i)}return u.initialize=function(g,f){l=g,p=f,o()},u.links=function(g){return arguments.length?(i=g,o(),u):i},u.id=function(g){return arguments.length?(s=g,u):s},u.iterations=function(g){return arguments.length?(k=+g,u):k},u.strength=function(g){return arguments.length?(e=typeof g=="function"?g:qs(+g),c(),u):e},u.distance=function(g){return arguments.length?(a=typeof g=="function"?g:qs(+g),A(),u):a},u}const MU=1664525,$U=1013904223,UA=4294967296;function VU(){let i=1;return()=>(i=(MU*i+$U)%UA)/UA}function zU(i){return i.x}function qU(i){return i.y}var HU=10,jU=Math.PI*(3-Math.sqrt(5));function UU(i){var s,e=1,n=.001,a=1-Math.pow(n,1/300),t=0,l=.6,r=new Map,h=Ic(d),p=Mp("tick","end"),k=VU();i==null&&(i=[]);function d(){u(),p.call("tick",s),e<n&&(h.stop(),p.call("end",s))}function u(A){var g,f=i.length,m;A===void 0&&(A=1);for(var y=0;y<A;++y)for(e+=(t-e)*a,r.forEach(function(v){v(e)}),g=0;g<f;++g)m=i[g],m.fx==null?m.x+=m.vx*=l:(m.x=m.fx,m.vx=0),m.fy==null?m.y+=m.vy*=l:(m.y=m.fy,m.vy=0);return s}function o(){for(var A=0,g=i.length,f;A<g;++A){if(f=i[A],f.index=A,f.fx!=null&&(f.x=f.fx),f.fy!=null&&(f.y=f.fy),isNaN(f.x)||isNaN(f.y)){var m=HU*Math.sqrt(.5+A),y=A*jU;f.x=m*Math.cos(y),f.y=m*Math.sin(y)}(isNaN(f.vx)||isNaN(f.vy))&&(f.vx=f.vy=0)}}function c(A){return A.initialize&&A.initialize(i,k),A}return o(),s={tick:u,restart:function(){return h.restart(d),s},stop:function(){return h.stop(),s},nodes:function(A){return arguments.length?(i=A,o(),r.forEach(c),s):i},alpha:function(A){return arguments.length?(e=+A,s):e},alphaMin:function(A){return arguments.length?(n=+A,s):n},alphaDecay:function(A){return arguments.length?(a=+A,s):+a},alphaTarget:function(A){return arguments.length?(t=+A,s):t},velocityDecay:function(A){return arguments.length?(l=1-A,s):1-l},randomSource:function(A){return arguments.length?(k=A,r.forEach(c),s):k},force:function(A,g){return arguments.length>1?(g==null?r.delete(A):r.set(A,c(g)),s):r.get(A)},find:function(A,g,f){var m=0,y=i.length,v,C,S,L,w;for(f==null?f=1/0:f*=f,m=0;m<y;++m)L=i[m],v=A-L.x,C=g-L.y,S=v*v+C*C,S<f&&(w=L,f=S);return w},on:function(A,g){return arguments.length>1?(p.on(A,g),s):p.on(A)}}}function GU(){var i,s,e,n,a=qs(-30),t,l=1,r=1/0,h=.81;function p(o){var c,A=i.length,g=Pc(i,zU,qU).visitAfter(d);for(n=o,c=0;c<A;++c)s=i[c],g.visit(u)}function k(){if(i){var o,c=i.length,A;for(t=new Array(c),o=0;o<c;++o)A=i[o],t[A.index]=+a(A,o,i)}}function d(o){var c=0,A,g,f=0,m,y,v;if(o.length){for(m=y=v=0;v<4;++v)(A=o[v])&&(g=Math.abs(A.value))&&(c+=A.value,f+=g,m+=g*A.x,y+=g*A.y);o.x=m/f,o.y=y/f}else{A=o,A.x=A.data.x,A.y=A.data.y;do c+=t[A.data.index];while(A=A.next)}o.value=c}function u(o,c,A,g){if(!o.value)return!0;var f=o.x-s.x,m=o.y-s.y,y=g-c,v=f*f+m*m;if(y*y/h<v)return v<r&&(f===0&&(f=Wn(e),v+=f*f),m===0&&(m=Wn(e),v+=m*m),v<l&&(v=Math.sqrt(l*v)),s.vx+=f*o.value*n/v,s.vy+=m*o.value*n/v),!0;if(o.length||v>=r)return;(o.data!==s||o.next)&&(f===0&&(f=Wn(e),v+=f*f),m===0&&(m=Wn(e),v+=m*m),v<l&&(v=Math.sqrt(l*v)));do o.data!==s&&(y=t[o.data.index]*n/v,s.vx+=f*y,s.vy+=m*y);while(o=o.next)}return p.initialize=function(o,c){i=o,e=c,k()},p.strength=function(o){return arguments.length?(a=typeof o=="function"?o:qs(+o),k(),p):a},p.distanceMin=function(o){return arguments.length?(l=o*o,p):Math.sqrt(l)},p.distanceMax=function(o){return arguments.length?(r=o*o,p):Math.sqrt(r)},p.theta=function(o){return arguments.length?(h=o*o,p):Math.sqrt(h)},p}function WU(i){var s=qs(.1),e,n,a;typeof i!="function"&&(i=qs(i==null?0:+i));function t(r){for(var h=0,p=e.length,k;h<p;++h)k=e[h],k.vx+=(a[h]-k.x)*n[h]*r}function l(){if(e){var r,h=e.length;for(n=new Array(h),a=new Array(h),r=0;r<h;++r)n[r]=isNaN(a[r]=+i(e[r],r,e))?0:+s(e[r],r,e)}}return t.initialize=function(r){e=r,l()},t.strength=function(r){return arguments.length?(s=typeof r=="function"?r:qs(+r),l(),t):s},t.x=function(r){return arguments.length?(i=typeof r=="function"?r:qs(+r),l(),t):i},t}function KU(i){var s=qs(.1),e,n,a;typeof i!="function"&&(i=qs(i==null?0:+i));function t(r){for(var h=0,p=e.length,k;h<p;++h)k=e[h],k.vy+=(a[h]-k.y)*n[h]*r}function l(){if(e){var r,h=e.length;for(n=new Array(h),a=new Array(h),r=0;r<h;++r)n[r]=isNaN(a[r]=+i(e[r],r,e))?0:+s(e[r],r,e)}}return t.initialize=function(r){e=r,l()},t.strength=function(r){return arguments.length?(s=typeof r=="function"?r:qs(+r),l(),t):s},t.y=function(r){return arguments.length?(i=typeof r=="function"?r:qs(+r),l(),t):i},t}const Jr=i=>()=>i;function YU(i,{sourceEvent:s,target:e,transform:n,dispatch:a}){Object.defineProperties(this,{type:{value:i,enumerable:!0,configurable:!0},sourceEvent:{value:s,enumerable:!0,configurable:!0},target:{value:e,enumerable:!0,configurable:!0},transform:{value:n,enumerable:!0,configurable:!0},_:{value:a}})}function An(i,s,e){this.k=i,this.x=s,this.y=e}An.prototype={constructor:An,scale:function(i){return i===1?this:new An(this.k*i,this.x,this.y)},translate:function(i,s){return i===0&s===0?this:new An(this.k,this.x+this.k*i,this.y+this.k*s)},apply:function(i){return[i[0]*this.k+this.x,i[1]*this.k+this.y]},applyX:function(i){return i*this.k+this.x},applyY:function(i){return i*this.k+this.y},invert:function(i){return[(i[0]-this.x)/this.k,(i[1]-this.y)/this.k]},invertX:function(i){return(i-this.x)/this.k},invertY:function(i){return(i-this.y)/this.k},rescaleX:function(i){return i.copy().domain(i.range().map(this.invertX,this).map(i.invert,i))},rescaleY:function(i){return i.copy().domain(i.range().map(this.invertY,this).map(i.invert,i))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var qp=new An(1,0,0);XU.prototype=An.prototype;function XU(i){for(;!i.__zoom;)if(!(i=i.parentNode))return qp;return i.__zoom}function Md(i){i.stopImmediatePropagation()}function Ut(i){i.preventDefault(),i.stopImmediatePropagation()}function ZU(i){return(!i.ctrlKey||i.type==="wheel")&&!i.button}function JU(){var i=this;return i instanceof SVGElement?(i=i.ownerSVGElement||i,i.hasAttribute("viewBox")?(i=i.viewBox.baseVal,[[i.x,i.y],[i.x+i.width,i.y+i.height]]):[[0,0],[i.width.baseVal.value,i.height.baseVal.value]]):[[0,0],[i.clientWidth,i.clientHeight]]}function GA(){return this.__zoom||qp}function QU(i){return-i.deltaY*(i.deltaMode===1?.05:i.deltaMode?1:.002)*(i.ctrlKey?10:1)}function iG(){return navigator.maxTouchPoints||"ontouchstart"in this}function sG(i,s,e){var n=i.invertX(s[0][0])-e[0][0],a=i.invertX(s[1][0])-e[1][0],t=i.invertY(s[0][1])-e[0][1],l=i.invertY(s[1][1])-e[1][1];return i.translate(a>n?(n+a)/2:Math.min(0,n)||Math.max(0,a),l>t?(t+l)/2:Math.min(0,t)||Math.max(0,l))}function eG(){var i=ZU,s=JU,e=sG,n=QU,a=iG,t=[0,1/0],l=[[-1/0,-1/0],[1/0,1/0]],r=250,h=tj,p=Mp("start","zoom","end"),k,d,u,o=500,c=150,A=0,g=10;function f(E){E.property("__zoom",GA).on("wheel.zoom",w,{passive:!1}).on("mousedown.zoom",_).on("dblclick.zoom",R).filter(a).on("touchstart.zoom",N).on("touchmove.zoom",T).on("touchend.zoom touchcancel.zoom",V).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}f.transform=function(E,$,I,M){var G=E.selection?E.selection():E;G.property("__zoom",GA),E!==G?C(E,$,I,M):G.interrupt().each(function(){S(this,arguments).event(M).start().zoom(null,typeof $=="function"?$.apply(this,arguments):$).end()})},f.scaleBy=function(E,$,I,M){f.scaleTo(E,function(){var G=this.__zoom.k,Y=typeof $=="function"?$.apply(this,arguments):$;return G*Y},I,M)},f.scaleTo=function(E,$,I,M){f.transform(E,function(){var G=s.apply(this,arguments),Y=this.__zoom,li=I==null?v(G):typeof I=="function"?I.apply(this,arguments):I,pi=Y.invert(li),ei=typeof $=="function"?$.apply(this,arguments):$;return e(y(m(Y,ei),li,pi),G,l)},I,M)},f.translateBy=function(E,$,I,M){f.transform(E,function(){return e(this.__zoom.translate(typeof $=="function"?$.apply(this,arguments):$,typeof I=="function"?I.apply(this,arguments):I),s.apply(this,arguments),l)},null,M)},f.translateTo=function(E,$,I,M,G){f.transform(E,function(){var Y=s.apply(this,arguments),li=this.__zoom,pi=M==null?v(Y):typeof M=="function"?M.apply(this,arguments):M;return e(qp.translate(pi[0],pi[1]).scale(li.k).translate(typeof $=="function"?-$.apply(this,arguments):-$,typeof I=="function"?-I.apply(this,arguments):-I),Y,l)},M,G)};function m(E,$){return $=Math.max(t[0],Math.min(t[1],$)),$===E.k?E:new An($,E.x,E.y)}function y(E,$,I){var M=$[0]-I[0]*E.k,G=$[1]-I[1]*E.k;return M===E.x&&G===E.y?E:new An(E.k,M,G)}function v(E){return[(+E[0][0]+ +E[1][0])/2,(+E[0][1]+ +E[1][1])/2]}function C(E,$,I,M){E.on("start.zoom",function(){S(this,arguments).event(M).start()}).on("interrupt.zoom end.zoom",function(){S(this,arguments).event(M).end()}).tween("zoom",function(){var G=this,Y=arguments,li=S(G,Y).event(M),pi=s.apply(G,Y),ei=I==null?v(pi):typeof I=="function"?I.apply(G,Y):I,q=Math.max(pi[1][0]-pi[0][0],pi[1][1]-pi[0][1]),W=G.__zoom,K=typeof $=="function"?$.apply(G,Y):$,ri=h(W.invert(ei).concat(q/W.k),K.invert(ei).concat(q/K.k));return function(U){if(U===1)U=K;else{var Q=ri(U),J=q/Q[2];U=new An(J,ei[0]-Q[0]*J,ei[1]-Q[1]*J)}li.zoom(null,U)}})}function S(E,$,I){return!I&&E.__zooming||new L(E,$)}function L(E,$){this.that=E,this.args=$,this.active=0,this.sourceEvent=null,this.extent=s.apply(E,$),this.taps=0}L.prototype={event:function(E){return E&&(this.sourceEvent=E),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(E,$){return this.mouse&&E!=="mouse"&&(this.mouse[1]=$.invert(this.mouse[0])),this.touch0&&E!=="touch"&&(this.touch0[1]=$.invert(this.touch0[0])),this.touch1&&E!=="touch"&&(this.touch1[1]=$.invert(this.touch1[0])),this.that.__zoom=$,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(E){var $=cn(this.that).datum();p.call(E,this.that,new YU(E,{sourceEvent:this.sourceEvent,target:f,transform:this.that.__zoom,dispatch:p}),$)}};function w(E,...$){if(!i.apply(this,arguments))return;var I=S(this,$).event(E),M=this.__zoom,G=Math.max(t[0],Math.min(t[1],M.k*Math.pow(2,n.apply(this,arguments)))),Y=pn(E);if(I.wheel)(I.mouse[0][0]!==Y[0]||I.mouse[0][1]!==Y[1])&&(I.mouse[1]=M.invert(I.mouse[0]=Y)),clearTimeout(I.wheel);else{if(M.k===G)return;I.mouse=[Y,M.invert(Y)],gh(this),I.start()}Ut(E),I.wheel=setTimeout(li,c),I.zoom("mouse",e(y(m(M,G),I.mouse[0],I.mouse[1]),I.extent,l));function li(){I.wheel=null,I.end()}}function _(E,...$){if(u||!i.apply(this,arguments))return;var I=E.currentTarget,M=S(this,$,!0).event(E),G=cn(E.view).on("mousemove.zoom",ei,!0).on("mouseup.zoom",q,!0),Y=pn(E,I),li=E.clientX,pi=E.clientY;IH(E.view),Md(E),M.mouse=[Y,this.__zoom.invert(Y)],gh(this),M.start();function ei(W){if(Ut(W),!M.moved){var K=W.clientX-li,ri=W.clientY-pi;M.moved=K*K+ri*ri>A}M.event(W).zoom("mouse",e(y(M.that.__zoom,M.mouse[0]=pn(W,I),M.mouse[1]),M.extent,l))}function q(W){G.on("mousemove.zoom mouseup.zoom",null),RH(W.view,M.moved),Ut(W),M.event(W).end()}}function R(E,...$){if(i.apply(this,arguments)){var I=this.__zoom,M=pn(E.changedTouches?E.changedTouches[0]:E,this),G=I.invert(M),Y=I.k*(E.shiftKey?.5:2),li=e(y(m(I,Y),M,G),s.apply(this,$),l);Ut(E),r>0?cn(this).transition().duration(r).call(C,li,M,E):cn(this).call(f.transform,li,M,E)}}function N(E,...$){if(i.apply(this,arguments)){var I=E.touches,M=I.length,G=S(this,$,E.changedTouches.length===M).event(E),Y,li,pi,ei;for(Md(E),li=0;li<M;++li)pi=I[li],ei=pn(pi,this),ei=[ei,this.__zoom.invert(ei),pi.identifier],G.touch0?!G.touch1&&G.touch0[2]!==ei[2]&&(G.touch1=ei,G.taps=0):(G.touch0=ei,Y=!0,G.taps=1+!!k);k&&(k=clearTimeout(k)),Y&&(G.taps<2&&(d=ei[0],k=setTimeout(function(){k=null},o)),gh(this),G.start())}}function T(E,...$){if(this.__zooming){var I=S(this,$).event(E),M=E.changedTouches,G=M.length,Y,li,pi,ei;for(Ut(E),Y=0;Y<G;++Y)li=M[Y],pi=pn(li,this),I.touch0&&I.touch0[2]===li.identifier?I.touch0[0]=pi:I.touch1&&I.touch1[2]===li.identifier&&(I.touch1[0]=pi);if(li=I.that.__zoom,I.touch1){var q=I.touch0[0],W=I.touch0[1],K=I.touch1[0],ri=I.touch1[1],U=(U=K[0]-q[0])*U+(U=K[1]-q[1])*U,Q=(Q=ri[0]-W[0])*Q+(Q=ri[1]-W[1])*Q;li=m(li,Math.sqrt(U/Q)),pi=[(q[0]+K[0])/2,(q[1]+K[1])/2],ei=[(W[0]+ri[0])/2,(W[1]+ri[1])/2]}else if(I.touch0)pi=I.touch0[0],ei=I.touch0[1];else return;I.zoom("touch",e(y(li,pi,ei),I.extent,l))}}function V(E,...$){if(this.__zooming){var I=S(this,$).event(E),M=E.changedTouches,G=M.length,Y,li;for(Md(E),u&&clearTimeout(u),u=setTimeout(function(){u=null},o),Y=0;Y<G;++Y)li=M[Y],I.touch0&&I.touch0[2]===li.identifier?delete I.touch0:I.touch1&&I.touch1[2]===li.identifier&&delete I.touch1;if(I.touch1&&!I.touch0&&(I.touch0=I.touch1,delete I.touch1),I.touch0)I.touch0[1]=this.__zoom.invert(I.touch0[0]);else if(I.end(),I.taps===2&&(li=pn(li,this),Math.hypot(d[0]-li[0],d[1]-li[1])<g)){var pi=cn(this).on("dblclick.zoom");pi&&pi.apply(this,arguments)}}}return f.wheelDelta=function(E){return arguments.length?(n=typeof E=="function"?E:Jr(+E),f):n},f.filter=function(E){return arguments.length?(i=typeof E=="function"?E:Jr(!!E),f):i},f.touchable=function(E){return arguments.length?(a=typeof E=="function"?E:Jr(!!E),f):a},f.extent=function(E){return arguments.length?(s=typeof E=="function"?E:Jr([[+E[0][0],+E[0][1]],[+E[1][0],+E[1][1]]]),f):s},f.scaleExtent=function(E){return arguments.length?(t[0]=+E[0],t[1]=+E[1],f):[t[0],t[1]]},f.translateExtent=function(E){return arguments.length?(l[0][0]=+E[0][0],l[1][0]=+E[1][0],l[0][1]=+E[0][1],l[1][1]=+E[1][1],f):[[l[0][0],l[0][1]],[l[1][0],l[1][1]]]},f.constrain=function(E){return arguments.length?(e=E,f):e},f.duration=function(E){return arguments.length?(r=+E,f):r},f.interpolate=function(E){return arguments.length?(h=E,f):h},f.on=function(){var E=p.on.apply(p,arguments);return E===p?f:E},f.clickDistance=function(E){return arguments.length?(A=(E=+E)*E,f):Math.sqrt(A)},f.tapDistance=function(E){return arguments.length?(g=+E,f):g},f}const nG=ti({__name:"relationGraph",props:{data:{},currentPath:{},canvasWidth:{},canvasHeight:{}},emits:["nodeClick"],setup(i,{expose:s,emit:e}){const n=e;let a=null;const t=()=>{a&&a.alpha(r.simulation.restart.alpha).alphaTarget(r.simulation.restart.alphaTarget).restart()};s({restartSimulation:t});const l={defaultWidth:300,defaultHeight:300,nodeRadius:5,nodePadding:5,zoomExtent:[.1,10],nodeClickRadius:15,hoverNodeRadius:8},r={link:NU().id(v=>v.id).distance(100).strength(.8),charge:GU().strength(v=>-50-250*(Math.min(v.linkCount,10)-1||0)).distanceMin(10).distanceMax(400),collision:PU().radius(30).strength(.7),x:WU().strength(v=>v.isIsolated?.02:.1),y:KU().strength(v=>v.isIsolated?.02:.1),simulation:{alphaDecay:.01,alphaMin:.001,velocityDecay:.6,restart:{alpha:1,alphaTarget:.3,watchAlpha:.3,dataChangeAlpha:1,dragEndAlphaTarget:0,dragEndAlpha:.3}}},h={link:{color:"#aaa",normalOpacity:.3,highlightOpacity:1},node:{normalOpacity:.3,highlightOpacity:.8},text:{font:"12px 'Microsoft YaHei', 'Heiti SC', 'SimHei', -apple-system, sans-serif",offset:25,minScale:.5,maxScale:1.5},currentNode:{strokeWidth:2}};function p(v,C){const L=decodeURIComponent(v).replace(/\.[^/.]+$/,""),w=C.replace(/\.[^/.]+$/,""),_=L.replace(/^\//,""),R=w.replace(/^\//,"");return _===R}const k=i,d=Z({nodes:[],links:[]});function u(v,C){const S=JSON.parse(JSON.stringify(v.nodes)),L=JSON.parse(JSON.stringify(v.links));if(S.forEach(w=>{w.linkCount=L.reduce((_,R)=>(((typeof R.source=="string"?R.source:R.source.id)===w.id||(typeof R.target=="string"?R.target:R.target.id)===w.id)&&(_+=1),_),0)}),S.forEach(w=>{w.isCurrent=!1,w.fx=null,w.fy=null,w.isIsolated=!L.some(_=>(typeof _.source=="string"?_.source===w.id:_.source.id===w.id)||(typeof _.target=="string"?_.target===w.id:_.target.id===w.id)),w.x=o.value.width/2,w.y=o.value.height/2}),C){const w=S.find(_=>p(C,_.value.path));w&&(w.isCurrent=!0,w.fx=o.value.width/2,w.fy=o.value.height/2,setTimeout(()=>{w&&(w.fx=null,w.fy=null)},1e3))}d.value={nodes:S,links:L}}const o=z(()=>({width:k.canvasWidth,height:k.canvasHeight})),c=Z(null),A=Z(0),g=Z({x:0,y:0}),f=Z({accent:"",text:"",cssVariableName:{accent:"",text:""}});function m(){const v=getComputedStyle(document.documentElement);v.getPropertyValue("--vp-c-accent").trim()?(f.value.accent=v.getPropertyValue("--vp-c-accent").trim(),f.value.cssVariableName.accent="--vp-c-accent"):v.getPropertyValue("--theme-color").trim()?(f.value.accent=v.getPropertyValue("--theme-color").trim(),f.value.cssVariableName.accent="--theme-color"):(f.value.accent="#299764",f.value.cssVariableName.accent=""),v.getPropertyValue("--vp-c-text").trim()?(f.value.text=v.getPropertyValue("--vp-c-text").trim(),f.value.cssVariableName.text="--vp-c-text"):v.getPropertyValue("--text-color").trim()?(f.value.text=v.getPropertyValue("--text-color").trim(),f.value.cssVariableName.text="--text-color"):(f.value.text="#000000",f.value.cssVariableName.text="")}Di(()=>{m(),u(k.data,k.currentPath);const v=new MutationObserver(()=>{const X=getComputedStyle(document.documentElement);let x=!1;f.value.cssVariableName.accent&&X.getPropertyValue(f.value.cssVariableName.accent).trim()!==f.value.accent&&(x=!0),f.value.cssVariableName.text&&X.getPropertyValue(f.value.cssVariableName.text).trim()!==f.value.text&&(x=!0),x&&(m(),a&&pi())});if(v.observe(document.documentElement,{attributes:!0,attributeFilter:["style","class","data-theme"]}),_s(()=>{v.disconnect()}),!d.value)return;const C=c.value,S=C.getContext("2d");let L=!1,w=null,_=qp,R=null,N=null;function T(){const X=eG().scaleExtent(l.zoomExtent).filter(F=>$(F)).touchable(!0).on("zoom",F=>{_=F.transform,pi()}),x={passive:!0,capture:!1};cn(C).on("touchstart touchmove",null).call(X),C.addEventListener("mousedown",I),C.addEventListener("touchstart",I,x),C.addEventListener("click",ri),C.addEventListener("touchend",ri),C.addEventListener("mousemove",U),C.addEventListener("touchmove",U,x),C.addEventListener("mouseleave",Q),C.addEventListener("touchend",Q)}N=new MutationObserver(()=>{C&&S&&pi()}),N.observe(document.documentElement,{attributes:!0,attributeFilter:["style","class","data-theme"]}),_s(()=>{N&&N.disconnect(),a&&a.stop(),C.removeEventListener("mousedown",I),C.removeEventListener("click",ri),C.removeEventListener("mousemove",U),C.removeEventListener("mouseleave",Q),C.removeEventListener("touchstart",I),C.removeEventListener("touchend",ri),C.removeEventListener("touchmove",U),C.removeEventListener("touchend",Q),cn(C).on(".zoom",null)}),a=E(),T();function E(){d.value.nodes.forEach(x=>{x.isIsolated=!d.value.links.some(F=>(typeof F.source=="string"?F.source===x.id:F.source===x)||(typeof F.target=="string"?F.target===x.id:F.target===x)),x.x=o.value.width/2,x.y=o.value.height/2});const X=qA(o.value.width/2,o.value.height/2).strength(.002);return window.simulation=UU(d.value.nodes).force("link",r.link.links(d.value.links)).force("charge",r.charge).force("collision",r.collision).force("center",X).force("x",r.x.x(o.value.width/2)).force("y",r.y.y(o.value.height/2)).alphaDecay(r.simulation.alphaDecay).alphaMin(r.simulation.alphaMin).velocityDecay(r.simulation.velocityDecay).on("tick",()=>{pi()}),window.simulation}function $(X){const x=X.sourceEvent||X;if(x.type==="touchstart"){const F=x.touches[0],D=C.getBoundingClientRect(),O=(F.clientX-D.left-_.x)/_.k,P=(F.clientY-D.top-_.y)/_.k;return!a.find(O,P,l.nodeClickRadius)}if(x.type==="mousedown"){const[F,D]=_.invert(pn(x,C));return!K(F,D)&&!w}return!0}function I(X){X.type==="touchstart"&&X.preventDefault();const x=X.touches?X.touches[0]:X,[F,D]=_.invert(pn(x,C));if(w=a.find(F,D,l.nodeClickRadius),A.value=Date.now(),g.value={x:x.clientX,y:x.clientY},w){R=w,X.stopPropagation(),document.body.style.userSelect="none",w.fx=F,w.fy=D,a.alphaTarget(r.simulation.restart.alphaTarget).restart();const O={passive:!1,capture:!1};X.touches?(window.addEventListener("touchmove",M,O),window.addEventListener("touchend",G)):(window.addEventListener("mousemove",M),window.addEventListener("mouseup",G))}}function M(X){if(w){const x=X.touches?X.touches[0]:X;if(Math.sqrt(Math.pow(x.clientX-g.value.x,2)+Math.pow(x.clientY-g.value.y,2))>5){L=!0;const D=C.getBoundingClientRect(),O=(x.clientX-D.left-_.x)/_.k,P=(x.clientY-D.top-_.y)/_.k,H=Y(O,P);li(H),a.alphaTarget(r.simulation.restart.alphaTarget)}X.preventDefault()}}function G(){w&&(w.fx=null,w.fy=null,document.body.style.userSelect="",R=null,w=null,a.alphaTarget(r.simulation.restart.dragEndAlphaTarget).alpha(r.simulation.restart.dragEndAlpha),event.type==="touchend"?(window.removeEventListener("touchmove",M),window.removeEventListener("touchend",G)):(window.removeEventListener("mousemove",M),window.removeEventListener("mouseup",G)))}function Y(X,x){const F={left:-_.x/_.k,top:-_.y/_.k,right:(o.value.width-_.x)/_.k,bottom:(o.value.height-_.y)/_.k};return{x:Math.max(F.left+l.nodePadding,Math.min(F.right-l.nodePadding,X)),y:Math.max(F.top+l.nodePadding,Math.min(F.bottom-l.nodePadding,x))}}function li({x:X,y:x}){w.x=X,w.y=x,w.fx=X,w.fy=x}function pi(){S.clearRect(0,0,o.value.width,o.value.height),S.save(),ei(),J(),ki(),ci(),S.restore()}function ei(){S.translate(_.x,_.y),S.scale(_.k,_.k)}function q(X){S.moveTo(X.source.x,X.source.y),S.lineTo(X.target.x,X.target.y)}function W(X,x){const F=x+(X.linkCount-1||0)*.4;S.moveTo(X.x+F,X.y),S.arc(X.x,X.y,F,0,2*Math.PI)}function K(X,x){return d.value.nodes.some(F=>{const D=F.x-X,O=F.y-x;return Math.sqrt(D*D+O*O)<l.nodeClickRadius})}function ri(X){const x=X.changedTouches?X.changedTouches[0]:X,F=Date.now()-A.value,D=Math.sqrt(Math.pow(x.clientX-g.value.x,2)+Math.pow(x.clientY-g.value.y,2));if(F<300&&D<5){const O=C.getBoundingClientRect(),P=(x.clientX-O.left-_.x)/_.k,H=(x.clientY-O.top-_.y)/_.k,si=a.find(P,H,l.nodeClickRadius);si&&!L&&(si.isCurrent||n("nodeClick",si.value.path))}L=!1}function U(X){if(w)return;const x=X.touches?X.touches[0]:X,F=C.getBoundingClientRect(),D=(x.clientX-F.left-_.x)/_.k,O=(x.clientY-F.top-_.y)/_.k,P=a.find(D,O,l.nodeClickRadius);P!==R&&(R=P,pi())}function Q(){R&&(R=null,pi())}function J(){const{accent:X}=f.value;d.value.links.forEach(x=>{S.beginPath(),q(x),R&&(x.source===R||x.target===R)?(S.strokeStyle=X,S.globalAlpha=h.link.highlightOpacity):(S.strokeStyle=h.link.color,S.globalAlpha=R?h.link.normalOpacity:h.link.highlightOpacity),S.stroke()}),S.globalAlpha=1}function ki(){const{accent:X,text:x}=f.value,F=new Set;R&&d.value.links.forEach(O=>{O.source===R&&F.add(O.target),O.target===R&&F.add(O.source)}),S.beginPath(),d.value.nodes.filter(O=>!O.isCurrent&&O!==R).forEach(O=>{W(O,l.nodeRadius)}),S.fillStyle=x,S.globalAlpha=R?h.node.normalOpacity:h.node.highlightOpacity,S.fill(),R&&(S.beginPath(),Array.from(F).forEach(O=>{O.isCurrent||W(O,l.nodeRadius)}),S.fillStyle=x,S.globalAlpha=h.node.highlightOpacity,S.fill()),R&&!R.isCurrent&&(S.beginPath(),W(R,l.hoverNodeRadius),S.fillStyle=X,S.globalAlpha=h.node.highlightOpacity,S.fill());const D=d.value.nodes.find(O=>O.isCurrent);D&&(S.beginPath(),W(D,D===R?l.hoverNodeRadius:l.nodeRadius),S.fillStyle=X,S.globalAlpha=R&&D!==R&&!F.has(D)?h.node.normalOpacity:h.node.highlightOpacity,S.fill()),S.globalAlpha=1}function ci(){S.font=h.text.font;const{text:X}=f.value,x=new Set;R&&d.value.links.forEach(F=>{F.source===R&&x.add(F.target),F.target===R&&x.add(F.source)}),d.value.nodes.forEach(F=>{let D=!1,O=1;if(_.k>h.text.minScale&&(D=!0,O=Math.min((_.k-h.text.minScale)/(h.text.maxScale-h.text.minScale),1),R&&(F===R||x.has(F)||(O=O*h.node.normalOpacity))),D){const P=S.measureText(F.value.title).width;S.fillStyle=X,S.globalAlpha=O,S.fillText(F.value.title,F.x-P/2,F.y+h.text.offset),S.globalAlpha=1}})}Hi(()=>{a&&(a.alphaTarget(r.simulation.restart.alphaTarget).restart(),setTimeout(()=>{a.alphaTarget(r.simulation.restart.dragEndAlphaTarget).alpha(r.simulation.restart.dragEndAlpha)},100))})}),bi(()=>o.value,()=>{if(window.simulation){const v=qA(o.value.width/2,o.value.height/2).strength(.002);window.simulation.force("center",v).force("x",r.x.x(o.value.width/2)).force("y",r.y.y(o.value.height/2)),window.simulation.alpha(r.simulation.restart.watchAlpha).restart()}}),_s(()=>{a&&a.stop()}),bi(()=>[k.data,k.currentPath],([v,C])=>{!v||!a||(u(v,C),a.nodes(d.value.nodes).force("link",r.link.links(d.value.links)),a.alpha(r.simulation.restart.dataChangeAlpha).restart())});const y={emit:n,get simulation(){return a},set simulation(v){a=v},restartSimulation:t,CANVAS_CONFIG:l,FORCE_CONFIG:r,STYLE_CONFIG:h,isPathMatch:p,props:k,map_data:d,initializeMapData:u,canvasSize:o,canvasRef:c,mouseDownTime:A,mouseDownPosition:g,themeColors:f,initThemeColors:m};return Object.defineProperty(y,"__isScriptSetup",{enumerable:!1,value:!0}),y}}),aG=["width","height"];function tG(i,s,e,n,a,t){return hi(),oi("canvas",{ref:"canvasRef",width:n.canvasSize.width,height:n.canvasSize.height,style:ds({width:n.canvasSize.width+"px",height:n.canvasSize.height+"px"})},null,12,aG)}const T1=ns(nG,[["render",tG],["__scopeId","data-v-e09ca1ab"],["__file","relationGraph.vue"]]),lG="globalRelationalGraph.json",Bh=Z(!1);async function rG(i,s,e={target:""}){try{if(i){const n=await b(()=>import(`/${e.target}`),[]);return(n==null?void 0:n.default)||null}else{const n=await fetch(s(`${lG}`));return n.ok&&await n.json()||null}}catch(n){return console.error(n),null}}const hG=ti({__name:"localRelationshipMap",setup(i,{expose:s}){s();const e=Bs(),n=z(()=>{var R;const _=(R=e.value)==null?void 0:R.bioChainData;return _==null?void 0:_.localMap}),a=De(),t=Z(null),l=Z(null),r=z(()=>({foldEmptyGraph:!0,localGraphDeep:1,enableGlobalGraph:!0,graphSize:{height:300,maxWidth:300}})),h=z(()=>{var _;return r.value.foldEmptyGraph?((_=n.value)==null?void 0:_.nodes.length)>1:!0}),p=_=>{a.push(`/${_}`)},k=Z(null),d=Z(null),u=Z({width:300,height:r.value.graphSize.height}),o=Z(0),c=Z(!1),A=Z(!1),g=Z({width:800,height:600});function f(){c.value=window.matchMedia("(min-width: 1440px)").matches}function m(){if(k.value){const _=k.value.parentElement;if(!_)return;const R=_.getBoundingClientRect(),N=window.getComputedStyle(_),T=parseFloat(N.paddingLeft)+parseFloat(N.paddingRight);c.value?r.value.graphSize.maxWidth?o.value=Math.min(r.value.graphSize.maxWidth,document.documentElement.clientWidth-R.left-40):o.value=document.documentElement.clientWidth-R.left-40:o.value=Math.max(300,R.width-T-20),u.value={width:o.value,height:r.value.graphSize.height},Hi(()=>{var V;(V=t.value)==null||V.restartSimulation()})}}function y(){A.value=!A.value,A.value&&Hi(()=>{var _;m(),(_=t.value)==null||_.restartSimulation()})}let v=null,C=null;const S=()=>{if(d.value){const _=d.value.getBoundingClientRect();g.value={width:Math.floor(_.width),height:Math.floor(_.height)},Hi(()=>{l.value&&l.value.restartSimulation()})}};Di(()=>{f(),v=window.matchMedia("(min-width: 1440px)"),v.addEventListener("change",f),Hi(()=>{var _;m(),(_=t.value)==null||_.restartSimulation()}),window.addEventListener("resize",m),C=new ResizeObserver(_=>{for(const R of _)R.target===k.value?m():R.target===d.value&&(S(),Hi(()=>{var N;(N=l.value)==null||N.restartSimulation()}))}),k.value&&C.observe(k.value)}),_s(()=>{var _,R;window.removeEventListener("resize",m),window.removeEventListener("resize",S),v&&v.removeEventListener("change",f),C&&C.disconnect(),(R=(_=t.value)==null?void 0:_.stopSimulation)==null||R.call(_)});const L=Z(!1);bi(L,_=>{_?(window.addEventListener("resize",S),Hi(()=>{d.value&&(S(),C&&C.observe(d.value))})):(window.removeEventListener("resize",S),d.value&&C&&C.unobserve(d.value))});const w={data:e,map_data:n,router:a,graphRef:t,fullscreenGraphRef:l,options:r,shouldFoldEmptyGraph:h,handleNodeClick:p,containerRef:k,fullscreenContainerRef:d,canvasSize:u,containerWidth:o,isLargeScreen:c,isExpanded:A,fullscreenCanvasSize:g,updateScreenSize:f,updateContainerWidth:m,toggleExpand:y,get mediaQuery(){return v},set mediaQuery(_){v=_},get resizeObserver(){return C},set resizeObserver(_){C=_},updateFullscreenSize:S,isLocalGraphFullScreen:L,RelationGraph:T1,get showGlobalGraph(){return Bh}};return Object.defineProperty(w,"__isScriptSetup",{enumerable:!1,value:!0}),w}}),pG={key:0,class:"relationship-map"},kG={ref:"fullscreenContainerRef",class:"relationship-map-fullscreen__container"};function dG(i,s,e,n,a,t){return hi(),oi(_i,null,[n.shouldFoldEmptyGraph?(hi(),oi("div",pG,[n.isLargeScreen?yi("v-if",!0):(hi(),oi("button",{key:0,class:"relationship-map__toggle-btn",onClick:n.toggleExpand}," 查看关系图谱 "+Li(n.isExpanded?"▼":"▶"),1)),j("div",{ref:"containerRef",class:Ii([{"relationship-map__container--expanded":n.isExpanded||n.isLargeScreen},"relationship-map__container"]),style:ds(n.isLargeScreen?{width:n.containerWidth+"px",height:n.options.graphSize.height+"px"}:"")},[j("button",{class:"relationship-map__btn relationship-map__btn--fullscreen",onClick:s[0]||(s[0]=l=>n.isLocalGraphFullScreen=!0)},s[4]||(s[4]=[j("svg",{fill:"none",height:"24","stroke-width":"1.5",viewBox:"0 0 24 24",width:"24",xmlns:"http://www.w3.org/2000/svg"},[j("path",{d:"M6.00005 19L19 5.99996M19 5.99996V18.48M19 5.99996H6.52005",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"})],-1)])),n.options.enableGlobalGraph?(hi(),oi("button",{key:0,class:"relationship-map__btn relationship-map__btn--global",onClick:s[1]||(s[1]=l=>n.showGlobalGraph=!0)},s[5]||(s[5]=[$e('<svg class="svg-icon lucide-git-fork" fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg" data-v-d08c3b8f><circle cx="12" cy="18" r="3" data-v-d08c3b8f></circle><circle cx="6" cy="6" r="3" data-v-d08c3b8f></circle><circle cx="18" cy="6" r="3" data-v-d08c3b8f></circle><path d="M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9" data-v-d08c3b8f></path><path d="M12 12v3" data-v-d08c3b8f></path></svg>',1)]))):yi("v-if",!0),n.isLocalGraphFullScreen?yi("v-if",!0):(hi(),rs(n.RelationGraph,{key:1,ref:"graphRef","canvas-height":n.canvasSize.height,"canvas-width":n.canvasSize.width,"current-path":n.router.currentRoute.value.path,data:n.map_data,onNodeClick:n.handleNodeClick},null,8,["canvas-height","canvas-width","current-path","data"]))],6)])):yi("v-if",!0),n.isLocalGraphFullScreen?(hi(),oi("div",{key:1,class:"relationship-map-fullscreen",onClick:s[3]||(s[3]=x4(l=>n.isLocalGraphFullScreen=!1,["self"]))},[j("div",kG,[j("button",{class:"relationship-map__btn relationship-map__btn--close",onClick:s[2]||(s[2]=l=>n.isLocalGraphFullScreen=!1)},s[6]||(s[6]=[j("svg",{fill:"none",height:"24","stroke-width":"1.5",viewBox:"0 0 24 24",width:"24",xmlns:"http://www.w3.org/2000/svg"},[j("path",{d:"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),j("path",{d:"M15 16L9 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),j("path",{d:"M9 16L15 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"})],-1)])),Bi(n.RelationGraph,{ref:"fullscreenGraphRef","canvas-height":n.fullscreenCanvasSize.height,"canvas-width":n.fullscreenCanvasSize.width,"current-path":n.router.currentRoute.value.path,data:n.map_data,onNodeClick:n.handleNodeClick},null,8,["canvas-height","canvas-width","current-path","data"])],512)])):yi("v-if",!0)],64)}const S1=ns(hG,[["render",dG],["__scopeId","data-v-d08c3b8f"],["__file","localRelationshipMap.vue"]]);var oG={target:".vuepress/.temp/globalRelationalGraph.json"};const uG=ti({__name:"globalGraph",setup(i,{expose:s}){s();const e=z(()=>({isDev:!1,graphPath:oG})),n=Z(!1),a=Z(null);let t=!1,l=null;const r=Z(null),h=Z(null),p=Z({width:800,height:600}),k=De(),d=z(()=>!n.value&&!a.value),u=z(()=>n.value&&!a.value);async function o(){if(!(a.value||t))try{t=!0,a.value=await rG(e.value.isDev,Gi,e.value.graphPath)}finally{t=!1,n.value=!0}}const c=async()=>{n.value=!1,a.value=null,await o()},A=()=>{if(r.value){const v=r.value.getBoundingClientRect();p.value={width:Math.floor(v.width),height:Math.floor(v.height)},Hi(()=>{h.value&&h.value.restartSimulation()})}},g=()=>{var v,C;window.removeEventListener("resize",A),l&&(l.disconnect(),l=null),(C=(v=h.value)==null?void 0:v.stopSimulation)==null||C.call(v)},f=()=>{window.addEventListener("resize",A),l=new ResizeObserver(()=>{A()}),r.value&&l.observe(r.value),Hi(()=>{A()})};bi(Bh,async v=>{v?(await o(),f()):g()},{immediate:!0});const y={options:e,first_loaded:n,data:a,get is_loading(){return t},set is_loading(v){t=v},get resizeObserver(){return l},set resizeObserver(v){l=v},containerRef:r,graphRef:h,canvasSize:p,router:k,isLoading:d,hasError:u,getGlobalGraphData:o,reloadData:c,updateCanvasSize:A,cleanup:g,initialize:f,handleNodeClick:v=>{k.push(`/${v}`),Bh.value=!1},get showGlobalGraph(){return Bh},RelationGraph:T1};return Object.defineProperty(y,"__isScriptSetup",{enumerable:!1,value:!0}),y}}),cG={id:"globalGraphContainer",ref:"containerRef"},gG={key:0,class:"loading-container"};function BG(i,s,e,n,a,t){return n.showGlobalGraph?(hi(),oi("div",{key:0,id:"globalGraphMask",onClick:s[1]||(s[1]=x4(l=>n.showGlobalGraph=!1,["self"]))},[j("div",cG,[j("button",{class:"fullscreen-map-button",onClick:s[0]||(s[0]=l=>n.showGlobalGraph=!1)},s[2]||(s[2]=[j("svg",{fill:"none",height:"24","stroke-width":"1.5",viewBox:"0 0 24 24",width:"24",xmlns:"http://www.w3.org/2000/svg"},[j("path",{d:"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),j("path",{d:"M15 16L9 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),j("path",{d:"M9 16L15 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"})],-1)])),yi(" 加载动画 "),n.isLoading?(hi(),oi("div",gG,s[3]||(s[3]=[j("div",{class:"loading-spinner"},null,-1)]))):n.hasError?(hi(),oi(_i,{key:1},[yi(" 错误提示 "),j("div",{class:"error-container"},[s[4]||(s[4]=$e('<svg class="error-icon" fill="none" height="48" stroke-width="1.5" viewBox="0 0 24 24" width="48" xmlns="http://www.w3.org/2000/svg" data-v-d8b059e0><path d="M14 11.9976C14 9.5059 11.683 7 8.85714 7C8.52241 7 7.41904 7.00001 7.14286 7.00001C4.30254 7.00001 2 9.23752 2 11.9976C2 14.376 3.70973 16.3664 6 16.8714C6.36756 16.9525 6.75006 16.9952 7.14286 16.9952" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path><path d="M16.8571 6.99996C17.2499 6.99996 17.6324 7.04275 18 7.1238C20.2903 7.62881 22 9.61917 22 11.9976C22 13.4395 21.3716 14.7388 20.3664 15.651" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path><path d="M10.0002 11.9976C10.0002 14.4893 12.3172 16.9952 15.1431 16.9952" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path><path d="M18 22.2426L20.1213 20.1213M20.1213 20.1213L22.2426 18M20.1213 20.1213L18 18M20.1213 20.1213L22.2426 22.2426" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path></svg><p class="error-text" data-v-d8b059e0>数据加载失败</p>',2)),j("button",{class:"retry-button",onClick:n.reloadData},"重新加载")])],2112)):yi("v-if",!0),n.data?(hi(),rs(n.RelationGraph,{key:2,ref:"graphRef","canvas-height":n.canvasSize.height,"canvas-width":n.canvasSize.width,"current-path":n.router.currentRoute.value.path,data:n.data,onNodeClick:n.handleNodeClick},null,8,["canvas-height","canvas-width","current-path","data"])):yi("v-if",!0)],512)])):yi("v-if",!0)}const I1=ns(uG,[["render",BG],["__scopeId","data-v-d8b059e0"],["__file","globalGraph.vue"]]),AG=ti({__name:"Layout",setup(i,{expose:s}){s();const n={options:z(()=>({enableLocalGraph:!0,enableGlobalGraph:!0})),get Layout(){return yp},Backlink:a1,LocalRelationshipMap:S1,GlobalGraph:I1};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}});function yG(i,s,e,n,a,t){return hi(),oi(_i,null,[Bi(n.GlobalGraph),Bi(n.Layout,null,{contentAfter:$i(()=>[Bi(n.Backlink)]),tocBefore:$i(()=>[Bi(n.LocalRelationshipMap)]),_:1})],64)}const fG=ns(AG,[["render",yG],["__file","Layout.vue"]]),mG=Ts({enhance({app:i,router:s,siteData:e}){},setup(){},layouts:{Layout:fG},rootComponents:[]}),vG=Object.freeze(Object.defineProperty({__proto__:null,default:mG},Symbol.toStringTag,{value:"Module"})),$d=[{collapsed:!1,text:"Rust 语言圣经",link:"/Rust 语言圣经",prefix:"Rust 语言圣经/",children:[{text:"关于本书",link:"/about-book.html"},{text:"进入 Rust 编程世界",link:"/into-rust.html"},{text:"避免从入门到放弃",link:"/first-try/sth-you-should-not-do.html"},{text:"社区和锈书",link:"/community.html"},{text:"Xobserve: 一切皆可观测",link:"/some-thoughts.html"},{text:"BeatAI: 工程师 AI 入门圣经",link:"/beat-ai.html"}]},{collapsed:!1,text:"Rust 语言基础学习",link:"/Rust 语言基础学习",prefix:"Rust 语言基础学习/",children:[{collapsed:!0,text:"寻找牛刀，以便小试",link:"/first-try/intro.html",prefix:"寻找牛刀，以便小试/",children:[{text:"README",link:"/first-try/intro.html"},{text:"安装 Rust 环境",link:"/first-try/installation.html"},{text:"墙推 VSCode!",link:"/first-try/editor.html"},{text:"认识 Cargo",link:"/first-try/cargo.html"},{text:"不仅仅是 Hello world",link:"/first-try/hello-world.html"},{text:"下载依赖太慢了？",link:"/first-try/slowly-downloading.html"}]},{collapsed:!0,text:"Rust 基础入门",link:"/basic/intro.html",prefix:"Rust 基础入门/",children:[{text:"README",link:"/basic/intro.html"},{text:"变量绑定与解构",link:"/basic/variable.html"},{collapsed:!0,text:"基本类型",link:"/basic/base-type/index.html",prefix:"基本类型/",children:[{text:"README",link:"/basic/base-type/index.html"},{text:"数值类型",link:"/basic/base-type/numbers.html"},{text:"字符、布尔、单元类型",link:"/basic/base-type/char-bool.html"},{text:"语句与表达式",link:"/basic/base-type/statement-expression.html"},{text:"函数",link:"/basic/base-type/function.html"}]},{collapsed:!0,text:"所有权和借用",link:"/basic/ownership/index.html",prefix:"所有权和借用/",children:[{text:"README",link:"/basic/ownership/index.html"},{text:"所有权",link:"/basic/ownership/ownership.html"},{text:"引用与借用",link:"/basic/ownership/borrowing.html"}]},{collapsed:!0,text:"复合类型",link:"/basic/compound-type/intro.html",prefix:"复合类型/",children:[{text:"README",link:"/basic/compound-type/intro.html"},{text:"字符串与切片",link:"/basic/compound-type/string-slice.html"},{text:"元组",link:"/basic/compound-type/tuple.html"},{text:"结构体",link:"/basic/compound-type/struct.html"},{text:"枚举",link:"/basic/compound-type/enum.html"},{text:"数组",link:"/basic/compound-type/array.html"}]},{text:"流程控制",link:"/basic/flow-control.html"},{collapsed:!0,text:"模式匹配",link:"/basic/match-pattern/intro.html",prefix:"模式匹配/",children:[{text:"README",link:"/basic/match-pattern/intro.html"},{text:"match 和 if let",link:"/basic/match-pattern/match-if-let.html"},{text:"解构 Option",link:"/basic/match-pattern/option.html"},{text:"模式适用场景",link:"/basic/match-pattern/pattern-match.html"},{text:"全模式列表",link:"/basic/match-pattern/all-patterns.html"}]},{text:"方法 Method",link:"/basic/method.html"},{collapsed:!0,text:"泛型和特征",link:"/basic/trait/intro.html",prefix:"泛型和特征/",children:[{text:"README",link:"/basic/trait/intro.html"},{text:"泛型 Generics",link:"/basic/trait/generic.html"},{text:"特征 Trait",link:"/basic/trait/trait.html"},{text:"特征对象",link:"/basic/trait/trait-object.html"},{text:"进一步深入特征",link:"/basic/trait/advance-trait.html"}]},{collapsed:!0,text:"集合类型",link:"/basic/collections/intro.html",prefix:"集合类型/",children:[{text:"README",link:"/basic/collections/intro.html"},{text:"动态数组 Vector",link:"/basic/collections/vector.html"},{text:"KV 存储 HashMap",link:"/basic/collections/hashmap.html"}]},{text:"认识生命周期",link:"/basic/lifetime.html"},{collapsed:!0,text:"返回值和错误处理",link:"/basic/result-error/intro.html",prefix:"返回值和错误处理/",children:[{text:"README",link:"/basic/result-error/intro.html"},{text:"panic! 深入剖析",link:"/basic/result-error/panic.html"},{text:"返回值 Result 和?",link:"/basic/result-error/result.html"}]},{collapsed:!0,text:"包和模块",link:"/basic/crate-module/intro.html",prefix:"包和模块/",children:[{text:"README",link:"/basic/crate-module/intro.html"},{text:"包 Crate",link:"/basic/crate-module/crate.html"},{text:"模块 Module",link:"/basic/crate-module/module.html"},{text:"使用 use 引入模块及受限可见性",link:"/basic/crate-module/use.html"}]},{text:"注释和文档",link:"/basic/comment.html"},{text:"格式化输出",link:"/basic/formatted-output.html"}]},{collapsed:!0,text:"入门实战：文件搜索工具",link:"/basic-practice/intro.html",prefix:"入门实战：文件搜索工具/",children:[{text:"README",link:"/basic-practice/intro.html"},{text:"基本功能",link:"/basic-practice/base-features.html"},{text:"增加模块化和错误处理",link:"/basic-practice/refactoring.html"},{text:"测试驱动开发",link:"/basic-practice/tests.html"},{text:"使用环境变量",link:"/basic-practice/envs.html"},{text:"重定向错误信息的输出",link:"/basic-practice/stderr.html"},{text:"使用迭代器来改进程序(可选)",link:"/basic-practice/iterators.html"}]}]},{collapsed:!1,text:"Rust 语言进阶学习",link:"/Rust 语言进阶学习",prefix:"Rust 语言进阶学习/",children:[{collapsed:!0,text:"Rust 高级进阶",link:"/advance/intro.html",prefix:"Rust 高级进阶/",children:[{text:"README",link:"/advance/intro.html"},{collapsed:!0,text:"生命周期",link:"/advance/lifetime/intro.html",prefix:"生命周期/",children:[{text:"README",link:"/advance/lifetime/intro.html"},{text:"深入生命周期",link:"/advance/lifetime/advance.html"},{text:"&'static 和 T: 'static",link:"/advance/lifetime/static.html"}]},{collapsed:!0,text:"函数式编程: 闭包、迭代器",link:"/advance/functional-programing/intro.html",prefix:"函数式编程: 闭包、迭代器/",children:[{text:"README",link:"/advance/functional-programing/intro.html"},{text:"闭包 Closure",link:"/advance/functional-programing/closure.html"},{text:"迭代器 Iterator",link:"/advance/functional-programing/iterator.html"}]},{collapsed:!0,text:"深入类型",link:"/advance/into-types/intro.html",prefix:"深入类型/",children:[{text:"README",link:"/advance/into-types/intro.html"},{text:"类型转换",link:"/advance/into-types/converse.html"},{text:"newtype 和 类型别名",link:"/advance/into-types/custom-type.html"},{text:"Sized 和不定长类型 DST",link:"/advance/into-types/sized.html"},{text:"枚举和整数",link:"/advance/into-types/enum-int.html"}]},{collapsed:!0,text:"智能指针",link:"/advance/smart-pointer/intro.html",prefix:"智能指针/",children:[{text:"README",link:"/advance/smart-pointer/intro.html"},{text:"Box\\<T\\> 堆对象分配",link:"/advance/smart-pointer/box.html"},{text:"Deref 解引用",link:"/advance/smart-pointer/deref.html"},{text:"Drop 释放资源",link:"/advance/smart-pointer/drop.html"},{text:"Rc 与 Arc 实现 1vN 所有权机制",link:"/advance/smart-pointer/rc-arc.html"},{text:"Cell 与 RefCell 内部可变性",link:"/advance/smart-pointer/cell-refcell.html"}]},{collapsed:!0,text:"循环引用与自引用",link:"/advance/circle-self-ref/intro.html",prefix:"循环引用与自引用/",children:[{text:"README",link:"/advance/circle-self-ref/intro.html"},{text:"Weak 与循环引用",link:"/advance/circle-self-ref/circle-reference.html"},{text:"结构体中的自引用",link:"/advance/circle-self-ref/self-referential.html"}]},{collapsed:!0,text:"多线程并发编程",link:"/advance/concurrency-with-threads/intro.html",prefix:"多线程并发编程/",children:[{text:"README",link:"/advance/concurrency-with-threads/intro.html"},{text:"并发和并行",link:"/advance/concurrency-with-threads/concurrency-parallelism.html"},{text:"使用多线程",link:"/advance/concurrency-with-threads/thread.html"},{text:"线程同步：消息传递",link:"/advance/concurrency-with-threads/message-passing.html"},{text:"线程同步：锁、Condvar 和信号量",link:"/advance/concurrency-with-threads/sync1.html"},{text:"线程同步：Atomic 原子操作与内存顺序",link:"/advance/concurrency-with-threads/sync2.html"},{text:"基于 Send 和 Sync 的线程安全",link:"/advance/concurrency-with-threads/send-sync.html"}]},{text:"全局变量",link:"/advance/global-variable.html"},{text:"错误处理",link:"/advance/errors.html"},{collapsed:!0,text:"Unsafe Rust",link:"/advance/unsafe/intro.html",prefix:"Unsafe Rust/",children:[{text:"README",link:"/advance/unsafe/intro.html"},{text:"五种兵器",link:"/advance/unsafe/superpowers.html"},{text:"内联汇编",link:"/advance/unsafe/inline-asm.html"}]},{text:"Macro 宏编程",link:"/advance/macro.html"},{collapsed:!0,text:"async/await 异步编程",link:"/advance/async/intro.html",prefix:"async/await 异步编程/",children:[{text:"README",link:"/advance/async/intro.html"},{text:"async 编程入门",link:"/advance/async/getting-started.html"},{text:"底层探秘: Future 执行与任务调度",link:"/advance/async/future-excuting.html"},{text:"定海神针 Pin 和 Unpin",link:"/advance/async/pin-unpin.html"},{text:"async/await 和 Stream 流处理",link:"/advance/async/async-await.html"},{text:"同时运行多个 Future",link:"/advance/async/multi-futures-simultaneous.html"},{text:"一些疑难问题的解决办法",link:"/advance/async/pain-points-and-workarounds.html"},{text:"实践应用：Async Web 服务器",link:"/advance/async/web-server.html"}]}]},{collapsed:!0,text:"进阶实战1: 实现一个 web 服务器",link:"/advance-practice1/intro.html",prefix:"进阶实战1: 实现一个 web 服务器/",children:[{text:"README",link:"/advance-practice1/intro.html"},{text:"单线程版本",link:"/advance-practice1/web-server.html"},{text:"多线程版本",link:"/advance-practice1/multi-threads.html"},{text:"优雅关闭和资源清理",link:"/advance-practice1/graceful-shutdown.html"}]},{collapsed:!0,text:"进阶实战2: 实现一个简单 Redis",link:"/advance-practice/intro.html",prefix:"进阶实战2: 实现一个简单 Redis/",children:[{text:"README",link:"/advance-practice/intro.html"},{text:"tokio 概览",link:"/advance-practice/overview.html"},{text:"使用初印象",link:"/advance-practice/getting-startted.html"},{text:"创建异步任务",link:"/advance-practice/spawning.html"},{text:"共享状态",link:"/advance-practice/shared-state.html"},{text:"消息传递",link:"/advance-practice/channels.html"},{text:"I/O",link:"/advance-practice/io.html"},{text:"解析数据帧",link:"/advance-practice/frame.html"},{text:"深入 async",link:"/advance-practice/async.html"},{text:"select",link:"/advance-practice/select.html"},{text:"类似迭代器的 Stream",link:"/advance-practice/stream.html"},{text:"优雅的关闭",link:"/advance-practice/graceful-shutdown.html"},{text:"异步跟同步共存",link:"/advance-practice/bridging-with-sync.html"}]},{collapsed:!0,text:"Rust 难点攻关",link:"/difficulties/intro.html",prefix:"Rust 难点攻关/",children:[{text:"README",link:"/difficulties/intro.html"},{text:"切片和切片引用",link:"/difficulties/slice.html"},{text:"Eq 和 PartialEq",link:"/difficulties/eq.html"},{text:"String、&str 和 str TODO",link:"/difficulties/string.html"},{text:"作用域、生命周期和 NLL TODO",link:"/difficulties/lifetime.html"},{text:"move、Copy 和 Clone TODO",link:"/difficulties/move-copy.html"},{text:"裸指针、引用和智能指针 TODO",link:"/advance/difficulties/pointer.html"}]}]},{collapsed:!1,text:"常用工具链",link:"/常用工具链",prefix:"常用工具链/",children:[{collapsed:!0,text:"自动化测试",link:"/test/intro.html",prefix:"自动化测试/",children:[{text:"README",link:"/test/intro.html"},{text:"编写测试及控制执行",link:"/test/write-tests.html"},{text:"单元测试和集成测试",link:"/test/unit-integration-test.html"},{text:"断言 assertion",link:"/test/assertion.html"},{text:"用 GitHub Actions 进行持续集成",link:"/test/ci.html"},{text:"基准测试 benchmark",link:"/test/benchmark.html"}]},{collapsed:!0,text:"Cargo 使用指南",link:"/cargo/intro.html",prefix:"Cargo 使用指南/",children:[{text:"README",link:"/cargo/intro.html"},{text:"上手使用",link:"/cargo/getting-started.html"},{collapsed:!0,text:"基础指南",link:"/cargo/guide/intro.html",prefix:"基础指南/",children:[{text:"README",link:"/cargo/guide/intro.html"},{text:"为何会有 Cargo",link:"/cargo/guide/why-exist.html"},{text:"下载并构建 Package",link:"/cargo/guide/download-package.html"},{text:"添加依赖",link:"/cargo/guide/dependencies.html"},{text:"Package 目录结构",link:"/cargo/guide/package-layout.html"},{text:"Cargo.toml vs Cargo.lock",link:"/cargo/guide/cargo-toml-lock.html"},{text:"测试和 CI",link:"/cargo/guide/tests-ci.html"},{text:"Cargo 缓存",link:"/cargo/guide/cargo-cache.html"},{text:"Build 缓存",link:"/cargo/guide/build-cache.html"}]},{collapsed:!0,text:"进阶指南",link:"/cargo/reference/intro.html",prefix:"进阶指南/",children:[{text:"README",link:"/cargo/reference/intro.html"},{text:"指定依赖项",link:"/cargo/reference/specify-deps.html"},{text:"依赖覆盖",link:"/cargo/reference/deps-overriding.html"},{text:"Cargo.toml 清单详解",link:"/cargo/reference/manifest.html"},{text:"Cargo Target",link:"/cargo/reference/cargo-target.html"},{text:"工作空间 Workspace",link:"/cargo/reference/workspaces.html"},{collapsed:!0,text:"条件编译 Features",link:"/cargo/reference/features/intro.html",prefix:"条件编译 Features/",children:[{text:"README",link:"/cargo/reference/features/intro.html"},{text:"Features 示例",link:"/cargo/reference/features/examples.html"}]},{text:"发布配置 Profile",link:"/cargo/reference/profiles.html"},{text:"通过 config.toml 对 Cargo 进行配置",link:"/cargo/reference/configuration.html"},{text:"发布到 crates.io",link:"/cargo/reference/publishing-on-crates.io.html"},{collapsed:!0,text:"构建脚本 build.rs",link:"/cargo/reference/build-script/intro.html",prefix:"构建脚本 build.rs/",children:[{text:"README",link:"/cargo/reference/build-script/intro.html"},{text:"构建脚本示例",link:"/cargo/reference/build-script/examples.html"}]}]}]}]},{collapsed:!1,text:"开发实践",link:"/开发实践",prefix:"开发实践/",children:[{collapsed:!0,text:"企业落地实践",link:"/usecases/intro.html",prefix:"企业落地实践/",children:[{text:"README",link:"/usecases/intro.html"},{text:"AWS 为何这么喜欢 Rust?",link:"/usecases/aws-rust.html"}]},{collapsed:!0,text:"日志和监控",link:"/logs/intro.html",prefix:"日志和监控/",children:[{text:"README",link:"/logs/intro.html"},{text:"日志详解",link:"/logs/about-log.html"},{text:"日志门面 log",link:"/logs/log.html"},{text:"使用 tracing 记录日志",link:"/logs/tracing.html"},{text:"自定义 tracing 的输出格式",link:"/logs/tracing-logger.html"},{collapsed:!0,text:"监控",link:"/logs/observe/intro.html",prefix:"监控/",children:[{text:"README",link:"/logs/observe/intro.html"},{text:"可观测性",link:"/logs/observe/about-observe.html"},{text:"分布式追踪",link:"/logs/observe/trace.html"}]}]},{collapsed:!0,text:"Rust 最佳实践",link:"/practice/intro.html",prefix:"Rust 最佳实践/",children:[{text:"README",link:"/practice/intro.html"},{text:"日常开发三方库精选",link:"/practice/third-party-libs.html"},{text:"命名规范",link:"/practice/naming.html"},{text:"面试经验",link:"/practice/interview.html"},{text:"代码开发实践 todo",link:"/practice/best-pratice.html"}]},{collapsed:!0,text:"手把手带你实现链表",link:"/too-many-lists/intro.html",prefix:"手把手带你实现链表/",children:[{text:"README",link:"/too-many-lists/intro.html"},{text:"我们到底需不需要链表",link:"/too-many-lists/do-we-need-it.html"},{collapsed:!0,text:"不太优秀的单向链表：栈",link:"/too-many-lists/bad-stack/intro.html",prefix:"不太优秀的单向链表：栈/",children:[{text:"README",link:"/too-many-lists/bad-stack/intro.html"},{text:"数据布局",link:"/too-many-lists/bad-stack/layout.html"},{text:"基本操作",link:"/too-many-lists/bad-stack/basic-operations.html"},{text:"最后实现",link:"/too-many-lists/bad-stack/final-code.html"}]},{collapsed:!0,text:"还可以的单向链表",link:"/too-many-lists/ok-stack/intro.html",prefix:"还可以的单向链表/",children:[{text:"README",link:"/too-many-lists/ok-stack/intro.html"},{text:"优化类型定义",link:"/too-many-lists/ok-stack/type-optimizing.html"},{text:"定义 Peek 函数",link:"/too-many-lists/ok-stack/peek.html"},{text:"IntoIter 和 Iter",link:"/too-many-lists/ok-stack/iter.html"},{text:"IterMut 以及完整代码",link:"/too-many-lists/ok-stack/itermut.html"}]},{collapsed:!0,text:"持久化单向链表",link:"/too-many-lists/persistent-stack/intro.html",prefix:"持久化单向链表/",children:[{text:"README",link:"/too-many-lists/persistent-stack/intro.html"},{text:"数据布局和基本操作",link:"/too-many-lists/persistent-stack/layout.html"},{text:"Drop、Arc 及完整代码",link:"/too-many-lists/persistent-stack/drop-arc.html"}]},{collapsed:!0,text:"不咋样的双端队列",link:"/too-many-lists/deque/intro.html",prefix:"不咋样的双端队列/",children:[{text:"README",link:"/too-many-lists/deque/intro.html"},{text:"数据布局和基本操作",link:"/too-many-lists/deque/layout.html"},{text:"Peek",link:"/too-many-lists/deque/peek.html"},{text:"基本操作的对称镜像",link:"/too-many-lists/deque/symmetric.html"},{text:"迭代器",link:"/too-many-lists/deque/iterator.html"},{text:"最终代码",link:"/too-many-lists/deque/final-code.html"}]},{collapsed:!0,text:"不错的 unsafe 队列",link:"/too-many-lists/unsafe-queue/intro.html",prefix:"不错的 unsafe 队列/",children:[{text:"README",link:"/too-many-lists/unsafe-queue/intro.html"},{text:"数据布局",link:"/too-many-lists/unsafe-queue/layout.html"},{text:"基本操作",link:"/too-many-lists/unsafe-queue/basics.html"},{text:"Miri",link:"/too-many-lists/unsafe-queue/miri.html"},{text:"栈借用",link:"/too-many-lists/unsafe-queue/stacked-borrow.html"},{text:"测试栈借用",link:"/too-many-lists/unsafe-queue/testing-stacked-borrow.html"},{text:"数据布局 2",link:"/too-many-lists/unsafe-queue/layout2.html"},{text:"额外的操作",link:"/too-many-lists/unsafe-queue/extra-junk.html"},{text:"最终代码",link:"/too-many-lists/unsafe-queue/final-code.html"}]},{collapsed:!0,text:"生产级的双向 unsafe 队列",link:"/too-many-lists/production-unsafe-deque/intro.html",prefix:"生产级的双向 unsafe 队列/",children:[{text:"README",link:"/too-many-lists/production-unsafe-deque/intro.html"},{text:"数据布局",link:"/too-many-lists/production-unsafe-deque/layout.html"},{text:"型变与子类型",link:"/too-many-lists/production-unsafe-deque/variance-and-phantomData.html"},{text:"基础结构",link:"/too-many-lists/production-unsafe-deque/basics.html"},{text:"恐慌与安全",link:"/too-many-lists/production-unsafe-deque/drop-and-panic-safety.html"},{text:"无聊的组合",link:"/too-many-lists/production-unsafe-deque/boring-combinatorics.html"},{text:"其它特征",link:"/too-many-lists/production-unsafe-deque/filling-in-random-bits.html"},{text:"测试",link:"/too-many-lists/production-unsafe-deque/testing.html"},{text:"Send,Sync和编译测试",link:"/too-many-lists/production-unsafe-deque/send-sync-and-compile-tests.html"},{text:"实现游标",link:"/too-many-lists/production-unsafe-deque/implementing-cursors.html"},{text:"测试游标",link:"/too-many-lists/production-unsafe-deque/testing-cursors.html"},{text:"最终代码",link:"/too-many-lists/production-unsafe-deque/final-code.html"}]},{collapsed:!0,text:"使用高级技巧实现链表",link:"/too-many-lists/advanced-lists/intro.html",prefix:"使用高级技巧实现链表/",children:[{text:"README",link:"/too-many-lists/advanced-lists/intro.html"},{text:"双单向链表",link:"/too-many-lists/advanced-lists/double-singly.html"},{text:"栈上的链表",link:"/too-many-lists/advanced-lists/stack-allocated.html"}]}]}]},{collapsed:!1,text:"攻克编译错误",link:"/攻克编译错误",prefix:"攻克编译错误/",children:[{collapsed:!0,text:"征服编译错误",link:"/compiler/intro.html",prefix:"征服编译错误/",children:[{text:"README",link:"/compiler/intro.html"},{collapsed:!0,text:"对抗编译检查",link:"/compiler/fight-with-compiler/intro.html",prefix:"对抗编译检查/",children:[{text:"README",link:"/compiler/fight-with-compiler/intro.html"},{collapsed:!0,text:"生命周期",link:"/compiler/fight-with-compiler/lifetime/intro.html",prefix:"生命周期/",children:[{text:"README",link:"/compiler/fight-with-compiler/lifetime/intro.html"},{text:"生命周期过大-01",link:"/compiler/fight-with-compiler/lifetime/too-long1.html"},{text:"生命周期过大-02",link:"/compiler/fight-with-compiler/lifetime/too-long2.html"},{text:"循环中的生命周期",link:"/compiler/fight-with-compiler/lifetime/loop.html"},{text:"闭包碰到特征对象-01",link:"/compiler/fight-with-compiler/lifetime/closure-with-static.html"}]},{collapsed:!0,text:"重复借用",link:"/compiler/fight-with-compiler/borrowing/intro.html",prefix:"重复借用/",children:[{text:"README",link:"/compiler/fight-with-compiler/borrowing/intro.html"},{text:"同时在函数内外使用引用",link:"/compiler/fight-with-compiler/borrowing/ref-exist-in-out-fn.html"},{text:"智能指针引起的重复借用错误",link:"/compiler/fight-with-compiler/borrowing/borrow-distinct-fields-of-struct.html"}]},{text:"类型未限制(todo)",link:"/compiler/fight-with-compiler/unconstrained.html"},{text:"幽灵数据(todo)",link:"/compiler/fight-with-compiler/phantom-data.html"}]},{collapsed:!0,text:"Rust 常见陷阱",link:"/compiler/pitfalls/index.html",prefix:"Rust 常见陷阱/",children:[{text:"README",link:"/compiler/pitfalls/index.html"},{text:"for 循环中使用外部数组",link:"/compiler/pitfalls/use-vec-in-for.html"},{text:"线程类型导致的栈溢出",link:"/compiler/pitfalls/stack-overflow.html"},{text:"算术溢出导致的 panic",link:"/compiler/pitfalls/arithmetic-overflow.html"},{text:"闭包中奇怪的生命周期",link:"/compiler/pitfalls/closure-with-lifetime.html"},{text:"可变变量不可变？",link:"/compiler/pitfalls/the-disabled-mutability.html"},{text:"可变借用失败引发的深入思考",link:"/compiler/pitfalls/multiple-mutable-references.html"},{text:"不太勤快的迭代器",link:"/compiler/pitfalls/lazy-iterators.html"},{text:"奇怪的序列 x..y",link:"/compiler/pitfalls/weird-ranges.html"},{text:"无处不在的迭代器",link:"/compiler/pitfalls/iterator-everywhere.html"},{text:"线程间传递消息导致主线程无法结束",link:"/compiler/pitfalls/main-with-channel-blocked.html"},{text:"警惕 UTF-8 引发的性能隐患",link:"/compiler/pitfalls/utf8-performance.html"}]}]}]},{collapsed:!1,text:"性能优化",link:"/性能优化",prefix:"性能优化/",children:[{collapsed:!0,text:"Rust 性能优化 todo",link:"/profiling/intro.html",prefix:"Rust 性能优化 todo/",children:[{text:"README",link:"/profiling/intro.html"},{collapsed:!0,text:"深入内存 todo",link:"/profiling/memory/intro.html",prefix:"深入内存 todo/",children:[{text:"README",link:"/profiling/memory/intro.html"},{text:"指针和引用 todo",link:"/profiling/memory/pointer-ref.html"},{text:"未初始化内存 todo",link:"/profiling/memory/uninit.html"},{text:"内存分配 todo",link:"/profiling/memory/allocation.html"},{text:"内存布局 todo",link:"/profiling/memory/layout.html"},{text:"虚拟内存 todo",link:"/profiling/memory/virtual.html"}]},{collapsed:!0,text:"性能调优 doing",link:"/profiling/performance/intro.html",prefix:"性能调优 doing/",children:[{text:"README",link:"/profiling/performance/intro.html"},{text:"字符串操作性能",link:"/profiling/performance/string.html"},{text:"深入理解 move",link:"/profiling/performance/deep-into-move.html"},{text:"糟糕的提前优化 todo",link:"/profiling/performance/early-optimise.html"},{text:"Clone 和 Copy todo",link:"/profiling/performance/clone-copy.html"},{text:"减少 Runtime check(todo)",link:"/profiling/performance/runtime-check.html"},{text:"CPU 缓存性能优化 todo",link:"/profiling/performance/cpu-cache.html"},{text:"计算性能优化 todo",link:"/profiling/performance/calculate.html"},{text:"堆和栈 todo",link:"/profiling/performance/heap-stack.html"},{text:"内存 allocator todo",link:"/profiling/performance/allocator.html"},{text:"常用性能测试工具 todo",link:"/profiling/performance/tools.html"},{text:"Enum 内存优化 todo",link:"/profiling/performance/enum.html"}]},{collapsed:!0,text:"编译优化 todo",link:"/profiling/compiler/intro.html",prefix:"编译优化 todo/",children:[{text:"README",link:"/profiling/compiler/intro.html"},{text:"LLVM todo",link:"/profiling/compiler/llvm.html"},{text:"常见属性标记 todo",link:"/profiling/compiler/attributes.html"},{text:"提升编译速度 todo",link:"/profiling/compiler/speed-up.html"},{collapsed:!0,text:"编译器优化 todo",link:"/profiling/compiler/optimization/intro.html",prefix:"编译器优化 todo/",children:[{text:"README",link:"/profiling/compiler/optimization/intro.html"},{text:"Option 枚举 todo",link:"/profiling/compiler/optimization/option.html"}]}]}]}]},{collapsed:!1,text:"附录",link:"/附录",prefix:"附录/",children:[{collapsed:!0,text:"Appendix",link:"/",prefix:"Appendix/",children:[{text:"README",link:"/"},{text:"关键字",link:"/appendix/keywords.html"},{text:"运算符与符号",link:"/appendix/operators.html"},{text:"表达式",link:"/appendix/expressions.html"},{text:"派生特征 trait",link:"/appendix/derive.html"},{text:"prelude 模块 todo",link:"/appendix/prelude.html"},{text:"Rust 版本说明",link:"/appendix/rust-version.html"},{collapsed:!0,text:"Rust 历次版本更新解读",link:"/appendix/rust-versions/intro.html",prefix:"Rust 历次版本更新解读/",children:[{text:"README",link:"/appendix/rust-versions/intro.html"},{text:"1.58",link:"/appendix/rust-versions/1.58.html"},{text:"1.59",link:"/appendix/rust-versions/1.59.html"},{text:"1.60",link:"/appendix/rust-versions/1.60.html"},{text:"1.61",link:"/appendix/rust-versions/1.61.html"},{text:"1.62",link:"/appendix/rust-versions/1.62.html"},{text:"1.63",link:"/appendix/rust-versions/1.63.html"},{text:"1.64",link:"/appendix/rust-versions/1.64.html"},{text:"1.65",link:"/appendix/rust-versions/1.65.html"},{text:"1.66",link:"/appendix/rust-versions/1.66.html"},{text:"1.67",link:"/appendix/rust-versions/1.67.html"},{text:"1.68",link:"/appendix/rust-versions/1.68.html"},{text:"1.69",link:"/appendix/rust-versions/1.69.html"},{text:"1.70",link:"/appendix/rust-versions/1.70.html"},{text:"1.71",link:"/appendix/rust-versions/1.71.html"},{text:"1.72",link:"/appendix/rust-versions/1.72.html"},{text:"1.73",link:"/appendix/rust-versions/1.73.html"},{text:"1.74",link:"/appendix/rust-versions/1.74.html"},{text:"1.75",link:"/appendix/rust-versions/1.75.html"},{text:"1.76",link:"/appendix/rust-versions/1.76.html"},{text:"1.77",link:"/appendix/rust-versions/1.77.html"},{text:"1.78",link:"/appendix/rust-versions/1.78.html"},{text:"1.79",link:"/appendix/rust-versions/1.79.html"},{text:"1.80",link:"/appendix/rust-versions/1.80.html"},{text:"1.81",link:"/appendix/rust-versions/1.81.html"},{text:"1.82",link:"/appendix/rust-versions/1.82.html"},{text:"1.83",link:"/appendix/rust-versions/1.83.html"},{text:"1.84",link:"/appendix/rust-versions/1.84.html"},{text:"1.85",link:"/appendix/rust-versions/1.85.html"}]}]}]}],FG=ti({__name:"RootSidebarItem",props:{deep_from_target:{},prefix_from_root:{},sidebarData:{},currentPath:{},isH1:{type:Boolean,default:!1}},setup(i,{expose:s}){s();const e=i,n=Z([]),a=()=>{let d=e.currentPath.split("/");(e.currentPath.endsWith("/")||d[d.length-1].includes("."))&&d.pop(),d.map(u=>{n.value.push(u+"/")})};a(),bi(()=>e.prefix_from_root,()=>{a()}),bi(()=>e.currentPath,()=>{a()});for(const d of e.sidebarData)typeof d!="string"&&"collapsed"in d&&d.collapsed!=null&&d.collapsed==!1&&n.value.push(d.prefix);function t(d){return d.hasOwnProperty("children")?!!n.value.includes(d.prefix):!1}const l=d=>{typeof d!="string"&&"children"in d&&(n.value.includes(d.prefix)?n.value=n.value.filter(u=>u!==d.prefix):n.value.push(d.prefix))},r=d=>{var u,o,c,A;if(typeof d=="string"){if(e.isH1){const y=(o=(u=Ks(h(d)))==null?void 0:u.meta)==null?void 0:o.title;if(y&&y!="404")return y}if(!d.length)return"README";let g=decodeURIComponent(d);d.endsWith("/")&&(g=g.slice(0,-1));let f=g.split("/");g=f.pop()??"Error: pathname without shape";let m=g.split("?");return m.length>1&&(g=m[0]),g.length?g.replace(/\.html$/,""):f.pop()??"/"}else{if("children"in d)return d.prefix.slice(0,-1);{if(e.isH1){const y=(A=(c=Ks(h(d.link)))==null?void 0:c.meta)==null?void 0:A.title;if(y&&y!="404")return y}if(!d.text.length)return"README";let g=decodeURIComponent(d.link);d.link.endsWith("/")&&(g=g.slice(0,-1));let f=g.split("/");g=f.pop()??"Error: pathname without shape";let m=g.split("?");return m.length>1&&(g=m[0]),g.length?g.replace(/\.html$/,""):f.pop()??"/"}}},h=d=>d.length?d.startsWith("/")?d:d.endsWith("/")?e.prefix_from_root+d:e.prefix_from_root+d+".html":e.prefix_from_root,k={props:e,unfold_arr:n,onUpdateDeep:a,isUnFold:t,clickItem:l,getText:r,getUrl:h,getIsActive:d=>decodeURIComponent(e.currentPath)==h(d)};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}}),EG={class:"sidebar-item-children"},bG={key:0,class:"sidebar-item file"},CG=["relDeep"],_G={class:"sidebar-item file"},DG=["relDeep"],xG=["unfold"],wG=["relDeep","onClick"],TG=["title"];function SG(i,s,e,n,a,t){const l=Wi("router-link"),r=Wi("RootSidebarItem",!0);return hi(),oi("ul",EG,[(hi(!0),oi(_i,null,bs(e.sidebarData,(h,p)=>(hi(),oi("li",{key:p},[yi(" 文件-1 "),typeof h=="string"?(hi(),oi("div",bG,[yi(` <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24">
          <path d="M0 0h24v24H0z" fill="none"/>
          <path d="M12 2C6.48 2 2 6.48 2 12c0 5.52 4.48 10 10 10 5.52 0 10-4.48 10-10 0-5.52-4.48-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-2-9h4v2h-4v-2z"/>
        </svg> `),j("div",{class:Ii(["sidebar-item-name","file",{active:n.getIsActive(h)}]),relDeep:n.props.deep_from_target+1,style:ds("padding-inline-start:"+(n.props.deep_from_target*20+24)+"px")},[yi(" router-link代替a，spa路由切换，避免整个页面刷新 "),yi(' <a :href="item">{{ getText(item) }},deep: {{ deep }}, item: {{ item }}</a> '),Bi(l,{to:n.getUrl(h),title:n.getUrl(h)},{default:$i(()=>[ks(Li(n.getText(h)),1)]),_:2},1032,["to","title"])],14,CG)])):"children"in h?(hi(),oi(_i,{key:2},[yi(" 文件夹 "),j("div",{class:"sidebar-item folder",unfold:n.isUnFold(h)},[j("div",{class:Ii(["sidebar-item-name","folder",{active:n.getIsActive(h.prefix)}]),relDeep:n.props.deep_from_target+1,style:ds("padding-inline-start:"+(n.props.deep_from_target*20+24)+"px"),onClick:k=>n.clickItem(h)},[j("a",{title:n.getUrl(h.prefix)},Li(n.getText(h)),9,TG)],14,wG),n.isUnFold(h)?(hi(),rs(r,{key:0,deep_from_target:n.props.deep_from_target+1,prefix_from_root:n.props.prefix_from_root+h.prefix,sidebarData:h.children,currentPath:n.props.currentPath,"is-h1":n.props.isH1},null,8,["deep_from_target","prefix_from_root","sidebarData","currentPath","is-h1"])):yi("v-if",!0)],8,xG)],2112)):(hi(),oi(_i,{key:1},[yi("  文件-2 "),j("div",_G,[j("div",{class:Ii(["sidebar-item-name","file",{active:n.getIsActive(h.link)}]),relDeep:n.props.deep_from_target+1,style:ds("padding-inline-start:"+(n.props.deep_from_target*20+24)+"px")},[Bi(l,{to:n.getUrl(h.link),title:n.getUrl(h.link)},{default:$i(()=>[ks(Li(n.getText(h.text)),1)]),_:2},1032,["to","title"])],14,DG)])],2112))]))),128))])}const IG=ns(FG,[["render",SG],["__scopeId","data-v-4691a116"],["__file","RootSidebarItem.vue"]]),RG=!1,OG=ti({__name:"RootSidebar",setup(i,{expose:s}){s(),st.hasOwnProperty("/")||console.error('Error: Must be add a {"/": "structure"} in sidebar config');let e=!1;const n=Z(st["/"]),a=Z(""),t=Z([]),l=Z(0),r=z(()=>t.value.slice(0,l.value+1).join("/")+"/"),h=z(()=>t.value[l.value]),p=Z(n.value);let k=xu().value.base;k!="/"&&(k.startsWith("/")&&(k=k.slice(1)),k.endsWith("/")&&(k=k.slice(0,-1)));function d(V){{k=="/"?a.value=decodeURIComponent(window.location.pathname):a.value=decodeURIComponent(window.location.pathname).replace(new RegExp(`^/${k}/`),"/");let E=a.value.split("/");(a.value.endsWith("/")||E[E.length-1].includes("."))&&E.pop(),t.value=E}{let $=function(I){const M=window.location.search.substring(1).split("&");for(var G=0;G<M.length;G++){var Y=M[G].split("=");if(Y[0]==I)return Y[1]}return null}("deep");V!==void 0&&V>=0?l.value=V:$?l.value=parseInt($):e||(l.value=l.value=t.value.length-1,l.value<0&&(l.value=0)),e=!0,l.value>t.value.length-1?(l.value=t.value.length-1,console.warn(`Warning: The deep value is too large, reset deep: ${l.value}`)):l.value<0&&(l.value==-1?l.value=t.value.length-1:l.value=0)}(()=>{let E=n.value;for(let $=1;$<l.value+1;$++)for(let I=0;I<E.length;I++){const M=E[I];if(typeof M!="string"&&"children"in M){if(M.prefix===t.value[$]+"/"){E=M.children;break}if(I===E.length-1){console.error(`Error: Can't find the deep ${$} in ${a.value}, reset deep: ${$-1>0?$-1:0}`),l.value=$-1>0?$-1:0;return}}}p.value=E})()}const u=De(),o=Ke(),c=V=>{if(V<0)return;const E={...o.query,deep:V};u.push({path:o.path,query:E,hash:o.hash}),d(V),L()};Di(()=>{d()}),bi(()=>o.fullPath,()=>{d()});const A=Z(!1),g=Z(!1);function f(V){const E=document.querySelector("#sidebar>.vp-sidebar-links"),$=document.querySelector("#sidebar>.root-sidebar>.root-sidebar-content"),I=document.querySelector("#sidebar>.root-sidebar>.root-sidebar-content2");if(!E||!$||!I){console.warn("Warning: can not find sidebar old/new element");return}V!==void 0||(E.style.display==="none"||E.style.display===""?(V=!1,g.value=!0):(V=!0,g.value=!1)),V?(E.style.display="none",$.style.display="block",I.style.display="block"):($.style.display="none",I.style.display="none",E.style.display="block")}Di(()=>{f(!0)});const m=Z($d&&$d.length!=0),y=Z(!1);function v(){y.value?(y.value=!1,n.value=st["/"]):(y.value=!0,n.value=$d),p.value=n.value,d()}m&&v();const C=Z([]);Di(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const V=localStorage.getItem("pinnedTabs");V&&(C.value=JSON.parse(V))}});function S(){const V=a.value+window.location.search+window.location.hash;if(C.value.includes(V)?C.value=C.value.filter(E=>E!==V):C.value.push(V),typeof window<"u"&&typeof localStorage<"u"){const E=JSON.stringify(C.value);localStorage.setItem("pinnedTabs",E)}}async function L(){if(await Hi(),!w.value)return;const V=w.value.querySelector(":scope>button[relDeep='0']");V&&V.scrollIntoView({behavior:"smooth",block:"nearest",inline:"start"})}const w=Z(null);Di(()=>{L()});const _=Bs(),R=ji(),N=()=>{console.log("debug start ---------------------------------------"),console.log("dataR",n),console.log("dataT",p),console.log("comp2",r),console.log("comp4",a),console.log("route1",window.location),console.log("route2",o),console.log("route3",u),console.log("usePageData1",_.value),console.log("usePageData2",_.value.router),console.log("usePageData3",_.value.path),console.log("usePageFrontmatter",R.value),console.log("debug end -----------------------------------------")};Di(()=>{});const T={get targetDeep_isInit(){return e},set targetDeep_isInit(V){e=V},rootData:n,currentPath:a,currentPathArr:t,targetDeep:l,targetPath:r,targetFolder:h,targetData:p,get orgName(){return k},set orgName(V){k=V},onNewUrl:d,router:u,route:o,emitNewUrl:c,isH1:A,isOldSidebar:g,switchOldSidebar:f,hasSummary:m,isSummary:y,switchSummarySidebar:v,pinData:C,emitPinTab:S,emitScrollBreadcrumb:L,Breadcrumb:w,isDebug:RG,_usePageData:_,_usePageFrontmatter:R,debug:N,RootSidebarItem:IG};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}}),PG={class:"root-sidebar"},LG={class:"root-sidebar-control"},NG={class:"root-sidebar-btn"},MG=["title"],$G={class:"root-sidebar-breadcrumb",ref:"Breadcrumb"},VG=["onClick","relDeep"],zG=["title"],qG={class:"root-sidebar-content2"},HG={class:"root-sidebar-content"};function jG(i,s,e,n,a,t){return hi(),oi("div",PG,[j("div",LG,[j("div",NG,[yi(' <button title="升序/降序排序">Ord</button> '),j("button",{onClick:s[0]||(s[0]=()=>{n.isH1=!n.isH1}),class:Ii({active:n.isH1}),title:n.isH1?"切换显示: H1->文件名":"切换显示: 文件名->H1"},s[6]||(s[6]=[j("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"20",viewBox:"1 -4 22 22",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-heading"},[j("path",{d:"M6 12h12"}),j("path",{d:"M6 20V4"}),j("path",{d:"M18 20V4"})],-1)]),10,MG),j("button",{onClick:s[1]||(s[1]=l=>n.switchOldSidebar()),class:Ii({active:n.isOldSidebar}),title:"切换新旧侧边栏"},s[7]||(s[7]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-down-up" data-v-efa322cb><path d="m3 16 4 4 4-4" data-v-efa322cb></path><path d="M7 20V4" data-v-efa322cb></path><path d="m21 8-4-4-4 4" data-v-efa322cb></path><path d="M17 4v16" data-v-efa322cb></path></svg>',1)]),2),n.hasSummary?(hi(),oi("button",{key:0,onClick:s[2]||(s[2]=l=>n.switchSummarySidebar()),class:Ii({active:n.isSummary}),title:"使用SUMMARY源"},s[8]||(s[8]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-down-up" data-v-efa322cb><path d="m3 16 4 4 4-4" data-v-efa322cb></path><path d="M7 20V4" data-v-efa322cb></path><path d="m21 8-4-4-4 4" data-v-efa322cb></path><path d="M17 4v16" data-v-efa322cb></path></svg>',1)]),2)):yi("v-if",!0),j("button",{onClick:s[3]||(s[3]=()=>{n.emitPinTab()}),title:"固定或删除当前标签页"},s[9]||(s[9]=[j("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"26",viewBox:"0 -1 24 24",fill:"none",stroke:"currentColor","stroke-width":"1.6","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-pin"},[j("path",{d:"M12 17v5"}),j("path",{d:"M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z"})],-1)])),j("button",{onClick:s[4]||(s[4]=()=>{n.emitNewUrl(n.targetDeep-1)}),title:"显示更多侧边项"},s[10]||(s[10]=[j("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"26",viewBox:"6 5 12 12",fill:"none",stroke:"currentColor","stroke-width":"1.6","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-chevron-left"},[j("path",{d:"m15 18-6-6 6-6"})],-1)])),j("button",{onClick:s[5]||(s[5]=()=>{n.emitNewUrl(n.targetDeep+1)}),title:"精简更少侧边项"},s[11]||(s[11]=[j("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"26",viewBox:"5 5 12 12",fill:"none",stroke:"currentColor","stroke-width":"1.6","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-chevron-right"},[j("path",{d:"m9 18 6-6-6-6"})],-1)]))]),j("div",$G,[yi(" TODO: 下拉框，路径下拉表示、排序、固定伪标签页 "),(hi(!0),oi(_i,null,bs(n.currentPathArr,(l,r)=>(hi(),oi("button",{onClick:()=>{n.emitNewUrl(r)},relDeep:r-n.targetDeep},[j("span",{title:decodeURIComponent(l)+"/"},Li(decodeURIComponent(l)+"/"),9,zG)],8,VG))),256))],512)]),j("div",qG,[yi(" 固定标签, 伪标签栏  "),Bi(n.RootSidebarItem,{deep_from_target:0,prefix_from_root:n.targetPath,sidebarData:n.pinData,currentPath:"/",isH1:n.isH1},null,8,["prefix_from_root","sidebarData","isH1"]),os(j("div",null,s[12]||(s[12]=[j("hr",null,null,-1)]),512),[[ga,n.pinData.length>0]])]),j("div",HG,[Bi(n.RootSidebarItem,{deep_from_target:0,prefix_from_root:n.targetPath,sidebarData:n.targetData,currentPath:n.currentPath,isH1:n.isH1},null,8,["prefix_from_root","sidebarData","currentPath","isH1"])])])}const R1=ns(OG,[["render",jG],["__scopeId","data-v-efa322cb"],["__file","RootSidebar.vue"]]),UG=ti({__name:"NewLayout",setup(i,{expose:s}){s();const e={get CommonWrapper(){return ur},get NormalPage(){return ic},get SkipLink(){return cr},get FadeSlideY(){return Bp},RootSidebar:R1};return Object.defineProperty(e,"__isScriptSetup",{enumerable:!1,value:!0}),e}});function GG(i,s,e,n,a,t){return hi(),oi(_i,null,[Bi(n.SkipLink),Bi(n.CommonWrapper,null,{sidebarTop:$i(()=>[Bi(n.RootSidebar)]),default:$i(()=>[Bi(n.FadeSlideY,null,{default:$i(()=>[Bi(n.NormalPage)]),_:1})]),_:1})],64)}const WG=ns(UG,[["render",GG],["__file","NewLayout.vue"]]),KG=Ts({setup(){},enhance:({app:i,router:s,siteData:e})=>{i.component("RootSidebar",R1)},layouts:{OldLayout:yp,Layout:WG}}),YG=Object.freeze(Object.defineProperty({__proto__:null,default:KG},Symbol.toStringTag,{value:"Module"})),Vd="mul",XG=ti({__name:"ReadEnhance",setup(i,{expose:s}){s();const e={},n=Z(!1),a=Z("");Di(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const o=localStorage.getItem("ReadEnahnce_mode");o&&t(o)}});function t(o){a.value==o?a.value="":a.value=o;const c=document.documentElement,A=document.querySelector("#toc"),g=document.querySelector(".vp-page-title"),f=document.querySelector(".backlink-container"),m=document.querySelector("footer.vp-page-meta"),y=document.querySelector("nav.vp-page-nav"),v=document.querySelector("#sidebar"),C=document.querySelector("#main-content");if(document.documentElement.setAttribute("read-mode",a.value),a.value=="side")A&&(A.style.display="block"),g&&(g.style.display="block"),f&&(f.style.display="block"),m&&(m.style.display="block"),y&&(y.style.display="flex"),v&&(v.style.paddingInlineStart="1rem"),C&&(C.style.paddingInlineStart="calc(var(--sidebar-width) + 2rem)",C.style.paddingInlineEnd="calc(var(--sidebar-width) + 2rem)"),c&&(c.style.setProperty("--content-width","calc(820px + 16px)"),c.style.setProperty("--nf-min-height","900px"));else if(a.value=="wide")A&&(A.style.display="block"),g&&(g.style.display="block"),f&&(f.style.display="block"),m&&(m.style.display="block"),y&&(y.style.display="flex"),v&&(v.style.paddingInlineStart="1rem"),C&&(C.style.paddingInlineStart="calc(var(--sidebar-width) + 2rem)",C.style.paddingInlineEnd="calc(var(--sidebar-width) + 2rem)"),c&&(c.style.setProperty("--content-width","calc(100%)"),c.style.setProperty("--nf-min-height","900px"));else if(a.value=="super-wide"){A&&(A.style.display="none"),g&&(g.style.display="none"),f&&(f.style.display="none"),m&&(m.style.display="none"),y&&(y.style.display="none"),v&&(v.style.paddingInlineStart="1rem"),C&&(C.style.paddingInlineStart="calc(var(--sidebar-width) + 2rem)",C.style.paddingInlineEnd="1rem"),c&&(c.style.setProperty("--content-width","calc(100%)"),c.style.setProperty("--nf-min-height","calc(100vh - var(--navbar-height) - 140px)")),C.style.paddingBottom="0";let S=document.querySelector(".theme-hope-content");S&&(S.style.paddingBottom="0"),S=document.querySelector(".pdf-viewer-wrapper"),S&&(S.style.height="calc(100vh - 110px)")}else a.value=="narrow"&&(A&&(A.style.display="block"),g&&(g.style.display="block"),f&&(f.style.display="block"),m&&(m.style.display="block"),y&&(y.style.display="flex"),v&&(v.style.paddingInlineStart="calc(var(--sidebar-space) - var(--sidebar-width))"),C&&(C.style.paddingInlineStart="calc(var(--sidebar-space) + 2rem)",C.style.paddingInlineEnd="calc(100vw - var(--content-width) - var(--sidebar-space) - 6rem)"),c&&(c.style.setProperty("--content-width","calc(820px + 16px)"),c.style.setProperty("--nf-min-height","900px")));typeof window<"u"&&typeof localStorage<"u"&&localStorage.setItem("ReadEnahnce_mode",a.value)}function l(o){const c=document.querySelector("#app>div.theme-container");if(!c){console.warn("没有找到主题主页，无法切换");return}o==null&&(o=!!c.classList.contains("no-sidebar")),o==!0?c.classList.remove("no-sidebar"):o==!1&&c.classList.add("no-sidebar")}function r(o){const c=document.querySelector("#app>div.theme-container");if(!c){console.warn("没有找到主题主页，无法切换");return}o==null&&(o=!c.classList.contains("has-toc")),o==!0?c.classList.add("has-toc"):o==!1&&c.classList.remove("has-toc")}const h=Z("");Di(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const o=localStorage.getItem("ReadEnahnce_color");o&&p(o)}});function p(o){h.value==o?h.value="":h.value=o;const c=document.documentElement;h.value.startsWith("#")&&(c.style.setProperty("--vp-c-bg",h.value),c.style.setProperty("--vp-c-bg-soft",`($color: ${h.value}, $alpha: 1.0)`),c.style.setProperty("--vp-c-bg-elv-soft",`($color: ${h.value}, $alpha: 1.0)`)),typeof window<"u"&&typeof localStorage<"u"&&localStorage.setItem("ReadEnahnce_color",h.value)}const k=Z(Vd);Di(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const o=localStorage.getItem("ReadEnahnce_colors");o&&d(o)}});function d(o){k.value==o?k.value=Vd:k.value=o,document.documentElement.setAttribute("read-colors",k.value),typeof window<"u"&&typeof localStorage<"u"&&localStorage.setItem("ReadEnahnce_colors",k.value)}const u={props:e,isShowContent:n,mode:a,fn_mode:t,fn_switchShowSidebar:l,fn_switchShowToc:r,bgColor:h,fn_color:p,colors_default:Vd,colors:k,fn_colors:d};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}}),ZG={key:0,class:"read-enhance-content"};function JG(i,s,e,n,a,t){return hi(),oi(_i,null,[yi(" 如果要调试就将第二个改成true "),j("div",{class:"read-enhance vp-nav-item",onMouseover:s[17]||(s[17]=l=>n.isShowContent=!0),onMouseleave:s[18]||(s[18]=l=>n.isShowContent=!1)},[s[31]||(s[31]=j("div",{class:"read-enhance-icon"},[j("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-book-open"},[j("path",{d:"M12 7v14"}),j("path",{d:"M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"})])],-1)),n.isShowContent?(hi(),oi("div",ZG,[s[26]||(s[26]=j("div",null," 布局切换 ",-1)),j("div",null,[j("button",{onClick:s[0]||(s[0]=l=>n.fn_mode("narrow")),class:Ii({"is-activate":n.mode=="narrow"}),title:"窄栏模式"},s[19]||(s[19]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-shrink" data-v-abe2094e><path d="m15 15 6 6m-6-6v4.8m0-4.8h4.8" data-v-abe2094e></path><path d="M9 19.8V15m0 0H4.2M9 15l-6 6" data-v-abe2094e></path><path d="M15 4.2V9m0 0h4.8M15 9l6-6" data-v-abe2094e></path><path d="M9 4.2V9m0 0H4.2M9 9 3 3" data-v-abe2094e></path></svg>',1)]),2),j("button",{onClick:s[1]||(s[1]=l=>n.fn_mode("side")),class:Ii({"is-activate":n.mode=="side"}),title:"两侧模式"},s[20]||(s[20]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-maximize-2" data-v-abe2094e><polyline points="15 3 21 3 21 9" data-v-abe2094e></polyline><polyline points="9 21 3 21 3 15" data-v-abe2094e></polyline><line x1="21" x2="14" y1="3" y2="10" data-v-abe2094e></line><line x1="3" x2="10" y1="21" y2="14" data-v-abe2094e></line></svg>',1)]),2),j("button",{onClick:s[2]||(s[2]=l=>n.fn_mode("wide")),class:Ii({"is-activate":n.mode=="wide"}),title:"宽屏模式"},s[21]||(s[21]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-expand" data-v-abe2094e><path d="m15 15 6 6" data-v-abe2094e></path><path d="m15 9 6-6" data-v-abe2094e></path><path d="M21 16.2V21h-4.8" data-v-abe2094e></path><path d="M21 7.8V3h-4.8" data-v-abe2094e></path><path d="M3 16.2V21h4.8" data-v-abe2094e></path><path d="m3 21 6-6" data-v-abe2094e></path><path d="M3 7.8V3h4.8" data-v-abe2094e></path><path d="M9 9 3 3" data-v-abe2094e></path></svg>',1)]),2),j("button",{onClick:s[3]||(s[3]=l=>n.fn_mode("super-wide")),class:Ii({"is-activate":n.mode=="super-wide"}),title:"超宽屏模式"},s[22]||(s[22]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-maximize" data-v-abe2094e><path d="M8 3H5a2 2 0 0 0-2 2v3" data-v-abe2094e></path><path d="M21 8V5a2 2 0 0 0-2-2h-3" data-v-abe2094e></path><path d="M3 16v3a2 2 0 0 0 2 2h3" data-v-abe2094e></path><path d="M16 21h3a2 2 0 0 0 2-2v-3" data-v-abe2094e></path></svg>',1)]),2)]),s[27]||(s[27]=j("div",null," 隐藏侧边栏/TOC ",-1)),j("div",null,[j("button",{onClick:s[4]||(s[4]=l=>n.fn_switchShowSidebar()),title:"侧边栏"},s[23]||(s[23]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-panel-left-dashed-icon lucide-panel-left-dashed" data-v-abe2094e><rect width="18" height="18" x="3" y="3" rx="2" data-v-abe2094e></rect><path d="M9 14v1" data-v-abe2094e></path><path d="M9 19v2" data-v-abe2094e></path><path d="M9 3v2" data-v-abe2094e></path><path d="M9 9v1" data-v-abe2094e></path></svg>',1)])),j("button",{onClick:s[5]||(s[5]=l=>n.fn_switchShowToc()),title:"TOC"},s[24]||(s[24]=[$e('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-panel-right-dashed-icon lucide-panel-right-dashed" data-v-abe2094e><rect width="18" height="18" x="3" y="3" rx="2" data-v-abe2094e></rect><path d="M15 14v1" data-v-abe2094e></path><path d="M15 19v2" data-v-abe2094e></path><path d="M15 3v2" data-v-abe2094e></path><path d="M15 9v1" data-v-abe2094e></path></svg>',1)]))]),s[28]||(s[28]=j("div",null," 背景颜色 ",-1)),j("div",null,[j("button",{onClick:s[6]||(s[6]=l=>n.fn_color("#ffffff")),class:Ii({"is-activate":n.bgColor=="#ffffff"}),title:"明亮",style:{"background-color":"#ffffff"}},null,2),j("button",{onClick:s[7]||(s[7]=l=>n.fn_color("#f8f8f2")),class:Ii({"is-activate":n.bgColor=="#f8f8f2"}),title:"非饱和白",style:{"background-color":"#f8f8f2"}},null,2),j("button",{onClick:s[8]||(s[8]=l=>n.fn_color("#faf8df")),class:Ii({"is-activate":n.bgColor=="#faf8df"}),title:"杏仁黄",style:{"background-color":"#faf8df"}},null,2),j("button",{onClick:s[9]||(s[9]=l=>n.fn_color("#cce8cf")),class:Ii({"is-activate":n.bgColor=="#cce8cf"}),title:"豆沙绿",style:{"background-color":"#cce8cf"}},null,2),s[25]||(s[25]=j("br",null,null,-1)),j("button",{onClick:s[10]||(s[10]=l=>n.fn_color("#e3edcd")),class:Ii({"is-activate":n.bgColor=="#e3edcd"}),title:"青草绿",style:{"background-color":"#e3edcd"}},null,2),j("button",{onClick:s[11]||(s[11]=l=>n.fn_color("#e9ecff")),class:Ii({"is-activate":n.bgColor=="#e9ecff"}),title:"葛巾紫",style:{"background-color":"#e9ecff"}},null,2),j("button",{onClick:s[12]||(s[12]=l=>n.fn_color("#eaeaef")),class:Ii({"is-activate":n.bgColor=="#eaeaef"}),title:"极光灰",style:{"background-color":"#eaeaef"}},null,2),j("button",{onClick:s[13]||(s[13]=l=>n.fn_color("#1f1f1f")),class:Ii({"is-activate":n.bgColor=="#1f1f1f"}),title:"非饱和黑",style:{"background-color":"#1f1f1f"}},null,2)]),s[29]||(s[29]=j("div",null," 配色组 ",-1)),j("div",null,[j("button",{onClick:s[14]||(s[14]=l=>n.fn_colors("mul")),class:Ii({"is-activate":n.colors=="mul"})}," 多彩 ",2),j("button",{onClick:s[15]||(s[15]=l=>n.fn_colors("h1")),class:Ii({"is-activate":n.colors=="h1"})}," 仅h1 ",2),j("button",{onClick:s[16]||(s[16]=l=>n.fn_colors("simple")),class:Ii({"is-activate":n.colors=="simple"})}," 朴素 ",2)]),s[30]||(s[30]=j("div",null,[ks(" tips: 如遇兼容问题，切换明暗模式，"),j("br"),ks("或可重复点击取选，并刷新页面 ")],-1))])):yi("v-if",!0)],32)],2112)}const QG=ns(XG,[["render",JG],["__scopeId","data-v-abe2094e"],["__file","ReadEnhance.vue"]]),iW=Ts({setup(){},enhance:({app:i,router:s,siteData:e})=>{i.component("ReadEnhance",QG)},layouts:{}}),sW=Object.freeze(Object.defineProperty({__proto__:null,default:iW},Symbol.toStringTag,{value:"Module"})),eW=ti({__name:"NewLayout",setup(i,{expose:s}){s();const e={get CommonWrapper(){return ur},get NormalPage(){return ic},get SkipLink(){return cr},get FadeSlideY(){return Bp},Backlink:a1,LocalRelationshipMap:S1,GlobalGraph:I1};return Object.defineProperty(e,"__isScriptSetup",{enumerable:!1,value:!0}),e}});function nW(i,s,e,n,a,t){const l=Wi("RootSidebar");return hi(),oi(_i,null,[Bi(n.GlobalGraph),Bi(n.SkipLink),Bi(n.CommonWrapper,null,{sidebarTop:$i(()=>[Bi(l)]),default:$i(()=>[Bi(n.FadeSlideY,null,{default:$i(()=>[Bi(n.NormalPage,null,{contentAfter:$i(()=>[Bi(n.Backlink)]),tocBefore:$i(()=>[Bi(n.LocalRelationshipMap)]),_:1})]),_:1})]),_:1})],64)}const aW=ns(eW,[["render",nW],["__file","NewLayout.vue"]]),tW=Ts({setup(){},enhance:({app:i,router:s,siteData:e})=>{},layouts:{OldLayout:yp,Layout:aW},rootComponents:[]}),lW=Object.freeze(Object.defineProperty({__proto__:null,default:tW},Symbol.toStringTag,{value:"Module"})),Qr=[Eb,bb,Cb,c7,g7,v7,w5,T5,S5,U_,Y_,e9,t9,f9,P9,q9,Y9,sD,wD,PD,Aw,vw,Pz,qz,vG,YG,sW,lW].map(i=>i.default).filter(Boolean),rW=JSON.parse('{"base":"/rust-course/","lang":"en-US","title":"","description":"","head":[],"locales":{"/":{"lang":"zh-CN","title":"rust-course","description":"rust-course site"}}}');var sl=Ti(rW),hW=xE,pW=()=>{const i=pb({history:hW(Eu("/rust-course/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(s,e,n)=>n||(s.hash?{el:s.hash}:{top:0})});return i.beforeResolve(async(s,e)=>{if(s.path!==e.path||e===rn){const n=Ks(s.fullPath);if(n.path!==s.fullPath)return n.path;const a=await n.loader();s.meta={...n.meta,_pageChunk:a}}else s.path===e.path&&(s.meta=e.meta)}),i},kW=i=>{i.component("ClientOnly",wu),i.component("Content",Q4),i.component("RouteLink",ms)},dW=(i,s,e)=>{const n=z(()=>s.currentRoute.value.path),a=ou((g,f)=>({get(){return g(),s.currentRoute.value.meta._pageChunk},set(m){s.currentRoute.value.meta._pageChunk=m,f()}})),t=z(()=>ka.resolveLayouts(e)),l=z(()=>ka.resolveRouteLocale(sl.value.locales,n.value)),r=z(()=>ka.resolveSiteLocaleData(sl.value,l.value)),h=z(()=>a.value.comp),p=z(()=>a.value.data),k=z(()=>p.value.frontmatter),d=z(()=>ka.resolvePageHeadTitle(p.value,r.value)),u=z(()=>ka.resolvePageHead(d.value,k.value,r.value)),o=z(()=>ka.resolvePageLang(p.value,r.value)),c=z(()=>ka.resolvePageLayout(p.value,t.value)),A={layouts:t,pageData:p,pageComponent:h,pageFrontmatter:k,pageHead:u,pageHeadTitle:d,pageLang:o,pageLayout:c,redirects:ao,routeLocale:l,routePath:n,routes:Ja,siteData:sl,siteLocaleData:r};return i.provide(_u,A),Object.defineProperties(i.config.globalProperties,{$frontmatter:{get:()=>k.value},$head:{get:()=>u.value},$headTitle:{get:()=>d.value},$lang:{get:()=>o.value},$page:{get:()=>p.value},$routeLocale:{get:()=>l.value},$site:{get:()=>sl.value},$siteLocale:{get:()=>r.value},$withBase:{get:()=>Gi}}),A},oW=([i,s,e=""])=>{const n=Object.entries(s).map(([r,h])=>ls(h)?`[${r}=${JSON.stringify(h)}]`:h?`[${r}]`:"").join(""),a=`head > ${i}${n}`;return Array.from(document.querySelectorAll(a)).find(r=>r.innerText===e)??null},uW=([i,s,e])=>{if(!ls(i))return null;const n=document.createElement(i);return er(s)&&Object.entries(s).forEach(([a,t])=>{ls(t)?n.setAttribute(a,t):t&&n.setAttribute(a,"")}),ls(e)&&n.appendChild(document.createTextNode(e)),n},cW=()=>{const i=ob(),s=Du();let e=[];const n=()=>{i.value.forEach(l=>{const r=oW(l);r&&e.push(r)})},a=()=>{const l=[];return i.value.forEach(r=>{const h=uW(r);h&&l.push(h)}),l},t=()=>{document.documentElement.lang=s.value;const l=a();e.forEach((r,h)=>{const p=l.findIndex(k=>r.isEqualNode(k));p===-1?(r.remove(),delete e[h]):l.splice(p,1)}),l.forEach(r=>document.head.appendChild(r)),e=[...e.filter(r=>!!r),...l]};Ds(gb,t),Di(()=>{n(),bi(i,t,{immediate:!1})})},gW=xF,BW=async()=>{var n;const i=gW({name:"Vuepress",setup(){var l;cW();for(const r of Qr)(l=r.setup)==null||l.call(r);const a=Qr.flatMap(({rootComponents:r=[]})=>r.map(h=>B(h))),t=ub();return()=>[B(t.value),a]}}),s=pW();kW(i);const e=dW(i,s,Qr);{const{setupDevtools:a}=await b(async()=>{const{setupDevtools:t}=await import("./setupDevtools-QXEOFQJV-CDxubzDi.js");return{setupDevtools:t}},[]);a(i,e)}for(const a of Qr)await((n=a.enhance)==null?void 0:n.call(a,{app:i,router:s,siteData:sl}));return i.use(s),{app:i,router:s}};BW().then(({app:i,router:s})=>{s.isReady().then(()=>{i.mount("#app")})});export{qp as $,Ff as A,cD as B,h7 as C,dD as D,oD as E,yW as F,er as G,uD as H,k7 as I,kD as J,vf as K,Bs as L,Ti as M,Di as N,tD as O,Iu as P,te as Q,ms as R,rp as S,_s as T,s7 as U,ls as V,Il as W,XU as X,cn as Y,eG as Z,ns as _,p7 as a,b as a0,FV as a1,ge as a2,d7 as b,o7 as c,BW as createVueApp,h3 as d,oi as e,j as f,yi as g,Bi as h,$i as i,ks as j,$e as k,ti as l,Be as m,Ye as n,hi as o,Xn as p,Z as q,Wi as r,i_ as s,Mi as t,De as u,z as v,bi as w,B as x,gp as y,Ri as z};
