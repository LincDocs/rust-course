import{_ as e,e as a,k as s,o as t}from"./app-D8oqi0-Y.js";const l={};function n(d,i){return t(),a("div",null,i[0]||(i[0]=[s(`<h1 id="下载并构建-package" tabindex="-1"><a class="header-anchor" href="#下载并构建-package"><span>下载并构建 Package</span></a></h1><p>如果看中 <code>GitHub</code> 上的某个开源 Rust 项目，那下载并构建它将是非常简单的。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/rust-lang/regex.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> regex</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如上所示，直接从 <code>GitHub</code> 上克隆下来想要的项目，然后使用 <code>cargo build</code> 进行构建即可：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   Compiling</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> regex</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> v1.5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (file:///path/to/package/regex)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令将下载相关的依赖库，等下载成功后，再对 <code>package</code> 和下载的依赖进行一同的编译构建。</p><p>这就是包管理工具的强大之处，<code>cargo build</code> 搞定一切，而背后隐藏的复杂配置、参数你都无需关心。</p>`,7)]))}const r=e(l,[["render",n],["__file","download-package.html.vue"]]),c=JSON.parse('{"path":"/cargo/guide/download-package.html","title":"下载并构建 Package","lang":"zh-CN","frontmatter":{"description":"下载并构建 Package 如果看中 GitHub 上的某个开源 Rust 项目，那下载并构建它将是非常简单的。 如上所示，直接从 GitHub 上克隆下来想要的项目，然后使用 cargo build 进行构建即可： 该命令将下载相关的依赖库，等下载成功后，再对 package 和下载的依赖进行一同的编译构建。 这就是包管理工具的强大之处，cargo ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/cargo/guide/download-package.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:title","content":"下载并构建 Package"}],["meta",{"property":"og:description","content":"下载并构建 Package 如果看中 GitHub 上的某个开源 Rust 项目，那下载并构建它将是非常简单的。 如上所示，直接从 GitHub 上克隆下来想要的项目，然后使用 cargo build 进行构建即可： 该命令将下载相关的依赖库，等下载成功后，再对 package 和下载的依赖进行一同的编译构建。 这就是包管理工具的强大之处，cargo ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"下载并构建 Package\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"cargo/guide/download-package.md","excerpt":"\\n<p>如果看中 <code>GitHub</code> 上的某个开源 Rust 项目，那下载并构建它将是非常简单的。</p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">$</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> git</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> clone</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> https://github.com/rust-lang/regex.git</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">$</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> cd</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> regex</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"cargo/guide/download-package.md","value":{"title":"download-package","path":"cargo/guide/download-package.md","outlink":[],"backlink":["SUMMARY.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"cargo/guide/download-package.md"}]}}}');export{r as comp,c as data};
