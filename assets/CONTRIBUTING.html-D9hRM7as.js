import{_ as s,e as i,f as a,o as t}from"./app-DFfX2bp8.js";const n={};function r(o,e){return t(),i("div",null,e[0]||(e[0]=[a(`<h2 id="contributing-to-rustlings" tabindex="-1"><a class="header-anchor" href="#contributing-to-rustlings"><span>Contributing to Rustlings</span></a></h2><p>First off, thanks for taking the time to contribute!! ❤️</p><h3 id="quick-reference" tabindex="-1"><a class="header-anchor" href="#quick-reference"><span>Quick Reference</span></a></h3><p>I want to...</p><p><em>add an exercise! ➡️ <a href="#addex">read this</a> and then <a href="#prs">open a Pull Request</a></em></p><p><em>update an outdated exercise! ➡️ <a href="#prs">open a Pull Request</a></em></p><p><em>report a bug! ➡️ <a href="#issues">open an Issue</a></em></p><p><em>fix a bug! ➡️ <a href="#prs">open a Pull Request</a></em></p><p><em>implement a new feature! ➡️ <a href="#issues">open an Issue to discuss it first, then a Pull Request</a></em></p><p><a name="#src"></a></p><h3 id="working-on-the-source-code" tabindex="-1"><a class="header-anchor" href="#working-on-the-source-code"><span>Working on the source code</span></a></h3><p><code>rustlings</code> is basically a glorified <code>rustc</code> wrapper. Therefore the source code<br> isn&#39;t really that complicated since the bulk of the work is done by <code>rustc</code>.<br><code>src/main.rs</code> contains a simple <code>clap</code> CLI that loads from <code>src/verify.rs</code> and <code>src/run.rs</code>.</p><p><a name="addex"></a></p><h3 id="adding-an-exercise" tabindex="-1"><a class="header-anchor" href="#adding-an-exercise"><span>Adding an exercise</span></a></h3><p>The first step is to add the exercise! Name the file <code>exercises/yourTopic/yourTopicN.rs</code>, make sure to<br> put in some helpful links, and link to sections of the book in <code>exercises/yourTopic/README.md</code>.</p><p>Next make sure it runs with <code>rustlings</code>. The exercise metadata is stored in <code>info.toml</code>, under the <code>exercises</code> array. The order of the <code>exercises</code> array determines the order the exercises are run by <code>rustlings verify</code>.</p><p>Add the metadata for your exercise in the correct order in the <code>exercises</code> array. If you are unsure of the correct ordering, add it at the bottom and ask in your pull request. The exercise metadata should contain the following:</p><div class="language-diff line-numbers-mode" data-highlighter="shiki" data-ext="diff" data-title="diff" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ [[exercises]]</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ name = &quot;yourTopicN&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ path = &quot;exercises/yourTopic/yourTopicN.rs&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ mode = &quot;compile&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ hint = &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">+ Some kind of useful hint for your exercise.&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>mode</code> attribute decides whether Rustlings will only compile your exercise, or compile and test it. If you have tests to verify in your exercise, choose <code>test</code>, otherwise <code>compile</code>.</p><p>That&#39;s all! Feel free to put up a pull request.</p><p><a name="issues"></a></p><h3 id="issues" tabindex="-1"><a class="header-anchor" href="#issues"><span>Issues</span></a></h3><p>You can open an issue <a href="https://github.com/rust-lang/rustlings/issues/new" target="_blank" rel="noopener noreferrer">here</a>.<br> If you&#39;re reporting a bug, please include the output of the following commands:</p><ul><li><code>rustc --version</code></li><li><code>rustlings --version</code></li><li><code>ls -la</code></li><li>Your OS name and version</li></ul><p><a name="prs"></a></p><h3 id="pull-requests" tabindex="-1"><a class="header-anchor" href="#pull-requests"><span>Pull Requests</span></a></h3><p>Opening a pull request is as easy as forking the repository and committing your<br> changes. There&#39;s a couple of things to watch out for:</p><h4 id="write-correct-commit-messages" tabindex="-1"><a class="header-anchor" href="#write-correct-commit-messages"><span>Write correct commit messages</span></a></h4><p>We follow the <a href="https://www.conventionalcommits.org/en/v1.0.0-beta.4/" target="_blank" rel="noopener noreferrer">Conventional Commits</a><br> specification, because it makes it easier to generate changelogs automatically.<br> This means that you have to format your commit messages in a specific way. Say<br> you&#39;re working on adding a new exercise called <code>foobar1.rs</code>. You could write<br> the following commit message:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>feat: Add foobar1.rs exercise</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you&#39;re just fixing a bug, please use the <code>fix</code> type:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fix(verify): Make sure verify doesn&#39;t self-destruct</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The scope within the brackets is optional, but should be any of these:</p><ul><li><code>installation</code> (for the installation script)</li><li><code>cli</code> (for general CLI changes)</li><li><code>verify</code> (for the verification source file)</li><li><code>watch</code> (for the watch functionality source)</li><li><code>run</code> (for the run functionality source)</li><li><code>EXERCISENAME</code> (if you&#39;re changing a specific exercise, or set of exercises,<br> substitute them here)</li></ul><p>When the commit also happens to close an existing issue, link it in the message<br> body:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fix: Update foobar</span></span>
<span class="line"><span></span></span>
<span class="line"><span>closes #101029908</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you&#39;re doing simple changes, like updating a book link, use <code>chore</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>chore: Update exercise1.rs book link</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you&#39;re updating documentation, use <code>docs</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>docs: Add more information to Readme</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If, and only if, you&#39;re absolutely sure you want to make a breaking change<br> (please discuss this beforehand!), add an exclamation mark to the type and<br> explain the breaking change in the message body:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>fix!: Completely change verification</span></span>
<span class="line"><span></span></span>
<span class="line"><span>BREAKING CHANGE: This has to be done because lorem ipsum dolor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="pull-request-workflow" tabindex="-1"><a class="header-anchor" href="#pull-request-workflow"><span>Pull Request Workflow</span></a></h4><p>Once you open a Pull Request, it may be reviewed or labeled (or both) until<br> the maintainers accept your change. Then, <a href="https://github.com/bors" target="_blank" rel="noopener noreferrer">bors</a> will<br> run the test suite with your changes and if it&#39;s successful, automatically<br> merge it in!</p>`,44)]))}const c=s(n,[["render",r],["__file","CONTRIBUTING.html.vue"]]),d=JSON.parse('{"path":"/assets/rustlings-zh/CONTRIBUTING.html","title":"CONTRIBUTING","lang":"zh-CN","frontmatter":{"description":"Contributing to Rustlings First off, thanks for taking the time to contribute!! ❤️ Quick Reference I want to... add an exercise! ➡️ read this and then open a Pull Request update...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/assets/rustlings-zh/CONTRIBUTING.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:description","content":"Contributing to Rustlings First off, thanks for taking the time to contribute!! ❤️ Quick Reference I want to... add an exercise! ➡️ read this and then open a Pull Request update..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-24T15:57:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T15:57:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-24T15:57:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{"createdTime":1745510270000,"updatedTime":1745510270000,"contributors":[{"name":"Linc","username":"Linc","email":"762699299@qq.com","commits":1,"url":"https://github.com/Linc"}]},"readingTime":{"minutes":2.17,"words":650},"filePathRelative":"assets/rustlings-zh/CONTRIBUTING.md","localizedDate":"2025年4月24日","excerpt":"<h2>Contributing to Rustlings</h2>\\n<p>First off, thanks for taking the time to contribute!! ❤️</p>\\n<h3>Quick Reference</h3>\\n<p>I want to...</p>\\n<p><em>add an exercise! ➡️ <a href=\\"#addex\\">read this</a> and then <a href=\\"#prs\\">open a Pull Request</a></em></p>\\n<p><em>update an outdated exercise! ➡️ <a href=\\"#prs\\">open a Pull Request</a></em></p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"assets/rustlings-zh/CONTRIBUTING.md","value":{"title":"CONTRIBUTING","path":"assets/rustlings-zh/CONTRIBUTING.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{c as comp,d as data};
