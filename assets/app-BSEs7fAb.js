const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-DYMXFzNW.js","assets/index-B-bTPAo1.js","assets/index-C84KBwXb.js"])))=>i.map(i=>d[i]);
var I1=Object.defineProperty;var R1=(s,i,e)=>i in s?I1(s,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[i]=e;var hi=(s,i,e)=>R1(s,typeof i!="symbol"?i+"":i,e);const O1="modulepreload",P1=function(s){return"/rust-course/"+s},Nc={},F=function(i,e,a){let n=Promise.resolve();if(e&&e.length>0){document.getElementsByTagName("link");const l=document.querySelector("meta[property=csp-nonce]"),r=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute("nonce"));n=Promise.allSettled(e.map(h=>{if(h=P1(h),h in Nc)return;Nc[h]=!0;const p=h.endsWith(".css"),k=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${h}"]${k}`))return;const d=document.createElement("link");if(d.rel=p?"stylesheet":O1,p||(d.as="script"),d.crossOrigin="",d.href=h,r&&d.setAttribute("nonce",r),document.head.appendChild(d),p)return new Promise((o,u)=>{d.addEventListener("load",o),d.addEventListener("error",()=>u(new Error(`Unable to preload CSS for ${h}`)))})}))}function t(l){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=l,window.dispatchEvent(r),!r.defaultPrevented)throw l}return n.then(l=>{for(const r of l||[])r.status==="rejected"&&t(r.reason);return i().catch(t)})};/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function bt(s){const i=Object.create(null);for(const e of s.split(","))i[e]=1;return e=>e in i}const Js={},Un=[],qe=()=>{},L1=()=>!1,Kl=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),Qo=s=>s.startsWith("onUpdate:"),Fi=Object.assign,su=(s,i)=>{const e=s.indexOf(i);e>-1&&s.splice(e,1)},N1=Object.prototype.hasOwnProperty,Us=(s,i)=>N1.call(s,i),_s=Array.isArray,Gn=s=>Yl(s)==="[object Map]",Ct=s=>Yl(s)==="[object Set]",Mc=s=>Yl(s)==="[object Date]",xs=s=>typeof s=="function",ei=s=>typeof s=="string",Ee=s=>typeof s=="symbol",Zs=s=>s!==null&&typeof s=="object",UA=s=>(Zs(s)||xs(s))&&xs(s.then)&&xs(s.catch),GA=Object.prototype.toString,Yl=s=>GA.call(s),M1=s=>Yl(s).slice(8,-1),WA=s=>Yl(s)==="[object Object]",iu=s=>ei(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,Wn=bt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Yh=s=>{const i=Object.create(null);return e=>i[e]||(i[e]=s(e))},V1=/-(\w)/g,Wi=Yh(s=>s.replace(V1,(i,e)=>e?e.toUpperCase():"")),$1=/\B([A-Z])/g,an=Yh(s=>s.replace($1,"-$1").toLowerCase()),Xl=Yh(s=>s.charAt(0).toUpperCase()+s.slice(1)),Hp=Yh(s=>s?`on${Xl(s)}`:""),Aa=(s,i)=>!Object.is(s,i),sh=(s,...i)=>{for(let e=0;e<s.length;e++)s[e](...i)},lt=(s,i,e,a=!1)=>{Object.defineProperty(s,i,{configurable:!0,enumerable:!1,writable:a,value:e})},Ah=s=>{const i=parseFloat(s);return isNaN(i)?s:i},z1=s=>{const i=ei(s)?Number(s):NaN;return isNaN(i)?s:i};let Vc;const Xh=()=>Vc||(Vc=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function gi(s){if(_s(s)){const i={};for(let e=0;e<s.length;e++){const a=s[e],n=ei(a)?U1(a):gi(a);if(n)for(const t in n)i[t]=n[t]}return i}else if(ei(s)||Zs(s))return s}const q1=/;(?![^(]*\))/g,H1=/:([^]+)/,j1=/\/\*[^]*?\*\//g;function U1(s){const i={};return s.replace(j1,"").split(q1).forEach(e=>{if(e){const a=e.split(H1);a.length>1&&(i[a[0].trim()]=a[1].trim())}}),i}function G1(s){if(!s)return"";if(ei(s))return s;let i="";for(const e in s){const a=s[e];if(ei(a)||typeof a=="number"){const n=e.startsWith("--")?e:an(e);i+=`${n}:${a};`}}return i}function Ps(s){let i="";if(ei(s))i=s;else if(_s(s))for(let e=0;e<s.length;e++){const a=Ps(s[e]);a&&(i+=a+" ")}else if(Zs(s))for(const e in s)s[e]&&(i+=e+" ");return i.trim()}const KA="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",W1=bt(KA),$c=bt(KA+",async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected");function eu(s){return!!s||s===""}const K1=bt("accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap"),Y1=bt("xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan");function X1(s){if(s==null)return!1;const i=typeof s;return i==="string"||i==="number"||i==="boolean"}const Z1=/[ !"#$%&'()*+,./:;<=>?@[\\\]^`{|}~]/g;function J1(s,i){return s.replace(Z1,e=>`\\${e}`)}function Q1(s,i){if(s.length!==i.length)return!1;let e=!0;for(let a=0;e&&a<s.length;a++)e=Zl(s[a],i[a]);return e}function Zl(s,i){if(s===i)return!0;let e=Mc(s),a=Mc(i);if(e||a)return e&&a?s.getTime()===i.getTime():!1;if(e=Ee(s),a=Ee(i),e||a)return s===i;if(e=_s(s),a=_s(i),e||a)return e&&a?Q1(s,i):!1;if(e=Zs(s),a=Zs(i),e||a){if(!e||!a)return!1;const n=Object.keys(s).length,t=Object.keys(i).length;if(n!==t)return!1;for(const l in s){const r=s.hasOwnProperty(l),h=i.hasOwnProperty(l);if(r&&!h||!r&&h||!Zl(s[l],i[l]))return!1}}return String(s)===String(i)}function au(s,i){return s.findIndex(e=>Zl(e,i))}const YA=s=>!!(s&&s.__v_isRef===!0),Ls=s=>ei(s)?s:s==null?"":_s(s)||Zs(s)&&(s.toString===GA||!xs(s.toString))?YA(s)?Ls(s.value):JSON.stringify(s,XA,2):String(s),XA=(s,i)=>YA(i)?XA(s,i.value):Gn(i)?{[`Map(${i.size})`]:[...i.entries()].reduce((e,[a,n],t)=>(e[jp(a,t)+" =>"]=n,e),{})}:Ct(i)?{[`Set(${i.size})`]:[...i.values()].map(e=>jp(e))}:Ee(i)?jp(i):Zs(i)&&!_s(i)&&!WA(i)?String(i):i,jp=(s,i="")=>{var e;return Ee(s)?`Symbol(${(e=s.description)!=null?e:i})`:s};/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Li;class ZA{constructor(i=!1){this.detached=i,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Li,!i&&Li&&(this.index=(Li.scopes||(Li.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let i,e;if(this.scopes)for(i=0,e=this.scopes.length;i<e;i++)this.scopes[i].pause();for(i=0,e=this.effects.length;i<e;i++)this.effects[i].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let i,e;if(this.scopes)for(i=0,e=this.scopes.length;i<e;i++)this.scopes[i].resume();for(i=0,e=this.effects.length;i<e;i++)this.effects[i].resume()}}run(i){if(this._active){const e=Li;try{return Li=this,i()}finally{Li=e}}}on(){Li=this}off(){Li=this.parent}stop(i){if(this._active){this._active=!1;let e,a;for(e=0,a=this.effects.length;e<a;e++)this.effects[e].stop();for(this.effects.length=0,e=0,a=this.cleanups.length;e<a;e++)this.cleanups[e]();if(this.cleanups.length=0,this.scopes){for(e=0,a=this.scopes.length;e<a;e++)this.scopes[e].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!i){const n=this.parent.scopes.pop();n&&n!==this&&(this.parent.scopes[this.index]=n,n.index=this.index)}this.parent=void 0}}}function JA(s){return new ZA(s)}function Zh(){return Li}function il(s,i=!1){Li&&Li.cleanups.push(s)}let Qs;const Up=new WeakSet;class QA{constructor(i){this.fn=i,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,Li&&Li.active&&Li.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Up.has(this)&&(Up.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||iy(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,zc(this),ey(this);const i=Qs,e=Fe;Qs=this,Fe=!0;try{return this.fn()}finally{ay(this),Qs=i,Fe=e,this.flags&=-3}}stop(){if(this.flags&1){for(let i=this.deps;i;i=i.nextDep)lu(i);this.deps=this.depsTail=void 0,zc(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Up.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Vd(this)&&this.run()}get dirty(){return Vd(this)}}let sy=0,el,al;function iy(s,i=!1){if(s.flags|=8,i){s.next=al,al=s;return}s.next=el,el=s}function nu(){sy++}function tu(){if(--sy>0)return;if(al){let i=al;for(al=void 0;i;){const e=i.next;i.next=void 0,i.flags&=-9,i=e}}let s;for(;el;){let i=el;for(el=void 0;i;){const e=i.next;if(i.next=void 0,i.flags&=-9,i.flags&1)try{i.trigger()}catch(a){s||(s=a)}i=e}}if(s)throw s}function ey(s){for(let i=s.deps;i;i=i.nextDep)i.version=-1,i.prevActiveLink=i.dep.activeLink,i.dep.activeLink=i}function ay(s){let i,e=s.depsTail,a=e;for(;a;){const n=a.prevDep;a.version===-1?(a===e&&(e=n),lu(a),sm(a)):i=a,a.dep.activeLink=a.prevActiveLink,a.prevActiveLink=void 0,a=n}s.deps=i,s.depsTail=e}function Vd(s){for(let i=s.deps;i;i=i.nextDep)if(i.dep.version!==i.version||i.dep.computed&&(ny(i.dep.computed)||i.dep.version!==i.version))return!0;return!!s._dirty}function ny(s){if(s.flags&4&&!(s.flags&16)||(s.flags&=-17,s.globalVersion===cl))return;s.globalVersion=cl;const i=s.dep;if(s.flags|=2,i.version>0&&!s.isSSR&&s.deps&&!Vd(s)){s.flags&=-3;return}const e=Qs,a=Fe;Qs=s,Fe=!0;try{ey(s);const n=s.fn(s._value);(i.version===0||Aa(n,s._value))&&(s._value=n,i.version++)}catch(n){throw i.version++,n}finally{Qs=e,Fe=a,ay(s),s.flags&=-3}}function lu(s,i=!1){const{dep:e,prevSub:a,nextSub:n}=s;if(a&&(a.nextSub=n,s.prevSub=void 0),n&&(n.prevSub=a,s.nextSub=void 0),e.subs===s&&(e.subs=a,!a&&e.computed)){e.computed.flags&=-5;for(let t=e.computed.deps;t;t=t.nextDep)lu(t,!0)}!i&&!--e.sc&&e.map&&e.map.delete(e.key)}function sm(s){const{prevDep:i,nextDep:e}=s;i&&(i.nextDep=e,s.prevDep=void 0),e&&(e.prevDep=i,s.nextDep=void 0)}let Fe=!0;const ty=[];function Fa(){ty.push(Fe),Fe=!1}function Ea(){const s=ty.pop();Fe=s===void 0?!0:s}function zc(s){const{cleanup:i}=s;if(s.cleanup=void 0,i){const e=Qs;Qs=void 0;try{i()}finally{Qs=e}}}let cl=0;class im{constructor(i,e){this.sub=i,this.dep=e,this.version=e.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Jh{constructor(i){this.computed=i,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(i){if(!Qs||!Fe||Qs===this.computed)return;let e=this.activeLink;if(e===void 0||e.sub!==Qs)e=this.activeLink=new im(Qs,this),Qs.deps?(e.prevDep=Qs.depsTail,Qs.depsTail.nextDep=e,Qs.depsTail=e):Qs.deps=Qs.depsTail=e,ly(e);else if(e.version===-1&&(e.version=this.version,e.nextDep)){const a=e.nextDep;a.prevDep=e.prevDep,e.prevDep&&(e.prevDep.nextDep=a),e.prevDep=Qs.depsTail,e.nextDep=void 0,Qs.depsTail.nextDep=e,Qs.depsTail=e,Qs.deps===e&&(Qs.deps=a)}return e}trigger(i){this.version++,cl++,this.notify(i)}notify(i){nu();try{for(let e=this.subs;e;e=e.prevSub)e.sub.notify()&&e.sub.dep.notify()}finally{tu()}}}function ly(s){if(s.dep.sc++,s.sub.flags&4){const i=s.dep.computed;if(i&&!s.dep.subs){i.flags|=20;for(let a=i.deps;a;a=a.nextDep)ly(a)}const e=s.dep.subs;e!==s&&(s.prevSub=e,e&&(e.nextSub=s)),s.dep.subs=s}}const yh=new WeakMap,mn=Symbol(""),$d=Symbol(""),gl=Symbol("");function Ii(s,i,e){if(Fe&&Qs){let a=yh.get(s);a||yh.set(s,a=new Map);let n=a.get(e);n||(a.set(e,n=new Jh),n.map=a,n.key=e),n.track()}}function ka(s,i,e,a,n,t){const l=yh.get(s);if(!l){cl++;return}const r=h=>{h&&h.trigger()};if(nu(),i==="clear")l.forEach(r);else{const h=_s(s),p=h&&iu(e);if(h&&e==="length"){const k=Number(a);l.forEach((d,o)=>{(o==="length"||o===gl||!Ee(o)&&o>=k)&&r(d)})}else switch((e!==void 0||l.has(void 0))&&r(l.get(e)),p&&r(l.get(gl)),i){case"add":h?p&&r(l.get("length")):(r(l.get(mn)),Gn(s)&&r(l.get($d)));break;case"delete":h||(r(l.get(mn)),Gn(s)&&r(l.get($d)));break;case"set":Gn(s)&&r(l.get(mn));break}}tu()}function em(s,i){const e=yh.get(s);return e&&e.get(i)}function Ln(s){const i=Os(s);return i===s?i:(Ii(i,"iterate",gl),ce(s)?i:i.map(Ri))}function Qh(s){return Ii(s=Os(s),"iterate",gl),s}const am={__proto__:null,[Symbol.iterator](){return Gp(this,Symbol.iterator,Ri)},concat(...s){return Ln(this).concat(...s.map(i=>_s(i)?Ln(i):i))},entries(){return Gp(this,"entries",s=>(s[1]=Ri(s[1]),s))},every(s,i){return sa(this,"every",s,i,void 0,arguments)},filter(s,i){return sa(this,"filter",s,i,e=>e.map(Ri),arguments)},find(s,i){return sa(this,"find",s,i,Ri,arguments)},findIndex(s,i){return sa(this,"findIndex",s,i,void 0,arguments)},findLast(s,i){return sa(this,"findLast",s,i,Ri,arguments)},findLastIndex(s,i){return sa(this,"findLastIndex",s,i,void 0,arguments)},forEach(s,i){return sa(this,"forEach",s,i,void 0,arguments)},includes(...s){return Wp(this,"includes",s)},indexOf(...s){return Wp(this,"indexOf",s)},join(s){return Ln(this).join(s)},lastIndexOf(...s){return Wp(this,"lastIndexOf",s)},map(s,i){return sa(this,"map",s,i,void 0,arguments)},pop(){return Pt(this,"pop")},push(...s){return Pt(this,"push",s)},reduce(s,...i){return qc(this,"reduce",s,i)},reduceRight(s,...i){return qc(this,"reduceRight",s,i)},shift(){return Pt(this,"shift")},some(s,i){return sa(this,"some",s,i,void 0,arguments)},splice(...s){return Pt(this,"splice",s)},toReversed(){return Ln(this).toReversed()},toSorted(s){return Ln(this).toSorted(s)},toSpliced(...s){return Ln(this).toSpliced(...s)},unshift(...s){return Pt(this,"unshift",s)},values(){return Gp(this,"values",Ri)}};function Gp(s,i,e){const a=Qh(s),n=a[i]();return a!==s&&!ce(s)&&(n._next=n.next,n.next=()=>{const t=n._next();return t.value&&(t.value=e(t.value)),t}),n}const nm=Array.prototype;function sa(s,i,e,a,n,t){const l=Qh(s),r=l!==s&&!ce(s),h=l[i];if(h!==nm[i]){const d=h.apply(s,t);return r?Ri(d):d}let p=e;l!==s&&(r?p=function(d,o){return e.call(this,Ri(d),o,s)}:e.length>2&&(p=function(d,o){return e.call(this,d,o,s)}));const k=h.call(l,p,a);return r&&n?n(k):k}function qc(s,i,e,a){const n=Qh(s);let t=e;return n!==s&&(ce(s)?e.length>3&&(t=function(l,r,h){return e.call(this,l,r,h,s)}):t=function(l,r,h){return e.call(this,l,Ri(r),h,s)}),n[i](t,...a)}function Wp(s,i,e){const a=Os(s);Ii(a,"iterate",gl);const n=a[i](...e);return(n===-1||n===!1)&&pu(e[0])?(e[0]=Os(e[0]),a[i](...e)):n}function Pt(s,i,e=[]){Fa(),nu();const a=Os(s)[i].apply(s,e);return tu(),Ea(),a}const tm=bt("__proto__,__v_isRef,__isVue"),ry=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(Ee));function lm(s){Ee(s)||(s=String(s));const i=Os(this);return Ii(i,"has",s),i.hasOwnProperty(s)}class hy{constructor(i=!1,e=!1){this._isReadonly=i,this._isShallow=e}get(i,e,a){if(e==="__v_skip")return i.__v_skip;const n=this._isReadonly,t=this._isShallow;if(e==="__v_isReactive")return!n;if(e==="__v_isReadonly")return n;if(e==="__v_isShallow")return t;if(e==="__v_raw")return a===(n?t?Bm:oy:t?dy:ky).get(i)||Object.getPrototypeOf(i)===Object.getPrototypeOf(a)?i:void 0;const l=_s(i);if(!n){let h;if(l&&(h=am[e]))return h;if(e==="hasOwnProperty")return lm}const r=Reflect.get(i,e,ti(i)?i:a);return(Ee(e)?ry.has(e):tm(e))||(n||Ii(i,"get",e),t)?r:ti(r)?l&&iu(e)?r:r.value:Zs(r)?n?Ge(r):Ya(r):r}}class py extends hy{constructor(i=!1){super(!1,i)}set(i,e,a,n){let t=i[e];if(!this._isShallow){const h=_n(t);if(!ce(a)&&!_n(a)&&(t=Os(t),a=Os(a)),!_s(i)&&ti(t)&&!ti(a))return h?!1:(t.value=a,!0)}const l=_s(i)&&iu(e)?Number(e)<i.length:Us(i,e),r=Reflect.set(i,e,a,ti(i)?i:n);return i===Os(n)&&(l?Aa(a,t)&&ka(i,"set",e,a):ka(i,"add",e,a)),r}deleteProperty(i,e){const a=Us(i,e);i[e];const n=Reflect.deleteProperty(i,e);return n&&a&&ka(i,"delete",e,void 0),n}has(i,e){const a=Reflect.has(i,e);return(!Ee(e)||!ry.has(e))&&Ii(i,"has",e),a}ownKeys(i){return Ii(i,"iterate",_s(i)?"length":mn),Reflect.ownKeys(i)}}class rm extends hy{constructor(i=!1){super(!0,i)}set(i,e){return!0}deleteProperty(i,e){return!0}}const hm=new py,pm=new rm,km=new py(!0);const zd=s=>s,Dr=s=>Reflect.getPrototypeOf(s);function dm(s,i,e){return function(...a){const n=this.__v_raw,t=Os(n),l=Gn(t),r=s==="entries"||s===Symbol.iterator&&l,h=s==="keys"&&l,p=n[s](...a),k=e?zd:i?qd:Ri;return!i&&Ii(t,"iterate",h?$d:mn),{next(){const{value:d,done:o}=p.next();return o?{value:d,done:o}:{value:r?[k(d[0]),k(d[1])]:k(d),done:o}},[Symbol.iterator](){return this}}}}function wr(s){return function(...i){return s==="delete"?!1:s==="clear"?void 0:this}}function om(s,i){const e={get(n){const t=this.__v_raw,l=Os(t),r=Os(n);s||(Aa(n,r)&&Ii(l,"get",n),Ii(l,"get",r));const{has:h}=Dr(l),p=i?zd:s?qd:Ri;if(h.call(l,n))return p(t.get(n));if(h.call(l,r))return p(t.get(r));t!==l&&t.get(n)},get size(){const n=this.__v_raw;return!s&&Ii(Os(n),"iterate",mn),Reflect.get(n,"size",n)},has(n){const t=this.__v_raw,l=Os(t),r=Os(n);return s||(Aa(n,r)&&Ii(l,"has",n),Ii(l,"has",r)),n===r?t.has(n):t.has(n)||t.has(r)},forEach(n,t){const l=this,r=l.__v_raw,h=Os(r),p=i?zd:s?qd:Ri;return!s&&Ii(h,"iterate",mn),r.forEach((k,d)=>n.call(t,p(k),p(d),l))}};return Fi(e,s?{add:wr("add"),set:wr("set"),delete:wr("delete"),clear:wr("clear")}:{add(n){!i&&!ce(n)&&!_n(n)&&(n=Os(n));const t=Os(this);return Dr(t).has.call(t,n)||(t.add(n),ka(t,"add",n,n)),this},set(n,t){!i&&!ce(t)&&!_n(t)&&(t=Os(t));const l=Os(this),{has:r,get:h}=Dr(l);let p=r.call(l,n);p||(n=Os(n),p=r.call(l,n));const k=h.call(l,n);return l.set(n,t),p?Aa(t,k)&&ka(l,"set",n,t):ka(l,"add",n,t),this},delete(n){const t=Os(this),{has:l,get:r}=Dr(t);let h=l.call(t,n);h||(n=Os(n),h=l.call(t,n)),r&&r.call(t,n);const p=t.delete(n);return h&&ka(t,"delete",n,void 0),p},clear(){const n=Os(this),t=n.size!==0,l=n.clear();return t&&ka(n,"clear",void 0,void 0),l}}),["keys","values","entries",Symbol.iterator].forEach(n=>{e[n]=dm(n,s,i)}),e}function ru(s,i){const e=om(s,i);return(a,n,t)=>n==="__v_isReactive"?!s:n==="__v_isReadonly"?s:n==="__v_raw"?a:Reflect.get(Us(e,n)&&n in a?e:a,n,t)}const um={get:ru(!1,!1)},cm={get:ru(!1,!0)},gm={get:ru(!0,!1)};const ky=new WeakMap,dy=new WeakMap,oy=new WeakMap,Bm=new WeakMap;function Am(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ym(s){return s.__v_skip||!Object.isExtensible(s)?0:Am(M1(s))}function Ya(s){return _n(s)?s:hu(s,!1,hm,um,ky)}function uy(s){return hu(s,!1,km,cm,dy)}function Ge(s){return hu(s,!0,pm,gm,oy)}function hu(s,i,e,a,n){if(!Zs(s)||s.__v_raw&&!(i&&s.__v_isReactive))return s;const t=n.get(s);if(t)return t;const l=ym(s);if(l===0)return s;const r=new Proxy(s,l===2?a:e);return n.set(s,r),r}function Kn(s){return _n(s)?Kn(s.__v_raw):!!(s&&s.__v_isReactive)}function _n(s){return!!(s&&s.__v_isReadonly)}function ce(s){return!!(s&&s.__v_isShallow)}function pu(s){return s?!!s.__v_raw:!1}function Os(s){const i=s&&s.__v_raw;return i?Os(i):s}function Yn(s){return!Us(s,"__v_skip")&&Object.isExtensible(s)&&lt(s,"__v_skip",!0),s}const Ri=s=>Zs(s)?Ya(s):s,qd=s=>Zs(s)?Ge(s):s;function ti(s){return s?s.__v_isRef===!0:!1}function Q(s){return cy(s,!1)}function Ts(s){return cy(s,!0)}function cy(s,i){return ti(s)?s:new fm(s,i)}class fm{constructor(i,e){this.dep=new Jh,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=e?i:Os(i),this._value=e?i:Ri(i),this.__v_isShallow=e}get value(){return this.dep.track(),this._value}set value(i){const e=this._rawValue,a=this.__v_isShallow||ce(i)||_n(i);i=a?i:Os(i),Aa(i,e)&&(this._rawValue=i,this._value=a?i:Ri(i),this.dep.trigger())}}function ms(s){return ti(s)?s.value:s}function vs(s){return xs(s)?s():ms(s)}const mm={get:(s,i,e)=>i==="__v_raw"?s:ms(Reflect.get(s,i,e)),set:(s,i,e,a)=>{const n=s[i];return ti(n)&&!ti(e)?(n.value=e,!0):Reflect.set(s,i,e,a)}};function gy(s){return Kn(s)?s:new Proxy(s,mm)}class vm{constructor(i){this.__v_isRef=!0,this._value=void 0;const e=this.dep=new Jh,{get:a,set:n}=i(e.track.bind(e),e.trigger.bind(e));this._get=a,this._set=n}get value(){return this._value=this._get()}set value(i){this._set(i)}}function ku(s){return new vm(s)}function Fm(s){const i=_s(s)?new Array(s.length):{};for(const e in s)i[e]=By(s,e);return i}class Em{constructor(i,e,a){this._object=i,this._key=e,this._defaultValue=a,this.__v_isRef=!0,this._value=void 0}get value(){const i=this._object[this._key];return this._value=i===void 0?this._defaultValue:i}set value(i){this._object[this._key]=i}get dep(){return em(Os(this._object),this._key)}}class bm{constructor(i){this._getter=i,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function Ms(s,i,e){return ti(s)?s:xs(s)?new bm(s):Zs(s)&&arguments.length>1?By(s,i,e):Q(s)}function By(s,i,e){const a=s[i];return ti(a)?a:new Em(s,i,e)}class Cm{constructor(i,e,a){this.fn=i,this.setter=e,this._value=void 0,this.dep=new Jh(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=cl-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!e,this.isSSR=a}notify(){if(this.flags|=16,!(this.flags&8)&&Qs!==this)return iy(this,!0),!0}get value(){const i=this.dep.track();return ny(this),i&&(i.version=this.dep.version),this._value}set value(i){this.setter&&this.setter(i)}}function _m(s,i,e=!1){let a,n;return xs(s)?a=s:(a=s.get,n=s.set),new Cm(a,n,e)}const xr={},fh=new WeakMap;let dn;function Dm(s,i=!1,e=dn){if(e){let a=fh.get(e);a||fh.set(e,a=[]),a.push(s)}}function wm(s,i,e=Js){const{immediate:a,deep:n,once:t,scheduler:l,augmentJob:r,call:h}=e,p=v=>n?v:ce(v)||n===!1||n===0?da(v,1):da(v);let k,d,o,u,c=!1,A=!1;if(ti(s)?(d=()=>s.value,c=ce(s)):Kn(s)?(d=()=>p(s),c=!0):_s(s)?(A=!0,c=s.some(v=>Kn(v)||ce(v)),d=()=>s.map(v=>{if(ti(v))return v.value;if(Kn(v))return p(v);if(xs(v))return h?h(v,2):v()})):xs(s)?i?d=h?()=>h(s,2):s:d=()=>{if(o){Fa();try{o()}finally{Ea()}}const v=dn;dn=k;try{return h?h(s,3,[u]):s(u)}finally{dn=v}}:d=qe,i&&n){const v=d,_=n===!0?1/0:n;d=()=>da(v(),_)}const g=Zh(),f=()=>{k.stop(),g&&g.active&&su(g.effects,k)};if(t&&i){const v=i;i=(..._)=>{v(..._),f()}}let m=A?new Array(s.length).fill(xr):xr;const y=v=>{if(!(!(k.flags&1)||!k.dirty&&!v))if(i){const _=k.run();if(n||c||(A?_.some((S,N)=>Aa(S,m[N])):Aa(_,m))){o&&o();const S=dn;dn=k;try{const N=[_,m===xr?void 0:A&&m[0]===xr?[]:m,u];h?h(i,3,N):i(...N),m=_}finally{dn=S}}}else k.run()};return r&&r(y),k=new QA(d),k.scheduler=l?()=>l(y,!1):y,u=v=>Dm(v,!1,k),o=k.onStop=()=>{const v=fh.get(k);if(v){if(h)h(v,4);else for(const _ of v)_();fh.delete(k)}},i?a?y(!0):m=k.run():l?l(y.bind(null,!0),!0):k.run(),f.pause=k.pause.bind(k),f.resume=k.resume.bind(k),f.stop=f,f}function da(s,i=1/0,e){if(i<=0||!Zs(s)||s.__v_skip||(e=e||new Set,e.has(s)))return s;if(e.add(s),i--,ti(s))da(s.value,i,e);else if(_s(s))for(let a=0;a<s.length;a++)da(s[a],i,e);else if(Ct(s)||Gn(s))s.forEach(a=>{da(a,i,e)});else if(WA(s)){for(const a in s)da(s[a],i,e);for(const a of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,a)&&da(s[a],i,e)}return s}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const nl=[];let Kp=!1;function Ta(s,...i){if(Kp)return;Kp=!0,Fa();const e=nl.length?nl[nl.length-1].component:null,a=e&&e.appContext.config.warnHandler,n=xm();if(a)_t(a,e,11,[s+i.map(t=>{var l,r;return(r=(l=t.toString)==null?void 0:l.call(t))!=null?r:JSON.stringify(t)}).join(""),e&&e.proxy,n.map(({vnode:t})=>`at <${c4(e,t.type)}>`).join(`
`),n]);else{const t=[`[Vue warn]: ${s}`,...i];n.length&&t.push(`
`,...Tm(n)),console.warn(...t)}Ea(),Kp=!1}function xm(){let s=nl[nl.length-1];if(!s)return[];const i=[];for(;s;){const e=i[0];e&&e.vnode===s?e.recurseCount++:i.push({vnode:s,recurseCount:0});const a=s.component&&s.component.parent;s=a&&a.vnode}return i}function Tm(s){const i=[];return s.forEach((e,a)=>{i.push(...a===0?[]:[`
`],...Sm(e))}),i}function Sm({vnode:s,recurseCount:i}){const e=i>0?`... (${i} recursive calls)`:"",a=s.component?s.component.parent==null:!1,n=` at <${c4(s.component,s.type,a)}`,t=">"+e;return s.props?[n,...Im(s.props),t]:[n+t]}function Im(s){const i=[],e=Object.keys(s);return e.slice(0,3).forEach(a=>{i.push(...Ay(a,s[a]))}),e.length>3&&i.push(" ..."),i}function Ay(s,i,e){return ei(i)?(i=JSON.stringify(i),e?i:[`${s}=${i}`]):typeof i=="number"||typeof i=="boolean"||i==null?e?i:[`${s}=${i}`]:ti(i)?(i=Ay(s,Os(i.value),!0),e?i:[`${s}=Ref<`,i,">"]):xs(i)?[`${s}=fn${i.name?`<${i.name}>`:""}`]:(i=Os(i),e?i:[`${s}=`,i])}function _t(s,i,e,a){try{return a?s(...a):s()}catch(n){Jl(n,i,e)}}function be(s,i,e,a){if(xs(s)){const n=_t(s,i,e,a);return n&&UA(n)&&n.catch(t=>{Jl(t,i,e)}),n}if(_s(s)){const n=[];for(let t=0;t<s.length;t++)n.push(be(s[t],i,e,a));return n}}function Jl(s,i,e,a=!0){const n=i?i.vnode:null,{errorHandler:t,throwUnhandledErrorInProduction:l}=i&&i.appContext.config||Js;if(i){let r=i.parent;const h=i.proxy,p=`https://vuejs.org/error-reference/#runtime-${e}`;for(;r;){const k=r.ec;if(k){for(let d=0;d<k.length;d++)if(k[d](s,h,p)===!1)return}r=r.parent}if(t){Fa(),_t(t,null,10,[s,h,p]),Ea();return}}Rm(s,e,n,a,l)}function Rm(s,i,e,a=!0,n=!1){if(n)throw s;console.error(s)}const Ni=[];let Le=-1;const Xn=[];let Oa=null,zn=0;const yy=Promise.resolve();let mh=null;function qs(s){const i=mh||yy;return s?i.then(this?s.bind(this):s):i}function Om(s){let i=Le+1,e=Ni.length;for(;i<e;){const a=i+e>>>1,n=Ni[a],t=Bl(n);t<s||t===s&&n.flags&2?i=a+1:e=a}return i}function du(s){if(!(s.flags&1)){const i=Bl(s),e=Ni[Ni.length-1];!e||!(s.flags&2)&&i>=Bl(e)?Ni.push(s):Ni.splice(Om(i),0,s),s.flags|=1,fy()}}function fy(){mh||(mh=yy.then(my))}function Pm(s){_s(s)?Xn.push(...s):Oa&&s.id===-1?Oa.splice(zn+1,0,s):s.flags&1||(Xn.push(s),s.flags|=1),fy()}function Hc(s,i,e=Le+1){for(;e<Ni.length;e++){const a=Ni[e];if(a&&a.flags&2){if(s&&a.id!==s.uid)continue;Ni.splice(e,1),e--,a.flags&4&&(a.flags&=-2),a(),a.flags&4||(a.flags&=-2)}}}function vh(s){if(Xn.length){const i=[...new Set(Xn)].sort((e,a)=>Bl(e)-Bl(a));if(Xn.length=0,Oa){Oa.push(...i);return}for(Oa=i,zn=0;zn<Oa.length;zn++){const e=Oa[zn];e.flags&4&&(e.flags&=-2),e.flags&8||e(),e.flags&=-2}Oa=null,zn=0}}const Bl=s=>s.id==null?s.flags&2?-1:1/0:s.id;function my(s){try{for(Le=0;Le<Ni.length;Le++){const i=Ni[Le];i&&!(i.flags&8)&&(i.flags&4&&(i.flags&=-2),_t(i,i.i,i.i?15:14),i.flags&4||(i.flags&=-2))}}finally{for(;Le<Ni.length;Le++){const i=Ni[Le];i&&(i.flags&=-2)}Le=-1,Ni.length=0,vh(),mh=null,(Ni.length||Xn.length)&&my()}}let Ve,Ut=[],Hd=!1;function sp(s,...i){Ve?Ve.emit(s,...i):Hd||Ut.push({event:s,args:i})}function vy(s,i){var e,a;Ve=s,Ve?(Ve.enabled=!0,Ut.forEach(({event:n,args:t})=>Ve.emit(n,...t)),Ut=[]):typeof window<"u"&&window.HTMLElement&&!((a=(e=window.navigator)==null?void 0:e.userAgent)!=null&&a.includes("jsdom"))?((i.__VUE_DEVTOOLS_HOOK_REPLAY__=i.__VUE_DEVTOOLS_HOOK_REPLAY__||[]).push(t=>{vy(t,i)}),setTimeout(()=>{Ve||(i.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Hd=!0,Ut=[])},3e3)):(Hd=!0,Ut=[])}function Lm(s,i){sp("app:init",s,i,{Fragment:Ds,Text:Wa,Comment:wi,Static:Zn})}function Nm(s){sp("app:unmount",s)}const Mm=ou("component:added"),Fy=ou("component:updated"),Vm=ou("component:removed"),$m=s=>{Ve&&typeof Ve.cleanupBuffer=="function"&&!Ve.cleanupBuffer(s)&&Vm(s)};/*! #__NO_SIDE_EFFECTS__ */function ou(s){return i=>{sp(s,i.appContext.app,i.uid,i.parent?i.parent.uid:void 0,i)}}function zm(s,i,e){sp("component:emit",s.appContext.app,s,i,e)}let fi=null,Ey=null;function Fh(s){const i=fi;return fi=s,Ey=s&&s.type.__scopeId||null,i}function Hs(s,i=fi,e){if(!i||s._n)return s;const a=(...n)=>{a._d&&ag(-1);const t=Fh(i);let l;try{l=s(...n)}finally{Fh(t),a._d&&ag(1)}return Fy(i),l};return a._n=!0,a._c=!0,a._d=!0,a}function di(s,i){if(fi===null)return s;const e=np(fi),a=s.dirs||(s.dirs=[]);for(let n=0;n<i.length;n++){let[t,l,r,h=Js]=i[n];t&&(xs(t)&&(t={mounted:t,updated:t}),t.deep&&da(l),a.push({dir:t,instance:e,value:l,oldValue:void 0,arg:r,modifiers:h}))}return s}function Ne(s,i,e,a){const n=s.dirs,t=i&&i.dirs;for(let l=0;l<n.length;l++){const r=n[l];t&&(r.oldValue=t[l].value);let h=r.dir[a];h&&(Fa(),be(h,e,8,[s.el,r,s,i]),Ea())}}const qm=Symbol("_vte"),by=s=>s.__isTeleport,Pa=Symbol("_leaveCb"),Tr=Symbol("_enterCb");function Cy(){const s={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ws(()=>{s.isMounted=!0}),Dt(()=>{s.isUnmounting=!0}),s}const ke=[Function,Array],_y={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:ke,onEnter:ke,onAfterEnter:ke,onEnterCancelled:ke,onBeforeLeave:ke,onLeave:ke,onAfterLeave:ke,onLeaveCancelled:ke,onBeforeAppear:ke,onAppear:ke,onAfterAppear:ke,onAppearCancelled:ke},Dy=s=>{const i=s.subTree;return i.component?Dy(i.component):i},Hm={name:"BaseTransition",props:_y,setup(s,{slots:i}){const e=pe(),a=Cy();return()=>{const n=i.default&&uu(i.default(),!0);if(!n||!n.length)return;const t=wy(n),l=Os(s),{mode:r}=l;if(a.isLeaving)return Yp(t);const h=jc(t);if(!h)return Yp(t);let p=Al(h,l,a,e,d=>p=d);h.type!==wi&&Dn(h,p);let k=e.subTree&&jc(e.subTree);if(k&&k.type!==wi&&!un(h,k)&&Dy(e).type!==wi){let d=Al(k,l,a,e);if(Dn(k,d),r==="out-in"&&h.type!==wi)return a.isLeaving=!0,d.afterLeave=()=>{a.isLeaving=!1,e.job.flags&8||e.update(),delete d.afterLeave,k=void 0},Yp(t);r==="in-out"&&h.type!==wi?d.delayLeave=(o,u,c)=>{const A=xy(a,k);A[String(k.key)]=k,o[Pa]=()=>{u(),o[Pa]=void 0,delete p.delayedLeave,k=void 0},p.delayedLeave=()=>{c(),delete p.delayedLeave,k=void 0}}:k=void 0}else k&&(k=void 0);return t}}};function wy(s){let i=s[0];if(s.length>1){for(const e of s)if(e.type!==wi){i=e;break}}return i}const jm=Hm;function xy(s,i){const{leavingVNodes:e}=s;let a=e.get(i.type);return a||(a=Object.create(null),e.set(i.type,a)),a}function Al(s,i,e,a,n){const{appear:t,mode:l,persisted:r=!1,onBeforeEnter:h,onEnter:p,onAfterEnter:k,onEnterCancelled:d,onBeforeLeave:o,onLeave:u,onAfterLeave:c,onLeaveCancelled:A,onBeforeAppear:g,onAppear:f,onAfterAppear:m,onAppearCancelled:y}=i,v=String(s.key),_=xy(e,s),S=(C,I)=>{C&&be(C,a,9,I)},N=(C,I)=>{const O=I[1];S(C,I),_s(C)?C.every(w=>w.length<=1)&&O():C.length<=1&&O()},T={mode:l,persisted:r,beforeEnter(C){let I=h;if(!e.isMounted)if(t)I=g||h;else return;C[Pa]&&C[Pa](!0);const O=_[v];O&&un(s,O)&&O.el[Pa]&&O.el[Pa](),S(I,[C])},enter(C){let I=p,O=k,w=d;if(!e.isMounted)if(t)I=f||p,O=m||k,w=y||d;else return;let z=!1;const b=C[Tr]=$=>{z||(z=!0,$?S(w,[C]):S(O,[C]),T.delayedLeave&&T.delayedLeave(),C[Tr]=void 0)};I?N(I,[C,b]):b()},leave(C,I){const O=String(s.key);if(C[Tr]&&C[Tr](!0),e.isUnmounting)return I();S(o,[C]);let w=!1;const z=C[Pa]=b=>{w||(w=!0,I(),b?S(A,[C]):S(c,[C]),C[Pa]=void 0,_[O]===s&&delete _[O])};_[O]=s,u?N(u,[C,z]):z()},clone(C){const I=Al(C,i,e,a,n);return n&&n(I),I}};return T}function Yp(s){if(Ql(s))return s=Xa(s),s.children=null,s}function jc(s){if(!Ql(s))return by(s.type)&&s.children?wy(s.children):s;const{shapeFlag:i,children:e}=s;if(e){if(i&16)return e[0];if(i&32&&xs(e.default))return e.default()}}function Dn(s,i){s.shapeFlag&6&&s.component?(s.transition=i,Dn(s.component.subTree,i)):s.shapeFlag&128?(s.ssContent.transition=i.clone(s.ssContent),s.ssFallback.transition=i.clone(s.ssFallback)):s.transition=i}function uu(s,i=!1,e){let a=[],n=0;for(let t=0;t<s.length;t++){let l=s[t];const r=e==null?l.key:String(e)+String(l.key!=null?l.key:t);l.type===Ds?(l.patchFlag&128&&n++,a=a.concat(uu(l.children,i,r))):(i||l.type!==wi)&&a.push(r!=null?Xa(l,{key:r}):l)}if(n>1)for(let t=0;t<a.length;t++)a[t].patchFlag=-2;return a}/*! #__NO_SIDE_EFFECTS__ */function ts(s,i){return xs(s)?Fi({name:s.name},i,{setup:s}):s}function cu(s){s.ids=[s.ids[0]+s.ids[2]+++"-",0,0]}function yl(s,i,e,a,n=!1){if(_s(s)){s.forEach((c,A)=>yl(c,i&&(_s(i)?i[A]:i),e,a,n));return}if(vn(a)&&!n){a.shapeFlag&512&&a.type.__asyncResolved&&a.component.subTree.component&&yl(s,i,e,a.component.subTree);return}const t=a.shapeFlag&4?np(a.component):a.el,l=n?null:t,{i:r,r:h}=s,p=i&&i.r,k=r.refs===Js?r.refs={}:r.refs,d=r.setupState,o=Os(d),u=d===Js?()=>!1:c=>Us(o,c);if(p!=null&&p!==h&&(ei(p)?(k[p]=null,u(p)&&(d[p]=null)):ti(p)&&(p.value=null)),xs(h))_t(h,r,12,[l,k]);else{const c=ei(h),A=ti(h);if(c||A){const g=()=>{if(s.f){const f=c?u(h)?d[h]:k[h]:h.value;n?_s(f)&&su(f,t):_s(f)?f.includes(t)||f.push(t):c?(k[h]=[t],u(h)&&(d[h]=k[h])):(h.value=[t],s.k&&(k[s.k]=h.value))}else c?(k[h]=l,u(h)&&(d[h]=l)):A&&(h.value=l,s.k&&(k[s.k]=l))};l?(g.id=-1,Qi(g,e)):g()}}}let Uc=!1;const rn=()=>{Uc||(console.error("Hydration completed but contains mismatches."),Uc=!0)},Um=s=>s.namespaceURI.includes("svg")&&s.tagName!=="foreignObject",Gm=s=>s.namespaceURI.includes("MathML"),Sr=s=>{if(s.nodeType===1){if(Um(s))return"svg";if(Gm(s))return"mathml"}},on=s=>s.nodeType===8;function Wm(s){const{mt:i,p:e,o:{patchProp:a,createText:n,nextSibling:t,parentNode:l,remove:r,insert:h,createComment:p}}=s,k=(y,v)=>{if(!v.hasChildNodes()){Ta("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),e(null,y,v),vh(),v._vnode=y;return}d(v.firstChild,y,null,null,null),vh(),v._vnode=y},d=(y,v,_,S,N,T=!1)=>{T=T||!!v.dynamicChildren;const C=on(y)&&y.data==="[",I=()=>A(y,v,_,S,N,C),{type:O,ref:w,shapeFlag:z,patchFlag:b}=v;let $=y.nodeType;v.el=y,lt(y,"__vnode",v,!0),lt(y,"__vueParentComponent",_,!0),b===-2&&(T=!1,v.dynamicChildren=null);let R=null;switch(O){case Wa:$!==3?v.children===""?(h(v.el=n(""),l(y),y),R=y):R=I():(y.data!==v.children&&(Ta("Hydration text mismatch in",y.parentNode,`
  - rendered on server: ${JSON.stringify(y.data)}
  - expected on client: ${JSON.stringify(v.children)}`),rn(),y.data=v.children),R=t(y));break;case wi:m(y)?(R=t(y),f(v.el=y.content.firstChild,y,_)):$!==8||C?R=I():R=t(y);break;case Zn:if(C&&(y=t(y),$=y.nodeType),$===1||$===3){R=y;const M=!v.children.length;for(let W=0;W<v.staticCount;W++)M&&(v.children+=R.nodeType===1?R.outerHTML:R.data),W===v.staticCount-1&&(v.anchor=R),R=t(R);return C?t(R):R}else I();break;case Ds:C?R=c(y,v,_,S,N,T):R=I();break;default:if(z&1)($!==1||v.type.toLowerCase()!==y.tagName.toLowerCase())&&!m(y)?R=I():R=o(y,v,_,S,N,T);else if(z&6){v.slotScopeIds=N;const M=l(y);if(C?R=g(y):on(y)&&y.data==="teleport start"?R=g(y,y.data,"teleport end"):R=t(y),i(v,M,null,_,S,Sr(M),T),vn(v)&&!v.type.__asyncResolved){let W;C?(W=Bs(Ds),W.anchor=R?R.previousSibling:M.lastChild):W=y.nodeType===3?ki(""):Bs("div"),W.el=y,v.component.subTree=W}}else z&64?$!==8?R=I():R=v.type.hydrate(y,v,_,S,N,T,s,u):z&128?R=v.type.hydrate(y,v,_,S,Sr(l(y)),N,T,s,d):Ta("Invalid HostVNode type:",O,`(${typeof O})`)}return w!=null&&yl(w,null,S,v),R},o=(y,v,_,S,N,T)=>{T=T||!!v.dynamicChildren;const{type:C,props:I,patchFlag:O,shapeFlag:w,dirs:z,transition:b}=v,$=C==="input"||C==="option";if($||O!==-1){z&&Ne(v,null,_,"created");let R=!1;if(m(y)){R=s4(null,b)&&_&&_.vnode.props&&_.vnode.props.appear;const W=y.content.firstChild;R&&b.beforeEnter(W),f(W,y,_),v.el=y=W}if(w&16&&!(I&&(I.innerHTML||I.textContent))){let W=u(y.firstChild,v,y,_,S,N,T),Y=!1;for(;W;){Gt(y,1)||(Y||(Ta("Hydration children mismatch on",y,`
Server rendered element contains more child nodes than client vdom.`),Y=!0),rn());const ls=W;W=W.nextSibling,r(ls)}}else if(w&8){let W=v.children;W[0]===`
`&&(y.tagName==="PRE"||y.tagName==="TEXTAREA")&&(W=W.slice(1)),y.textContent!==W&&(Gt(y,0)||(Ta("Hydration text content mismatch on",y,`
  - rendered on server: ${y.textContent}
  - expected on client: ${v.children}`),rn()),y.textContent=v.children)}if(I){const W=y.tagName.includes("-");for(const Y in I)!(z&&z.some(ls=>ls.dir.created))&&Km(y,Y,I[Y],v,_)&&rn(),($&&(Y.endsWith("value")||Y==="indeterminate")||Kl(Y)&&!Wn(Y)||Y[0]==="."||W)&&a(y,Y,null,I[Y],void 0,_)}let M;(M=I&&I.onVnodeBeforeMount)&&de(M,_,v),z&&Ne(v,null,_,"beforeMount"),((M=I&&I.onVnodeMounted)||z||R)&&r4(()=>{M&&de(M,_,v),R&&b.enter(y),z&&Ne(v,null,_,"mounted")},S)}return y.nextSibling},u=(y,v,_,S,N,T,C)=>{C=C||!!v.dynamicChildren;const I=v.children,O=I.length;let w=!1;for(let z=0;z<O;z++){const b=C?I[z]:I[z]=ue(I[z]),$=b.type===Wa;y?($&&!C&&z+1<O&&ue(I[z+1]).type===Wa&&(h(n(y.data.slice(b.children.length)),_,t(y)),y.data=b.children),y=d(y,b,S,N,T,C)):$&&!b.children?h(b.el=n(""),_):(Gt(_,1)||(w||(Ta("Hydration children mismatch on",_,`
Server rendered element contains fewer child nodes than client vdom.`),w=!0),rn()),e(null,b,_,null,S,N,Sr(_),T))}return y},c=(y,v,_,S,N,T)=>{const{slotScopeIds:C}=v;C&&(N=N?N.concat(C):C);const I=l(y),O=u(t(y),v,I,_,S,N,T);return O&&on(O)&&O.data==="]"?t(v.anchor=O):(rn(),h(v.anchor=p("]"),I,O),O)},A=(y,v,_,S,N,T)=>{if(Gt(y.parentElement,1)||(Ta(`Hydration node mismatch:
- rendered on server:`,y,y.nodeType===3?"(text)":on(y)&&y.data==="["?"(start of fragment)":"",`
- expected on client:`,v.type),rn()),v.el=null,T){const O=g(y);for(;;){const w=t(y);if(w&&w!==O)r(w);else break}}const C=t(y),I=l(y);return r(y),e(null,v,I,C,_,S,Sr(I),N),_&&(_.vnode.el=v.el,t4(_,v.el)),C},g=(y,v="[",_="]")=>{let S=0;for(;y;)if(y=t(y),y&&on(y)&&(y.data===v&&S++,y.data===_)){if(S===0)return t(y);S--}return y},f=(y,v,_)=>{const S=v.parentNode;S&&S.replaceChild(y,v);let N=_;for(;N;)N.vnode.el===v&&(N.vnode.el=N.subTree.el=y),N=N.parent},m=y=>y.nodeType===1&&y.tagName==="TEMPLATE";return[k,d]}function Km(s,i,e,a,n){let t,l,r,h;if(i==="class")r=s.getAttribute("class"),h=Ps(e),Ym(Gc(r||""),Gc(h))||(t=2,l="class");else if(i==="style"){r=s.getAttribute("style")||"",h=ei(e)?e:G1(gi(e));const p=Wc(r),k=Wc(h);if(a.dirs)for(const{dir:d,value:o}of a.dirs)d.name==="show"&&!o&&k.set("display","none");n&&Ty(n,a,k),Xm(p,k)||(t=3,l="style")}else(s instanceof SVGElement&&Y1(i)||s instanceof HTMLElement&&($c(i)||K1(i)))&&($c(i)?(r=s.hasAttribute(i),h=eu(e)):e==null?(r=s.hasAttribute(i),h=!1):(s.hasAttribute(i)?r=s.getAttribute(i):i==="value"&&s.tagName==="TEXTAREA"?r=s.value:r=!1,h=X1(e)?String(e):!1),r!==h&&(t=4,l=i));if(t!=null&&!Gt(s,t)){const p=o=>o===!1?"(not rendered)":`${l}="${o}"`,k=`Hydration ${Sy[t]} mismatch on`,d=`
  - rendered on server: ${p(r)}
  - expected on client: ${p(h)}
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`;return Ta(k,s,d),!0}return!1}function Gc(s){return new Set(s.trim().split(/\s+/))}function Ym(s,i){if(s.size!==i.size)return!1;for(const e of s)if(!i.has(e))return!1;return!0}function Wc(s){const i=new Map;for(const e of s.split(";")){let[a,n]=e.split(":");a=a.trim(),n=n&&n.trim(),a&&n&&i.set(a,n)}return i}function Xm(s,i){if(s.size!==i.size)return!1;for(const[e,a]of s)if(a!==i.get(e))return!1;return!0}function Ty(s,i,e){const a=s.subTree;if(s.getCssVars&&(i===a||a&&a.type===Ds&&a.children.includes(i))){const n=s.getCssVars();for(const t in n)e.set(`--${J1(t)}`,String(n[t]))}i===a&&s.parent&&Ty(s.parent,s.vnode,e)}const Kc="data-allow-mismatch",Sy={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function Gt(s,i){if(i===0||i===1)for(;s&&!s.hasAttribute(Kc);)s=s.parentElement;const e=s&&s.getAttribute(Kc);if(e==null)return!1;if(e==="")return!0;{const a=e.split(",");return i===0&&a.includes("children")?!0:e.split(",").includes(Sy[i])}}Xh().requestIdleCallback;Xh().cancelIdleCallback;function Zm(s,i){if(on(s)&&s.data==="["){let e=1,a=s.nextSibling;for(;a;){if(a.nodeType===1){if(i(a)===!1)break}else if(on(a))if(a.data==="]"){if(--e===0)break}else a.data==="["&&e++;a=a.nextSibling}}else i(s)}const vn=s=>!!s.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Iy(s){xs(s)&&(s={loader:s});const{loader:i,loadingComponent:e,errorComponent:a,delay:n=200,hydrate:t,timeout:l,suspensible:r=!0,onError:h}=s;let p=null,k,d=0;const o=()=>(d++,p=null,u()),u=()=>{let c;return p||(c=p=i().catch(A=>{if(A=A instanceof Error?A:new Error(String(A)),h)return new Promise((g,f)=>{h(A,()=>g(o()),()=>f(A),d+1)});throw A}).then(A=>c!==p&&p?p:(A&&(A.__esModule||A[Symbol.toStringTag]==="Module")&&(A=A.default),k=A,A)))};return ts({name:"AsyncComponentWrapper",__asyncLoader:u,__asyncHydrate(c,A,g){const f=t?()=>{const m=t(g,y=>Zm(c,y));m&&(A.bum||(A.bum=[])).push(m)}:g;k?f():u().then(()=>!A.isUnmounted&&f())},get __asyncResolved(){return k},setup(){const c=Ai;if(cu(c),k)return()=>Xp(k,c);const A=y=>{p=null,Jl(y,c,13,!a)};if(r&&c.suspense||ht)return u().then(y=>()=>Xp(y,c)).catch(y=>(A(y),()=>a?Bs(a,{error:y}):null));const g=Q(!1),f=Q(),m=Q(!!n);return n&&setTimeout(()=>{m.value=!1},n),l!=null&&setTimeout(()=>{if(!g.value&&!f.value){const y=new Error(`Async component timed out after ${l}ms.`);A(y),f.value=y}},l),u().then(()=>{g.value=!0,c.parent&&Ql(c.parent.vnode)&&c.parent.update()}).catch(y=>{A(y),f.value=y}),()=>{if(g.value&&k)return Xp(k,c);if(f.value&&a)return Bs(a,{error:f.value});if(e&&!m.value)return Bs(e)}}})}function Xp(s,i){const{ref:e,props:a,children:n,ce:t}=i.vnode,l=Bs(s,a,n);return l.ref=e,l.ce=t,delete i.vnode.ce,l}const Ql=s=>s.type.__isKeepAlive;function Jm(s,i){Ry(s,"a",i)}function Qm(s,i){Ry(s,"da",i)}function Ry(s,i,e=Ai){const a=s.__wdc||(s.__wdc=()=>{let n=e;for(;n;){if(n.isDeactivated)return;n=n.parent}return s()});if(ip(i,a,e),e){let n=e.parent;for(;n&&n.parent;)Ql(n.parent.vnode)&&sv(a,i,e,n),n=n.parent}}function sv(s,i,e,a){const n=ip(i,s,a,!0);_i(()=>{su(a[i],n)},e)}function ip(s,i,e=Ai,a=!1){if(e){const n=e[s]||(e[s]=[]),t=i.__weh||(i.__weh=(...l)=>{Fa();const r=sr(e),h=be(i,e,s,l);return r(),Ea(),h});return a?n.unshift(t):n.push(t),t}}const ba=s=>(i,e=Ai)=>{(!ht||s==="sp")&&ip(s,(...a)=>i(...a),e)},Oy=ba("bm"),ws=ba("m"),iv=ba("bu"),Py=ba("u"),Dt=ba("bum"),_i=ba("um"),ev=ba("sp"),av=ba("rtg"),nv=ba("rtc");function tv(s,i=Ai){ip("ec",s,i)}const Ly="components";function Ws(s,i){return My(Ly,s,!0,i)||s}const Ny=Symbol.for("v-ndc");function lv(s){return ei(s)?My(Ly,s,!1)||s:s||Ny}function My(s,i,e=!0,a=!1){const n=fi||Ai;if(n){const t=n.type;{const r=u4(t,!1);if(r&&(r===i||r===Wi(i)||r===Xl(Wi(i))))return t}const l=Yc(n[s]||t[s],i)||Yc(n.appContext[s],i);return!l&&a?t:l}}function Yc(s,i){return s&&(s[i]||s[Wi(i)]||s[Xl(Wi(i))])}function bi(s,i,e,a){let n;const t=e&&e[a],l=_s(s);if(l||ei(s)){const r=l&&Kn(s);let h=!1;r&&(h=!ce(s),s=Qh(s)),n=new Array(s.length);for(let p=0,k=s.length;p<k;p++)n[p]=i(h?Ri(s[p]):s[p],p,void 0,t&&t[p])}else if(typeof s=="number"){n=new Array(s);for(let r=0;r<s;r++)n[r]=i(r+1,r,void 0,t&&t[r])}else if(Zs(s))if(s[Symbol.iterator])n=Array.from(s,(r,h)=>i(r,h,void 0,t&&t[h]));else{const r=Object.keys(s);n=new Array(r.length);for(let h=0,p=r.length;h<p;h++){const k=r[h];n[h]=i(s[k],k,h,t&&t[h])}}else n=[];return e&&(e[a]=n),n}function ee(s,i,e={},a,n){if(fi.ce||fi.parent&&vn(fi.parent)&&fi.parent.ce)return i!=="default"&&(e.name=i),hs(),ri(Ds,null,[Bs("slot",e,a&&a())],64);let t=s[i];t&&t._c&&(t._d=!1),hs();const l=t&&Vy(t(e)),r=e.key||l&&l.key,h=ri(Ds,{key:(r&&!Ee(r)?r:`_${i}`)+(!l&&a?"_fb":"")},l||(a?a():[]),l&&s._===1?64:-2);return h.scopeId&&(h.slotScopeIds=[h.scopeId+"-s"]),t&&t._c&&(t._d=!0),h}function Vy(s){return s.some(i=>fl(i)?!(i.type===wi||i.type===Ds&&!Vy(i.children)):!0)?s:null}const jd=s=>s?k4(s)?np(s):jd(s.parent):null,tl=Fi(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>jd(s.parent),$root:s=>jd(s.root),$host:s=>s.ce,$emit:s=>s.emit,$options:s=>qy(s),$forceUpdate:s=>s.f||(s.f=()=>{du(s.update)}),$nextTick:s=>s.n||(s.n=qs.bind(s.proxy)),$watch:s=>xv.bind(s)}),Zp=(s,i)=>s!==Js&&!s.__isScriptSetup&&Us(s,i),rv={get({_:s},i){if(i==="__v_skip")return!0;const{ctx:e,setupState:a,data:n,props:t,accessCache:l,type:r,appContext:h}=s;let p;if(i[0]!=="$"){const u=l[i];if(u!==void 0)switch(u){case 1:return a[i];case 2:return n[i];case 4:return e[i];case 3:return t[i]}else{if(Zp(a,i))return l[i]=1,a[i];if(n!==Js&&Us(n,i))return l[i]=2,n[i];if((p=s.propsOptions[0])&&Us(p,i))return l[i]=3,t[i];if(e!==Js&&Us(e,i))return l[i]=4,e[i];Ud&&(l[i]=0)}}const k=tl[i];let d,o;if(k)return i==="$attrs"&&Ii(s.attrs,"get",""),k(s);if((d=r.__cssModules)&&(d=d[i]))return d;if(e!==Js&&Us(e,i))return l[i]=4,e[i];if(o=h.config.globalProperties,Us(o,i))return o[i]},set({_:s},i,e){const{data:a,setupState:n,ctx:t}=s;return Zp(n,i)?(n[i]=e,!0):a!==Js&&Us(a,i)?(a[i]=e,!0):Us(s.props,i)||i[0]==="$"&&i.slice(1)in s?!1:(t[i]=e,!0)},has({_:{data:s,setupState:i,accessCache:e,ctx:a,appContext:n,propsOptions:t}},l){let r;return!!e[l]||s!==Js&&Us(s,l)||Zp(i,l)||(r=t[0])&&Us(r,l)||Us(a,l)||Us(tl,l)||Us(n.config.globalProperties,l)},defineProperty(s,i,e){return e.get!=null?s._.accessCache[i]=0:Us(e,"value")&&this.set(s,i,e.value,null),Reflect.defineProperty(s,i,e)}};function hv(){return $y().slots}function pv(){return $y().attrs}function $y(){const s=pe();return s.setupContext||(s.setupContext=o4(s))}function Xc(s){return _s(s)?s.reduce((i,e)=>(i[e]=null,i),{}):s}function kv(s,i){const e={};for(const a in s)i.includes(a)||Object.defineProperty(e,a,{enumerable:!0,get:()=>s[a]});return e}let Ud=!0;function dv(s){const i=qy(s),e=s.proxy,a=s.ctx;Ud=!1,i.beforeCreate&&Zc(i.beforeCreate,s,"bc");const{data:n,computed:t,methods:l,watch:r,provide:h,inject:p,created:k,beforeMount:d,mounted:o,beforeUpdate:u,updated:c,activated:A,deactivated:g,beforeDestroy:f,beforeUnmount:m,destroyed:y,unmounted:v,render:_,renderTracked:S,renderTriggered:N,errorCaptured:T,serverPrefetch:C,expose:I,inheritAttrs:O,components:w,directives:z,filters:b}=i;if(p&&ov(p,a,null),l)for(const M in l){const W=l[M];xs(W)&&(a[M]=W.bind(e))}if(n){const M=n.call(e,e);Zs(M)&&(s.data=Ya(M))}if(Ud=!0,t)for(const M in t){const W=t[M],Y=xs(W)?W.bind(e,e):xs(W.get)?W.get.bind(e,e):qe,ls=!xs(W)&&xs(W.set)?W.set.bind(e):qe,ps=V({get:Y,set:ls});Object.defineProperty(a,M,{enumerable:!0,configurable:!0,get:()=>ps.value,set:es=>ps.value=es})}if(r)for(const M in r)zy(r[M],a,e,M);if(h){const M=xs(h)?h.call(e):h;Reflect.ownKeys(M).forEach(W=>{Di(W,M[W])})}k&&Zc(k,s,"c");function R(M,W){_s(W)?W.forEach(Y=>M(Y.bind(e))):W&&M(W.bind(e))}if(R(Oy,d),R(ws,o),R(iv,u),R(Py,c),R(Jm,A),R(Qm,g),R(tv,T),R(nv,S),R(av,N),R(Dt,m),R(_i,v),R(ev,C),_s(I))if(I.length){const M=s.exposed||(s.exposed={});I.forEach(W=>{Object.defineProperty(M,W,{get:()=>e[W],set:Y=>e[W]=Y})})}else s.exposed||(s.exposed={});_&&s.render===qe&&(s.render=_),O!=null&&(s.inheritAttrs=O),w&&(s.components=w),z&&(s.directives=z),C&&cu(s)}function ov(s,i,e=qe){_s(s)&&(s=Gd(s));for(const a in s){const n=s[a];let t;Zs(n)?"default"in n?t=Ns(n.from||a,n.default,!0):t=Ns(n.from||a):t=Ns(n),ti(t)?Object.defineProperty(i,a,{enumerable:!0,configurable:!0,get:()=>t.value,set:l=>t.value=l}):i[a]=t}}function Zc(s,i,e){be(_s(s)?s.map(a=>a.bind(i.proxy)):s.bind(i.proxy),i,e)}function zy(s,i,e,a){let n=a.includes(".")?a4(e,a):()=>e[a];if(ei(s)){const t=i[s];xs(t)&&bs(n,t)}else if(xs(s))bs(n,s.bind(e));else if(Zs(s))if(_s(s))s.forEach(t=>zy(t,i,e,a));else{const t=xs(s.handler)?s.handler.bind(e):i[s.handler];xs(t)&&bs(n,t,s)}}function qy(s){const i=s.type,{mixins:e,extends:a}=i,{mixins:n,optionsCache:t,config:{optionMergeStrategies:l}}=s.appContext,r=t.get(i);let h;return r?h=r:!n.length&&!e&&!a?h=i:(h={},n.length&&n.forEach(p=>Eh(h,p,l,!0)),Eh(h,i,l)),Zs(i)&&t.set(i,h),h}function Eh(s,i,e,a=!1){const{mixins:n,extends:t}=i;t&&Eh(s,t,e,!0),n&&n.forEach(l=>Eh(s,l,e,!0));for(const l in i)if(!(a&&l==="expose")){const r=uv[l]||e&&e[l];s[l]=r?r(s[l],i[l]):i[l]}return s}const uv={data:Jc,props:Qc,emits:Qc,methods:Wt,computed:Wt,beforeCreate:Pi,created:Pi,beforeMount:Pi,mounted:Pi,beforeUpdate:Pi,updated:Pi,beforeDestroy:Pi,beforeUnmount:Pi,destroyed:Pi,unmounted:Pi,activated:Pi,deactivated:Pi,errorCaptured:Pi,serverPrefetch:Pi,components:Wt,directives:Wt,watch:gv,provide:Jc,inject:cv};function Jc(s,i){return i?s?function(){return Fi(xs(s)?s.call(this,this):s,xs(i)?i.call(this,this):i)}:i:s}function cv(s,i){return Wt(Gd(s),Gd(i))}function Gd(s){if(_s(s)){const i={};for(let e=0;e<s.length;e++)i[s[e]]=s[e];return i}return s}function Pi(s,i){return s?[...new Set([].concat(s,i))]:i}function Wt(s,i){return s?Fi(Object.create(null),s,i):i}function Qc(s,i){return s?_s(s)&&_s(i)?[...new Set([...s,...i])]:Fi(Object.create(null),Xc(s),Xc(i??{})):i}function gv(s,i){if(!s)return i;if(!i)return s;const e=Fi(Object.create(null),s);for(const a in i)e[a]=Pi(s[a],i[a]);return e}function Hy(){return{app:null,config:{isNativeTag:L1,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Bv=0;function Av(s,i){return function(a,n=null){xs(a)||(a=Fi({},a)),n!=null&&!Zs(n)&&(n=null);const t=Hy(),l=new WeakSet,r=[];let h=!1;const p=t.app={_uid:Bv++,_component:a,_props:n,_container:null,_context:t,_instance:null,version:lg,get config(){return t.config},set config(k){},use(k,...d){return l.has(k)||(k&&xs(k.install)?(l.add(k),k.install(p,...d)):xs(k)&&(l.add(k),k(p,...d))),p},mixin(k){return t.mixins.includes(k)||t.mixins.push(k),p},component(k,d){return d?(t.components[k]=d,p):t.components[k]},directive(k,d){return d?(t.directives[k]=d,p):t.directives[k]},mount(k,d,o){if(!h){const u=p._ceVNode||Bs(a,n);return u.appContext=t,o===!0?o="svg":o===!1&&(o=void 0),d&&i?i(u,k):s(u,k,o),h=!0,p._container=k,k.__vue_app__=p,p._instance=u.component,Lm(p,lg),np(u.component)}},onUnmount(k){r.push(k)},unmount(){h&&(be(r,p._instance,16),s(null,p._container),p._instance=null,Nm(p),delete p._container.__vue_app__)},provide(k,d){return t.provides[k]=d,p},runWithContext(k){const d=Fn;Fn=p;try{return k()}finally{Fn=d}}};return p}}let Fn=null;function Di(s,i){if(Ai){let e=Ai.provides;const a=Ai.parent&&Ai.parent.provides;a===e&&(e=Ai.provides=Object.create(a)),e[s]=i}}function Ns(s,i,e=!1){const a=Ai||fi;if(a||Fn){const n=Fn?Fn._context.provides:a?a.parent==null?a.vnode.appContext&&a.vnode.appContext.provides:a.parent.provides:void 0;if(n&&s in n)return n[s];if(arguments.length>1)return e&&xs(i)?i.call(a&&a.proxy):i}}function jy(){return!!(Ai||fi||Fn)}const Uy={},Gy=()=>Object.create(Uy),Wy=s=>Object.getPrototypeOf(s)===Uy;function yv(s,i,e,a=!1){const n={},t=Gy();s.propsDefaults=Object.create(null),Ky(s,i,n,t);for(const l in s.propsOptions[0])l in n||(n[l]=void 0);e?s.props=a?n:uy(n):s.type.props?s.props=n:s.props=t,s.attrs=t}function fv(s,i,e,a){const{props:n,attrs:t,vnode:{patchFlag:l}}=s,r=Os(n),[h]=s.propsOptions;let p=!1;if((a||l>0)&&!(l&16)){if(l&8){const k=s.vnode.dynamicProps;for(let d=0;d<k.length;d++){let o=k[d];if(ap(s.emitsOptions,o))continue;const u=i[o];if(h)if(Us(t,o))u!==t[o]&&(t[o]=u,p=!0);else{const c=Wi(o);n[c]=Wd(h,r,c,u,s,!1)}else u!==t[o]&&(t[o]=u,p=!0)}}}else{Ky(s,i,n,t)&&(p=!0);let k;for(const d in r)(!i||!Us(i,d)&&((k=an(d))===d||!Us(i,k)))&&(h?e&&(e[d]!==void 0||e[k]!==void 0)&&(n[d]=Wd(h,r,d,void 0,s,!0)):delete n[d]);if(t!==r)for(const d in t)(!i||!Us(i,d))&&(delete t[d],p=!0)}p&&ka(s.attrs,"set","")}function Ky(s,i,e,a){const[n,t]=s.propsOptions;let l=!1,r;if(i)for(let h in i){if(Wn(h))continue;const p=i[h];let k;n&&Us(n,k=Wi(h))?!t||!t.includes(k)?e[k]=p:(r||(r={}))[k]=p:ap(s.emitsOptions,h)||(!(h in a)||p!==a[h])&&(a[h]=p,l=!0)}if(t){const h=Os(e),p=r||Js;for(let k=0;k<t.length;k++){const d=t[k];e[d]=Wd(n,h,d,p[d],s,!Us(p,d))}}return l}function Wd(s,i,e,a,n,t){const l=s[e];if(l!=null){const r=Us(l,"default");if(r&&a===void 0){const h=l.default;if(l.type!==Function&&!l.skipFactory&&xs(h)){const{propsDefaults:p}=n;if(e in p)a=p[e];else{const k=sr(n);a=p[e]=h.call(null,i),k()}}else a=h;n.ce&&n.ce._setProp(e,a)}l[0]&&(t&&!r?a=!1:l[1]&&(a===""||a===an(e))&&(a=!0))}return a}const mv=new WeakMap;function Yy(s,i,e=!1){const a=e?mv:i.propsCache,n=a.get(s);if(n)return n;const t=s.props,l={},r=[];let h=!1;if(!xs(s)){const k=d=>{h=!0;const[o,u]=Yy(d,i,!0);Fi(l,o),u&&r.push(...u)};!e&&i.mixins.length&&i.mixins.forEach(k),s.extends&&k(s.extends),s.mixins&&s.mixins.forEach(k)}if(!t&&!h)return Zs(s)&&a.set(s,Un),Un;if(_s(t))for(let k=0;k<t.length;k++){const d=Wi(t[k]);sg(d)&&(l[d]=Js)}else if(t)for(const k in t){const d=Wi(k);if(sg(d)){const o=t[k],u=l[d]=_s(o)||xs(o)?{type:o}:Fi({},o),c=u.type;let A=!1,g=!0;if(_s(c))for(let f=0;f<c.length;++f){const m=c[f],y=xs(m)&&m.name;if(y==="Boolean"){A=!0;break}else y==="String"&&(g=!1)}else A=xs(c)&&c.name==="Boolean";u[0]=A,u[1]=g,(A||Us(u,"default"))&&r.push(d)}}const p=[l,r];return Zs(s)&&a.set(s,p),p}function sg(s){return s[0]!=="$"&&!Wn(s)}const Xy=s=>s[0]==="_"||s==="$stable",gu=s=>_s(s)?s.map(ue):[ue(s)],vv=(s,i,e)=>{if(i._n)return i;const a=Hs((...n)=>gu(i(...n)),e);return a._c=!1,a},Zy=(s,i,e)=>{const a=s._ctx;for(const n in s){if(Xy(n))continue;const t=s[n];if(xs(t))i[n]=vv(n,t,a);else if(t!=null){const l=gu(t);i[n]=()=>l}}},Jy=(s,i)=>{const e=gu(i);s.slots.default=()=>e},Qy=(s,i,e)=>{for(const a in i)(e||a!=="_")&&(s[a]=i[a])},Fv=(s,i,e)=>{const a=s.slots=Gy();if(s.vnode.shapeFlag&32){const n=i._;n?(Qy(a,i,e),e&&lt(a,"_",n,!0)):Zy(i,a)}else i&&Jy(s,i)},Ev=(s,i,e)=>{const{vnode:a,slots:n}=s;let t=!0,l=Js;if(a.shapeFlag&32){const r=i._;r?e&&r===1?t=!1:Qy(n,i,e):(t=!i.$stable,Zy(i,n)),l=i}else i&&(Jy(s,i),l={default:1});if(t)for(const r in n)!Xy(r)&&l[r]==null&&delete n[r]},Qi=r4;function bv(s){return Cv(s,Wm)}function Cv(s,i){const e=Xh();e.__VUE__=!0,vy(e.__VUE_DEVTOOLS_GLOBAL_HOOK__,e);const{insert:a,remove:n,patchProp:t,createElement:l,createText:r,createComment:h,setText:p,setElementText:k,parentNode:d,nextSibling:o,setScopeId:u=qe,insertStaticContent:c}=s,A=(x,E,D,P=null,L=null,H=null,is=void 0,as=null,ss=!!E.dynamicChildren)=>{if(x===E)return;x&&!un(x,E)&&(P=j(x),es(x,L,H,!0),x=null),E.patchFlag===-2&&(ss=!1,E.dynamicChildren=null);const{type:ns,ref:gs,shapeFlag:ds}=E;switch(ns){case Wa:g(x,E,D,P);break;case wi:f(x,E,D,P);break;case Zn:x==null&&m(E,D,P,is);break;case Ds:w(x,E,D,P,L,H,is,as,ss);break;default:ds&1?_(x,E,D,P,L,H,is,as,ss):ds&6?z(x,E,D,P,L,H,is,as,ss):(ds&64||ds&128)&&ns.process(x,E,D,P,L,H,is,as,ss,ks)}gs!=null&&L&&yl(gs,x&&x.ref,H,E||x,!E)},g=(x,E,D,P)=>{if(x==null)a(E.el=r(E.children),D,P);else{const L=E.el=x.el;E.children!==x.children&&p(L,E.children)}},f=(x,E,D,P)=>{x==null?a(E.el=h(E.children||""),D,P):E.el=x.el},m=(x,E,D,P)=>{[x.el,x.anchor]=c(x.children,E,D,P,x.el,x.anchor)},y=({el:x,anchor:E},D,P)=>{let L;for(;x&&x!==E;)L=o(x),a(x,D,P),x=L;a(E,D,P)},v=({el:x,anchor:E})=>{let D;for(;x&&x!==E;)D=o(x),n(x),x=D;n(E)},_=(x,E,D,P,L,H,is,as,ss)=>{E.type==="svg"?is="svg":E.type==="math"&&(is="mathml"),x==null?S(E,D,P,L,H,is,as,ss):C(x,E,L,H,is,as,ss)},S=(x,E,D,P,L,H,is,as)=>{let ss,ns;const{props:gs,shapeFlag:ds,transition:As,dirs:Cs}=x;if(ss=x.el=l(x.type,H,gs&&gs.is,gs),ds&8?k(ss,x.children):ds&16&&T(x.children,ss,null,P,L,Jp(x,H),is,as),Cs&&Ne(x,null,P,"created"),N(ss,x,x.scopeId,is,P),gs){for(const Xs in gs)Xs!=="value"&&!Wn(Xs)&&t(ss,Xs,null,gs[Xs],H,P);"value"in gs&&t(ss,"value",null,gs.value,H),(ns=gs.onVnodeBeforeMount)&&de(ns,P,x)}lt(ss,"__vnode",x,!0),lt(ss,"__vueParentComponent",P,!0),Cs&&Ne(x,null,P,"beforeMount");const Ss=s4(L,As);Ss&&As.beforeEnter(ss),a(ss,E,D),((ns=gs&&gs.onVnodeMounted)||Ss||Cs)&&Qi(()=>{ns&&de(ns,P,x),Ss&&As.enter(ss),Cs&&Ne(x,null,P,"mounted")},L)},N=(x,E,D,P,L)=>{if(D&&u(x,D),P)for(let H=0;H<P.length;H++)u(x,P[H]);if(L){let H=L.subTree;if(E===H||l4(H.type)&&(H.ssContent===E||H.ssFallback===E)){const is=L.vnode;N(x,is,is.scopeId,is.slotScopeIds,L.parent)}}},T=(x,E,D,P,L,H,is,as,ss=0)=>{for(let ns=ss;ns<x.length;ns++){const gs=x[ns]=as?La(x[ns]):ue(x[ns]);A(null,gs,E,D,P,L,H,is,as)}},C=(x,E,D,P,L,H,is)=>{const as=E.el=x.el;as.__vnode=E;let{patchFlag:ss,dynamicChildren:ns,dirs:gs}=E;ss|=x.patchFlag&16;const ds=x.props||Js,As=E.props||Js;let Cs;if(D&&hn(D,!1),(Cs=As.onVnodeBeforeUpdate)&&de(Cs,D,E,x),gs&&Ne(E,x,D,"beforeUpdate"),D&&hn(D,!0),(ds.innerHTML&&As.innerHTML==null||ds.textContent&&As.textContent==null)&&k(as,""),ns?I(x.dynamicChildren,ns,as,D,P,Jp(E,L),H):is||W(x,E,as,null,D,P,Jp(E,L),H,!1),ss>0){if(ss&16)O(as,ds,As,D,L);else if(ss&2&&ds.class!==As.class&&t(as,"class",null,As.class,L),ss&4&&t(as,"style",ds.style,As.style,L),ss&8){const Ss=E.dynamicProps;for(let Xs=0;Xs<Ss.length;Xs++){const $s=Ss[Xs],Xi=ds[$s],Si=As[$s];(Si!==Xi||$s==="value")&&t(as,$s,Xi,Si,L,D)}}ss&1&&x.children!==E.children&&k(as,E.children)}else!is&&ns==null&&O(as,ds,As,D,L);((Cs=As.onVnodeUpdated)||gs)&&Qi(()=>{Cs&&de(Cs,D,E,x),gs&&Ne(E,x,D,"updated")},P)},I=(x,E,D,P,L,H,is)=>{for(let as=0;as<E.length;as++){const ss=x[as],ns=E[as],gs=ss.el&&(ss.type===Ds||!un(ss,ns)||ss.shapeFlag&70)?d(ss.el):D;A(ss,ns,gs,null,P,L,H,is,!0)}},O=(x,E,D,P,L)=>{if(E!==D){if(E!==Js)for(const H in E)!Wn(H)&&!(H in D)&&t(x,H,E[H],null,L,P);for(const H in D){if(Wn(H))continue;const is=D[H],as=E[H];is!==as&&H!=="value"&&t(x,H,as,is,L,P)}"value"in D&&t(x,"value",E.value,D.value,L)}},w=(x,E,D,P,L,H,is,as,ss)=>{const ns=E.el=x?x.el:r(""),gs=E.anchor=x?x.anchor:r("");let{patchFlag:ds,dynamicChildren:As,slotScopeIds:Cs}=E;Cs&&(as=as?as.concat(Cs):Cs),x==null?(a(ns,D,P),a(gs,D,P),T(E.children||[],D,gs,L,H,is,as,ss)):ds>0&&ds&64&&As&&x.dynamicChildren?(I(x.dynamicChildren,As,D,L,H,is,as),(E.key!=null||L&&E===L.subTree)&&i4(x,E,!0)):W(x,E,D,gs,L,H,is,as,ss)},z=(x,E,D,P,L,H,is,as,ss)=>{E.slotScopeIds=as,x==null?E.shapeFlag&512?L.ctx.activate(E,D,P,is,ss):b(E,D,P,L,H,is,ss):$(x,E,ss)},b=(x,E,D,P,L,H,is)=>{const as=x.component=$v(x,P,L);if(Ql(x)&&(as.ctx.renderer=ks),zv(as,!1,is),as.asyncDep){if(L&&L.registerDep(as,R,is),!x.el){const ss=as.subTree=Bs(wi);f(null,ss,E,D)}}else R(as,x,E,D,L,H,is)},$=(x,E,D)=>{const P=E.component=x.component;if(Ov(x,E,D))if(P.asyncDep&&!P.asyncResolved){M(P,E,D);return}else P.next=E,P.update();else E.el=x.el,P.vnode=E},R=(x,E,D,P,L,H,is)=>{const as=()=>{if(x.isMounted){let{next:ds,bu:As,u:Cs,parent:Ss,vnode:Xs}=x;{const Zi=e4(x);if(Zi){ds&&(ds.el=Xs.el,M(x,ds,is)),Zi.asyncDep.then(()=>{x.isUnmounted||as()});return}}let $s=ds,Xi;hn(x,!1),ds?(ds.el=Xs.el,M(x,ds,is)):ds=Xs,As&&sh(As),(Xi=ds.props&&ds.props.onVnodeBeforeUpdate)&&de(Xi,Ss,ds,Xs),hn(x,!0);const Si=Qp(x),Ae=x.subTree;x.subTree=Si,A(Ae,Si,d(Ae.el),j(Ae),x,L,H),ds.el=Si.el,$s===null&&t4(x,Si.el),Cs&&Qi(Cs,L),(Xi=ds.props&&ds.props.onVnodeUpdated)&&Qi(()=>de(Xi,Ss,ds,Xs),L),Fy(x)}else{let ds;const{el:As,props:Cs}=E,{bm:Ss,m:Xs,parent:$s,root:Xi,type:Si}=x,Ae=vn(E);if(hn(x,!1),Ss&&sh(Ss),!Ae&&(ds=Cs&&Cs.onVnodeBeforeMount)&&de(ds,$s,E),hn(x,!0),As&&X){const Zi=()=>{x.subTree=Qp(x),X(As,x.subTree,x,L,null)};Ae&&Si.__asyncHydrate?Si.__asyncHydrate(As,x,Zi):Zi()}else{Xi.ce&&Xi.ce._injectChildStyle(Si);const Zi=x.subTree=Qp(x);A(null,Zi,D,P,x,L,H),E.el=Zi.el}if(Xs&&Qi(Xs,L),!Ae&&(ds=Cs&&Cs.onVnodeMounted)){const Zi=E;Qi(()=>de(ds,$s,Zi),L)}(E.shapeFlag&256||$s&&vn($s.vnode)&&$s.vnode.shapeFlag&256)&&x.a&&Qi(x.a,L),x.isMounted=!0,Mm(x),E=D=P=null}};x.scope.on();const ss=x.effect=new QA(as);x.scope.off();const ns=x.update=ss.run.bind(ss),gs=x.job=ss.runIfDirty.bind(ss);gs.i=x,gs.id=x.uid,ss.scheduler=()=>du(gs),hn(x,!0),ns()},M=(x,E,D)=>{E.component=x;const P=x.vnode.props;x.vnode=E,x.next=null,fv(x,E.props,P,D),Ev(x,E.children,D),Fa(),Hc(x),Ea()},W=(x,E,D,P,L,H,is,as,ss=!1)=>{const ns=x&&x.children,gs=x?x.shapeFlag:0,ds=E.children,{patchFlag:As,shapeFlag:Cs}=E;if(As>0){if(As&128){ls(ns,ds,D,P,L,H,is,as,ss);return}else if(As&256){Y(ns,ds,D,P,L,H,is,as,ss);return}}Cs&8?(gs&16&&rs(ns,L,H),ds!==ns&&k(D,ds)):gs&16?Cs&16?ls(ns,ds,D,P,L,H,is,as,ss):rs(ns,L,H,!0):(gs&8&&k(D,""),Cs&16&&T(ds,D,P,L,H,is,as,ss))},Y=(x,E,D,P,L,H,is,as,ss)=>{x=x||Un,E=E||Un;const ns=x.length,gs=E.length,ds=Math.min(ns,gs);let As;for(As=0;As<ds;As++){const Cs=E[As]=ss?La(E[As]):ue(E[As]);A(x[As],Cs,D,null,L,H,is,as,ss)}ns>gs?rs(x,L,H,!0,!1,ds):T(E,D,P,L,H,is,as,ss,ds)},ls=(x,E,D,P,L,H,is,as,ss)=>{let ns=0;const gs=E.length;let ds=x.length-1,As=gs-1;for(;ns<=ds&&ns<=As;){const Cs=x[ns],Ss=E[ns]=ss?La(E[ns]):ue(E[ns]);if(un(Cs,Ss))A(Cs,Ss,D,null,L,H,is,as,ss);else break;ns++}for(;ns<=ds&&ns<=As;){const Cs=x[ds],Ss=E[As]=ss?La(E[As]):ue(E[As]);if(un(Cs,Ss))A(Cs,Ss,D,null,L,H,is,as,ss);else break;ds--,As--}if(ns>ds){if(ns<=As){const Cs=As+1,Ss=Cs<gs?E[Cs].el:P;for(;ns<=As;)A(null,E[ns]=ss?La(E[ns]):ue(E[ns]),D,Ss,L,H,is,as,ss),ns++}}else if(ns>As)for(;ns<=ds;)es(x[ns],L,H,!0),ns++;else{const Cs=ns,Ss=ns,Xs=new Map;for(ns=Ss;ns<=As;ns++){const Ji=E[ns]=ss?La(E[ns]):ue(E[ns]);Ji.key!=null&&Xs.set(Ji.key,ns)}let $s,Xi=0;const Si=As-Ss+1;let Ae=!1,Zi=0;const Ot=new Array(Si);for(ns=0;ns<Si;ns++)Ot[ns]=0;for(ns=Cs;ns<=ds;ns++){const Ji=x[ns];if(Xi>=Si){es(Ji,L,H,!0);continue}let Ie;if(Ji.key!=null)Ie=Xs.get(Ji.key);else for($s=Ss;$s<=As;$s++)if(Ot[$s-Ss]===0&&un(Ji,E[$s])){Ie=$s;break}Ie===void 0?es(Ji,L,H,!0):(Ot[Ie-Ss]=ns+1,Ie>=Zi?Zi=Ie:Ae=!0,A(Ji,E[Ie],D,null,L,H,is,as,ss),Xi++)}const Pc=Ae?_v(Ot):Un;for($s=Pc.length-1,ns=Si-1;ns>=0;ns--){const Ji=Ss+ns,Ie=E[Ji],Lc=Ji+1<gs?E[Ji+1].el:P;Ot[ns]===0?A(null,Ie,D,Lc,L,H,is,as,ss):Ae&&($s<0||ns!==Pc[$s]?ps(Ie,D,Lc,2):$s--)}}},ps=(x,E,D,P,L=null)=>{const{el:H,type:is,transition:as,children:ss,shapeFlag:ns}=x;if(ns&6){ps(x.component.subTree,E,D,P);return}if(ns&128){x.suspense.move(E,D,P);return}if(ns&64){is.move(x,E,D,ks);return}if(is===Ds){a(H,E,D);for(let ds=0;ds<ss.length;ds++)ps(ss[ds],E,D,P);a(x.anchor,E,D);return}if(is===Zn){y(x,E,D);return}if(P!==2&&ns&1&&as)if(P===0)as.beforeEnter(H),a(H,E,D),Qi(()=>as.enter(H),L);else{const{leave:ds,delayLeave:As,afterLeave:Cs}=as,Ss=()=>a(H,E,D),Xs=()=>{ds(H,()=>{Ss(),Cs&&Cs()})};As?As(H,Ss,Xs):Xs()}else a(H,E,D)},es=(x,E,D,P=!1,L=!1)=>{const{type:H,props:is,ref:as,children:ss,dynamicChildren:ns,shapeFlag:gs,patchFlag:ds,dirs:As,cacheIndex:Cs}=x;if(ds===-2&&(L=!1),as!=null&&yl(as,null,D,x,!0),Cs!=null&&(E.renderCache[Cs]=void 0),gs&256){E.ctx.deactivate(x);return}const Ss=gs&1&&As,Xs=!vn(x);let $s;if(Xs&&($s=is&&is.onVnodeBeforeUnmount)&&de($s,E,x),gs&6)K(x.component,D,P);else{if(gs&128){x.suspense.unmount(D,P);return}Ss&&Ne(x,null,E,"beforeUnmount"),gs&64?x.type.remove(x,E,D,ks,P):ns&&!ns.hasOnce&&(H!==Ds||ds>0&&ds&64)?rs(ns,E,D,!1,!0):(H===Ds&&ds&384||!L&&gs&16)&&rs(ss,E,D),P&&q(x)}(Xs&&($s=is&&is.onVnodeUnmounted)||Ss)&&Qi(()=>{$s&&de($s,E,x),Ss&&Ne(x,null,E,"unmounted")},D)},q=x=>{const{type:E,el:D,anchor:P,transition:L}=x;if(E===Ds){U(D,P);return}if(E===Zn){v(x);return}const H=()=>{n(D),L&&!L.persisted&&L.afterLeave&&L.afterLeave()};if(x.shapeFlag&1&&L&&!L.persisted){const{leave:is,delayLeave:as}=L,ss=()=>is(D,H);as?as(x.el,H,ss):ss()}else H()},U=(x,E)=>{let D;for(;x!==E;)D=o(x),n(x),x=D;n(E)},K=(x,E,D)=>{const{bum:P,scope:L,job:H,subTree:is,um:as,m:ss,a:ns}=x;ig(ss),ig(ns),P&&sh(P),L.stop(),H&&(H.flags|=8,es(is,x,E,D)),as&&Qi(as,E),Qi(()=>{x.isUnmounted=!0},E),E&&E.pendingBranch&&!E.isUnmounted&&x.asyncDep&&!x.asyncResolved&&x.suspenseId===E.pendingId&&(E.deps--,E.deps===0&&E.resolve()),$m(x)},rs=(x,E,D,P=!1,L=!1,H=0)=>{for(let is=H;is<x.length;is++)es(x[is],E,D,P,L)},j=x=>{if(x.shapeFlag&6)return j(x.component.subTree);if(x.shapeFlag&128)return x.suspense.next();const E=o(x.anchor||x.el),D=E&&E[qm];return D?o(D):E};let J=!1;const Z=(x,E,D)=>{x==null?E._vnode&&es(E._vnode,null,null,!0):A(E._vnode||null,x,E,null,null,null,D),E._vnode=x,J||(J=!0,Hc(),vh(),J=!1)},ks={p:A,um:es,m:ps,r:q,mt:b,mc:T,pc:W,pbc:I,n:j,o:s};let cs,X;return i&&([cs,X]=i(ks)),{render:Z,hydrate:cs,createApp:Av(Z,cs)}}function Jp({type:s,props:i},e){return e==="svg"&&s==="foreignObject"||e==="mathml"&&s==="annotation-xml"&&i&&i.encoding&&i.encoding.includes("html")?void 0:e}function hn({effect:s,job:i},e){e?(s.flags|=32,i.flags|=4):(s.flags&=-33,i.flags&=-5)}function s4(s,i){return(!s||s&&!s.pendingBranch)&&i&&!i.persisted}function i4(s,i,e=!1){const a=s.children,n=i.children;if(_s(a)&&_s(n))for(let t=0;t<a.length;t++){const l=a[t];let r=n[t];r.shapeFlag&1&&!r.dynamicChildren&&((r.patchFlag<=0||r.patchFlag===32)&&(r=n[t]=La(n[t]),r.el=l.el),!e&&r.patchFlag!==-2&&i4(l,r)),r.type===Wa&&(r.el=l.el)}}function _v(s){const i=s.slice(),e=[0];let a,n,t,l,r;const h=s.length;for(a=0;a<h;a++){const p=s[a];if(p!==0){if(n=e[e.length-1],s[n]<p){i[a]=n,e.push(a);continue}for(t=0,l=e.length-1;t<l;)r=t+l>>1,s[e[r]]<p?t=r+1:l=r;p<s[e[t]]&&(t>0&&(i[a]=e[t-1]),e[t]=a)}}for(t=e.length,l=e[t-1];t-- >0;)e[t]=l,l=i[l];return e}function e4(s){const i=s.subTree.component;if(i)return i.asyncDep&&!i.asyncResolved?i:e4(i)}function ig(s){if(s)for(let i=0;i<s.length;i++)s[i].flags|=8}const Dv=Symbol.for("v-scx"),wv=()=>Ns(Dv);function ep(s,i){return Bu(s,null,i)}function bs(s,i,e){return Bu(s,i,e)}function Bu(s,i,e=Js){const{immediate:a,deep:n,flush:t,once:l}=e,r=Fi({},e),h=i&&a||!i&&t!=="post";let p;if(ht){if(t==="sync"){const u=wv();p=u.__watcherHandles||(u.__watcherHandles=[])}else if(!h){const u=()=>{};return u.stop=qe,u.resume=qe,u.pause=qe,u}}const k=Ai;r.call=(u,c,A)=>be(u,k,c,A);let d=!1;t==="post"?r.scheduler=u=>{Qi(u,k&&k.suspense)}:t!=="sync"&&(d=!0,r.scheduler=(u,c)=>{c?u():du(u)}),r.augmentJob=u=>{i&&(u.flags|=4),d&&(u.flags|=2,k&&(u.id=k.uid,u.i=k))};const o=wm(s,i,r);return ht&&(p?p.push(o):h&&o()),o}function xv(s,i,e){const a=this.proxy,n=ei(s)?s.includes(".")?a4(a,s):()=>a[s]:s.bind(a,a);let t;xs(i)?t=i:(t=i.handler,e=i);const l=sr(this),r=Bu(n,t.bind(a),e);return l(),r}function a4(s,i){const e=i.split(".");return()=>{let a=s;for(let n=0;n<e.length&&a;n++)a=a[e[n]];return a}}const Tv=(s,i)=>i==="modelValue"||i==="model-value"?s.modelModifiers:s[`${i}Modifiers`]||s[`${Wi(i)}Modifiers`]||s[`${an(i)}Modifiers`];function Sv(s,i,...e){if(s.isUnmounted)return;const a=s.vnode.props||Js;let n=e;const t=i.startsWith("update:"),l=t&&Tv(a,i.slice(7));l&&(l.trim&&(n=e.map(k=>ei(k)?k.trim():k)),l.number&&(n=e.map(Ah))),zm(s,i,n);let r,h=a[r=Hp(i)]||a[r=Hp(Wi(i))];!h&&t&&(h=a[r=Hp(an(i))]),h&&be(h,s,6,n);const p=a[r+"Once"];if(p){if(!s.emitted)s.emitted={};else if(s.emitted[r])return;s.emitted[r]=!0,be(p,s,6,n)}}function n4(s,i,e=!1){const a=i.emitsCache,n=a.get(s);if(n!==void 0)return n;const t=s.emits;let l={},r=!1;if(!xs(s)){const h=p=>{const k=n4(p,i,!0);k&&(r=!0,Fi(l,k))};!e&&i.mixins.length&&i.mixins.forEach(h),s.extends&&h(s.extends),s.mixins&&s.mixins.forEach(h)}return!t&&!r?(Zs(s)&&a.set(s,null),null):(_s(t)?t.forEach(h=>l[h]=null):Fi(l,t),Zs(s)&&a.set(s,l),l)}function ap(s,i){return!s||!Kl(i)?!1:(i=i.slice(2).replace(/Once$/,""),Us(s,i[0].toLowerCase()+i.slice(1))||Us(s,an(i))||Us(s,i))}function Qp(s){const{type:i,vnode:e,proxy:a,withProxy:n,propsOptions:[t],slots:l,attrs:r,emit:h,render:p,renderCache:k,props:d,data:o,setupState:u,ctx:c,inheritAttrs:A}=s,g=Fh(s);let f,m;try{if(e.shapeFlag&4){const v=n||a,_=v;f=ue(p.call(_,v,k,d,u,o,c)),m=r}else{const v=i;f=ue(v.length>1?v(d,{attrs:r,slots:l,emit:h}):v(d,null)),m=i.props?r:Iv(r)}}catch(v){ll.length=0,Jl(v,s,1),f=Bs(wi)}let y=f;if(m&&A!==!1){const v=Object.keys(m),{shapeFlag:_}=y;v.length&&_&7&&(t&&v.some(Qo)&&(m=Rv(m,t)),y=Xa(y,m,!1,!0))}return e.dirs&&(y=Xa(y,null,!1,!0),y.dirs=y.dirs?y.dirs.concat(e.dirs):e.dirs),e.transition&&Dn(y,e.transition),f=y,Fh(g),f}const Iv=s=>{let i;for(const e in s)(e==="class"||e==="style"||Kl(e))&&((i||(i={}))[e]=s[e]);return i},Rv=(s,i)=>{const e={};for(const a in s)(!Qo(a)||!(a.slice(9)in i))&&(e[a]=s[a]);return e};function Ov(s,i,e){const{props:a,children:n,component:t}=s,{props:l,children:r,patchFlag:h}=i,p=t.emitsOptions;if(i.dirs||i.transition)return!0;if(e&&h>=0){if(h&1024)return!0;if(h&16)return a?eg(a,l,p):!!l;if(h&8){const k=i.dynamicProps;for(let d=0;d<k.length;d++){const o=k[d];if(l[o]!==a[o]&&!ap(p,o))return!0}}}else return(n||r)&&(!r||!r.$stable)?!0:a===l?!1:a?l?eg(a,l,p):!0:!!l;return!1}function eg(s,i,e){const a=Object.keys(i);if(a.length!==Object.keys(s).length)return!0;for(let n=0;n<a.length;n++){const t=a[n];if(i[t]!==s[t]&&!ap(e,t))return!0}return!1}function t4({vnode:s,parent:i},e){for(;i;){const a=i.subTree;if(a.suspense&&a.suspense.activeBranch===s&&(a.el=s.el),a===s)(s=i.vnode).el=e,i=i.parent;else break}}const l4=s=>s.__isSuspense;function r4(s,i){i&&i.pendingBranch?_s(s)?i.effects.push(...s):i.effects.push(s):Pm(s)}const Ds=Symbol.for("v-fgt"),Wa=Symbol.for("v-txt"),wi=Symbol.for("v-cmt"),Zn=Symbol.for("v-stc"),ll=[];let zi=null;function hs(s=!1){ll.push(zi=s?null:[])}function Pv(){ll.pop(),zi=ll[ll.length-1]||null}let rt=1;function ag(s,i=!1){rt+=s,s<0&&zi&&i&&(zi.hasOnce=!0)}function h4(s){return s.dynamicChildren=rt>0?zi||Un:null,Pv(),rt>0&&zi&&zi.push(s),s}function us(s,i,e,a,n,t){return h4(G(s,i,e,a,n,t,!0))}function ri(s,i,e,a,n){return h4(Bs(s,i,e,a,n,!0))}function fl(s){return s?s.__v_isVNode===!0:!1}function un(s,i){return s.type===i.type&&s.key===i.key}const p4=({key:s})=>s??null,ih=({ref:s,ref_key:i,ref_for:e})=>(typeof s=="number"&&(s=""+s),s!=null?ei(s)||ti(s)||xs(s)?{i:fi,r:s,k:i,f:!!e}:s:null);function G(s,i=null,e=null,a=0,n=null,t=s===Ds?0:1,l=!1,r=!1){const h={__v_isVNode:!0,__v_skip:!0,type:s,props:i,key:i&&p4(i),ref:i&&ih(i),scopeId:Ey,slotScopeIds:null,children:e,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:t,patchFlag:a,dynamicProps:n,dynamicChildren:null,appContext:null,ctx:fi};return r?(Au(h,e),t&128&&s.normalize(h)):e&&(h.shapeFlag|=ei(e)?8:16),rt>0&&!l&&zi&&(h.patchFlag>0||t&6)&&h.patchFlag!==32&&zi.push(h),h}const Bs=Lv;function Lv(s,i=null,e=null,a=0,n=null,t=!1){if((!s||s===Ny)&&(s=wi),fl(s)){const r=Xa(s,i,!0);return e&&Au(r,e),rt>0&&!t&&zi&&(r.shapeFlag&6?zi[zi.indexOf(s)]=r:zi.push(r)),r.patchFlag=-2,r}if(Gv(s)&&(s=s.__vccOpts),i){i=Nv(i);let{class:r,style:h}=i;r&&!ei(r)&&(i.class=Ps(r)),Zs(h)&&(pu(h)&&!_s(h)&&(h=Fi({},h)),i.style=gi(h))}const l=ei(s)?1:l4(s)?128:by(s)?64:Zs(s)?4:xs(s)?2:0;return G(s,i,e,a,n,l,t,!0)}function Nv(s){return s?pu(s)||Wy(s)?Fi({},s):s:null}function Xa(s,i,e=!1,a=!1){const{props:n,ref:t,patchFlag:l,children:r,transition:h}=s,p=i?yu(n||{},i):n,k={__v_isVNode:!0,__v_skip:!0,type:s.type,props:p,key:p&&p4(p),ref:i&&i.ref?e&&t?_s(t)?t.concat(ih(i)):[t,ih(i)]:ih(i):t,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:r,target:s.target,targetStart:s.targetStart,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:i&&s.type!==Ds?l===-1?16:l|16:l,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:h,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&Xa(s.ssContent),ssFallback:s.ssFallback&&Xa(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return h&&a&&Dn(k,h.clone(k)),k}function ki(s=" ",i=0){return Bs(Wa,null,s,i)}function ha(s,i){const e=Bs(Zn,null,s);return e.staticCount=i,e}function ys(s="",i=!1){return i?(hs(),ri(wi,null,s)):Bs(wi,null,s)}function ue(s){return s==null||typeof s=="boolean"?Bs(wi):_s(s)?Bs(Ds,null,s.slice()):fl(s)?La(s):Bs(Wa,null,String(s))}function La(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:Xa(s)}function Au(s,i){let e=0;const{shapeFlag:a}=s;if(i==null)i=null;else if(_s(i))e=16;else if(typeof i=="object")if(a&65){const n=i.default;n&&(n._c&&(n._d=!1),Au(s,n()),n._c&&(n._d=!0));return}else{e=32;const n=i._;!n&&!Wy(i)?i._ctx=fi:n===3&&fi&&(fi.slots._===1?i._=1:(i._=2,s.patchFlag|=1024))}else xs(i)?(i={default:i,_ctx:fi},e=32):(i=String(i),a&64?(e=16,i=[ki(i)]):e=8);s.children=i,s.shapeFlag|=e}function yu(...s){const i={};for(let e=0;e<s.length;e++){const a=s[e];for(const n in a)if(n==="class")i.class!==a.class&&(i.class=Ps([i.class,a.class]));else if(n==="style")i.style=gi([i.style,a.style]);else if(Kl(n)){const t=i[n],l=a[n];l&&t!==l&&!(_s(t)&&t.includes(l))&&(i[n]=t?[].concat(t,l):l)}else n!==""&&(i[n]=a[n])}return i}function de(s,i,e,a=null){be(s,i,7,[e,a])}const Mv=Hy();let Vv=0;function $v(s,i,e){const a=s.type,n=(i?i.appContext:s.appContext)||Mv,t={uid:Vv++,vnode:s,type:a,parent:i,appContext:n,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new ZA(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:i?i.provides:Object.create(n.provides),ids:i?i.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Yy(a,n),emitsOptions:n4(a,n),emit:null,emitted:null,propsDefaults:Js,inheritAttrs:a.inheritAttrs,ctx:Js,data:Js,props:Js,attrs:Js,slots:Js,refs:Js,setupState:Js,setupContext:null,suspense:e,suspenseId:e?e.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return t.ctx={_:t},t.root=i?i.root:t,t.emit=Sv.bind(null,t),s.ce&&s.ce(t),t}let Ai=null;const pe=()=>Ai||fi;let bh,Kd;{const s=Xh(),i=(e,a)=>{let n;return(n=s[e])||(n=s[e]=[]),n.push(a),t=>{n.length>1?n.forEach(l=>l(t)):n[0](t)}};bh=i("__VUE_INSTANCE_SETTERS__",e=>Ai=e),Kd=i("__VUE_SSR_SETTERS__",e=>ht=e)}const sr=s=>{const i=Ai;return bh(s),s.scope.on(),()=>{s.scope.off(),bh(i)}},ng=()=>{Ai&&Ai.scope.off(),bh(null)};function k4(s){return s.vnode.shapeFlag&4}let ht=!1;function zv(s,i=!1,e=!1){i&&Kd(i);const{props:a,children:n}=s.vnode,t=k4(s);yv(s,a,t,i),Fv(s,n,e);const l=t?qv(s,i):void 0;return i&&Kd(!1),l}function qv(s,i){const e=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,rv);const{setup:a}=e;if(a){Fa();const n=s.setupContext=a.length>1?o4(s):null,t=sr(s),l=_t(a,s,0,[s.props,n]),r=UA(l);if(Ea(),t(),(r||s.sp)&&!vn(s)&&cu(s),r){if(l.then(ng,ng),i)return l.then(h=>{tg(s,h)}).catch(h=>{Jl(h,s,0)});s.asyncDep=l}else tg(s,l)}else d4(s)}function tg(s,i,e){xs(i)?s.type.__ssrInlineRender?s.ssrRender=i:s.render=i:Zs(i)&&(s.devtoolsRawSetupState=i,s.setupState=gy(i)),d4(s)}function d4(s,i,e){const a=s.type;s.render||(s.render=a.render||qe);{const n=sr(s);Fa();try{dv(s)}finally{Ea(),n()}}}const Hv={get(s,i){return Ii(s,"get",""),s[i]}};function o4(s){const i=e=>{s.exposed=e||{}};return{attrs:new Proxy(s.attrs,Hv),slots:s.slots,emit:s.emit,expose:i}}function np(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(gy(Yn(s.exposed)),{get(i,e){if(e in i)return i[e];if(e in tl)return tl[e](s)},has(i,e){return e in i||e in tl}})):s.proxy}const jv=/(?:^|[-_])(\w)/g,Uv=s=>s.replace(jv,i=>i.toUpperCase()).replace(/[-_]/g,"");function u4(s,i=!0){return xs(s)?s.displayName||s.name:s.name||i&&s.__name}function c4(s,i,e=!1){let a=u4(i);if(!a&&i.__file){const n=i.__file.match(/([^/\\]+)\.\w+$/);n&&(a=n[1])}if(!a&&s&&s.parent){const n=t=>{for(const l in t)if(t[l]===i)return l};a=n(s.components||s.parent.type.components)||n(s.appContext.components)}return a?Uv(a):e?"App":"Anonymous"}function Gv(s){return xs(s)&&"__vccOpts"in s}const V=(s,i)=>_m(s,i,ht);function B(s,i,e){const a=arguments.length;return a===2?Zs(i)&&!_s(i)?fl(i)?Bs(s,null,[i]):Bs(s,i):Bs(s,null,i):(a>3?e=Array.prototype.slice.call(arguments,2):a===3&&fl(e)&&(e=[e]),Bs(s,i,e))}function Wv(s,i){const e=s.memo;if(e.length!=i.length)return!1;for(let a=0;a<e.length;a++)if(Aa(e[a],i[a]))return!1;return rt>0&&zi&&zi.push(s),!0}const lg="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Yd;const rg=typeof window<"u"&&window.trustedTypes;if(rg)try{Yd=rg.createPolicy("vue",{createHTML:s=>s})}catch{}const g4=Yd?s=>Yd.createHTML(s):s=>s,Kv="http://www.w3.org/2000/svg",Yv="http://www.w3.org/1998/Math/MathML",la=typeof document<"u"?document:null,hg=la&&la.createElement("template"),Xv={insert:(s,i,e)=>{i.insertBefore(s,e||null)},remove:s=>{const i=s.parentNode;i&&i.removeChild(s)},createElement:(s,i,e,a)=>{const n=i==="svg"?la.createElementNS(Kv,s):i==="mathml"?la.createElementNS(Yv,s):e?la.createElement(s,{is:e}):la.createElement(s);return s==="select"&&a&&a.multiple!=null&&n.setAttribute("multiple",a.multiple),n},createText:s=>la.createTextNode(s),createComment:s=>la.createComment(s),setText:(s,i)=>{s.nodeValue=i},setElementText:(s,i)=>{s.textContent=i},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>la.querySelector(s),setScopeId(s,i){s.setAttribute(i,"")},insertStaticContent(s,i,e,a,n,t){const l=e?e.previousSibling:i.lastChild;if(n&&(n===t||n.nextSibling))for(;i.insertBefore(n.cloneNode(!0),e),!(n===t||!(n=n.nextSibling)););else{hg.innerHTML=g4(a==="svg"?`<svg>${s}</svg>`:a==="mathml"?`<math>${s}</math>`:s);const r=hg.content;if(a==="svg"||a==="mathml"){const h=r.firstChild;for(;h.firstChild;)r.appendChild(h.firstChild);r.removeChild(h)}i.insertBefore(r,e)}return[l?l.nextSibling:i.firstChild,e?e.previousSibling:i.lastChild]}},Da="transition",Lt="animation",pt=Symbol("_vtc"),B4={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},A4=Fi({},_y,B4),Zv=s=>(s.displayName="Transition",s.props=A4,s),wn=Zv((s,{slots:i})=>B(jm,y4(s),i)),pn=(s,i=[])=>{_s(s)?s.forEach(e=>e(...i)):s&&s(...i)},pg=s=>s?_s(s)?s.some(i=>i.length>1):s.length>1:!1;function y4(s){const i={};for(const w in s)w in B4||(i[w]=s[w]);if(s.css===!1)return i;const{name:e="v",type:a,duration:n,enterFromClass:t=`${e}-enter-from`,enterActiveClass:l=`${e}-enter-active`,enterToClass:r=`${e}-enter-to`,appearFromClass:h=t,appearActiveClass:p=l,appearToClass:k=r,leaveFromClass:d=`${e}-leave-from`,leaveActiveClass:o=`${e}-leave-active`,leaveToClass:u=`${e}-leave-to`}=s,c=Jv(n),A=c&&c[0],g=c&&c[1],{onBeforeEnter:f,onEnter:m,onEnterCancelled:y,onLeave:v,onLeaveCancelled:_,onBeforeAppear:S=f,onAppear:N=m,onAppearCancelled:T=y}=i,C=(w,z,b,$)=>{w._enterCancelled=$,Sa(w,z?k:r),Sa(w,z?p:l),b&&b()},I=(w,z)=>{w._isLeaving=!1,Sa(w,d),Sa(w,u),Sa(w,o),z&&z()},O=w=>(z,b)=>{const $=w?N:m,R=()=>C(z,w,b);pn($,[z,R]),kg(()=>{Sa(z,w?h:t),Pe(z,w?k:r),pg($)||dg(z,a,A,R)})};return Fi(i,{onBeforeEnter(w){pn(f,[w]),Pe(w,t),Pe(w,l)},onBeforeAppear(w){pn(S,[w]),Pe(w,h),Pe(w,p)},onEnter:O(!1),onAppear:O(!0),onLeave(w,z){w._isLeaving=!0;const b=()=>I(w,z);Pe(w,d),w._enterCancelled?(Pe(w,o),Xd()):(Xd(),Pe(w,o)),kg(()=>{w._isLeaving&&(Sa(w,d),Pe(w,u),pg(v)||dg(w,a,g,b))}),pn(v,[w,b])},onEnterCancelled(w){C(w,!1,void 0,!0),pn(y,[w])},onAppearCancelled(w){C(w,!0,void 0,!0),pn(T,[w])},onLeaveCancelled(w){I(w),pn(_,[w])}})}function Jv(s){if(s==null)return null;if(Zs(s))return[sk(s.enter),sk(s.leave)];{const i=sk(s);return[i,i]}}function sk(s){return z1(s)}function Pe(s,i){i.split(/\s+/).forEach(e=>e&&s.classList.add(e)),(s[pt]||(s[pt]=new Set)).add(i)}function Sa(s,i){i.split(/\s+/).forEach(a=>a&&s.classList.remove(a));const e=s[pt];e&&(e.delete(i),e.size||(s[pt]=void 0))}function kg(s){requestAnimationFrame(()=>{requestAnimationFrame(s)})}let Qv=0;function dg(s,i,e,a){const n=s._endId=++Qv,t=()=>{n===s._endId&&a()};if(e!=null)return setTimeout(t,e);const{type:l,timeout:r,propCount:h}=f4(s,i);if(!l)return a();const p=l+"end";let k=0;const d=()=>{s.removeEventListener(p,o),t()},o=u=>{u.target===s&&++k>=h&&d()};setTimeout(()=>{k<h&&d()},r+1),s.addEventListener(p,o)}function f4(s,i){const e=window.getComputedStyle(s),a=c=>(e[c]||"").split(", "),n=a(`${Da}Delay`),t=a(`${Da}Duration`),l=og(n,t),r=a(`${Lt}Delay`),h=a(`${Lt}Duration`),p=og(r,h);let k=null,d=0,o=0;i===Da?l>0&&(k=Da,d=l,o=t.length):i===Lt?p>0&&(k=Lt,d=p,o=h.length):(d=Math.max(l,p),k=d>0?l>p?Da:Lt:null,o=k?k===Da?t.length:h.length:0);const u=k===Da&&/\b(transform|all)(,|$)/.test(a(`${Da}Property`).toString());return{type:k,timeout:d,propCount:o,hasTransform:u}}function og(s,i){for(;s.length<i.length;)s=s.concat(s);return Math.max(...i.map((e,a)=>ug(e)+ug(s[a])))}function ug(s){return s==="auto"?0:Number(s.slice(0,-1).replace(",","."))*1e3}function Xd(){return document.body.offsetHeight}function sF(s,i,e){const a=s[pt];a&&(i=(i?[i,...a]:[...a]).join(" ")),i==null?s.removeAttribute("class"):e?s.setAttribute("class",i):s.className=i}const Ch=Symbol("_vod"),m4=Symbol("_vsh"),gn={beforeMount(s,{value:i},{transition:e}){s[Ch]=s.style.display==="none"?"":s.style.display,e&&i?e.beforeEnter(s):Nt(s,i)},mounted(s,{value:i},{transition:e}){e&&i&&e.enter(s)},updated(s,{value:i,oldValue:e},{transition:a}){!i!=!e&&(a?i?(a.beforeEnter(s),Nt(s,!0),a.enter(s)):a.leave(s,()=>{Nt(s,!1)}):Nt(s,i))},beforeUnmount(s,{value:i}){Nt(s,i)}};function Nt(s,i){s.style.display=i?s[Ch]:"none",s[m4]=!i}const iF=Symbol(""),eF=/(^|;)\s*display\s*:/;function aF(s,i,e){const a=s.style,n=ei(e);let t=!1;if(e&&!n){if(i)if(ei(i))for(const l of i.split(";")){const r=l.slice(0,l.indexOf(":")).trim();e[r]==null&&eh(a,r,"")}else for(const l in i)e[l]==null&&eh(a,l,"");for(const l in e)l==="display"&&(t=!0),eh(a,l,e[l])}else if(n){if(i!==e){const l=a[iF];l&&(e+=";"+l),a.cssText=e,t=eF.test(e)}}else i&&s.removeAttribute("style");Ch in s&&(s[Ch]=t?a.display:"",s[m4]&&(a.display="none"))}const cg=/\s*!important$/;function eh(s,i,e){if(_s(e))e.forEach(a=>eh(s,i,a));else if(e==null&&(e=""),i.startsWith("--"))s.setProperty(i,e);else{const a=nF(s,i);cg.test(e)?s.setProperty(an(a),e.replace(cg,""),"important"):s[a]=e}}const gg=["Webkit","Moz","ms"],ik={};function nF(s,i){const e=ik[i];if(e)return e;let a=Wi(i);if(a!=="filter"&&a in s)return ik[i]=a;a=Xl(a);for(let n=0;n<gg.length;n++){const t=gg[n]+a;if(t in s)return ik[i]=t}return i}const Bg="http://www.w3.org/1999/xlink";function Ag(s,i,e,a,n,t=W1(i)){a&&i.startsWith("xlink:")?e==null?s.removeAttributeNS(Bg,i.slice(6,i.length)):s.setAttributeNS(Bg,i,e):e==null||t&&!eu(e)?s.removeAttribute(i):s.setAttribute(i,t?"":Ee(e)?String(e):e)}function yg(s,i,e,a,n){if(i==="innerHTML"||i==="textContent"){e!=null&&(s[i]=i==="innerHTML"?g4(e):e);return}const t=s.tagName;if(i==="value"&&t!=="PROGRESS"&&!t.includes("-")){const r=t==="OPTION"?s.getAttribute("value")||"":s.value,h=e==null?s.type==="checkbox"?"on":"":String(e);(r!==h||!("_value"in s))&&(s.value=h),e==null&&s.removeAttribute(i),s._value=e;return}let l=!1;if(e===""||e==null){const r=typeof s[i];r==="boolean"?e=eu(e):e==null&&r==="string"?(e="",l=!0):r==="number"&&(e=0,l=!0)}try{s[i]=e}catch{}l&&s.removeAttribute(n||i)}function Ha(s,i,e,a){s.addEventListener(i,e,a)}function tF(s,i,e,a){s.removeEventListener(i,e,a)}const fg=Symbol("_vei");function lF(s,i,e,a,n=null){const t=s[fg]||(s[fg]={}),l=t[i];if(a&&l)l.value=a;else{const[r,h]=rF(i);if(a){const p=t[i]=kF(a,n);Ha(s,r,p,h)}else l&&(tF(s,r,l,h),t[i]=void 0)}}const mg=/(?:Once|Passive|Capture)$/;function rF(s){let i;if(mg.test(s)){i={};let a;for(;a=s.match(mg);)s=s.slice(0,s.length-a[0].length),i[a[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):an(s.slice(2)),i]}let ek=0;const hF=Promise.resolve(),pF=()=>ek||(hF.then(()=>ek=0),ek=Date.now());function kF(s,i){const e=a=>{if(!a._vts)a._vts=Date.now();else if(a._vts<=e.attached)return;be(dF(a,e.value),i,5,[a])};return e.value=s,e.attached=pF(),e}function dF(s,i){if(_s(i)){const e=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{e.call(s),s._stopped=!0},i.map(a=>n=>!n._stopped&&a&&a(n))}else return i}const vg=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,oF=(s,i,e,a,n,t)=>{const l=n==="svg";i==="class"?sF(s,a,l):i==="style"?aF(s,e,a):Kl(i)?Qo(i)||lF(s,i,e,a,t):(i[0]==="."?(i=i.slice(1),!0):i[0]==="^"?(i=i.slice(1),!1):uF(s,i,a,l))?(yg(s,i,a),!s.tagName.includes("-")&&(i==="value"||i==="checked"||i==="selected")&&Ag(s,i,a,l,t,i!=="value")):s._isVueCE&&(/[A-Z]/.test(i)||!ei(a))?yg(s,Wi(i),a,t,i):(i==="true-value"?s._trueValue=a:i==="false-value"&&(s._falseValue=a),Ag(s,i,a,l))};function uF(s,i,e,a){if(a)return!!(i==="innerHTML"||i==="textContent"||i in s&&vg(i)&&xs(e));if(i==="spellcheck"||i==="draggable"||i==="translate"||i==="form"||i==="list"&&s.tagName==="INPUT"||i==="type"&&s.tagName==="TEXTAREA")return!1;if(i==="width"||i==="height"){const n=s.tagName;if(n==="IMG"||n==="VIDEO"||n==="CANVAS"||n==="SOURCE")return!1}return vg(i)&&ei(e)?!1:i in s}const v4=new WeakMap,F4=new WeakMap,_h=Symbol("_moveCb"),Fg=Symbol("_enterCb"),cF=s=>(delete s.props.mode,s),gF=cF({name:"TransitionGroup",props:Fi({},A4,{tag:String,moveClass:String}),setup(s,{slots:i}){const e=pe(),a=Cy();let n,t;return Py(()=>{if(!n.length)return;const l=s.moveClass||`${s.name||"v"}-move`;if(!fF(n[0].el,e.vnode.el,l))return;n.forEach(BF),n.forEach(AF);const r=n.filter(yF);Xd(),r.forEach(h=>{const p=h.el,k=p.style;Pe(p,l),k.transform=k.webkitTransform=k.transitionDuration="";const d=p[_h]=o=>{o&&o.target!==p||(!o||/transform$/.test(o.propertyName))&&(p.removeEventListener("transitionend",d),p[_h]=null,Sa(p,l))};p.addEventListener("transitionend",d)})}),()=>{const l=Os(s),r=y4(l);let h=l.tag||Ds;if(n=[],t)for(let p=0;p<t.length;p++){const k=t[p];k.el&&k.el instanceof Element&&(n.push(k),Dn(k,Al(k,r,a,e)),v4.set(k,k.el.getBoundingClientRect()))}t=i.default?uu(i.default()):[];for(let p=0;p<t.length;p++){const k=t[p];k.key!=null&&Dn(k,Al(k,r,a,e))}return Bs(h,null,t)}}}),E4=gF;function BF(s){const i=s.el;i[_h]&&i[_h](),i[Fg]&&i[Fg]()}function AF(s){F4.set(s,s.el.getBoundingClientRect())}function yF(s){const i=v4.get(s),e=F4.get(s),a=i.left-e.left,n=i.top-e.top;if(a||n){const t=s.el.style;return t.transform=t.webkitTransform=`translate(${a}px,${n}px)`,t.transitionDuration="0s",s}}function fF(s,i,e){const a=s.cloneNode(),n=s[pt];n&&n.forEach(r=>{r.split(/\s+/).forEach(h=>h&&a.classList.remove(h))}),e.split(/\s+/).forEach(r=>r&&a.classList.add(r)),a.style.display="none";const t=i.nodeType===1?i:i.parentNode;t.appendChild(a);const{hasTransform:l}=f4(a);return t.removeChild(a),l}const kt=s=>{const i=s.props["onUpdate:modelValue"]||!1;return _s(i)?e=>sh(i,e):i};function mF(s){s.target.composing=!0}function Eg(s){const i=s.target;i.composing&&(i.composing=!1,i.dispatchEvent(new Event("input")))}const ya=Symbol("_assign"),vF={created(s,{modifiers:{lazy:i,trim:e,number:a}},n){s[ya]=kt(n);const t=a||n.props&&n.props.type==="number";Ha(s,i?"change":"input",l=>{if(l.target.composing)return;let r=s.value;e&&(r=r.trim()),t&&(r=Ah(r)),s[ya](r)}),e&&Ha(s,"change",()=>{s.value=s.value.trim()}),i||(Ha(s,"compositionstart",mF),Ha(s,"compositionend",Eg),Ha(s,"change",Eg))},mounted(s,{value:i}){s.value=i??""},beforeUpdate(s,{value:i,oldValue:e,modifiers:{lazy:a,trim:n,number:t}},l){if(s[ya]=kt(l),s.composing)return;const r=(t||s.type==="number")&&!/^0\d/.test(s.value)?Ah(s.value):s.value,h=i??"";r!==h&&(document.activeElement===s&&s.type!=="range"&&(a&&i===e||n&&s.value.trim()===h)||(s.value=h))}},Re={deep:!0,created(s,i,e){s[ya]=kt(e),Ha(s,"change",()=>{const a=s._modelValue,n=ml(s),t=s.checked,l=s[ya];if(_s(a)){const r=au(a,n),h=r!==-1;if(t&&!h)l(a.concat(n));else if(!t&&h){const p=[...a];p.splice(r,1),l(p)}}else if(Ct(a)){const r=new Set(a);t?r.add(n):r.delete(n),l(r)}else l(C4(s,t))})},mounted:bg,beforeUpdate(s,i,e){s[ya]=kt(e),bg(s,i,e)}};function bg(s,{value:i,oldValue:e},a){s._modelValue=i;let n;if(_s(i))n=au(i,a.props.value)>-1;else if(Ct(i))n=i.has(a.props.value);else{if(i===e)return;n=Zl(i,C4(s,!0))}s.checked!==n&&(s.checked=n)}const b4={deep:!0,created(s,{value:i,modifiers:{number:e}},a){const n=Ct(i);Ha(s,"change",()=>{const t=Array.prototype.filter.call(s.options,l=>l.selected).map(l=>e?Ah(ml(l)):ml(l));s[ya](s.multiple?n?new Set(t):t:t[0]),s._assigning=!0,qs(()=>{s._assigning=!1})}),s[ya]=kt(a)},mounted(s,{value:i}){Cg(s,i)},beforeUpdate(s,i,e){s[ya]=kt(e)},updated(s,{value:i}){s._assigning||Cg(s,i)}};function Cg(s,i){const e=s.multiple,a=_s(i);if(!(e&&!a&&!Ct(i))){for(let n=0,t=s.options.length;n<t;n++){const l=s.options[n],r=ml(l);if(e)if(a){const h=typeof r;h==="string"||h==="number"?l.selected=i.some(p=>String(p)===String(r)):l.selected=au(i,r)>-1}else l.selected=i.has(r);else if(Zl(ml(l),i)){s.selectedIndex!==n&&(s.selectedIndex=n);return}}!e&&s.selectedIndex!==-1&&(s.selectedIndex=-1)}}function ml(s){return"_value"in s?s._value:s.value}function C4(s,i){const e=i?"_trueValue":"_falseValue";return e in s?s[e]:i}const FF=["ctrl","shift","alt","meta"],EF={stop:s=>s.stopPropagation(),prevent:s=>s.preventDefault(),self:s=>s.target!==s.currentTarget,ctrl:s=>!s.ctrlKey,shift:s=>!s.shiftKey,alt:s=>!s.altKey,meta:s=>!s.metaKey,left:s=>"button"in s&&s.button!==0,middle:s=>"button"in s&&s.button!==1,right:s=>"button"in s&&s.button!==2,exact:(s,i)=>FF.some(e=>s[`${e}Key`]&&!i.includes(e))},_4=(s,i)=>{const e=s._withMods||(s._withMods={}),a=i.join(".");return e[a]||(e[a]=(n,...t)=>{for(let l=0;l<i.length;l++){const r=EF[i[l]];if(r&&r(n,i))return}return s(n,...t)})},bF=Fi({patchProp:oF},Xv);let ak,_g=!1;function CF(){return ak=_g?ak:bv(bF),_g=!0,ak}const _F=(...s)=>{const i=CF().createApp(...s),{mount:e}=i;return i.mount=a=>{const n=wF(a);if(n)return e(n,!0,DF(n))},i};function DF(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function wF(s){return ei(s)?document.querySelector(s):s}var ir=s=>/^[a-z][a-z0-9+.-]*:/.test(s)||s.startsWith("//"),xF=/.md((\?|#).*)?$/,fu=(s,i="/")=>ir(s)||s.startsWith("/")&&!s.startsWith(i)&&!xF.test(s),nn=s=>/^(https?:)?\/\//.test(s),Dg=s=>{if(!s||s.endsWith("/"))return s;let i=s.replace(/(^|\/)README.md$/i,"$1index.html");return i.endsWith(".md")?i=`${i.substring(0,i.length-3)}.html`:i.endsWith(".html")||(i=`${i}.html`),i.endsWith("/index.html")&&(i=i.substring(0,i.length-10)),i},TF="http://.",SF=(s,i)=>{if(!s.startsWith("/")&&i){const e=i.slice(0,i.lastIndexOf("/"));return Dg(new URL(`${e}/${s}`,TF).pathname)}return Dg(s)},IF=(s,i)=>{const e=Object.keys(s).sort((a,n)=>{const t=n.split("/").length-a.split("/").length;return t!==0?t:n.length-a.length});for(const a of e)if(i.startsWith(a))return a;return"/"},RF=/(#|\?)/,D4=s=>{const[i,...e]=s.split(RF);return{pathname:i,hashAndQueries:e.join("")}},OF=["link","meta","script","style","noscript","template"],PF=["title","base"],LF=([s,i,e])=>PF.includes(s)?s:OF.includes(s)?s==="meta"&&i.name?`${s}.${i.name}`:s==="template"&&i.id?`${s}.${i.id}`:JSON.stringify([s,Object.entries(i).map(([a,n])=>typeof n=="boolean"?n?[a,""]:null:[a,n]).filter(a=>a!=null).sort(([a],[n])=>a.localeCompare(n)),e]):null,NF=s=>{const i=new Set,e=[];return s.forEach(a=>{const n=LF(a);n&&!i.has(n)&&(i.add(n),e.push(a))}),e},MF=s=>s.startsWith("/")?s:`/${s}`,mu=s=>s.endsWith("/")||s.endsWith(".html")?s:`${s}/`,vu=s=>s.endsWith("/")?s.slice(0,-1):s,w4=s=>s.startsWith("/")?s.slice(1):s,VF=s=>typeof s=="function",er=s=>Object.prototype.toString.call(s)==="[object Object]",li=s=>typeof s=="string";const $F=JSON.parse("{}"),zF=Object.fromEntries([["/",{loader:()=>F(()=>import("./index.html-DDsMqXsK.js"),[]),meta:{date:1745158063e3,excerpt:`
<div align="center">
    <img src="https://github.com/sunface/rust-course/blob/main/assets/banner.jpg?raw=true">
</div>
<div align="center">
<p><a href="https://github.com/rustlang-cn" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/RustCn社区-orange" alt="studyrut" loading="lazy"></a> <a href="https://github.com/sunface/rust-course/stargazers" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/stars/sunface/rust-course?style=flat" alt="Stars Count" loading="lazy"></a><br>
<a href="https://github.com/sunface/rust-course/issues" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/issues-pr-closed-raw/sunface/rust-course.svg?style=flat" alt="" loading="lazy"></a><br>
<a href="https://mybinder.org/v2/gh/ines/spacy-course/master" target="_blank" rel="noopener noreferrer"><img src="https://mybinder.org/badge_logo.svg" alt="Binder" loading="lazy"></a></p>
<!-- <a href="https://www.zhihu.com/column/c_1452781034895446017">
  <img alt="Sunface | 知乎" height="20px" width="20px" src="https://github.com/sunface/rust-course/blob/main/assets/zhihu.jpg">
</a> -->
</div>`,readingTime:{minutes:4.59,words:1378},title:"",type:"article",s:"/"}}],["/src/SUMMARY.html",{loader:()=>F(()=>import("./SUMMARY.html-DOE6LRuR.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><a href="/rust-course/src/about-book.html" target="_blank">关于本书</a><br>
<a href="/rust-course/src/into-rust.html" target="_blank">进入 Rust 编程世界</a><br>
<a href="/rust-course/src/first-try/sth-you-should-not-do.html" target="_blank">避免从入门到放弃</a></p>
<!-- [快速查询入口](index-list.md) 暂时屏蔽-->
<p><a href="/rust-course/src/community.html" target="_blank">社区和锈书</a></p>`,readingTime:{minutes:8.61,words:2584},title:"Rust 语言圣经",type:"article"}}],["/src/about-book.html",{loader:()=>F(()=>import("./about-book.html-DhI5Ub79.js"),[]),meta:{date:1745158063e3,excerpt:`<img src="https://github.com/sunface/rust-course/blob/main/assets/banner.jpg?raw=true">
<p>Rust 语言真的好：连续八年成为全世界最受欢迎的语言、没有 GC 也无需手动内存管理、性能比肩 C++/C 还能直接调用它们的代码、安全性极高 - 总有公司说使用 Rust 后以前的大部分 bug 都将自动消失、全世界最好的包管理工具 Cargo 等等。但...</p>
<p><strong>有人说: "Rust 太难了，学了也没用"</strong></p>
<p>对于后面一句话我们持保留意见，如果以找工作为标准，那国内环境确实还不好，但如果你想成为更优秀的程序员或者是玩转开源，那 Rust 还真是不错的选择，具体原因见<a href="https://course.rs/into-rust.html" target="_blank" rel="noopener noreferrer">下一章</a>。</p>`,readingTime:{minutes:3.27,words:982},title:"",type:"article",s:"about-book"}}],["/src/beat-ai.html",{loader:()=>F(()=>import("./beat-ai.html-BJQBVoiU.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Beat AI</h2>
<p>专属于软件开发工程师的 AI 入门圣经。从神经网络到大模型，从高层设计到微观原理，从工程实现到算法，学完后，你会发现 AI 也并不是想象中那么高不可攀、无法战胜，Just beat it !</p>
<ul>
<li>官方地址: <a href="https://github.com/sunface/beat-ai" target="_blank" rel="noopener noreferrer">https://github.com/sunface/beat-ai</a></li>
</ul>
<h2>目前进度</h2>
<p>准备开始动笔，预计在 2024.08 之前会完成基本的章节。</p>`,readingTime:{minutes:1.24,words:371},title:"",type:"article",s:"beat-ai"}}],["/src/community.html",{loader:()=>F(()=>import("./community.html-Bxw7sZ9C.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Rust语言中文网</h2>
<img src="https://github.com/rustlang-cn/.github/blob/main/assets/cover.jpg?raw=true">
<h4 align="center">跟我来吧，学完 Rust，你的前面就是星辰大海！</h4>
<hr>
<p>这个社区与其它 Rust 社区有点不一样: 我们聚焦于 Rust 语言的学习研究和实战应用上，不搞花活！</p>
<ul>
<li>
<p>RustCn 微信交流群<br>
<img src="https://github.com/sunface/rust-course/assets/7036754/a84ec7e5-30b1-48da-9352-95503aa61a8f" width="200"></p>
</li>
<li>
<p>公众号: <code>Rust语言中文网</code></p>
</li>
</ul>`,readingTime:{minutes:1.1,words:329},title:"",type:"article",s:"community"}}],["/src/github.html",{loader:()=>F(()=>import("./github.html-oWR7J2MR.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:0,words:1},title:"GitHub",type:"article"}}],["/src/index-list.html",{loader:()=>F(()=>import("./index-list.html-DtSakRfl.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>&lt;&lt;Rust 语言圣经&gt;&gt; 既然自诩为 Rust 日常开发工具书，那就得有工具书的样子，如果没有了快速索引查询的功能，也就没有了灵魂。</p>
<p>因此我们决定在这里提供一个对全书内容进行快速索引的途径。理论上来说，<strong>你想查的任何东西在这里都可以快速的被找到并能进入相应的章节查看详细的介绍</strong>。</p>
<p>可能大家会有疑问，不是有站内搜索功能嘛？是的，但是尴尬的是：首先它不支持中文，其次就算支持了中文，也一样不好用，我们需要的是快速精准地找到内容而不是模糊的查询内容。</p>
<h1>索引列表 doing</h1>
<p><a id="head"></a></p>`,readingTime:{minutes:16.61,words:4983},title:"快速查询入口",type:"article"}}],["/src/into-rust.html",{loader:()=>F(()=>import("./into-rust.html-1VbArY5G.js"),[]),meta:{date:1745158063e3,excerpt:`<img src="https://pic1.zhimg.com/80/v2-e9cfbd08d2ebca51b588d1beaed3c0dd_1440w.jpg">
<div align="center">正在努力学 Rust 的 Ferris</div>
<br>
<h2>Rust 发展历程</h2>
<p>Rust 最早是 Mozilla 雇员 Graydon Hoare 的个人项目。从 2009 年开始，得到了 Mozilla 研究院的资助，2010 年项目对外公布，2010 ～ 2011 年间实现自举。自此以后，Rust 在部分重构 -&gt; 崩溃的边缘反复横跳（历程极其艰辛），终于，在 2015 年 5 月 15 日发布 1.0 版。</p>`,readingTime:{minutes:13.24,words:3973},title:"",type:"article",s:"into-rust"}}],["/src/practice.html",{loader:()=>F(()=>import("./practice.html-BPIfVoYN.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>课后习题</h2>
<p><a href="https://practice.rs" target="_blank" rel="noopener noreferrer">https://practice.rs</a></p>
`,readingTime:{minutes:.03,words:8},title:"",type:"article",s:"practice"}}],["/src/rust-weekly.html",{loader:()=>F(()=>import("./rust-weekly.html-DUNHIfYO.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust语言周刊精选全世界过去一周(或者几周)的优秀文章、新闻、开源项目和语言动态。</p>
<p>本周刊由 RustCn 倾情打造，其中， <code>[Zh]</code> 标识的中文资料由 Rust 翻译计划提供，并且原始的 Markdown 文档已<a href="https://github.com/rustlang-cn/rustt" target="_blank" rel="noopener noreferrer">全部开源</a>，欢迎大家阅读和订阅。</p>
<blockquote>
<p>RustCn：https://hirust.cn, 公众号: Rust语言中文网</p>
</blockquote>`,readingTime:{minutes:5.88,words:1764},title:"「Rust 语言周刊」 第 17 期 · 2022-07-15",type:"article"}}],["/src/rustt.html",{loader:()=>F(()=>import("./rustt.html-BQf1l6iI.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>🥇Rustt 翻译计划，这里有国内最优质、最实时的 Rust 技术文章、学习资料和新闻资讯，欢迎大家<a href="https://github.com/studyrs/Rustt" target="_blank" rel="noopener noreferrer">前往阅读和订阅</a>。</p>
<h2>最近优秀作品展</h2>
<table>
<thead>
<tr>
<th>中文名</th>
<th>翻译时间</th>
<th>作者</th>
</tr>
</thead>
<tbody>
<tr>
<td>[series]<a href="https://github.com/studyrs/Rustt/tree/main/Articles/%5B2022-04-03%5D%20Rust%20%E5%85%AD%E8%BE%B9%E5%BD%A2%E6%9E%B6%E6%9E%84" target="_blank" rel="noopener noreferrer">Rust 六边形架构</a></td>
<td>2022-04-04</td>
<td><a href="https://github.com/trdthg" target="_blank" rel="noopener noreferrer">trdthg</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-04-02%5D%20%E7%94%A8%20Rust%20%E5%86%99%20DevOps%20%E5%B7%A5%E5%85%B7.md" target="_blank" rel="noopener noreferrer">用 Rust 写 Devops 工具</a></td>
<td>2022-04-03</td>
<td><a href="https://github.com/lxbwolf" target="_blank" rel="noopener noreferrer">Xiaobin.Liu</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-04-02%5D%20Rust%20%E5%A4%A7%E4%BD%AC%E7%BB%99%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E5%AD%A6%E4%B9%A0%E5%BB%BA%E8%AE%AE.md" target="_blank" rel="noopener noreferrer">Rust 大佬给初学者的学习建议</a></td>
<td>2022-04-02</td>
<td><a href="https://github.com/asur4s" target="_blank" rel="noopener noreferrer">Asura</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-04-01%5D%20Rust%20%E8%83%8C%E5%90%8E%E5%B9%B6%E4%B8%8D%E6%98%AF%E5%85%AC%E5%8F%B8.md" target="_blank" rel="noopener noreferrer">Rust 背后并不是公司</a></td>
<td>2022-04-01</td>
<td><a href="https://github.com/allenli178" target="_blank" rel="noopener noreferrer">子殊</a></td>
</tr>
<tr>
<td><a href="https://github.com/studyrs/Rustt/blob/main/Articles/%5B2022-03-29%5D%20%E5%9C%A8%20Rust%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20epoll%20%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E7%9A%84%E9%9D%9E%E9%98%BB%E5%A1%9E%20IO.md" target="_blank" rel="noopener noreferrer">在 Rust 中使用 epoll 实现非阻塞 IO</a></td>
<td>2022-03-29</td>
<td><a href="https://github.com/hyuuko" target="_blank" rel="noopener noreferrer">BK0717</a></td>
</tr>
</tbody>
</table>`,readingTime:{minutes:.77,words:230},title:"Rustt 翻译计划",type:"article"}}],["/src/rusty-book.html",{loader:()=>F(()=>import("./rusty-book.html-BTJYRsoA.js"),[]),meta:{date:1745158063e3,excerpt:`
<div align="center">
    <img width="100%" src="https://github.com/studyrs/rusty-book/blob/main/assets/banner.gif?raw=true">
</div>
<div align="center">
</div>
<p>在 Rust 元宇宙，最优秀的项目可以称之为 <code>rusty</code>，用咱中国话来说，就是够锈( 秀 )。</p>
<p>如果你有以下需求，可以来看看锈书，它绝对不会让你失望：</p>
<ul>
<li>
<p>想要知道现在优秀的、关注度高的 Rust 项目有哪些</p>
</li>
<li>
<p>发现一些好玩、有趣、酷炫的开源库</p>
</li>
<li>
<p>需要寻找某个类型的库，例如，一个 HTTP 客户端或 ProtoBuffer 编码库，要求是好用、更新活跃、高质量</p>
</li>
<li>
<p>想要寻找常用操作的代码片段，用于熟悉 Rust 或者直接复制粘贴到自己的项目中，例如文件操作、数据库操作、HTTP 请求、排序算法、正则等</p>
</li>
</ul>`,readingTime:{minutes:.72,words:215},title:"",type:"article",s:"rusty-book"}}],["/src/some-thoughts.html",{loader:()=>F(()=>import("./some-thoughts.html-BSq0l0yT.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>经常关注新技术的同学，这两年应该都听说过可观测性这个概念，它包含了对 <strong>Metrics 指标、Log 日志以及 Trace 链路的监控</strong>，特别是针对这三个指标的<strong>深度关联</strong>，让监控数据不再孤立。</p>
<p>目前整个业界百花齐放，Prometheus、Jaeger、Opentelemetry 各种优秀的世界级开源产品覆盖了可观测性的方方面面，但是在可观测性的可视化方面还缺少一个大杀器，我们期待它能拥有以下特性：</p>
<ul>
<li>覆盖各种可观测性场景</li>
<li>拥有丰富可定制选项的图表组件和数据源</li>
<li>图表、页面之间的深度可定义交互</li>
<li>企业级的多租户、权限管理、导航菜单和全局状态管理</li>
<li>优秀的图表性能和交互体验</li>
<li>现代化的的 UI 设计，支持数据大屏，完美支持移动端</li>
<li>强大的可编程性及二次开发友好性</li>
<li>宽松的开源协议、丰富的文档和快速的社区响应支持</li>
</ul>`,readingTime:{minutes:3.25,words:975},title:"Datav: 可编程的数据可视化平台和可观测性平台",type:"article"}}],["/assets/rustlings-zh/CHANGELOG.html",{loader:()=>F(()=>import("./CHANGELOG.html--PNiC8u4.js"),[]),meta:{date:1745158063e3,excerpt:`<p><a name="4.6.0"></a></p>
<h2>4.6.0 (2021-09-25)</h2>
<h4>Features</h4>
<ul>
<li>add advanced_errs2 (<a href="https://github.com/rust-lang/rustlings/commit/abd6b70c72dc6426752ff41f09160b839e5c449e" target="_blank" rel="noopener noreferrer">abd6b70c</a>)</li>
<li>add advanced_errs1 (<a href="https://github.com/rust-lang/rustlings/commit/882d535ba8628d5e0b37e8664b3e2f26260b2671" target="_blank" rel="noopener noreferrer">882d535b</a>)</li>
<li>Add a farewell message when quitting <code>watch</code> (<a href="https://github.com/rust-lang/rustlings/commit/1caef0b43494c8b8cdd6c9260147e70d510f1aca" target="_blank" rel="noopener noreferrer">1caef0b4</a>)</li>
<li>add more watch commands (<a href="https://github.com/rust-lang/rustlings/commit/a7dc080b95e49146fbaafe6922a6de2f8cb1582a" target="_blank" rel="noopener noreferrer">a7dc080b</a>, closes <a href="https://github.com/rust-lang/rustlings/issues/842" target="_blank" rel="noopener noreferrer">#842</a>)</li>
<li><strong>modules:</strong>  update exercises, add modules3 (#822) (<a href="https://github.com/rust-lang/rustlings/commit/dfd2fab4f33d1bf59e2e5ee03123c0c9a67a9481" target="_blank" rel="noopener noreferrer">dfd2fab4</a>)</li>
<li><strong>quiz1:</strong>  add default function name in comment (#838) (<a href="https://github.com/rust-lang/rustlings/commit/0a11bad71402b5403143d642f439f57931278c07" target="_blank" rel="noopener noreferrer">0a11bad7</a>)</li>
</ul>`,readingTime:{minutes:8.17,words:2452},title:"",type:"article",s:"CHANGELOG"}}],["/assets/rustlings-zh/CONTRIBUTING.html",{loader:()=>F(()=>import("./CONTRIBUTING.html-CLGuUZ-p.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Contributing to Rustlings</h2>
<p>First off, thanks for taking the time to contribute!! ❤️</p>
<h3>Quick Reference</h3>
<p>I want to...</p>
<p><em>add an exercise! ➡️ <a href="#addex">read this</a> and then <a href="#prs">open a Pull Request</a></em></p>
<p><em>update an outdated exercise! ➡️ <a href="#prs">open a Pull Request</a></em></p>`,readingTime:{minutes:2.17,words:650},title:"",type:"article",s:"CONTRIBUTING"}}],["/assets/rustlings-zh/",{loader:()=>F(()=>import("./index.html-BRa9HIWx.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本项目是 <a href="https://github.com/rust-lang/rustlings" target="_blank" rel="noopener noreferrer">rustlings</a> 的中文翻译版。</p>
<h2>开始使用</h2>
<p><em>注意: 如果你在使用 macOS，确保已经安装了 Xcode 以及相应的开发者工具 <code>xcode-select --install</code>.</em></p>
<p>同时，你也需要安装Rust，具体参见&lt;&lt;精通Rust编程&gt;&gt;一书或者访问https://rustup.rs。</p>`,readingTime:{minutes:2.05,words:616},title:"rustlings-zh 🦀❤️",type:"article"}}],["/assets/writing-material/books.html",{loader:()=>F(()=>import("./books.html-W2TRK323.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>本书参考的书籍</h2>
<ol>
<li>
<p><a href="https://doc.rust-lang.org/book" target="_blank" rel="noopener noreferrer">Rust语言</a></p>
</li>
<li>
<p><a href="https://doc.rust-lang.org/cargo/index.html" target="_blank" rel="noopener noreferrer">Cargo教学</a></p>
</li>
<li>
<p><a href="https://nnethercote.github.io/perf-book/title-page.html" target="_blank" rel="noopener noreferrer">Rust性能之书</a></p>
</li>
<li>
<p><a href="https://rust-lang.github.io/async-book/01_getting_started/01_chapter.html" target="_blank" rel="noopener noreferrer">Rust异步编程</a></p>
</li>
<li>
<p><a href="https://rust-lang.github.io/api-guidelines/naming.html" target="_blank" rel="noopener noreferrer">Rust API Guidlines</a></p>
</li>
<li>
<p><a href="https://livebook.manning.com/book/rust-in-action/chapter-5/" target="_blank" rel="noopener noreferrer">Rust in action</a></p>
<ul>
<li><a href="https://github.com/barabadzhi/rust-in-action" target="_blank" rel="noopener noreferrer">示例</a></li>
</ul>
</li>
<li>
<p><a href="https://doc.rust-lang.org/nomicon/dot-operator.html" target="_blank" rel="noopener noreferrer">Rust nomicon</a></p>
</li>
<li>
<p><a href="https://forge.rust-lang.org/infra/other-installation-methods.html#other-rust-installation-methods" target="_blank" rel="noopener noreferrer">Rust Forge</a></p>
</li>
<li>
<p><a href="https://rustc-dev-guide.rust-lang.org/method-lookup.html" target="_blank" rel="noopener noreferrer">rustc开发者之书</a></p>
</li>
<li>
<p><a href="https://doc.rust-lang.org/1.6.0/style/README.html" target="_blank" rel="noopener noreferrer">Rust Style</a></p>
</li>
<li>
<p><a href="https://learning-rust.github.io/docs/a1.why_rust.html" target="_blank" rel="noopener noreferrer">Learning Rust</a></p>
</li>
<li>
<p><a href="https://doc.rust-lang.org/rustdoc/the-doc-attribute.html" target="_blank" rel="noopener noreferrer">Rust doc</a></p>
</li>
<li>
<p><a href="https://doc.rust-lang.org/stable/unstable-book/" target="_blank" rel="noopener noreferrer">Unstable Rust</a></p>
</li>
<li>
<p><a href="https://rust-fuzz.github.io/book/" target="_blank" rel="noopener noreferrer">Rust Fuzz Book</a></p>
</li>
</ol>`,readingTime:{minutes:.48,words:143},title:"",type:"article",s:"books"}}],["/assets/writing-material/courses.html",{loader:()=>F(()=>import("./courses.html-B4M2_fsq.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>可借鉴的课程形式</h2>
<p>https://www.reddit.com/r/rust/comments/rwp8mo/teaching_rust_at_the_university_of_warsaw/</p>
<h2>练习题</h2>
`,readingTime:{minutes:.04,words:13},title:"",type:"article",s:"courses"}}],["/assets/writing-material/demos_for_learning.html",{loader:()=>F(()=>import("./demos_for_learning.html-BVTsoQ-D.js"),[]),meta:{date:1745158063e3,excerpt:`<p>整理几个可以作为学习demo的项目，需要将注释和相关文档翻译成中文</p>
<ol>
<li><a href="https://github.com/tokio-rs/mini-redis" target="_blank" rel="noopener noreferrer">mini-redis</a></li>
</ol>
`,readingTime:{minutes:.12,words:36},title:"",type:"article",s:"demos_for_learning"}}],["/assets/writing-material/good-sourcecode.html",{loader:()=>F(()=>import("./good-sourcecode.html-DxypxQDz.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/rxfx85/good_rust_source_code/</p>
<p>https://www.reddit.com/r/rust/comments/rx8rom/rust_projects_where_you_learnt_a_ton_of_stuff/</p>
`,readingTime:{minutes:.04,words:12},title:"值得学习的源代码",type:"article"}}],["/assets/writing-material/%E8%AF%BB%E8%80%85%E7%96%91%E6%83%91%E7%9A%84%E7%82%B9%E8%AE%B0%E5%BD%95.html",{loader:()=>F(()=>import("./读者疑惑的点记录.html-CtArzjSh.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这里记录一些读者反馈的在阅读过程中，可能会导致疑惑或者困惑的点，后续针对这些地方，可以进行相应的内容优化。</p>
<ol>
<li>引用和切片的区别</li>
</ol>
`,readingTime:{minutes:.21,words:64},title:"读者疑惑的点",type:"article"}}],["/src/advance/errors.html",{loader:()=>F(()=>import("./errors.html-0k0l4yNa.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前的<a href="https://course.rs/basic/result-error/intro.html" target="_blank" rel="noopener noreferrer">返回值和错误处理</a>章节中，我们学习了几个重要的概念，例如 <code>Result</code> 用于返回结果处理，<code>?</code> 用于错误的传播，若大家对此还较为模糊，强烈建议回头温习下。</p>
<p>在本章节中一起来看看如何对 <code>Result</code> ( <code>Option</code> ) 做进一步的处理，以及如何定义自己的错误类型。</p>`,readingTime:{minutes:14.83,words:4449},title:"错误处理",type:"article"}}],["/src/advance/global-variable.html",{loader:()=>F(()=>import("./global-variable.html-Be8litTc.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在一些场景，我们可能需要全局变量来简化状态共享的代码，包括全局 ID，全局数据存储等等，下面一起来看看有哪些创建全局变量的方法。</p>
<p>首先，有一点可以肯定，全局变量的生命周期肯定是<code>'static</code>，但是不代表它需要用<code>static</code>来声明，例如常量、字符串字面值等无需使用<code>static</code>进行声明，原因是它们已经被打包到二进制可执行文件中。</p>
<p>下面我们从编译期初始化及运行期初始化两个类别来介绍下全局变量有哪些类型及该如何使用。</p>
<h2>编译期初始化</h2>
<p>我们大多数使用的全局变量都只需要在编译期初始化即可，例如静态配置、计数器、状态值等等。</p>`,readingTime:{minutes:9.11,words:2734},title:"全局变量",type:"article"}}],["/src/advance/hrtb.html",{loader:()=>F(()=>import("./hrtb.html-BLmPYG4T.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/s6g16d/help_with_hrtb_lifetimes/</p>
<h2>for&lt;'a&gt;</h2>
<p>https://www.reddit.com/r/rust/comments/rq43c6/generic_fn_impl_for_iterating_over_mut_items_twice/</p>
<p>https://www.reddit.com/r/rust/comments/6uobit/fora_lifetime_syntax/</p>
`,readingTime:{minutes:.05,words:16},title:"高阶特征约束(HRTB) todo",type:"article"}}],["/src/advance/intro.html",{loader:()=>F(()=>import("./intro.html-DvqQmYrt.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>恭喜你，学会 Rust 基础后，金丹大道已在向你招手，大部分 Rust 代码对你来说都是家常便饭，简单得很。可是，对于一门难度传言在外的语言，怎么可能如此简单的就被征服，最难的生命周期，咱还没见过长啥样呢。</p>
<p>从本章开始，我们将进入 Rust 的进阶学习环节，与基础环节不同的是，由于你已经对 Rust 有了一定的认识，因此我们<strong>不会再对很多细节进行翻来覆去的详细讲解，甚至会一带而过</strong>。</p>
<p>总之，欢迎来到高级 Rust 的世界，全新的 Boss，全新的装备，你准备好了吗？</p>
`,readingTime:{minutes:.62,words:186},title:"Rust 高级进阶",type:"article"}}],["/src/advance/macro.html",{loader:()=>F(()=>import("./macro.html-CUPPZrej.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在编程世界可以说是谈“宏”色变，原因在于 C 语言中的宏是非常危险的东东，但并不是所有语言都像 C 这样，例如对于古老的语言 Lisp 来说，宏就是就是一个非常强大的好帮手。</p>
<p>那话说回来，在 Rust 中宏到底是好是坏呢？本章将带你揭开它的神秘面纱。</p>
<p>事实上，我们虽然没有见过宏，但是已经多次用过它，例如在全书的第一个例子中就用到了：<code>println!("你好，世界")</code>，这里 <code>println!</code> 就是一个最常用的宏，可以看到它和函数最大的区别是：它在调用时多了一个 <code>!</code>，除此之外还有 <code>vec!</code> 、<code>assert_eq!</code> 都是相当常用的，可以说<strong>宏在 Rust 中无处不在</strong>。</p>`,readingTime:{minutes:21.92,words:6576},title:"Macro 宏编程",type:"article"}}],["/src/advance/simd.html",{loader:()=>F(()=>import("./simd.html-B_mezvMW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>由于 Rust 最新也是万众瞩目的 <code>Portable SIMD</code> 还没有完全成熟，只能在 <code>nightly</code> 版本中使用，因此功能上可能还存在变数，鉴于此，本文不会深入介绍在 Rust 中如何编写 SIMD 代码，而是将目光聚集在两个点上：何为 <code>SIMD</code> 以及关于 <code>Portable SIMD</code> 的简单介绍。</p>
`,readingTime:{minutes:.3,words:90},title:"SIMD",type:"article"}}],["/src/advance-practice/async.html",{loader:()=>F(()=>import("./async.html-COJdox3t.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在经过多个章节的深入学习后，Tokio 对我们来说不再是一座隐于云雾中的高山，它其实蛮简单好用的，甚至还有一丝丝的可爱!?</p>
<p>但从现在开始，如果想要进一步的深入 Tokio ，首先需要深入理解 <code>async</code> 的原理，其实我们在<a href="https://course.rs/async/intro.html" target="_blank" rel="noopener noreferrer">之前的章节</a>已经深入学习过，这里结合 Tokio 再来回顾下。</p>
<h2>Future</h2>
<p>先来回顾一下 <code>async fn</code> 异步函数 :</p>`,readingTime:{minutes:17.15,words:5144},title:"深入 Tokio 背后的异步原理",type:"article"}}],["/src/advance-practice/bridging-with-sync.html",{loader:()=>F(()=>import("./bridging-with-sync.html-CxX32FpC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>一些异步程序例如 tokio 指南 章节中的绝大多数例子，它们整个程序都是异步的，包括程序入口 <code>main</code> 函数：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">main]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.15,words:2446},title:"异步跟同步共存",type:"article"}}],["/src/advance-practice/channels.html",{loader:()=>F(()=>import("./channels.html-CaRcs70k.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>迄今为止，你已经学了不少关于 Tokio 的并发编程的内容，是时候见识下真正的挑战了，接下来，我们一起来实现下客户端这块儿的功能。</p>
<p>首先，将之前实现的 <code>src/main.rs </code>文件中的<a href="https://github.com/tokio-rs/website/blob/master/tutorial-code/shared-state/src/main.rs" target="_blank" rel="noopener noreferrer">服务器端代码</a>放入到一个 bin 文件中，等下可以直接通过该文件来运行我们的服务器:</p>`,readingTime:{minutes:11.06,words:3319},title:"消息传递",type:"article"}}],["/src/advance-practice/design-pattern.html",{loader:()=>F(()=>import("./design-pattern.html-DGYBwzNw.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://github.com/rust-unofficial/patterns</p>
`,readingTime:{minutes:.03,words:8},title:"Rust 设计模式",type:"article"}}],["/src/advance-practice/frame.html",{loader:()=>F(()=>import("./frame.html-MMFY5t3o.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>现在，鉴于大家已经掌握了 Tokio 的基本 I/O 用法，我们可以开始实现 <code>mini-redis</code> 的帧 <code>frame</code>。通过帧可以将字节流转换成帧组成的流。每个帧就是一个数据单元，例如客户端发送的一次请求就是一个帧。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Simple</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Bulk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bytes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Frame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.82,words:2945},title:"解析数据帧",type:"article"}}],["/src/advance-practice/getting-startted.html",{loader:()=>F(()=>import("./getting-startted.html-DubYL6qo.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>又到了喜闻乐见的初印象环节，这个环节决定了你心中的那 24 盏灯最终是全亮还是全灭。</p>
<p>在本文中，我们将看看本专题的学习目标、<code>tokio</code>该怎么引入以及如何实现一个 <code>Hello Tokio</code> 项目，最终亮灯还是灭灯的决定权留给各位看官。但我提前说好，如果你全灭了，但却找不到更好的，未来还是得回来真香 😛</p>
<h2>专题目标</h2>
<p>通过 API 学项目无疑是无聊的，因此我们采用一个与众不同的方式：边学边练，在本专题的最后你将拥有一个 <code>redis</code> 客户端和服务端，当然不会实现一个完整版本的 <code>redis</code> ，只会提供基本的功能和部分常用的命令。</p>`,readingTime:{minutes:7.54,words:2262},title:"tokio 初印象",type:"article"}}],["/src/advance-practice/graceful-shutdown.html",{loader:()=>F(()=>import("./graceful-shutdown.html-BIZ5Shs6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果你的服务是一个小说阅读网站，那大概率用不到优雅关闭的，简单粗暴的关闭服务器，然后用户再次请求时获取一个错误就是了。但如果是一个 web 服务或数据库服务呢？当前的连接很可能在做着重要的事情，一旦关闭会导致数据的丢失甚至错误，此时，我们就需要优雅的关闭(graceful shutdown)了。</p>
<p>要让一个异步应用优雅的关闭往往需要做到 3 点：</p>
<ul>
<li>找出合适的关闭时机</li>
<li>通知程序的每一个子部分开始关闭</li>
<li>在主线程等待各个部分的关闭结果</li>
</ul>
<p>在本文的下面部分，我们一起来看看该如何做到这三点。如果想要进一步了解在真实项目中该如何使用，大家可以看看 mini-redis 的完整代码实现，特别是 <a href="https://github.com/tokio-rs/mini-redis/blob/master/src/server.rs" target="_blank" rel="noopener noreferrer"><code>src/server.rs</code></a> 和 <a href="https://github.com/tokio-rs/mini-redis/blob/master/src/shutdown.rs" target="_blank" rel="noopener noreferrer"><code>src/shutdown.rs</code></a>。</p>`,readingTime:{minutes:4.06,words:1219},title:"优雅的关闭",type:"article"}}],["/src/advance-practice/intro.html",{loader:()=>F(()=>import("./intro.html-1cfcv8p2.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在入门实战，你可以说众览半山不咋小，但是能坚持到这里，甚至当完成后，就真的是一览众山小，余敌皆鱼虾了。</p>
<p>在进阶实战中，我们要来真的了，之前的简单命令行程序，是真的简单，但是这次的简单 redis 是真的不简单，在这里你将被迫使用十八般武艺，特别的，我们还将学会 Rust 异步镇山之宝 <code>tokio</code> 包的使用。</p>
<blockquote>
<p>本章在内容上大量借鉴和翻译了 tokio 官方文档<a href="https://tokio.rs/tokio/tutorial" target="_blank" rel="noopener noreferrer">Tokio Tutorial</a>, 但是重新组织了内容形式并融入了很多自己的见解和感悟，给大家提供更好的可读性和知识扩展性</p>
</blockquote>`,readingTime:{minutes:.66,words:198},title:"进阶实战: 实现一个简单 redis",type:"article"}}],["/src/advance-practice/io.html",{loader:()=>F(()=>import("./io.html-wkWQsctk.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本章节中我们将深入学习 Tokio 中的 I/O 操作，了解它的原理以及该如何使用。</p>
<p>Tokio 中的 I/O 操作和 <code>std</code> 在使用方式上几无区别，最大的区别就是前者是异步的，例如 Tokio 的读写特征分别是 <code>AsyncRead</code> 和 <code>AsyncWrite</code>:</p>
<ul>
<li>有部分类型按照自己的所需实现了它们: <code>TcpStream</code>，<code>File</code>，<code>Stdout</code></li>
<li>还有数据结构也实现了它们：<code>Vec&lt;u8&gt;</code>、<code>&amp;[u8]</code>，这样就可以直接使用这些数据结构作为读写器( reader / writer)</li>
</ul>`,readingTime:{minutes:9.34,words:2802},title:"I/O",type:"article"}}],["/src/advance-practice/overview.html",{loader:()=>F(()=>import("./overview.html-BhRjFfzX.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>对于 Async Rust，最最重要的莫过于底层的异步运行时，它提供了执行器、任务调度、异步 API 等核心服务。简单来说，使用 Rust 提供的 <code>async/await</code> 特性编写的异步代码要运行起来，就必须依赖于异步运行时，否则这些代码将毫无用处。</p>
<h2>异步运行时</h2>
<p>Rust 语言本身只提供了异步编程所需的基本特性，例如 <code>async/await</code> 关键字，标准库中的 <code>Future</code> 特征，官方提供的 <code>futures</code> 实用库，这些特性单独使用没有任何用处，因此我们需要一个运行时来将这些特性实现的代码运行起来。</p>`,readingTime:{minutes:7.32,words:2195},title:"tokio 概览",type:"article"}}],["/src/advance-practice/select.html",{loader:()=>F(()=>import("./select.html-DVlmV-jS.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在实际使用时，一个重要的场景就是同时等待多个异步操作的结果，并且对其结果进行进一步处理，在本章节，我们来看看，强大的 <code>select!</code> 是如何帮助咱们更好的控制多个异步操作并发执行的。</p>
<h2>tokio::select!</h2>
<p><code>select!</code> 允许同时等待多个计算操作，然后当其中一个操作完成时就退出等待:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::oneshot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">main]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> oneshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> oneshot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"two"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">select!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> rx1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rx1 completed first with {:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> rx2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rx2 completed first with {:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 任何一个 select 分支结束后，都会继续执行接下来的代码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.72,words:4416},title:"select!",type:"article"}}],["/src/advance-practice/shared-state.html",{loader:()=>F(()=>import("./shared-state.html-C4Hi-F-2.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>上一章节中，咱们搭建了一个异步的 redis 服务器，并成功的提供了服务，但是其隐藏了一个巨大的问题：状态(数据)无法在多个连接之间共享，下面一起来看看该如何解决。</p>
<h2>解决方法</h2>
<p>好在 Tokio 十分强大，上面问题对应的解决方法也不止一种：</p>
<ul>
<li>使用 <code>Mutex</code> 来保护数据的共享访问</li>
<li>生成一个异步任务去管理状态，然后各个连接使用消息传递的方式与其进行交互</li>
</ul>
<p>其中，第一种方法适合比较简单的数据，而第二种方法适用于需要异步工作的，例如 I/O 原语。由于我们使用的数据存储类型是 <code>HashMap</code>，使用到的相关操作是 <code>insert</code> 和 <code>get</code> ，又因为这两个操作都不是异步的，因此只要使用 <code>Mutex</code> 即可解决问题。</p>`,readingTime:{minutes:9.84,words:2951},title:"共享状态",type:"article"}}],["/src/advance-practice/spawning.html",{loader:()=>F(()=>import("./spawning.html-DNJ1XqgZ.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>同志们，抓稳了，我们即将换挡提速，通向 <code>mini-redis</code> 服务端的高速之路已经开启。</p>
<p>不过在开始之前，先来做点收尾工作：上一章节中，我们实现了一个简易的 <code>mini-redis</code> 客户端并支持了 <code>SET</code>/<code>GET</code> 操作, 现在将该<a href="https://course.rs/advance-practice/getting-startted.html#%E5%88%86%E6%9E%90%E6%9C%AA%E5%88%B0%E4%BB%A3%E7%A0%81%E5%85%88%E8%A1%8C" target="_blank" rel="noopener noreferrer">代码</a>移动到 <code>examples</code> 文件夹下，因为我们这个章节要实现的是服务器，后面可以通过运行 <code>example</code> 的方式，用之前客户端示例对我们的服务器端进行测试:</p>`,readingTime:{minutes:10.66,words:3197},title:"创建异步任务",type:"article"}}],["/src/advance-practice/stream.html",{loader:()=>F(()=>import("./stream.html-34X-MwN1.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>大家有没有想过， Rust 中的迭代器在迭代时能否异步进行？若不可以，是不是有相应的解决方案？</p>
<p>以上的问题其实很重要，因为在实际场景中，迭代一个集合，然后异步的去执行是很常见的需求，好在 Tokio 为我们提供了 <code>stream</code>，我们可以在异步函数中对其进行迭代，甚至和迭代器 <code>Iterator</code> 一样，<code>stream</code> 还能使用适配器，例如 <code>map</code> ! Tokio 在 <a href="https://docs.rs/tokio-stream/0.1.8/tokio_stream/trait.StreamExt.html" target="_blank" rel="noopener noreferrer"><code>StreamExt</code></a> 特征上定义了常用的适配器。</p>`,readingTime:{minutes:6.21,words:1862},title:"Stream",type:"article"}}],["/src/advance-practice1/graceful-shutdown.html",{loader:()=>F(()=>import("./graceful-shutdown.html-Ag7KZq-i.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>之前的程序，如果使用 <code>ctrl-c</code> 的方法来关闭，所有的线程都会立即停止，这会造成正在请求的用户感知到一个明显的错误。</p>
<p>因此我们需要添加一些优雅关闭( Graceful Shutdown )，以更好的完成资源清理等收尾工作。</p>
<h2>为线程池实现 Drop</h2>
<p>当线程池被 drop 时，需要等待所有的子线程完成它们的工作，然后再退出，下面是一个初步尝试:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> ThreadPool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> worker</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.workers {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Shutting down worker {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.id);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            worker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.thread.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.25,words:1876},title:"优雅关闭和资源清理",type:"article"}}],["/src/advance-practice1/intro.html",{loader:()=>F(()=>import("./intro.html-ESqfavQD.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>一般来说，现代化的 web 服务器往往都基于更加轻量级的协程或 async/await 等模式实现，但是基于本章的内容，我们还是采取较为传统的多线程的方式来实现，即：一个请求连接分配一个线程去独立处理，当然还有升级版的线程池。</p>
<p>在本章中你将了解：</p>
<ol>
<li>学习一点 TCP 和 HTTP</li>
<li>在套接字 socket 上监听进入的 TCP 连接</li>
<li>解析 HTTP 请求</li>
<li>创建合适的 HTTP 应答</li>
<li>使用线程池来提升 web 服务器的吞吐量</li>
</ol>
<blockquote>
<p>本章的实现方法并不是在 Rust 中实现 Web 服务器的最佳方法，后续章节的 async/await 会更加适合!</p>
</blockquote>`,readingTime:{minutes:.66,words:199},title:"实践应用：多线程Web服务器",type:"article"}}],["/src/advance-practice1/multi-threads.html",{loader:()=>F(()=>import("./multi-threads.html-BUl22-sN.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>目前的单线程版本只能依次处理用户的请求：一时间只能处理一个请求连接。随着用户的请求数增多，可以预料的是排在后面的用户可能要等待数十秒甚至超时！</p>
<p>本章我们将解决这个问题，但是首先来模拟一个慢请求场景，看看单线程是否真的如此糟糕。</p>
<h2>基于单线程模拟慢请求</h2>
<p>下面的代码中，使用 sleep 的方式让每次请求持续 5 秒，模拟真实的慢请求:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in main.rs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    fs,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    io</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">prelude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::*, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">BufReader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    net</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TcpListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TcpStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    thread,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// --snip--</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> handle_connection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TcpStream</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // --snip--</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status_line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">filename</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">request_line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[..] {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "GET / HTTP/1.1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP/1.1 200 OK"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "GET /sleep HTTP/1.1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_secs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP/1.1 200 OK"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"HTTP/1.1 404 NOT FOUND"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"404.html"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // --snip--</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:15.1,words:4531},title:"构建多线程 Web 服务器",type:"article"}}],["/src/advance-practice1/web-server.html",{loader:()=>F(()=>import("./web-server.html-DTrz5-tW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在开始之前先来简单回顾下构建所需的网络协议: HTTP 和 TCP。这两种协议都是请求-应答模式的网络协议，意味着在客户端发起请求后，服务器会监听并处理进入的请求，最后给予应答，至于这个过程怎么进行，取决于具体的协议定义。</p>
<p>与 HTTP 有所不同， TCP 是一个底层协议，它仅描述客户端传递了信息给服务器，至于这个信息长什么样，怎么解析处理，则不在该协议的职责范畴内。</p>
<p>而 HTTP 协议是更高层的通信协议，一般来说都基于 TCP 来构建 (HTTP/3 是基于 UDP 构建的协议)，更高层的协议也意味着它会对传输的信息进行解析处理。</p>
<p>更加深入的学习网络协议并不属于本书的范畴，因此让我们从如何读取 TCP 传输的字节流开始吧。</p>`,readingTime:{minutes:9.22,words:2767},title:"构建单线程 Web 服务器",type:"article"}}],["/src/appendix/derive.html",{loader:()=>F(()=>import("./derive.html-BvAxTXMX.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>附录 D：派生特征 trait</h2>
<p>在本书的各个部分中，我们讨论了可应用于结构体和枚举定义的 <code>derive</code> 属性。被 <code>derive</code> 标记的对象会自动实现对应的默认特征代码，继承相应的功能。</p>
<p>在本附录中,我们列举了所有标准库存在的 <code>derive</code> 特征，每个特征覆盖了以下内容</p>
<ul>
<li>该特征将会派生什么样的操作符和方法</li>
<li>由 <code>derive</code> 提供什么样的特征实现</li>
<li>实现特征对于类型意味着什么</li>
<li>你需要什么条件来实现该特征</li>
<li>特征示例</li>
</ul>`,readingTime:{minutes:7.31,words:2194},title:"",type:"article",s:"derive"}}],["/src/appendix/difficulties.html",{loader:()=>F(()=>import("./difficulties.html-0N6f9CIl.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>不可否认，Rust 难点很多，而且知识点也很多，随着时间的进行，或多或少都会对一些难点逐渐模糊，这些难点无法通过目录章节名进行索引，因此集中放在此附录中，进行索引，方便读者朋友查阅。</p>
<table>
<thead>
<tr>
<th>难点及链接</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://course.rs/basic/result-error/result.html#%E4%BC%A0%E6%92%AD%E7%95%8C%E7%9A%84%E5%A4%A7%E6%98%8E%E6%98%9F-" target="_blank" rel="noopener noreferrer">?</a></td>
<td>用于简化错误传播</td>
</tr>
<tr>
<td><a href="https://course.rs/basic/base-type/function.html#%E6%97%A0%E8%BF%94%E5%9B%9E%E5%80%BC" target="_blank" rel="noopener noreferrer">()</a></td>
<td>单元类型</td>
</tr>
<tr>
<td><code>!</code> : <a href="https://course.rs/basic/base-type/function.html#%E6%B0%B8%E4%B8%8D%E8%BF%94%E5%9B%9E%E7%9A%84%E5%87%BD%E6%95%B0" target="_blank" rel="noopener noreferrer">1</a>, <a href="https://course.rs/advance/into-types/custom-type.html#%E6%B0%B8%E4%B8%8D%E8%BF%94%E5%9B%9E%E7%B1%BB%E5%9E%8B" target="_blank" rel="noopener noreferrer">2</a></td>
<td>永不返回</td>
</tr>
<tr>
<td><a href="https://course.rs/basic/match-pattern/all-patterns.html#%E7%BB%91%E5%AE%9A" target="_blank" rel="noopener noreferrer">@</a></td>
<td>为一个字段绑定另外一个变量</td>
</tr>
<tr>
<td><a href="https://course.rs/advance/lifetime/advance.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%BA%A6%E6%9D%9F-hrtb" target="_blank" rel="noopener noreferrer">'a: 'b</a></td>
<td>生命周期约束</td>
</tr>
</tbody>
</table>`,readingTime:{minutes:.61,words:184},title:"附录 F：难点索引",type:"article"}}],["/src/appendix/expressions.html",{loader:()=>F(()=>import("./expressions.html-C4sZ2JIn.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在<a href="https://course.rs/basic/base-type/statement-expression.html" target="_blank" rel="noopener noreferrer">语句与表达式</a>章节中，我们对表达式有过介绍，下面对这些常用表达式进行一一说明。</p>
<h3>基本表达式</h3>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.67,words:201},title:"附录 C：表达式",type:"article"}}],["/src/appendix/intro.html",{loader:()=>F(()=>import("./intro.html-D-iLv9vc.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>附录中包含了一些 Rust 常用概念的快速索引，方便你的日常查询使用。</p>
<blockquote>
<p>大部分的附录借鉴了 Rust Book 以及相应的 <a href="https://rustwiki.org/zh-CN/book/" target="_blank" rel="noopener noreferrer">中文翻译书籍</a>，但同时做了一些的修改，增加准确性和阅读流畅度</p>
</blockquote>
`,readingTime:{minutes:.25,words:76},title:"附录",type:"article"}}],["/src/appendix/keywords.html",{loader:()=>F(()=>import("./keywords.html-C_Xg8my3.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>附录 A：关键字</h2>
<p>下面的列表包含 Rust 中正在使用或者以后会用到的关键字。因此，这些关键字不能被用作标识符（除了<a href="#%E5%8E%9F%E7%94%9F%E6%A0%87%E8%AF%86%E7%AC%A6">原生标识符</a>），包括函数、变量、参数、结构体字段、模块、包、常量、宏、静态值、属性、类型、特征或生命周期。</p>
<h3>目前正在使用的关键字</h3>
<p>如下关键字目前有对应其描述的功能。</p>
<ul>
<li><code>as</code> - 强制类型转换，或<code>use</code> 和 <code>extern crate</code>包和模块引入语句中的重命名</li>
<li><code>break</code> - 立刻退出循环</li>
<li><code>const</code> - 定义常量或原生常量指针（constant raw pointer）</li>
<li><code>continue</code> - 继续进入下一次循环迭代</li>
<li><code>crate</code> - 链接外部包</li>
<li><code>dyn</code> - 动态分发特征对象</li>
<li><code>else</code> - 作为 <code>if</code> 和 <code>if let</code> 控制流结构的 fallback</li>
<li><code>enum</code> - 定义一个枚举类型</li>
<li><code>extern</code> - 链接一个外部包,或者一个宏变量(该变量定义在另外一个包中)</li>
<li><code>false</code> - 布尔值 <code>false</code></li>
<li><code>fn</code> - 定义一个函数或 <strong>函数指针类型</strong> (<em>function pointer type</em>)</li>
<li><code>for</code> - 遍历一个迭代器或实现一个 trait 或者指定一个更高级的生命周期</li>
<li><code>if</code> - 基于条件表达式的结果来执行相应的分支</li>
<li><code>impl</code> - 为结构体或者特征实现具体功能</li>
<li><code>in</code> - <code>for</code> 循环语法的一部分</li>
<li><code>let</code> - 绑定一个变量</li>
<li><code>loop</code> - 无条件循环</li>
<li><code>match</code> - 模式匹配</li>
<li><code>mod</code> - 定义一个模块</li>
<li><code>move</code> - 使闭包获取其所捕获项的所有权</li>
<li><code>mut</code> - 在引用、裸指针或模式绑定中使用，表明变量是可变的</li>
<li><code>pub</code> - 表示结构体字段、<code>impl</code> 块或模块的公共可见性</li>
<li><code>ref</code> - 通过引用绑定</li>
<li><code>return</code> - 从函数中返回</li>
<li><code>Self</code> - 实现特征类型的类型别名</li>
<li><code>self</code> - 表示方法本身或当前模块</li>
<li><code>static</code> - 表示全局变量或在整个程序执行期间保持其生命周期</li>
<li><code>struct</code> - 定义一个结构体</li>
<li><code>super</code> - 表示当前模块的父模块</li>
<li><code>trait</code> - 定义一个特征</li>
<li><code>true</code> - 布尔值 <code>true</code></li>
<li><code>type</code> - 定义一个类型别名或关联类型</li>
<li><code>unsafe</code> - 表示不安全的代码、函数、特征或实现</li>
<li><code>use</code> - 在当前代码范围内(模块或者花括号对)引入外部的包、模块等</li>
<li><code>where</code> - 表示一个约束类型的从句</li>
<li><code>while</code> - 基于一个表达式的结果判断是否继续循环</li>
</ul>`,readingTime:{minutes:3.22,words:965},title:"",type:"article",s:"keywords"}}],["/src/appendix/operators.html",{loader:()=>F(()=>import("./operators.html-BG5j8uuD.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>附录 B：运算符与符号</h2>
<p>该附录包含了 Rust 目前出现过的各种符号，这些符号之前都分散在各个章节中。</p>
<h3>运算符</h3>
<p>表 B-1 包含了 Rust 中的运算符、上下文中的示例、简短解释以及该运算符是否可重载。如果一个运算符是可重载的，则该运算符上用于重载的特征也会列出。</p>
<p>下表中，<code>expr</code> 是表达式，<code>ident</code> 是标识符，<code>type</code> 是类型，<code>var</code> 是变量，<code>trait</code> 是特征，<code>pat</code> 是匹配分支(pattern)。</p>`,readingTime:{minutes:5.94,words:1781},title:"",type:"article",s:"operators"}}],["/src/appendix/prelude.html",{loader:()=>F(()=>import("./prelude.html-C6doT_4f.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"附录 E：prelude 模块",type:"article"}}],["/src/appendix/rust-version.html",{loader:()=>F(()=>import("./rust-version.html-DIk-WcOh.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2>Rust 版本说明</h2>
<p>早在第一章，我们见过 <code>cargo new</code> 在 <em>Cargo.toml</em> 中增加了一些有关 <code>edition</code> 的元数据。本附录将解释其意义！</p>
<p>与其它语言相比，Rust 的更新迭代较为频繁（得益于精心设计过的发布流程以及 Rust 语言开发者团队管理）：</p>
<ul>
<li>每 6 周发布一个迭代版本</li>
<li>2 - 3 年发布一个新的大版本：每一个版本会结合已经落地的功能，并提供一个清晰的带有完整更新文档和工具的功能包。新版本会作为常规的 6 周发布过程的一部分发布。</li>
</ul>`,readingTime:{minutes:9.2,words:2760},title:"附录 F：Rust 版本发布",type:"article"}}],["/src/basic/comment.html",{loader:()=>F(()=>import("./comment.html-CY9H9uMY.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>好的代码会说话，好的程序员不写注释，这些都是烂大街的“编程界俚语”。但是，如果你真的遇到一个不写注释的项目或程序员，那一定会对它/他“刮目相看”。</p>
<p>在之前的章节我们学习了包和模块如何使用，在此章节将进一步学习如何书写文档注释，以及如何使用 <code>cargo doc</code> 生成项目的文档，最后将以一个包、模块和文档的综合性例子，来将这些知识融会贯通。</p>
<h2>注释的种类</h2>
<p>在 Rust 中，注释分为三类：</p>
<ul>
<li>代码注释，用于说明某一块代码的功能，读者往往是同一个项目的协作开发者</li>
<li>文档注释，支持 <code>Markdown</code>，对项目描述、公共 API 等用户关心的功能进行介绍，同时还能提供示例代码，目标读者往往是想要了解你项目的人</li>
<li>包和模块注释，严格来说这也是文档注释中的一种，它主要用于说明当前包和模块的功能，方便用户迅速了解一个项目</li>
</ul>`,readingTime:{minutes:12.29,words:3686},title:"注释和文档",type:"article"}}],["/src/basic/flow-control.html",{loader:()=>F(()=>import("./flow-control.html-wtgudwoj.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>80 后应该都对学校的小混混记忆犹新，在那个时代，小混混们往往都认为自己是地下王者，管控着地下事务的流程，在我看来，他们就像代码中的流程控制一样，无处不在，很显眼，但是又让人懒得重视。</p>
<p>言归正传，Rust 程序是从上而下顺序执行的，在此过程中，我们可以通过循环、分支等流程控制方式，更好的实现相应的功能。</p>
<h2>使用 if 来做分支控制</h2>
<blockquote>
<p>if else 无处不在 -- 鲁迅</p>
</blockquote>
<p>但凡你能找到一门编程语言没有 <code>if else</code>，那么一定更要反馈给鲁迅，反正不是我说的 😃 总之，只要你拥有其它语言的编程经验，就一定会有以下认知：<code>if else</code> <strong>表达式</strong>根据条件执行不同的代码分支：</p>`,readingTime:{minutes:8.91,words:2673},title:"流程控制",type:"article"}}],["/src/basic/formatted-output.html",{loader:()=>F(()=>import("./formatted-output.html-Dv3ZQ0rt.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>提到格式化输出，可能很多人立刻就想到 <code>"{}"</code>，但是 Rust 能做到的远比这个多的多，本章节我们将深入讲解格式化输出的各个方面。</p>
<h2>满分初印象</h2>
<p>先来一段代码，看看格式化输出的初印象：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);                 </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "Hello"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello, {}!"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "Hello, world!"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The number is {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);   </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "The number is 1"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));          </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "(3, 4)"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{value}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "4"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);           </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "1 2"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:04}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);             </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// =&gt; "0042" with leading zeros</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.99,words:2996},title:"格式化输出",type:"article"}}],["/src/basic/intro.html",{loader:()=>F(()=>import("./intro.html-C_C-esKG.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>从现在开始，我们正式踏入了 Rust 大陆，这片广袤而神秘的世界，在这个世界中，将接触到很多之前都没有听过的概念：</p>
<ul>
<li>所有权、借用、生命周期</li>
<li>宏编程</li>
<li>模式匹配</li>
</ul>
<p>类似的还有很多，不过不用怕，引用武林外传一句话：咱上面有人。有本书在，一切虚妄终将烟消云散。</p>
<p>本章主要介绍 Rust 的基础语法、数据类型、项目结构等，学完本章，你将对 Rust 代码有一个清晰、完整的认识。</p>
<p>开始之前先通过一段代码来简单浏览下 Rust 的语法：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Rust 程序入口函数，跟其它语言一样，都是 main，该函数目前无返回值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 使用let来声明变量，进行绑定，a是不可变的</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 此处没有指定a的类型，编译器会默认根据a的值为a推断类型：i32，有符号32位整数</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 语句的末尾必须以分号结尾</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 主动指定b的类型为i32</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 这里有两点值得注意：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 1. 可以在数值中带上类型:30i32表示数值是30，类型是i32</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 2. c是可变的，mut是mutable的缩写</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 还能在数值和类型中间添加一个下划线，让可读性更好</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30_</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 跟其它语言一样，可以使用一个函数的返回值来作为另一个函数的参数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // println!是宏调用，看起来像是函数但是它返回的是宏定义的代码块</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 该函数将指定的格式化字符串输出到标准输出中(控制台)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // {}是占位符，在具体执行过程中，会把e的值代入进来</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"( a + b ) + ( c + d ) = {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 定义一个函数，输入两个i32类型的32位有符号整数，返回它们的和</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 返回相加值，这里可以省略return</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.23,words:670},title:"Rust 基本概念",type:"article"}}],["/src/basic/lifetime.html",{loader:()=>F(()=>import("./lifetime.html-t1z9oNq9.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>各位读者，之前的集合章节挺简单吧？是不是安逸了挺久了？要不咱们加点料？来试试 Rust 中令人闻风丧胆的生命周期？</p>
<p>生命周期，简而言之就是引用的有效作用域。在大多数时候，我们无需手动的声明生命周期，因为编译器可以自动进行推导，用类型来类比下：</p>
<ul>
<li>就像编译器大部分时候可以自动推导类型 &lt;-&gt; 一样，编译器大多数时候也可以自动推导生命周期</li>
<li>在多种类型存在时，编译器往往要求我们手动标明类型 &lt;-&gt; 当多个生命周期存在，且编译器无法推导出某个引用的生命周期时，就需要我们手动标明生命周期</li>
</ul>
<p>Rust 生命周期之所以难，是因为这个概念对于我们来说是全新的，没有其它编程语言的经验可以借鉴。当你觉得难的时候，不用过于担心，这个难对于所有人都是平等的，多点付出就能早点解决此拦路虎，同时本书也会尽力帮助大家减少学习难度（生命周期很可能是 Rust 中最难的部分）。</p>`,readingTime:{minutes:26.89,words:8068},title:"认识生命周期",type:"article"}}],["/src/basic/method.html",{loader:()=>F(()=>import("./method.html-DIICojIm.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>从面向对象语言过来的同学对于方法肯定不陌生，<code>class</code> 里面就充斥着方法的概念。在 Rust 中，方法的概念也大差不差，往往和对象成对出现：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:8.29,words:2488},title:"方法 Method",type:"article"}}],["/src/basic/variable.html",{loader:()=>F(()=>import("./variable.html-C6Be1m9y.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>鉴于本书的目标读者（别慌，来到这里就说明你就是目标读者）已经熟练掌握其它任意一门编程语言，因此这里就不再对何为变量进行赘述，让我们开门见山来谈谈，为何 Rust 选择了手动设定变量的可变性。</p>
<h2>为何要手动设置变量的可变性？</h2>
<p>在其它大多数语言中，要么只支持声明可变的变量，要么只支持声明不可变的变量（例如函数式语言），前者为编程提供了灵活性，后者为编程提供了安全性，而 Rust 比较野，选择了两者我都要，既要灵活性又要安全性。</p>
<p>能想要学习 Rust，说明我们的读者都是相当有水平的程序员了，你们应该能理解<strong>一切选择皆是权衡</strong>，那么两者都要的权衡是什么呢？这就是 Rust 开发团队为我们做出的贡献，两者都要意味着 Rust 语言底层代码的实现复杂度大幅提升，因此 Salute to The Rust Team!</p>`,readingTime:{minutes:11.5,words:3451},title:"变量绑定与解构",type:"article"}}],["/src/basic-practice/base-features.html",{loader:()=>F(()=>import("./base-features.html-BK6jWhO_.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>无论功能设计的再怎么花里胡哨，对于一个文件查找命令而言，首先得指定文件和待查找的字符串，它们需要用户从命令行给予输入，然后我们在程序内进行读取。</p>
<h2>接收命令行参数</h2>
<p>国际惯例，先创建一个新的项目 <code>minigrep</code> ，该名字充分体现了我们的自信：就是不如 <code>grep</code>。</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> minigrep</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">     Created</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> binary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (application) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">minigrep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> project</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> minigrep</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.32,words:1597},title:"实现基本功能",type:"article"}}],["/src/basic-practice/envs.html",{loader:()=>F(()=>import("./envs.html-DM9SBeYC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在上一章节中，留下了一个悬念，该如何实现用户控制的大小写敏感，其实答案很简单，你在其它程序中肯定也遇到过不少，例如如何控制 <code>panic</code> 后的栈展开？ Rust 提供的解决方案是通过命令行参数来控制:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">RUST_BACKTRACE</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">1</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cargo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> run</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:3.47,words:1042},title:"使用环境变量来增强程序",type:"article"}}],["/src/basic-practice/intro.html",{loader:()=>F(()=>import("./intro.html-D0qOe45U.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在前往更高的山峰前，我们应该驻足欣赏下身后的风景，虽然是半览众山不咋小，但总比身在此山中无法窥全貌要强一丢丢。</p>
<p>在本章中，我们将一起构建一个命令行程序，目标是尽可能帮大家融会贯通之前的学到的知识。</p>
<p>linux 系统中的 <code>grep</code> 命令很强大，可以完成各种文件搜索任务，我们肯定做不了那么强大，但是假冒一个伪劣的版本还是可以的，它将从命令行参数中读取指定的文件名和字符串，然后在相应的文件中找到包含该字符串的内容，最终打印出来。</p>
<blockquote>
<p>这里推荐一位大神写的知名 Rust 项目 <a href="https://github.com/BurntSushi/ripgrep" target="_blank" rel="noopener noreferrer">ripgrep</a> ，绝对是 <code>grep</code> 真正的高替品，值得学习和使用</p>
</blockquote>`,readingTime:{minutes:.78,words:233},title:"构建一个简单命令行程序",type:"article"}}],["/src/basic-practice/iterators.html",{loader:()=>F(()=>import("./iterators.html-CZsuVl9d.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>本章节是可选内容，请大家在看完<a href="https://course.rs/advance/functional-programing/iterator.html" target="_blank" rel="noopener noreferrer">迭代器章节</a>后，再来阅读</p>
</blockquote>
<p>在之前的 <code>minigrep</code> 中，功能虽然已经 ok，但是一些细节上还值得打磨下，下面一起看看如何使用迭代器来改进 <code>Config::build</code> 和 <code>search</code> 的实现。</p>`,readingTime:{minutes:3.57,words:1072},title:"使用迭代器来改进我们的程序",type:"article"}}],["/src/basic-practice/refactoring.html",{loader:()=>F(()=>import("./refactoring.html-CVaAopLp.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>但凡稍微没那么糟糕的程序，都应该具有代码模块化和错误处理，不然连玩具都谈不上。</p>
<p>梳理我们的代码和目标后，可以整理出大致四个改进点:</p>
<ul>
<li><strong>单一且庞大的函数</strong>。对于 <code>minigrep</code> 程序而言， <code>main</code> 函数当前执行两个任务：解析命令行参数和读取文件。但随着代码的增加，<code>main</code> 函数承载的功能也将快速增加。从软件工程角度来看，一个函数具有的功能越多，越是难以阅读和维护。因此最好的办法是将大的函数拆分成更小的功能单元。</li>
<li><strong>配置变量散乱在各处</strong>。还有一点要考虑的是，当前 <code>main</code> 函数中的变量都是独立存在的，这些变量很可能被整个程序所访问，在这个背景下，独立的变量越多，越是难以维护，因此我们还可以将这些用于配置的变量整合到一个结构体中。</li>
<li><strong>细化错误提示</strong>。 目前的实现中，我们使用 <code>expect</code> 方法来输出文件读取失败时的错误信息，这个没问题，但是无论任何情况下，都只输出 <code>Should have been able to read the file</code> 这条错误提示信息，显然是有问题的，毕竟文件不存在、无权限等等都是可能的错误，一条大一统的消息无法给予用户更多的提示。</li>
<li><strong>使用错误而不是异常</strong>。 假如用户不给任何命令行参数，那我们的程序显然会无情崩溃，原因很简单：<code>index out of bounds</code>，一个数组访问越界的 <code>panic</code>，但问题来了，用户能看懂吗？甚至于未来接收的维护者能看懂吗？因此需要增加合适的错误处理代码，来给予使用者给详细友善的提示。还有就是需要在一个统一的位置来处理所有错误，利人利己！</li>
</ul>`,readingTime:{minutes:13.93,words:4180},title:"增加模块化和错误处理",type:"article"}}],["/src/basic-practice/stderr.html",{loader:()=>F(()=>import("./stderr.html-DBE93V3l.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>迄今为止，所有的输出信息，无论 debug 还是 error 类型，都是通过 <code>println!</code> 宏输出到终端的标准输出( <code>stdout</code> )，但是对于程序来说，错误信息更适合输出到标准错误输出(stderr)。</p>
<p>这样修改后，用户就可以选择将普通的日志类信息输出到日志文件 1，然后将错误信息输出到日志文件 2，甚至还可以输出到终端命令行。</p>
<h2>目前的错误输出位置</h2>
<p>我们先来观察下，目前的输出信息包括错误，是否是如上面所说，都写到标准错误输出。</p>
<p>测试方式很简单，将标准错误输出的内容重定向到文件中，看看是否包含故意生成的错误信息即可。</p>`,readingTime:{minutes:2.25,words:674},title:"重定向错误信息的输出",type:"article"}}],["/src/basic-practice/tests.html",{loader:()=>F(()=>import("./tests.html-Db_i3R79.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>开始之前，推荐大家先了解下<a href="https://course.rs/test/intro.html" target="_blank" rel="noopener noreferrer">如何在 Rust 中编写测试代码</a>，这块儿内容不复杂，先了解下有利于本章的继续阅读</p>
</blockquote>
<p>在之前的章节中，我们完成了对项目结构的重构，并将进入逻辑代码编程的环节，但在此之前，我们需要先编写一些测试代码，也是最近颇为流行的测试驱动开发模式(TDD, Test Driven Development)：</p>
<ol>
<li>编写一个注定失败的测试，并且失败的原因和你指定的一样</li>
<li>编写一个成功的测试</li>
<li>编写你的逻辑代码，直到通过测试</li>
</ol>`,readingTime:{minutes:4.96,words:1488},title:"测试驱动开发",type:"article"}}],["/src/cargo/getting-started.html",{loader:()=>F(()=>import("./getting-started.html-CA46NV-j.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Cargo 会在安装 Rust 的时候一并进行安装，无需我们手动的操作执行，安装 Rust 参见<a href="https://course.rs/first-try/installation.html" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<p>在开始之前，先来明确一个名词: <code>Package</code>，由于 <code>Crate</code> 被翻译成包，因此 <code>Package</code> 再被翻译成包就很不合适，经过斟酌，我们决定翻译成项目，你也可以理解为工程、软件包，总之，在本书中<code>Package</code> 意味着项目，而项目也意味着 <code>Package</code> 。</p>`,readingTime:{minutes:2.17,words:650},title:"上手使用",type:"article"}}],["/src/cargo/git-auth.html",{loader:()=>F(()=>import("./git-auth.html-CKr4tZXl.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"附录：Git鉴权",type:"article"}}],["/src/cargo/intro.html",{loader:()=>F(()=>import("./intro.html-DvkotX11.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 语言的名气之所以这么大，保守估计 <code>Cargo</code> 的贡献就占了三分之一。</p>
<p><code>Cargo</code> 是包管理工具，可以用于依赖包的下载、编译、更新、分发等，与 <code>Cargo</code> 一样有名的还有 <a href="https://crates.io" target="_blank" rel="noopener noreferrer"><code>crates.io</code></a>，它是社区提供的包注册中心：用户可以将自己的包发布到该注册中心，然后其它用户通过注册中心引入该包。</p>
<blockquote>
<p>本章内容是基于 <a href="https://doc.rust-lang.org/stable/cargo/index.html" target="_blank" rel="noopener noreferrer">Cargo Book</a> 翻译，并做了一些内容优化和目录组织上的调整</p>
</blockquote>`,readingTime:{minutes:.51,words:153},title:"Cargo 使用指南",type:"article"}}],["/src/compiler/intro.html",{loader:()=>F(()=>import("./intro.html-Dc4czytf.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"征服编译错误",type:"article"}}],["/src/difficulties/cow.html",{loader:()=>F(()=>import("./cow.html-D_dSf4vU.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"写时拷贝Cow todo",type:"article"}}],["/src/difficulties/eq.html",{loader:()=>F(()=>import("./eq.html-Pm2UvtTf.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，想要重载操作符，你就需要实现对应的特征。</p>
<p>例如 <code>&lt;</code>、<code>&lt;=</code>、<code>&gt;</code> 和 <code>&gt;=</code> 需要实现 <code>PartialOrd</code> 特征:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Pair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Pair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialOrd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Pair</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cmp_display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.y {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The largest member is x = {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.x);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"The largest member is y = {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.y);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.38,words:1015},title:"Eq 和 PartialEq",type:"article"}}],["/src/difficulties/intro.html",{loader:()=>F(()=>import("./intro.html-xVbUzWu_.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>当大家一路看到这里时，我敢说 90% 的人还是云里雾里的，例如你能说清楚:</p>
<ul>
<li>切片和切片引用的区别吗？</li>
<li>各种字符串之间的区别吗？</li>
<li>各种指针、引用的区别吗？</li>
<li>所有权转移、拷贝、克隆的区别吗？</li>
</ul>
<p>以及到底该用它们之中哪一个吗？</p>
<p>如果不行，就跟随我一起来看看吧，本章的目标就是帮大家彻底理清这些概念，为后面的进一步学习和实战打好坚实的基础。</p>
`,readingTime:{minutes:.48,words:145},title:"Rust 难点攻关",type:"article"}}],["/src/difficulties/lifetime.html",{loader:()=>F(()=>import("./lifetime.html-feREsZGQ.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.03,words:10},title:"作用域、生命周期和 NLL todo",type:"article"}}],["/src/difficulties/move-copy.html",{loader:()=>F(()=>import("./move-copy.html-Bbrg2R4C.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"move、Copy和Clone todo",type:"article"}}],["/src/difficulties/pointer.html",{loader:()=>F(()=>import("./pointer.html-Dn_1iswZ.js"),[]),meta:{date:1745158063e3,excerpt:`
<!-- https://blog.csdn.net/kk3909/article/details/106743025 -->`,readingTime:{minutes:.04,words:13},title:"裸指针、引用和智能指针 todo",type:"article"}}],["/src/difficulties/slice.html",{loader:()=>F(()=>import("./slice.html-CwJb6cR5.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>关于 <code>str</code> / <code>&amp;str</code>，<code>[u8]</code> / <code>&amp;[u8]</code> 区别，你能清晰的说出来嘛？如果答案是 No ，那就跟随我一起来看看切片和切片引用到底有何区别吧。</p>
<blockquote>
<p>在继续之前，查看<a href="https://course.rs/basic/compound-type/string-slice.html#%E5%88%87%E7%89%87slice" target="_blank" rel="noopener noreferrer">这里</a>了解何为切片</p>
</blockquote>`,readingTime:{minutes:3.57,words:1072},title:"切片和切片引用",type:"article"}}],["/src/difficulties/string.html",{loader:()=>F(()=>import("./string.html-CyVhB353.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>字符串让人疯狂，这句话用在 Rust 中一点都不夸张，不信？那你能否清晰的说出 <code>String</code>、<code>str</code>、<code>&amp;str</code>、<code>&amp;String</code>、<code>Box&lt;str&gt;</code> 或 <code>Box&lt;&amp;str&gt;</code> 的区别？</p>
<p>Rust 语言的类型可以大致分为两种：基本类型和标准库类型，前者是由语言特性直接提供的，而后者是在标准库中定义。即将登场的 <code>str</code> 类型就是唯一定义在语言特性中的字符串。</p>`,readingTime:{minutes:1.99,words:598},title:"疯狂字符串",type:"article"}}],["/src/first-try/cargo.html",{loader:()=>F(()=>import("./cargo.html-Ddc9GQR8.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>认识 Cargo</h2>
<p>但凡经历过 C/C++ 或 Go 语言 1.10 版本之前的用户都知道，一个好的包管理工具有多么的重要！！我那个时候是如此的渴望类似 <code>nodejs</code> 的 <code>npm</code> 包管理工具，但是却求而不得。</p>
<p>包管理工具最重要的意义就是<strong>任何用户拿到你的代码，都能运行起来</strong>，而不会因为各种包版本依赖焦头烂额。</p>
<p>Go 语言在 1.10 版本之前，所有的包都是在 <code>github.com</code> 下存放，导致了所有的项目都公用一套依赖代码，在本地项目复杂后，这简直是一种灾难。</p>`,readingTime:{minutes:7.33,words:2198},title:"",type:"article",s:"cargo"}}],["/src/first-try/editor.html",{loader:()=>F(()=>import("./editor.html-Dy9Tsv3g.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>墙推 VSCode!</h2>
<p><code>VSCode</code> 从 15 年刚开始推出，我就在使用了。做为第一个吃螃蟹的人，可以说见证了它一路的快速发展，直到现在它已经成为开源世界最火的 IDE 之一（弱弱的说一句，之一也许可以去掉）。</p>
<p>顺便歪楼说一句：我预言过三件事：</p>
<ol>
<li>在 13 年预言 <code>Golang</code> 会火遍全世界。同时创建了 14-19 年最火的 Golang 隐修会社区，可惜因为某些原因被封停了，甚是遗憾。</li>
<li>在 15 年预言 <code>VSCode</code> 会成为世界上最好的 IDE；同时我还是 <code>jaeger tracing</code> 项目的第一个 star 用户（是的，比作者还早），当时就很看好这个项目的后续发展。</li>
<li>现在呢，我在这里正式预言： <strong>未来 <code>Rust</code> 会成为主流编程语言之一，在几乎所有开发领域都将大放光彩</strong>。总之牛逼已吹下，希望不要被打脸。：(</li>
</ol>`,readingTime:{minutes:3.91,words:1173},title:"",type:"article",s:"editor"}}],["/src/first-try/hello-world.html",{loader:()=>F(()=>import("./hello-world.html-BnDAbQwy.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>几乎所有教程中安装的最后一个环节都是 <code>hello world</code>，我们也不能免俗。但是，在 <code>hello world</code> 之后，还有一个相亲，啊呸，Rust 初印象环节，希望大家喜欢。</p>
<h2>多国语言的"世界，你好"</h2>
<p>还记得大明湖畔等你的 <a href="https://course.rs/first-try/editor.html" target="_blank" rel="noopener noreferrer">VSCode IDE</a> 和通过 <code>Cargo</code> 创建的 <a href="https://course.rs/first-try/cargo.html" target="_blank" rel="noopener noreferrer">世界，你好</a> 工程吗？</p>`,readingTime:{minutes:5.78,words:1733},title:"不仅仅是 Hello world",type:"article"}}],["/src/first-try/installation.html",{loader:()=>F(()=>import("./installation.html-B5y-mIAu.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>rustup</code> 是 Rust 的安装程序，也是它的版本管理程序。<br>
强烈建议使用 <code>rustup</code> 来安装 Rust，当然如果你有异心，请寻找其它安装方式，然后再从下一节开始阅读。</p>
<blockquote>
<p>haha，开个玩笑。读者乃大大，怎么能弃之不顾。</p>
<p>注意：如果你不想用或者不能用 rustup，请参见 <a href="https://forge.rust-lang.org/infra/other-installation-methods.html#other-rust-installation-methods" target="_blank" rel="noopener noreferrer">Rust 其它安装方法</a>。</p>
</blockquote>`,readingTime:{minutes:4.45,words:1335},title:"安装 Rust",type:"article"}}],["/src/first-try/intro.html",{loader:()=>F(()=>import("./intro.html-CSzx8k3e.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>其实对于写这种章节，我内心是拒绝的，因为真的很无趣。对于一本书而言，这也更像是一种浪费纸张的行为（好在咱无纸化 😄）。不过没有办法，如果不安装 Rust 环境，总不能让大家用空气运行吧，so，我恶趣味的起了一个这样的章节名。</p>
<p>在本章中，你将学习以下内容：</p>
<ol>
<li>在 macOS、Linux、Windows 上安装 Rust 以及相关工具链</li>
<li>搭建 VSCode 所需的环境</li>
<li>简单介绍 Cargo</li>
<li>实现一个酷炫多国语言版本的“世界，你好”的程序，并且谈谈对 Rust 语言的初印象</li>
</ol>
`,readingTime:{minutes:.59,words:177},title:"寻找牛刀，以便小试",type:"article"}}],["/src/first-try/slowly-downloading.html",{loader:()=>F(()=>import("./slowly-downloading.html-B25CsHVP.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在目前，大家还不需要自己搭建的镜像下载服务，因此只需知道下载依赖库的地址是 <a href="https://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a>，是由 Rust 官方搭建的镜像下载和管理服务。</p>
<p>但悲剧的是，它的默认镜像地址是在国外，这就导致了某些时候难免会遇到下载缓慢或者卡住的情况，下面我们一起来看看。</p>
<h2>下载很慢?</h2>
<p>作为国外的语言，下载慢是正常的，隔壁的那位还被墙呢:)</p>
<p>解决下载缓慢有两种途径：</p>
<h3>开启命令行或者全局翻墙</h3>`,readingTime:{minutes:4.9,words:1470},title:"下载依赖很慢或卡住？",type:"article"}}],["/src/first-try/sth-you-should-not-do.html",{loader:()=>F(()=>import("./sth-you-should-not-do.html-15qeo0p7.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>很多人都在学 Rust ing，也有很多人在放弃 ing。想要顺利学完 Rust，大家需要谨记本文列出的内容，否则这极有可能是又双叒叕从入门到放弃之旅。</p>
<p>Rust 是一门全新的语言，它会带给你前所未有的体验，提升你的通用编程水平，甚至于赋予你全新的编程思想。在此时此刻，大家可能还半信半疑，但是当学完它再回头看时，你肯定也会认同这些貌似浮夸的赞美。</p>
<h2>避免试一试的心态</h2>
<p>在学习 Go、Python 等编程语言时，你可能会一边工作、一边轻松愉快的学习它们，但是 Rust 不行。原因如文章开头所说，在学习 Rust 的同时你会收获很多语言之外的知识，因此 Rust 在入门阶段比很多编程语言要更难，但是一旦入门，你将收获一个全新的自己，成为一个更加优秀的程序员。</p>`,readingTime:{minutes:6.45,words:1934},title:"避免从入门到放弃",type:"article"}}],["/src/libraries/intro.html",{loader:()=>F(()=>import("./intro.html-Bp3NIbiq.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"常用三方库",type:"article"}}],["/src/logs/about-log.html",{loader:()=>F(()=>import("./about-log.html-ZzbZAERW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>相比起监控，日志好理解的多：在某个时间点向指定的地方输出一条信息，里面记录着重要性、时间、地点和发生的事件，这就是日志。</p>
<blockquote>
<p>注意，本文和 Rust 无关，我们争取从一个中立的角度去介绍何为日志</p>
</blockquote>
<h2>日志级别和输出位置</h2>
<h4>日志级别</h4>
<p>日志级别是对基本的“滚动文本”式日志记录的一个重要补充。每条日志消息都会基于其重要性或严重程度分配到一个日志级别。例如，对于某个程序，“你的电脑着火了”是一个非常重要的消息，而“无法找到配置文件”的重要等级可能就低一些；但对于另外一些程序，"无法找到配置文件" 可能才是最严重的错误，会直接导致程序无法正常启动，而“电脑着火”? 我们可能会记录为一条 <code>Debug</code> 日志(参见下文) 😄。</p>`,readingTime:{minutes:6.54,words:1961},title:"详解日志",type:"article"}}],["/src/logs/intro.html",{loader:()=>F(()=>import("./intro.html-BSKgwIW_.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这几年 AIOps 特别火，但是你要是逮着一个运维问一下，他估计很难说出个所以然来，毕竟概念和现实往往是脱节的，前者的发展速度肯定远快于后者。</p>
<p>好在我大概了解这块儿领域，可以说智能化运维的核心就在于日志和监控，换而言之？何为智能，不就是基于已有的海量数据分析后进行决策吗？当然，你要说以前的知识库类型的运维决策也是智能，我也没办法杠: D</p>
<p>总之，不仅仅是对于开发者，对于整个技术链条的参与者，甚至包括老板，<strong>日志和监控都是开发实践中最最重要的一环</strong>。</p>
`,readingTime:{minutes:.67,words:201},title:"日志和监控",type:"article"}}],["/src/logs/log.html",{loader:()=>F(()=>import("./log.html-CwyWlc5n.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>就如同 slf4j 是 Java 的日志门面库，<a href="https://github.com/rust-lang/log" target="_blank" rel="noopener noreferrer">log</a> 也是 Rust 的日志门面库( 这不是我自己编的，官方用语: logging facade )，它目前由官方积极维护，因此大家可以放心使用。</p>
<p>使用方式很简单，只要在 <code>Cargo.toml</code> 中引入即可：</p>
<div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0.4"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.13,words:1838},title:"日志门面 log",type:"article"}}],["/src/logs/tracing-logger.html",{loader:()=>F(()=>import("./tracing-logger.html-Zy4pDtHU.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 <a href="https://docs.rs/crate/tracing/latest" target="_blank" rel="noopener noreferrer">tracing</a> 包出来前，Rust 的日志也就 <code>log</code> 有一战之力，但是 <code>log</code> 的功能相对来说还是简单一些。在大名鼎鼎的 tokio 开发团队推出 <code>tracing</code> 后，我现在坚定的认为 <code>tracing</code> 就是未来！</p>
<blockquote>
<p>截至目前，rust编译器团队、GraphQL 都在使用 tracing，而且 tokio 在密谋一件大事：基于 tracing 开发一套终端交互式 debug 工具: <a href="https://github.com/tokio-rs/console" target="_blank" rel="noopener noreferrer">console</a>！</p>
</blockquote>`,readingTime:{minutes:12.63,words:3790},title:"使用 tracing 输出自定义的 Rust 日志",type:"article"}}],["/src/logs/tracing.html",{loader:()=>F(()=>import("./tracing.html-DNWd0l9o.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>严格来说，tracing 并不是一个日志库，而是一个分布式跟踪的 SDK，用于采集监控数据的。</p>
<p>随着微服务的流行，现在一个产品有多个系统组成是非常常见的，这种情况下，一条用户请求可能会横跨几个甚至几十个服务。此时再用传统的日志方式去跟踪这条用户请求就变得较为困难，这就是分布式追踪在现代化监控系统中这么炽手可热的原因。</p>
<p>关于分布式追踪，在后面的监控章节进行详细介绍，大家只要知道：分布式追踪的核心就是在请求的开始生成一个 <code>trace_id</code>，然后将该 <code>trace_id</code> 一直往后透穿，请求经过的每个服务都会使用该 <code>trace_id</code> 记录相关信息，最终将整个请求形成一个完整的链路予以记录下来。</p>`,readingTime:{minutes:12.69,words:3806},title:"使用 tracing 记录日志",type:"article"}}],["/src/practice/best-pratice.html",{loader:()=>F(()=>import("./best-pratice.html-CM9AqtHg.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/rgjsbt/whats_your_top_rust_tip_crate_tool_other_for/</p>
<p>https://www.reddit.com/r/rust/comments/rnmmqz/question_how_to_keep_code_dry_when_many_similar/</p>
<p>https://www.reddit.com/r/rust/comments/rrgho1/what_is_the_recommended_way_to_use_a_library/</p>`,readingTime:{minutes:.9,words:270},title:"最佳实践",type:"article"}}],["/src/practice/interview.html",{loader:()=>F(()=>import("./interview.html-Duq2gUAx.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>其实这一章节的处境有些尴尬，Rust 虽然在世界范围有点小名气，但是在国内目前还处于开荒阶段，因此至少就公开招聘而言，岗位并不多。</p>
<p>但是既然号称最佳实践，少了面试，总觉得会缺少些什么，由于现在还没有太多的经验可以参考，我们选择先从网上摘选些文章分享给大家，<strong>但仅供参考，具体还要大家自己来辨别</strong>。</p>
<blockquote>
<p>感谢 <a href="https://github.com/Kasper4649" target="_blank" rel="noopener noreferrer">Kasper4649</a> 的章节提议和资源分享</p>
</blockquote>`,readingTime:{minutes:.69,words:208},title:"面试经验 doing",type:"article"}}],["/src/practice/intro.html",{loader:()=>F(()=>import("./intro.html-B2AlV4bW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>对于生产级项目而言，运行稳定性和可维护性是非常重要的，本章就一起来看看 Rust 项目有哪些最佳实践准则。</p>
`,readingTime:{minutes:.17,words:50},title:"Rust最佳实践",type:"article"}}],["/src/practice/naming.html",{loader:()=>F(()=>import("./naming.html-BbGW28y5.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>基本的 Rust 命名规范在 <a href="https://github.com/rust-lang/rfcs/blob/master/text/0430-finalizing-naming-conventions.md" target="_blank" rel="noopener noreferrer">RFC 430</a> 中有描述。</p>
<p>通常，对于 <strong>type-level</strong> 的构造 Rust 倾向于使用<strong>驼峰命名法</strong>，而对于 <strong>value-level</strong> 的构造使用<strong>蛇形命名法</strong>。详情如下：</p>`,readingTime:{minutes:6.78,words:2033},title:"命名规范",type:"article"}}],["/src/practice/third-party-libs.html",{loader:()=>F(()=>import("./third-party-libs.html-v7iwlXFe.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>对计算机、编程、架构的理解决定一个程序员的上限，而工具则决定了他的下限，三尺森寒利剑在手，问世间谁敢一战。</p>
<p>本文就分门别类的精心挑选了一些非常适合日常开发使用的三方库，同时针对优缺点、社区活跃等进行了评价，同一个类别的库，按照<strong>推荐度优先级降序排列</strong>，希望大家能喜欢。</p>
<blockquote>
<p>本文节选自<a href="https://cook.rs" target="_blank" rel="noopener noreferrer">Cook Rust</a></p>
</blockquote>
<h2>目录</h2>
<ul>
<li>日常开发常用的Rust库:
<ul>
<li><a href="#webhttp">Web/HTTP</a>,  <a href="#SQL%E5%AE%A2%E6%88%B7%E7%AB%AF">SQL客户端</a>, <a href="#NoSql%E5%AE%A2%E6%88%B7%E7%AB%AF">NoSql客户端</a>， <a href="#%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE">网络通信协议</a>, <a href="#%E5%BC%82%E6%AD%A5%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B">异步网络编程</a></li>
<li><a href="#%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0">服务发现</a>, <a href="#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97">消息队列</a>, <a href="#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">搜索引擎</a></li>
<li><a href="#%E7%BC%96%E8%A7%A3%E7%A0%81">编解码</a>, <a href="#Email">Email</a>, <a href="#%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E6%A8%A1%E7%89%88">常用正则模版</a></li>
<li><a href="#%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7">日志监控</a>, <a href="#%E4%BB%A3%E7%A0%81Debug">代码Debug</a>, <a href="#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96">性能优化</a></li>
</ul>
</li>
<li><a href="#%E7%B2%BE%E9%80%89%E4%B8%AD%E6%96%87%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99">精选中文学习资料</a></li>
<li><a href="#%E7%B2%BE%E9%80%89Rust%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE">精选Rust开源项目</a></li>
</ul>`,readingTime:{minutes:9.97,words:2991},title:"日常开发三方库精选",type:"article"}}],["/src/profiling/intro.html",{loader:()=>F(()=>import("./intro.html-Ct1-u9vA.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"Rust性能剖析 todo",type:"article"}}],["/src/std/hashmap.html",{loader:()=>F(()=>import("./hashmap.html-Cq5y3tI0.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:0,words:1},title:"HashMap",type:"article"}}],["/src/std/intro.html",{loader:()=>F(()=>import("./intro.html-DjHhhSli.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"标准库解析",type:"article"}}],["/src/std/iterator.html",{loader:()=>F(()=>import("./iterator.html-LpCHmV1e.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"Iterator常用方法",type:"article"}}],["/src/std/search.html",{loader:()=>F(()=>import("./search.html-BbBBymdN.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2>寻找你想要的内容</h2>
<p>https://www.reddit.com/r/rust/comments/rk8lf6/how_do_you_find_all_the_functions_available_for_a/</p>
<h2>如何阅读和使用标准库</h2>
`,readingTime:{minutes:.1,words:29},title:"标准库使用最佳实践",type:"article"}}],["/src/std/vector.html",{loader:()=>F(()=>import("./vector.html-CbA1maO7.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"Vector常用方法",type:"article"}}],["/src/templates/intro.html",{loader:()=>F(()=>import("./intro.html-Cowmakv9.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"场景模版",type:"article"}}],["/src/test/assertion.html",{loader:()=>F(()=>import("./assertion.html-ByxSed0a.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在编写测试函数时，断言决定了我们的测试是通过还是失败，它为结果代言。在前面，大家已经见识过 <code>assert_eq!</code> 的使用，下面一起来看看 Rust 为我们提供了哪些好用的断言。</p>
<h2>断言列表</h2>
<p>在正式开始前，来看看常用的断言有哪些:</p>
<ul>
<li><code>assert!</code>, <code>assert_eq!</code>, <code>assert_ne!</code>, 它们会在所有模式下运行</li>
<li><code>debug_assert!</code>, <code>debug_assert_eq!</code>, <code>debug_assert_ne!</code>, 它们只会在 <code>Debug</code> 模式下运行</li>
</ul>`,readingTime:{minutes:3.16,words:949},title:"断言 assertion",type:"article"}}],["/src/test/benchmark.html",{loader:()=>F(()=>import("./benchmark.html-B2yH9_t5.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>几乎所有开发都知道，如果要测量程序的性能，就需要性能测试。</p>
<p>性能测试包含了两种：压力测试和基准测试。前者是针对接口 API，模拟大量用户去访问接口然后生成接口级别的性能数据；而后者是针对代码，可以用来测试某一段代码的运行速度，例如一个排序算法。</p>
<p>而本文将要介绍的就是基准测试 <code>benchmark</code>，在 Rust 中，有两种方式可以实现：</p>
<ul>
<li>官方提供的 <code>benchmark</code></li>
<li>社区实现，例如 <code>criterion.rs</code></li>
</ul>
<p>事实上我们更推荐后者，原因在后文会详细介绍，下面先从官方提供的工具开始。</p>`,readingTime:{minutes:5.33,words:1600},title:"基准测试 benchmark",type:"article"}}],["/src/test/ci.html",{loader:()=>F(()=>import("./ci.html-BY4TQfNY.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><a href="https://github.com/features/actions" target="_blank" rel="noopener noreferrer">GitHub Actions</a> 是官方于 2018 年推出的持续集成服务，它非常强大，本文将手把手带领大家学习如何使用 <code>GitHub Actions</code> 对 Rust 项目进行持续集成。</p>
<p>持续集成是软件开发中异常重要的一环，大家应该都听说过 <code>Jenkins</code>，它就是一个拥有悠久历史的持续集成工具。简单来说，持续集成会定期拉取同一个项目中所有成员的相关代码，对其进行自动化构建。</p>`,readingTime:{minutes:11.48,words:3445},title:"用 GitHub Actions 进行持续集成",type:"article"}}],["/src/test/intro.html",{loader:()=>F(()=>import("./intro.html-DCuD73GA.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>测试可以有效的发现程序存在的缺陷，但是它却无法证明程序不存在缺陷 - Edsger W. Dijkstra, "The Humble Programmer"</p>
</blockquote>
<p>对于程序开发而言，测试可以说是至关重要的一环，虽然它无法完全消除所有的 Bug，但是依然可以在某种程度上保证程序的正确性。</p>
<p>Rust 语言本身就非常关注安全性，但是语言级别的安全性并不能保证代码逻辑上的正确性，因为后者其实是一个相当复杂的问题。也许 Rust 的类型系统可以提供一些帮助，但是依然远远不够。</p>
<p>例如，假设我们有一个函数 <code>add_two</code> 用于将两个整数进行相加并返回一个整数结果。没错，Rust 的类型系统可以通过函数签名确保我们的输入和输出类型都是正确的，譬如你无法传入一个字符串作为输入，但是 Rust 无法保证函数中代码逻辑的正确性：明明目标是相加操作，却给整成了 <code>x - y</code>。</p>`,readingTime:{minutes:1.06,words:319},title:"测试",type:"article"}}],["/src/test/unit-integration-test.html",{loader:()=>F(()=>import("./unit-integration-test.html-CUPUnaYL.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在了解了如何在 Rust 中写测试用例后，本章节我们将学习如何实现单元测试、集成测试，其实它们用到的技术还是<a href="https://course.rs/test/write-tests.html" target="_blank" rel="noopener noreferrer">上一章节</a>中的测试技术，只不过对如何组织测试代码提出了新的要求。</p>
<h2>单元测试</h2>
<p>单元测试目标是测试某一个代码单元(一般都是函数)，验证该单元是否能按照预期进行工作，例如测试一个 <code>add</code> 函数，验证当给予两个输入时，最终返回的和是否符合预期。</p>`,readingTime:{minutes:8.74,words:2621},title:"单元测试、集成测试",type:"article"}}],["/src/test/write-tests.html",{loader:()=>F(()=>import("./write-tests.html-DnU6gXQ5.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，测试是通过函数的方式实现的，它可以用于验证被测试代码的正确性。测试函数往往依次执行以下三种行为：</p>
<ol>
<li>设置所需的数据或状态</li>
<li>运行想要测试的代码</li>
<li>判断( assert )返回的结果是否符合预期</li>
</ol>
<p>让我们来看看该如何使用 Rust 提供的特性来按照上述步骤编写测试用例。</p>
<h2>测试函数</h2>
<p>当使用 <code>Cargo</code> 创建一个 <code>lib</code> 类型的包时，它会为我们自动生成一个测试模块。先来创建一个 <code>lib</code> 类型的 <code>adder</code> 包：</p>`,readingTime:{minutes:17.43,words:5230},title:"编写测试及控制执行",type:"article"}}],["/src/too-many-lists/do-we-need-it.html",{loader:()=>F(()=>import("./do-we-need-it.html-DDBXpc5s.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>我们到底需不需要链表</h2>
<p>经常有读者询问该如何实现一个链表，怎么说呢，这个答案主要取决于你的需求，因此并不是很好回答。鉴于此，我决定通过这本书来详尽的介绍该如何实现一个链表，大家应该都能从这本书中找到答案。</p>
<p>书中我们将通过实现 6 种链表来学习基本和进阶 Rust 编程知识，在此过程中，你能学到：</p>
<ul>
<li>指针类型: <code>&amp;</code>, <code>&amp;mut</code>, <code>Box</code>, <code>Rc</code>, <code>Arc</code>, <code>*const</code>, <code>*mut</code>, <code>NonNull</code></li>
<li>所有权、借用、继承可变性、内部可变性、Copy</li>
<li>所有的关键字：struct、enum、fn、pub、impl、use, ...</li>
<li>模式匹配、泛型、解构</li>
<li>测试、安装新的工具链、使用 <code>miri</code></li>
<li>Unsafe: 裸指针、别名、栈借用、<code>UnsafeCell</code>、变体 variance</li>
</ul>`,readingTime:{minutes:6.34,words:1902},title:"",type:"article",s:"do-we-need-it"}}],["/src/too-many-lists/intro.html",{loader:()=>F(()=>import("./intro.html-CLlSQxVV.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>其它语言：兄弟，语言学了吗？来写一个链表证明你基本掌握了语法。</p>
<p>Rust 语言: 兄弟，语言精通了吗？来写一个链表证明你已经精通了 Rust！</p>
</blockquote>
<p>上面的对话非常真实，我们在之前的章节也讲过<a href="https://course.rs/first-try/sth-you-should-not-do.html#%E5%8D%83%E4%B8%87%E5%88%AB%E4%BB%8E%E9%93%BE%E8%A1%A8%E6%88%96%E5%9B%BE%E5%BC%80%E5%A7%8B%E7%BB%83%E6%89%8B" target="_blank" rel="noopener noreferrer">避免从入门到放弃</a>，其中最重要的就是 - 不要写链表或者类似的数据结构！</p>`,readingTime:{minutes:.89,words:266},title:"手把手带你实现链表",type:"article"}}],["/src/usecases/aws-rust.html",{loader:()=>F(()=>import("./aws-rust.html-BgcPzNiE.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>夸 Rust 语言的方式至少有 3000 种，但是从环保和可持续发展角度去夸的大家见过嘛？这不，AWS 就给我们带来了一篇非常精彩的文章，一起来看看。</p>
<blockquote>
<p>原文链接： https://aws.amazon.com/cn/blogs/opensource/sustainability-with-rust/ ，由于原文过长，译文进行了适当的精简(例如夸 AWS 的部分 - , -)</p>
</blockquote>
<p>Rust 是一门完全开源的语言，在 2015 年发布了 1.0 版本，但是在 2020 年 才迎来了真正的大发展契机，这是由于 Rust 的开源支持由 Mozilla 移交给了 <a href="https://foundation.rust-lang.org/" target="_blank" rel="noopener noreferrer">Rust基金会</a>，后者是由 亚马逊云AWS、谷歌、华为、微软和 Mozilla 共同创建的非营利性组织。</p>`,readingTime:{minutes:8.17,words:2451},title:"使用 Rust 来节约企业成本",type:"article"}}],["/src/usecases/intro.html",{loader:()=>F(()=>import("./intro.html-u-A_kn5W.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>自从 Rust 基金会成立后，一些优秀的落地案例如雨后春笋般冒了出来，这些充分说明了 Rust 语言在全球范围的流行。</p>
<p>这里我们将通过几个精心挑选的使用案例，来帮助大家看看 Rust 能为企业解决哪些痛点，以及该如何在企业内落地。</p>
`,readingTime:{minutes:.33,words:99},title:"Rust的使用案例",type:"article"}}],["/assets/rustlings-zh/exercises/",{loader:()=>F(()=>import("./index.html-D2c75rV8.js"),[]),meta:{date:1745158063e3,excerpt:`
<table>
<thead>
<tr>
<th>Exercise</th>
<th>Book Chapter</th>
</tr>
</thead>
<tbody>
<tr>
<td>variables</td>
<td>§3.1</td>
</tr>
<tr>
<td>functions</td>
<td>§3.3</td>
</tr>
<tr>
<td>if</td>
<td>§3.5</td>
</tr>
<tr>
<td>move_semantics</td>
<td>§4.1</td>
</tr>
<tr>
<td>primitive_types</td>
<td>§4.3</td>
</tr>
<tr>
<td>structs</td>
<td>§5.1</td>
</tr>
<tr>
<td>enums</td>
<td>§6</td>
</tr>
<tr>
<td>modules</td>
<td>§7</td>
</tr>
<tr>
<td>collections</td>
<td>§8.1, §8.3</td>
</tr>
<tr>
<td>strings</td>
<td>§8.2</td>
</tr>
<tr>
<td>error_handling</td>
<td>§9</td>
</tr>
<tr>
<td>generics</td>
<td>§10</td>
</tr>
<tr>
<td>option</td>
<td>§10.1</td>
</tr>
<tr>
<td>traits</td>
<td>§10.2</td>
</tr>
<tr>
<td>tests</td>
<td>§11.1</td>
</tr>
<tr>
<td>standard_library_types</td>
<td>§13.2</td>
</tr>
<tr>
<td>threads</td>
<td>§16.1</td>
</tr>
<tr>
<td>macros</td>
<td>§19.6</td>
</tr>
<tr>
<td>clippy</td>
<td>n/a</td>
</tr>
<tr>
<td>conversions</td>
<td>n/a</td>
</tr>
</tbody>
</table>`,readingTime:{minutes:.16,words:49},title:"Exercise to Book Chapter mapping",type:"article"}}],["/assets/writing-material/posts/Iterator.html",{loader:()=>F(()=>import("./Iterator.html-C85rvtGI.js"),[]),meta:{date:1745158063e3,excerpt:`<p>包含了一些Iterator的常用处理方法</p>
<h2>遍历同时获取元素的索引</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> xs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> xs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"In position {} we have value {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.12,words:336},title:"",type:"article",s:"Iterator"}}],["/assets/writing-material/posts/SIMD.html",{loader:()=>F(()=>import("./SIMD.html-DePdLUJM.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://www.reddit.com/r/rust/comments/rqgwaz/why_is_my_simd_code_slower_than_the_naive_one/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"SIMD"}}],["/assets/writing-material/posts/atomic.html",{loader:()=>F(()=>import("./atomic.html-OCv_ab6T.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://www.reddit.com/r/rust/comments/rtqrx4/introducing_atomicstory/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"atomic"}}],["/assets/writing-material/posts/attributes.html",{loader:()=>F(()=>import("./attributes.html-CBVK4HBs.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>#[derive(Default)]</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Default</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> NotSend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;()&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> require_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    //Returns the "default value" for a type.</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    NotSend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.09,words:28},title:"",type:"article",s:"attributes"}}],["/assets/writing-material/posts/file.html",{loader:()=>F(()=>import("./file.html-Cse73-Ay.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>读取全部内容</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">io</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">prelude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::*;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Create a path to the desired file</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello.txt"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> display</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Open the path in read-only mode, returns \`io::Result&lt;File&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> match</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">why</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">panic!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"couldn't open {}: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">why</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // Read the file contents into a string, returns \`io::Result&lt;usize&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">read_to_string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">why</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">panic!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"couldn't read {}: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">why</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">print!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{} contains:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // \`file\` goes out of scope, and the "hello.txt" file gets closed</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.8,words:539},title:"",type:"article",s:"file"}}],["/assets/writing-material/posts/function_signature.html",{loader:()=>F(()=>import("./function_signature.html-DW6AIElo.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>函数的入参是一个async function</h2>
<p>因为我们使用了trait bound，所以不能用<code>Fn() -&gt; impl Future&lt;Output=Result&lt;Return, sql::Error&gt;&gt;</code>的方式.</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> core</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> on_tran</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">F</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Fut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">F</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    where</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> F</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Fut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Fut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Future</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Output</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">await</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[tokio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">main]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">            8</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> usize</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    </span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">on_tran</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.25,words:75},title:"",type:"article",s:"function_signature"}}],["/assets/writing-material/posts/generics.html",{loader:()=>F(()=>import("./generics.html-CnWTYqAS.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://stackoverflow.com/questions/37606035/pass-generic-function-as-argument</p>
`,readingTime:{minutes:.02,words:6},title:"",type:"article",s:"generics"}}],["/assets/writing-material/posts/hashmap.html",{loader:()=>F(()=>import("./hashmap.html-uM1AYV2-.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Key of hashmap</h2>
<p>Any type that implements the Eq and Hash traits can be a key in HashMap.</p>
<p>Note that f32 and f64 do not implement Hash, likely because floating-point precision errors would make using them as hashmap keys horribly error-prone.</p>
<p>All collection classes implement Eq and Hash if their contained type also respectively implements Eq and Hash. For example, <code>Vec&lt;T&gt;</code> will implement Hash if T implements Hash.</p>`,readingTime:{minutes:.24,words:71},title:"",type:"article",s:"hashmap"}}],["/assets/writing-material/posts/identifier.html",{loader:()=>F(()=>import("./identifier.html-CiFJWvdS.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Raw identifiers</h2>
<p>Rust因为版本更迭原因，可能会新增一些<code>关键字</code>,这些新增关键字可能会导致旧的函数名调用不再通过编译，例如在Rust Edition 2015中，引入了新的关键字<code>try</code>.</p>
<p>运行以下代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">extern</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> crate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> foo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.4,words:119},title:"",type:"article",s:"identifier"}}],["/assets/writing-material/posts/images.html",{loader:()=>F(()=>import("./images.html-BkEpZ446.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>容器类型说明图</h2>
<p>https://docs.google.com/presentation/d/1q-c7UAyrUlM-eZyTo1pd8SZ0qwA_wYxmPZVOQkoDmH4/edit#slide=id.p</p>
`,readingTime:{minutes:.04,words:13},title:"",type:"article",s:"images"}}],["/assets/writing-material/posts/interview.html",{loader:()=>F(()=>import("./interview.html-FAZJivDU.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://www.reddit.com/r/rust/comments/si0j6v/im_preparing_for_a_rust_interview/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"interview"}}],["/assets/writing-material/posts/io.html",{loader:()=>F(()=>import("./io.html-DyLFyvWA.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Reading input as Raw Bytes</h2>
<p>The built-in String type uses UTF-8 internally, which adds a small, but nonzero overhead caused by UTF-8 validation when you read input into it. If you just want to process input bytes without worrying about UTF-8 (for example if you handle ASCII text), you can use <code>BufRead::read_until</code>.</p>`,readingTime:{minutes:.19,words:58},title:"",type:"article",s:"io"}}],["/assets/writing-material/posts/lifetime.html",{loader:()=>F(()=>import("./lifetime.html-BlON8BMf.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>for&lt;'a&gt;</h2>
<p>https://www.reddit.com/r/rust/comments/rq43c6/generic_fn_impl_for_iterating_over_mut_items_twice/</p>
<p>https://www.reddit.com/r/rust/comments/6uobit/fora_lifetime_syntax/</p>
`,readingTime:{minutes:.02,words:6},title:"",type:"article",s:"lifetime"}}],["/assets/writing-material/posts/lifetime_elision_rules.html",{loader:()=>F(()=>import("./lifetime_elision_rules.html-C_h94FSA.js"),[]),meta:{date:1745158063e3,excerpt:`<p>一些lifetime消除规则</p>
<h3>1</h3>
<p>Let's talk about a feature that's available in both editions: we've added some additional elision rules for <code>impl</code> blocks and function definitions. Code like this:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Reader</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> BufReader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // methods go here</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.52,words:157},title:"",type:"article",s:"lifetime_elision_rules"}}],["/assets/writing-material/posts/non-lexical-lifetime.html",{loader:()=>F(()=>import("./non-lexical-lifetime.html-DbSnEJGD.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://stackoverflow.com/questions/50251487/what-are-non-lexical-lifetimes</p>
`,readingTime:{minutes:.02,words:6},title:"",type:"article",s:"non-lexical-lifetime"}}],["/assets/writing-material/posts/operators.html",{loader:()=>F(()=>import("./operators.html-BXhS5Raz.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Operators and Symbols</h2>
<p>This appendix contains a glossary of Rust’s syntax, including operators and<br>
other symbols that appear by themselves or in the context of paths, generics,<br>
trait bounds, macros, attributes, comments, tuples, and brackets.</p>
<h3>Operators</h3>
<p>Table B-1 contains the operators in Rust, an example of how the operator would<br>
appear in context, a short explanation, and whether that operator is<br>
overloadable. If an operator is overloadable, the relevant trait to use to<br>
overload that operator is listed.</p>`,readingTime:{minutes:4.26,words:1277},title:"",type:"article",s:"operators"}}],["/assets/writing-material/posts/package.html",{loader:()=>F(()=>import("./package.html-J8N2lY_P.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>layout</h2>
<div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">Cargo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">lock</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">Cargo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">toml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">src</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">lib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">named</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">another</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">multi</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">executable</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│           ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│           └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">some_module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">benches</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">large</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">multi</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">bench</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">bench_module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">examples</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">simple</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│   └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">multi</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">example</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">│       └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ex_module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">└── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tests</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">some</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">integration</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tests</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">multi</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        ├── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        └── </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test_module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rs</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.14,words:42},title:"",type:"article",s:"package"}}],["/assets/writing-material/posts/performance.html",{loader:()=>F(()=>import("./performance.html-CGahXgQG.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>books</h2>
<ol>
<li><a href="https://nnethercote.github.io/perf-book/title-page.html" target="_blank" rel="noopener noreferrer">Rust性能之书</a></li>
<li><a href="https://likebike.com/posts/How_To_Write_Fast_Rust_Code.html#emit-asm" target="_blank" rel="noopener noreferrer">How to write fast rust code</a></li>
</ol>`,readingTime:{minutes:.45,words:135},title:"",type:"article",s:"performance"}}],["/assets/writing-material/posts/plugins.html",{loader:()=>F(()=>import("./plugins.html-C2V_kgCB.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://www.reddit.com/r/rust/comments/sboyb2/designing_a_rust_rust_plugin_system/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"plugins"}}],["/assets/writing-material/posts/reference.html",{loader:()=>F(()=>import("./reference.html-w3cS5ZRR.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>struct中的一个字段是另外一个字段的指针</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">txt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">txt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> self_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.a;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> self_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.a</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.b.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Test::b called without Test::init being called first"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { &amp;*(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.b) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.43,words:129},title:"",type:"article",s:"reference"}}],["/assets/writing-material/posts/rust-analyser.html",{loader:()=>F(()=>import("./rust-analyser.html-CBTRgoEK.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>可以为rust-analyzer指定一个check文件夹，避免构建的cache被lock住</h2>
<p>You can already setup rust-analyzer to use different folder. I set <code>Check On Save</code> to <code>check</code> and in <code>Check On Save: Extra Args</code> to <code>--target-dir target/rust-analyzer-target</code>.</p>
`,readingTime:{minutes:.18,words:53},title:"",type:"article",s:"rust-analyser"}}],["/assets/writing-material/posts/self-referential.html",{loader:()=>F(()=>import("./self-referential.html-BT7BGYbA.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>code snippets</h2>
<ol>
<li>https://stackoverflow.com/questions/67823680/open-a-single-file-from-a-zip-archive-and-pass-on-as-read-instance/67828823#67828823</li>
</ol>
<h2>crates</h2>
<ol>
<li>https://github.com/Kimundi/owning-ref-rs</li>
<li>https://github.com/joshua-maros/ouroboros</li>
</ol>`,readingTime:{minutes:.1,words:31},title:"",type:"article",s:"self-referential"}}],["/assets/writing-material/posts/string.html",{loader:()=>F(()=>import("./string.html-Cdtyy_cQ.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>字符串常量</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // You can use escapes to write bytes by their hexadecimal values...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> byte_escape</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "I'm writing </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\x52\\x75\\x73\\x74</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">!"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"What are you doing</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\x3F</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">x3F means ?) {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">byte_escape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // ...or Unicode code points.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> unicode_codepoint</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\u{211D}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> character_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">DOUBLE-STRUCK CAPITAL R</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\"</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Unicode character {} (U+211D) is called {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                unicode_codepoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">character_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> long_string</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "String literals</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                        can span multiple lines.</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                        The linebreak and indentation here -&gt;\\</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">                        &lt;- can be escaped too!"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">long_string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.3,words:390},title:"",type:"article",s:"string"}}],["/assets/writing-material/posts/system_command.html",{loader:()=>F(()=>import("./system_command.html-CEDB4bZw.js"),[]),meta:{date:1745158063e3,excerpt:`<p>关于调用os的命令</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rustc"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">arg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"--versn"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap_or_else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            panic!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"failed to execute process: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.status.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">success</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_utf8_lossy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.stdout);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        print!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rustc succeeded and stdout was:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_utf8_lossy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.stderr);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        print!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"rustc failed and stderr was:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.01,words:302},title:"",type:"article",s:"system_command"}}],["/assets/writing-material/posts/threads.html",{loader:()=>F(()=>import("./threads.html-Rw548-av.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Arc和Mutex结合实现多线程数据修改和汇总</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Arc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Mutex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::thread;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> JobStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    jobs_completed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Arc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Mutex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">JobStatus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">jobs_completed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status_shared</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Arc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">move</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_millis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">250</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status_shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.jobs_completed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().jobs_completed </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"waiting... "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_millis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.34,words:101},title:"",type:"article",s:"threads"}}],["/assets/writing-material/posts/to_resolved.html",{loader:()=>F(()=>import("./to_resolved.html-CuzCgDkY.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>unknown <code>into</code> behavior</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">dyn</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "connection reset by peer"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:.09,words:28},title:"",type:"article",s:"to_resolved"}}],["/assets/writing-material/posts/tokio.html",{loader:()=>F(()=>import("./tokio.html-CK1obFu7.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>性能</h2>
<p>https://www.reddit.com/r/rust/comments/lg0a7b/benchmarking_tokio_tasks_and_goroutines/</p>
`,readingTime:{minutes:.01,words:4},title:"",type:"article",s:"tokio"}}],["/assets/writing-material/posts/trivia.html",{loader:()=>F(()=>import("./trivia.html-CR3Tqyyl.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Rust冷知识</h2>
<p>https://www.reddit.com/r/rust/comments/rwufz4/borrow_checker_allows_borrow_of_mutably_borrowed/</p>
`,readingTime:{minutes:.02,words:6},title:"",type:"article",s:"trivia"}}],["/assets/writing-material/posts/wasm.html",{loader:()=>F(()=>import("./wasm.html-BP4kczeq.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://www.reddit.com/r/rust/comments/s9yugv/compile_rust_to_wasm_and_import_as_typescript/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"wasm"}}],["/assets/writing-material/style_guide/coding.html",{loader:()=>F(()=>import("./coding.html-NSy_yWfD.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2><a class="header-anchor" href="#使用tap库来实现point-free编程风格"><span>使用</span></a><a href="https://github.com/myrrlyn/tap" target="_blank" rel="noopener noreferrer">tap</a>库来实现<code>point-free</code>编程风格</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> tap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Tap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">TapFallible</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SomeValue</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SomeOtherValue</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SomeError</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">SomeValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">SomeError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"foo"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">SomeOtherValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">SomeError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "bar"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Success"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"This is a failure message"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> my_fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">SomeOtherValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">SomeError</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">tap_err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"foo() failed with error: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">and_then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo_val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo_val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">tap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"bar() returned result: {:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> my_fun</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.31,words:94},title:"代码风格",type:"article"}}],["/assets/writing-material/style_guide/naming.html",{loader:()=>F(()=>import("./naming.html-BWwGY9Jv.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>基本的Rust命名规范在<a href="https://github.com/rust-lang/rfcs/blob/master/text/0430-finalizing-naming-conventions.md" target="_blank" rel="noopener noreferrer">RFC 430</a>中有描述.</p>
<p>通常，对于"type-level"的构造Rust倾向于使用驼峰命名,而对于'value-level'的构造使用蛇形命名。详情如下:</p>
<table>
<thead>
<tr>
<th>条目</th>
<th>惯例</th>
</tr>
</thead>
<tbody>
<tr>
<td>包Crates</td>
<td><a href="https://github.com/rust-lang/api-guidelines/issues/29" target="_blank" rel="noopener noreferrer">unclear</a></td>
</tr>
<tr>
<td>模块Modules</td>
<td><code>snake_case</code></td>
</tr>
<tr>
<td>类型Types</td>
<td><code>UpperCamelCase</code></td>
</tr>
<tr>
<td>特征Traits</td>
<td><code>UpperCamelCase</code></td>
</tr>
<tr>
<td>枚举项</td>
<td><code>UpperCamelCase</code></td>
</tr>
<tr>
<td>函数Functions</td>
<td><code>snake_case</code></td>
</tr>
<tr>
<td>方法Methods</td>
<td><code>snake_case</code></td>
</tr>
<tr>
<td>通用构造器General constructors</td>
<td><code>new</code> or <code>with_more_details</code></td>
</tr>
<tr>
<td>转换构造器Conversion constructors</td>
<td><code>from_some_other_type</code></td>
</tr>
<tr>
<td>宏Macros</td>
<td><code>snake_case!</code></td>
</tr>
<tr>
<td>局部变量Local variables</td>
<td><code>snake_case</code></td>
</tr>
<tr>
<td>静态类型Statics</td>
<td><code>SCREAMING_SNAKE_CASE</code></td>
</tr>
<tr>
<td>常量Constants</td>
<td><code>SCREAMING_SNAKE_CASE</code></td>
</tr>
<tr>
<td>类型参数Type parameters</td>
<td><code>UpperCamelCase</code>, 通常使用一个大写字母: <code>T</code></td>
</tr>
<tr>
<td>生命周期Lifetimes</td>
<td>通常使用小写字母: <code>'a</code>, <code>'de</code>, <code>'src</code></td>
</tr>
<tr>
<td>Features</td>
<td><a href="https://github.com/rust-lang/api-guidelines/issues/101" target="_blank" rel="noopener noreferrer">unclear</a> but see <a href="#c-feature">C-FEATURE</a></td>
</tr>
</tbody>
</table>`,readingTime:{minutes:6.66,words:1998},title:"命名规范",type:"article"}}],["/src/advance/async/async-await.html",{loader:()=>F(()=>import("./async-await.html-BvZMWka8.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在入门章节中，我们简单学习了该如何使用 <code>async/.await</code>， 同时在后面也了解了一些底层原理，现在是时候继续深入了。</p>
<p><code>async/.await</code> 是 Rust 语法的一部分，它在遇到阻塞操作时( 例如 IO )会让出当前线程的所有权而不是阻塞当前线程，这样就允许当前线程继续去执行其它代码，最终实现并发。</p>
<p>有两种方式可以使用 <code>async</code>： <code>async fn</code> 用于声明函数，<code>async { ... }</code> 用于声明语句块，它们会返回一个实现 <code>Future</code> 特征的值:</p>`,readingTime:{minutes:6.59,words:1976},title:"async/await 和 Stream 流处理",type:"article"}}],["/src/advance/async/future-excuting.html",{loader:()=>F(()=>import("./future-excuting.html-CTPiPmsT.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>异步编程背后到底藏有什么秘密？究竟是哪只幕后之手在操纵这一切？如果你对这些感兴趣，就继续看下去，否则可以直接跳过，因为本章节的内容对于一个 API 工程师并没有太多帮助。</p>
<p>但是如果你希望能深入理解 <code>Rust</code> 的 <code>async/.await</code> 代码是如何工作、理解运行时和性能，甚至未来想要构建自己的 <code>async</code> 运行时或相关工具，那么本章节终究不会辜负于你。</p>
<h2>Future 特征</h2>
<p><code>Future</code> 特征是 Rust 异步编程的核心，毕竟异步函数是异步编程的核心，而 <code>Future</code> 恰恰是异步函数的返回值和被执行的关键。</p>`,readingTime:{minutes:16.36,words:4908},title:"底层探秘: Future 执行器与任务调度",type:"article"}}],["/src/advance/async/getting-started.html",{loader:()=>F(()=>import("./getting-started.html-QgWOjTEV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>众所周知，Rust 可以让我们写出性能高且安全的软件，那么异步编程这块儿呢？是否依然在高性能的同时保证了安全？</p>
<p>我们先通过一张 web 框架性能对比图来感受下 Rust 异步编程的性能:</p>
<img alt="actix-vs-gin screenshot" width="100%" src="https://pic1.zhimg.com/v2-3cebd732fb56f43713f106fdcfa44a3c_b.png" class="center">
<p>上图并不能说 Rust 写的 <code>actix</code> 框架比 Go 的 <code>gin</code> 更好、更优秀，但是确实可以一定程度上说明 Rust 的异步性能非常的高！</p>`,readingTime:{minutes:21.21,words:6364},title:"Async 编程简介",type:"article"}}],["/src/advance/async/intro.html",{loader:()=>F(()=>import("./intro.html-DvG38XCx.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在艰难的学完 Rust 入门和进阶所有的 70 个章节后，我们终于来到了这里。假如之前攀登的是珠穆朗玛峰，那么现在攀登的就是乔戈里峰( 比珠峰还难攀爬... )。</p>
<p>如果你想开发 Web 服务器、数据库驱动、消息服务等需要高并发的服务，那么本章的内容将值得认真对待和学习。</p>
<p>接下来，我们将深入了解 async/await 的使用方式及背后的原理。</p>
<blockquote>
<p>本章在内容上大量借鉴和翻译了原版英文书籍<a href="https://rust-lang.github.io/async-book/01_getting_started/01_chapter.html" target="_blank" rel="noopener noreferrer">Asynchronous Programming In Rust</a>, 特此感谢</p>
</blockquote>`,readingTime:{minutes:.55,words:166},title:"异步编程",type:"article"}}],["/src/advance/async/multi-futures-simultaneous.html",{loader:()=>F(()=>import("./multi-futures-simultaneous.html-BHicL0XV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>招数单一，杀伤力惊人，说的就是 <code>.await</code> ，但是光用它，还真做不到一招鲜吃遍天。比如我们该如何同时运行多个任务，而不是使用 <code>.await</code> 慢悠悠地排队完成。</p>
<h2>join!</h2>
<p><code>futures</code> 包中提供了很多实用的工具，其中一个就是 <code>join!</code> 宏， 它允许我们同时等待多个不同 <code>Future</code> 的完成，且可以并发地运行这些 <code>Future</code>。</p>
<p>先来看一个不是很给力的、使用<code>.await</code>的版本:</p>`,readingTime:{minutes:7.05,words:2114},title:"使用 join! 和 select! 同时运行多个 Future",type:"article"}}],["/src/advance/async/pain-points-and-workarounds.html",{loader:()=>F(()=>import("./pain-points-and-workarounds.html-BBQZdBjC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>async</code> 在 Rust 依然比较新，疑难杂症少不了，而它们往往还处于活跃开发状态，短时间内无法被解决，因此才有了本文。下面一起来看看这些问题以及相应的临时解决方案。</p>
<h2>在 async 语句块中使用 ?</h2>
<p><code>async</code> 语句块和 <code>async fn</code> 最大的区别就是前者无法显式的声明返回值，在大多数时候这都不是问题，但是当配合 <code>?</code> 一起使用时，问题就有所不同:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> fut</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">?;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">?;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.54,words:1663},title:"一些疑难问题的解决办法",type:"article"}}],["/src/advance/async/pin-unpin.html",{loader:()=>F(()=>import("./pin-unpin.html-4NugRhQh.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 异步编程中，有一个定海神针般的存在，它就是 <code>Pin</code>，作用说简单也简单，说复杂也非常复杂，当初刚出来时就连一些 Rust 大佬都一头雾水，何况瑟瑟发抖的我。好在今非昔比，目前网上的资料已经很全，而我就借花献佛，给大家好好讲讲这个 <code>Pin</code>。</p>
<p>在 Rust 中，所有的类型可以分为两类:</p>
<ul>
<li><strong>类型的值可以在内存中安全地被移动</strong>，例如数值、字符串、布尔值、结构体、枚举，总之你能想到的几乎所有类型都可以落入到此范畴内</li>
<li><strong>自引用类型</strong>，大魔王来了，大家快跑，在之前章节我们已经见识过它的厉害</li>
</ul>`,readingTime:{minutes:11.83,words:3550},title:"定海神针 Pin 和 Unpin",type:"article"}}],["/src/advance/async/web-server.html",{loader:()=>F(()=>import("./web-server.html-CMXAkmSe.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>知识学得再多，不实际应用也是纸上谈兵，不是忘掉就是废掉，对于技术学习尤为如此。在之前章节中，我们已经学习了 <code>Async Rust</code> 的方方面面，现在来将这些知识融会贯通，最终实现一个并发 Web 服务器。</p>
<h2>多线程版本的 Web 服务器</h2>
<p>在正式开始前，先来看一个单线程版本的 <code>Web</code> 服务器，该例子来源于 <a href="https://doc.rust-lang.org/book/ch20-01-single-threaded.html" target="_blank" rel="noopener noreferrer"><code>Rust Book</code></a> 一书。</p>`,readingTime:{minutes:8.25,words:2475},title:"一个实践项目: Web 服务器",type:"article"}}],["/src/advance/circle-self-ref/circle-reference.html",{loader:()=>F(()=>import("./circle-reference.html-DcYqkH60.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的安全性是众所周知的，但是不代表它不会内存泄漏。一个典型的例子就是同时使用 <code>Rc&lt;T&gt;</code> 和 <code>RefCell&lt;T&gt;</code> 创建循环引用，最终这些引用的计数都无法被归零，因此 <code>Rc&lt;T&gt;</code> 拥有的值也不会被释放清理。</p>
<h2>何为循环引用</h2>
<p>关于内存泄漏，如果你没有充足的 Rust 经验，可能都无法造出一份代码来再现它：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> crate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Cons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    Cons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        match</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            Cons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.22,words:2766},title:"Weak 与循环引用",type:"article"}}],["/src/advance/circle-self-ref/intro.html",{loader:()=>F(()=>import("./intro.html-DJMCBxKj.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>实现一个链表是学习各大编程语言的常用技巧，但是在 Rust 中实现链表意味着····Hell，是的，你没看错，Welcome to hell。</p>
<p>链表在 Rust 中之所以这么难，完全是因为循环引用和自引用的问题引起的，这两个问题可以说综合了 Rust 的很多难点，难出了新高度，因此本书专门开辟一章，分为上下两篇，试图彻底解决这两个老大难。</p>
<p>本章难度较高，但是非常值得深入阅读，它会让你对 Rust 的理解上升到一个新的境界。</p>
`,readingTime:{minutes:.55,words:165},title:"循环引用与自引用",type:"article"}}],["/src/advance/circle-self-ref/self-referential.html",{loader:()=>F(()=>import("./self-referential.html-B58X0c_f.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>结构体自引用</h2>
<p>结构体自引用在 Rust 中是一个众所周知的难题，而且众说纷纭，也没有一篇文章能把相关的话题讲透，那本文就王婆卖瓜，来试试看能不能讲透这一块儿内容，让读者大大们舒心。</p>
<h2>平平无奇的自引用</h2>
<p>可能也有不少人第一次听说自引用结构体，那咱们先来看看它们长啥样。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> SelfRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 该引用指向上面的value</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    pointer_to_value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.23,words:2470},title:"",type:"article",s:"self-referential"}}],["/src/advance/concurrency-with-threads/concurrency-parallelism.html",{loader:()=>F(()=>import("./concurrency-parallelism.html-JolSK5v2.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>并发是同一时间应对多件事情的能力 - <a href="https://en.wikipedia.org/wiki/Rob_Pike" target="_blank" rel="noopener noreferrer">Rob Pike</a></p>
</blockquote>
<p>并行和并发其实并不难，但是也给一些用户造成了困扰，因此我们专门开辟一个章节，用于讲清楚这两者的区别。</p>
<p><code>Erlang</code> 之父 <a href="https://en.wikipedia.org/wiki/Joe_Armstrong_(programmer)" target="_blank" rel="noopener noreferrer"><code>Joe Armstrong</code></a>（伟大的异步编程先驱，开创一个时代的殿堂级计算机科学家，我还犹记得当年刚学到 <code>Erlang</code> 时的震撼，respect！）用一张 5 岁小孩都能看懂的图片解释了并发与并行的区别：</p>`,readingTime:{minutes:7.65,words:2294},title:"并发和并行",type:"article"}}],["/src/advance/concurrency-with-threads/intro.html",{loader:()=>F(()=>import("./intro.html-D83N32Zo.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>安全和高效的处理并发是 Rust 语言的主要目标之一。随着现代处理器的核心数不断增加，并发和并行已经成为日常编程不可或缺的一部分，甚至于 Go 语言已经将并发简化到一个 <code>go</code> 关键字就可以。</p>
<p>可惜的是，在 Rust 中由于语言设计理念、安全、性能的多方面考虑，并没有采用 Go 语言大道至简的方式，而是选择了多线程与 <code>async/await</code> 相结合，优点是可控性更强、性能更高，缺点是复杂度并不低，当然这也是系统级语言的应有选择：<strong>使用复杂度换取可控性和性能</strong>。</p>
<p>不过，大家也不用担心，本书的目标就是降低 Rust 使用门槛，这个门槛自然也包括如何在 Rust 中进行异步并发编程，我们将从多线程以及 <code>async/await</code> 两个方面去深入浅出地讲解，首先，从本章的多线程开始。</p>`,readingTime:{minutes:1.05,words:314},title:"多线程并发编程",type:"article"}}],["/src/advance/concurrency-with-threads/message-passing.html",{loader:()=>F(()=>import("./message-passing.html-BrOu95JJ.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在多线程间有多种方式可以共享、传递数据，最常用的方式就是通过消息传递或者将锁和<code>Arc</code>联合使用，而对于前者，在编程界还有一个大名鼎鼎的<code>Actor线程模型</code>为其背书，典型的有 Erlang 语言，还有 Go 语言中很经典的一句话：</p>
<blockquote>
<p>Do not communicate by sharing memory; instead, share memory by communicating</p>
</blockquote>
<p>而对于后者，我们将在下一节中进行讲述。</p>
<h2>消息通道</h2>
<p>与 Go 语言内置的<code>chan</code>不同，Rust 是在标准库里提供了消息通道(<code>channel</code>)，你可以将其想象成一场直播，多个主播联合起来在搞一场直播，最终内容通过通道传输给屏幕前的我们，其中主播被称之为<strong>发送者</strong>，观众被称之为<strong>接收者</strong>，显而易见的是：一个通道应该支持多个发送者和接收者。</p>`,readingTime:{minutes:13.24,words:3973},title:"线程间的消息传递",type:"article"}}],["/src/advance/concurrency-with-threads/races.html",{loader:()=>F(()=>import("./races.html-C6AQZzN0.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"数据竞争",type:"article"}}],["/src/advance/concurrency-with-threads/ref-counter-lock.html",{loader:()=>F(()=>import("./ref-counter-lock.html-BMLUOYv6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://oribenshir.github.io/afternoon_rusting//blog/deref-smart-pointer</p>
`,readingTime:{minutes:.03,words:9},title:"Rc、Arc、Mutex、Rwlock(todo)",type:"article"}}],["/src/advance/concurrency-with-threads/send-sync.html",{loader:()=>F(()=>import("./send-sync.html-Bttg7dCK.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>为何 Rc、RefCell 和裸指针不可以在多线程间使用？如何让裸指针可以在多线程使用？我们一起来探寻下这些问题的答案。</p>
<h2>无法用于多线程的<code>Rc</code></h2>
<p>先来看一段多线程使用<code>Rc</code>的代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::thread;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">move</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">join</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.58,words:1974},title:"基于 Send 和 Sync 的线程安全",type:"article"}}],["/src/advance/concurrency-with-threads/sync1.html",{loader:()=>F(()=>import("./sync1.html-BUsPybF0.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在多线程编程中，同步性极其的重要，当你需要同时访问一个资源、控制不同线程的执行次序时，都需要使用到同步性。</p>
<p>在 Rust 中有多种方式可以实现同步性。在上一节中讲到的消息传递就是同步性的一种实现方式，例如我们可以通过消息传递来控制不同线程间的执行次序。还可以使用共享内存来实现同步性，例如通过锁和原子操作等并发原语来实现多个线程同时且安全地去访问一个资源。</p>
<h2>该如何选择</h2>
<p>共享内存可以说是同步的灵魂，因为消息传递的底层实际上也是通过共享内存来实现，两者的区别如下：</p>
<ul>
<li>共享内存相对消息传递能节省多次内存拷贝的成本</li>
<li>共享内存的实现简洁的多</li>
<li>共享内存的锁竞争更多</li>
</ul>`,readingTime:{minutes:18.91,words:5672},title:"线程同步：锁、Condvar 和信号量",type:"article"}}],["/src/advance/concurrency-with-threads/sync2.html",{loader:()=>F(()=>import("./sync2.html-D2iY58-T.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>Mutex</code>用起来简单，但是无法并发读，<code>RwLock</code>可以并发读，但是使用场景较为受限且性能不够，那么有没有一种全能性选手呢？ 欢迎我们的<code>Atomic</code>闪亮登场。</p>
<p>从 Rust1.34 版本后，就正式支持原子类型。原子指的是一系列不可被 CPU 上下文交换的机器指令，这些指令组合在一起就形成了原子操作。在多核 CPU 下，当某个 CPU 核心开始运行原子操作时，会先暂停其它 CPU 内核对内存的操作，以保证原子操作不会被其它 CPU 内核所干扰。</p>
<p>由于原子操作是通过指令提供的支持，因此它的性能相比锁和消息传递会好很多。相比较于锁而言，原子类型不需要开发者处理加锁和释放锁的问题，同时支持修改，读取等操作，还具备较高的并发性能，几乎所有的语言都支持原子类型。</p>`,readingTime:{minutes:8.53,words:2560},title:"线程同步：Atomic 原子类型与内存顺序",type:"article"}}],["/src/advance/concurrency-with-threads/thread.html",{loader:()=>F(()=>import("./thread.html-VcR3g6jP.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>放在十年前，多线程编程可能还是一个少数人才掌握的核心概念，但是在今天，随着编程语言的不断发展，多线程、多协程、Actor 等并发编程方式已经深入人心，同时多线程编程的门槛也在不断降低，本章节我们来看看在 Rust 中该如何使用多线程。</p>
<h2>多线程编程的风险</h2>
<p>由于多线程的代码是同时运行的，因此我们无法保证线程间的执行顺序，这会导致一些问题：</p>
<ul>
<li>竞态条件(race conditions)，多个线程以非一致性的顺序同时访问数据资源</li>
<li>死锁(deadlocks)，两个线程都想使用某个资源，但是又都在等待对方释放资源后才能使用，结果最终都无法继续执行</li>
<li>一些因为多线程导致的很隐晦的 BUG，难以复现和解决</li>
</ul>`,readingTime:{minutes:16,words:4800},title:"使用线程",type:"article"}}],["/src/advance/difficulties/pointer.html",{loader:()=>F(()=>import("./pointer.html-CF0HRnGu.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.04,words:11},title:"裸指针、引用和智能指针 TODO",type:"article"}}],["/src/advance/functional-programing/closure.html",{loader:()=>F(()=>import("./closure.html-BCsv28AI.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>闭包这个词语由来已久，自上世纪 60 年代就由 <code>Scheme</code> 语言引进之后，被广泛用于函数式编程语言中，进入 21 世纪后，各种现代化的编程语言也都不约而同地把闭包作为核心特性纳入到语言设计中来。那么到底何为闭包？</p>
<p>闭包是<strong>一种匿名函数，它可以赋值给变量也可以作为参数传递给其它函数，不同于函数的是，它允许捕获调用者作用域中的值</strong>，例如：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:21.97,words:6592},title:"闭包 Closure",type:"article"}}],["/src/advance/functional-programing/intro.html",{loader:()=>F(()=>import("./intro.html-DTEHwYZ2.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>罗马不是一天建成的，编程语言亦是如此，每一门编程语言在借鉴前辈的同时，也会提出自己独有的特性，Rust 即是如此。当站在巨人肩膀上时，一个人所能看到的就更高更远，恰好，我们看到了函数式语言的优秀特性，例如：</p>
<ul>
<li>使用函数作为参数进行传递</li>
<li>使用函数作为函数返回值</li>
<li>将函数赋值给变量</li>
</ul>
<p>见猎心喜，我们忍不住就借鉴了过来，于是你能看到本章的内容，天下语言一大。。。跑题了。</p>
<p>关于函数式编程到底是什么的争论由来已久，本章节并不会踏足这个泥潭，因此我们在这里主要关注的是函数式特性：</p>
<ul>
<li>闭包 Closure</li>
<li>迭代器 Iterator</li>
<li>模式匹配</li>
<li>枚举</li>
</ul>`,readingTime:{minutes:1.04,words:312},title:"函数式编程",type:"article"}}],["/src/advance/functional-programing/iterator.html",{loader:()=>F(()=>import("./iterator.html-Bxwr_dHe.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果你询问一个 Rust 资深开发：写 Rust 项目最需要掌握什么？相信迭代器往往就是答案之一。无论你是编程新手亦或是高手，实际上大概率都用过迭代器，虽然自己可能并没有意识到这一点:)</p>
<p>迭代器允许我们迭代一个连续的集合，例如数组、动态数组 <code>Vec</code>、<code>HashMap</code> 等，在此过程中，只需关心集合中的元素如何处理，而无需关心如何开始、如何结束、按照什么样的索引去访问等问题。</p>
<h2>For 循环与迭代器</h2>
<p>从用途来看，迭代器跟 <code>for</code> 循环颇为相似，都是去遍历一个集合，但是实际上它们存在不小的差别，其中最主要的差别就是：<strong>是否通过索引来访问集合</strong>。</p>`,readingTime:{minutes:16.1,words:4829},title:"迭代器 Iterator",type:"article"}}],["/src/advance/into-types/converse.html",{loader:()=>F(()=>import("./converse.html-DRGjZz69.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 是类型安全的语言，因此在 Rust 中做类型转换不是一件简单的事，这一章节我们将对 Rust 中的类型转换进行详尽讲解。</p>
<blockquote>
<p>高能预警：本章节有些难，可以考虑学了进阶后回头再看</p>
</blockquote>
<h2><code>as</code>转换</h2>
<p>先来看一段代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u16</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Ten is less than one hundred."</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:14.66,words:4398},title:"类型转换",type:"article"}}],["/src/advance/into-types/custom-type.html",{loader:()=>F(()=>import("./custom-type.html-CRJpqpWW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>弱弱地、不负责任地说，Rust 的学习难度之恶名，可能有一半来源于 Rust 的类型系统，而其中一半的一半则来自于本章节的内容。在本章，我们将重点学习如何创建自定义类型，以及了解何为动态大小的类型。</p>
<h2>newtype</h2>
<p>何为 <code>newtype</code>？简单来说，就是使用<a href="https://course.rs/basic/compound-type/struct.html#%E5%85%83%E7%BB%84%E7%BB%93%E6%9E%84%E4%BD%93tuple-struct" target="_blank" rel="noopener noreferrer">元组结构体</a>的方式将已有的类型包裹起来：<code>struct Meters(u32);</code>，那么此处 <code>Meters</code> 就是一个 <code>newtype</code>。</p>`,readingTime:{minutes:6.68,words:2004},title:"深入 Rust 类型",type:"article"}}],["/src/advance/into-types/enum-int.html",{loader:()=>F(()=>import("./enum-int.html-B1IFqu22.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，从枚举到整数的转换很容易，但是反过来，就没那么容易，甚至部分实现还挺邪恶, 例如使用<code>transmute</code>。</p>
<h2>一个真实场景的需求</h2>
<p>在实际场景中，从整数到枚举的转换有时还是非常需要的，例如你有一个枚举类型，然后需要从外面传入一个整数，用于控制后续的流程走向，此时就需要用整数去匹配相应的枚举(你也可以用整数匹配整数-, -，看看会不会被喷)。</p>
<p>既然有了需求，剩下的就是看看该如何实现，这篇文章的水远比你想象的要深，且看八仙过海各显神通。</p>
<h2>C 语言的实现</h2>
<p>对于 C 语言来说，万物皆邪恶，因此我们不讨论安全，只看实现，不得不说很简洁：</p>`,readingTime:{minutes:3.64,words:1091},title:"整数转换为枚举",type:"article"}}],["/src/advance/into-types/intro.html",{loader:()=>F(()=>import("./intro.html-Cb9Lz1FV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 是强类型语言，同时也是强安全语言，这些特性导致了 Rust 的类型注定比一般语言要更深入也更困难。</p>
<p>本章将深入讲解一些进阶的 Rust 类型以及类型转换，希望大家喜欢。</p>
`,readingTime:{minutes:.24,words:73},title:"深入类型",type:"article"}}],["/src/advance/into-types/sized.html",{loader:()=>F(()=>import("./sized.html-C7-NP7mY.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中类型有多种抽象的分类方式，例如本书之前章节的：基本类型、集合类型、复合类型等。再比如说，如果从编译器何时能获知类型大小的角度出发，可以分成两类:</p>
<ul>
<li>定长类型( sized )，这些类型的大小在编译时是已知的</li>
<li>不定长类型( unsized )，与定长类型相反，它的大小只有到了程序运行时才能动态获知，这种类型又被称之为 DST</li>
</ul>
<p>首先，我们来深入看看何为 DST。</p>
<h2>动态大小类型 DST</h2>
<p>读者大大们之前学过的几乎所有类型，都是固定大小的类型，包括集合 <code>Vec</code>、<code>String</code> 和 <code>HashMap</code> 等，而动态大小类型刚好与之相反：<strong>编译器无法在编译期得知该类型值的大小，只有到了程序运行时，才能动态获知</strong>。对于动态类型，我们使用 <code>DST</code>(dynamically sized types)或者 <code>unsized</code> 类型来称呼它。</p>`,readingTime:{minutes:7.5,words:2249},title:"Sized 和不定长类型 DST",type:"article"}}],["/src/advance/lifetime/advance.html",{loader:()=>F(()=>import("./advance.html-CHzGkFDa.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>其实关于生命周期的常用特性，在上一节中，我们已经概括得差不多了，本章主要讲解生命周期的一些高级或者不为人知的特性。对于新手，完全可以跳过本节内容，进行下一章节的学习。</p>
<h2>不太聪明的生命周期检查</h2>
<p>在 Rust 语言学习中，一个很重要的部分就是阅读一些你可能不经常遇到，但是一旦遇到就难以理解的代码，这些代码往往最令人头疼的就是生命周期，这里我们就来看看一些本以为可以编译，但是却因为生命周期系统不够聪明导致编译失败的代码。</p>
<h4>例子 1</h4>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mutate_and_share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> loan</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mutate_and_share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">share</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">loan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:15.81,words:4744},title:"深入生命周期",type:"article"}}],["/src/advance/lifetime/intro.html",{loader:()=>F(()=>import("./intro.html-BbySG7OV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>何为高阶？一个字：难，二个字：很难，七个字：其实也没那么难。至于到底难不难，还是交给各位看官评判吧 😄</p>
<p>大家都知道，生命周期在 Rust 中是最难的部分之一，因此相关内容被分成了两个章节：基础和进阶，其中基础部分已经在之前学习过，下面一起来看看真正的<code>难</code>字怎么写。</p>
`,readingTime:{minutes:.38,words:114},title:"生命周期",type:"article"}}],["/src/advance/lifetime/misconceptions.html",{loader:()=>F(()=>import("./misconceptions.html-D21zzhQP.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://github.com/pretzelhammer/rust-blog/blob/master/posts/common-rust-lifetime-misconceptions.md</p>
`,readingTime:{minutes:.06,words:17},title:"一些关于生命周期的误解",type:"article"}}],["/src/advance/lifetime/static.html",{loader:()=>F(()=>import("./static.html-Bg9MAMn9.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的难点之一就在于它有不少容易混淆的概念，例如 <code>&amp;str</code> 、<code>str</code> 与 <code>String</code>， 再比如本文标题那两位。不过与字符串也有不同，这两位对于普通用户来说往往是无需进行区分的，但是当大家想要深入学习或使用 Rust 时，它们就会成为成功路上的拦路虎了。</p>
<p>与生命周期的其它章节不同，本文短小精悍，阅读过程可谓相当轻松愉快，话不多说，let's go。</p>
<p><code>'static</code> 在 Rust 中是相当常见的，例如字符串字面值就具有 <code>'static</code> 生命周期:</p>`,readingTime:{minutes:5.3,words:1590},title:"&'static 和 T: 'static",type:"article"}}],["/src/advance/smart-pointer/box.html",{loader:()=>F(()=>import("./box.html-VefGZ2yv.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>关于作者帅不帅，估计争议还挺多的，但是如果说 <code>Box&lt;T&gt;</code> 是不是 Rust 中最常见的智能指针，那估计没有任何争议。因为 <code>Box&lt;T&gt;</code> 允许你将一个值分配到堆上，然后在栈上保留一个智能指针指向堆上的数据。</p>
<p>之前我们在<a href="https://course.rs/basic/ownership/ownership.html#%E6%A0%88stack%E4%B8%8E%E5%A0%86heap" target="_blank" rel="noopener noreferrer">所有权章节</a>简单讲过堆栈的概念，这里再补充一些。</p>`,readingTime:{minutes:11.41,words:3422},title:"Box<T> 堆对象分配",type:"article"}}],["/src/advance/smart-pointer/cell-refcell.html",{loader:()=>F(()=>import("./cell-refcell.html-BE-VHHvV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的编译器之严格，可以说是举世无双。特别是在所有权方面，Rust 通过严格的规则来保证所有权和借用的正确性，最终为程序的安全保驾护航。</p>
<p>但是严格是一把双刃剑，带来安全提升的同时，损失了灵活性，有时甚至会让用户痛苦不堪、怨声载道。因此 Rust 提供了 <code>Cell</code> 和 <code>RefCell</code> 用于内部可变性，简而言之，可以在拥有不可变引用的同时修改目标数据，对于正常的代码实现来说，这个是不可能做到的（要么一个可变借用，要么多个不可变借用）。</p>
<blockquote>
<p>内部可变性的实现是因为 Rust 使用了 <code>unsafe</code> 来做到这一点，但是对于使用者来说，这些都是透明的，因为这些不安全代码都被封装到了安全的 API 中</p>
</blockquote>`,readingTime:{minutes:12.97,words:3890},title:"Cell 和 RefCell",type:"article"}}],["/src/advance/smart-pointer/deref.html",{loader:()=>F(()=>import("./deref.html-C7vsKf1e.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在开始之前，我们先来看一段代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:10.97,words:3290},title:"Deref 解引用",type:"article"}}],["/src/advance/smart-pointer/drop.html",{loader:()=>F(()=>import("./drop.html-VuQmLro7.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，我们之所以可以一拳打跑 GC 的同时一脚踢翻手动资源回收，主要就归功于 <code>Drop</code> 特征，同时它也是智能指针的必备特征之一。</p>
<h2>学习目标</h2>
<p>如何自动和手动释放资源及执行指定的收尾工作</p>
<h2>Rust 中的资源回收</h2>
<p>在一些无 GC 语言中，程序员在一个变量无需再被使用时，需要手动释放它占用的内存资源，如果忘记了，那么就会发生内存泄漏，最终臭名昭著的 <code>OOM</code> 问题可能就会发生。</p>
<p>而在 Rust 中，你可以指定在一个变量超出作用域时，执行一段特定的代码，最终编译器将帮你自动插入这段收尾代码。这样，就无需在每一个使用该变量的地方，都写一段代码来进行收尾工作和资源释放。不禁让人感叹，Rust 的大腿真粗，香！</p>`,readingTime:{minutes:6.04,words:1812},title:"Drop 释放资源",type:"article"}}],["/src/advance/smart-pointer/intro.html",{loader:()=>F(()=>import("./intro.html-BKmOuHn4.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在各个编程语言中，指针的概念几乎都是相同的：<strong>指针是一个包含了内存地址的变量，该内存地址引用或者指向了另外的数据</strong>。</p>
<p>在 Rust 中，最常见的指针类型是引用，引用通过 <code>&amp;</code> 符号表示。不同于其它语言，引用在 Rust 中被赋予了更深层次的含义，那就是：借用其它变量的值。引用本身很简单，除了指向某个值外并没有其它的功能，也不会造成性能上的额外损耗，因此是 Rust 中使用最多的指针类型。</p>
<p>而智能指针则不然，它虽然也号称指针，但是它是一个复杂的家伙：通过比引用更复杂的数据结构，包含比引用更多的信息，例如元数据，当前长度，最大可用长度等。总之，Rust 的智能指针并不是独创，在 C++ 或者其他语言中也存在相似的概念。</p>`,readingTime:{minutes:2.48,words:743},title:"智能指针",type:"article"}}],["/src/advance/smart-pointer/rc-arc.html",{loader:()=>F(()=>import("./rc-arc.html-DBK6afdE.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 所有权机制要求一个值只能有一个所有者，在大多数情况下，都没有问题，但是考虑以下情况：</p>
<ul>
<li>在图数据结构中，多个边可能会拥有同一个节点，该节点直到没有边指向它时，才应该被释放清理</li>
<li>在多线程中，多个线程可能会持有同一个数据，但是你受限于 Rust 的安全机制，无法同时获取该数据的可变引用</li>
</ul>
<p>以上场景不是很常见，但是一旦遇到，就非常棘手，为了解决此类问题，Rust 在所有权机制之外又引入了额外的措施来简化相应的实现：通过引用计数的方式，允许一个数据资源在同一时刻拥有多个所有者。</p>
<p>这种实现机制就是 <code>Rc</code> 和 <code>Arc</code>，前者适用于单线程，后者适用于多线程。由于二者大部分情况下都相同，因此本章将以 <code>Rc</code> 作为讲解主体，对于 <code>Arc</code> 的不同之处，另外进行单独讲解。</p>`,readingTime:{minutes:9.09,words:2728},title:"Rc 与 Arc",type:"article"}}],["/src/advance/unsafe/inline-asm.html",{loader:()=>F(()=>import("./inline-asm.html-Y1AUxMvo.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>本章内容对于学习 Rust 不是必须的，而且难度很高，大家简单知道有这回事就好，不必非要学会 😄</p>
</blockquote>
<p>Rust 提供了 <code>asm!</code> 宏，可以让大家在 Rust 代码中嵌入汇编代码，对于一些极致高性能或者底层的场景还是非常有用的，例如操作系统内核开发。但通常来说，大家并不应该在自己的项目中使用到该项技术，它为极客而生！</p>
<p>本章的例子是基于 <code>x86/x86-64</code> 汇编的，但是其它架构也是支持的，目前支持的包括：</p>
<ul>
<li>x86 和 x86-64</li>
<li>ARM</li>
<li>AArch64</li>
<li>RISC-V</li>
</ul>`,readingTime:{minutes:8.81,words:2644},title:"内联汇编",type:"article"}}],["/src/advance/unsafe/intro.html",{loader:()=>F(()=>import("./intro.html-DFCBFinP.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>圣人论迹不论心，论心世上无圣人，对于编程语言而言，亦是如此。</p>
<p>虽然在本章之前，我们学到的代码都是在编译期就得到了 Rust 的安全保障，但是在其内心深处也隐藏了一些阴暗面，在这些阴暗面里，内存安全就存在一些变数了：当不娴熟的开发者接触到这些阴暗面，就可能写出不安全的代码，因此我们称这种代码为 <code>unsafe</code> 代码块。</p>
<h2>为何会有 unsafe</h2>
<p>几乎每个语言都有 <code>unsafe</code> 关键字，但 Rust 语言使用 <code>unsafe</code> 的原因可能与其它编程语言还有所不同。</p>
<h4>过强的编译器</h4>`,readingTime:{minutes:5.21,words:1564},title:"unsafe 简介",type:"article"}}],["/src/advance/unsafe/superpowers.html",{loader:()=>F(()=>import("./superpowers.html-D0iThblF.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>古龙有一部小说，名为"七种兵器"，其中每一种都精妙绝伦，令人闻风丧胆，而 <code>unsafe</code> 也有五种兵器，它们可以让你拥有其它代码无法实现的能力，同时它们也像七种兵器一样令人闻风丧胆，下面一起来看看庐山真面目。</p>
<h2>解引用裸指针</h2>
<p>裸指针(raw pointer，又称原生指针) 在功能上跟引用类似，同时它也需要显式地注明可变性。但是又和引用有所不同，裸指针长这样: <code>*const T</code> 和 <code>*mut T</code>，它们分别代表了不可变和可变。</p>
<p>大家在之前学过 <code>*</code> 操作符，知道它可以用于解引用，但是在裸指针 <code>*const T</code> 中，这里的 <code>*</code> 只是类型名称的一部分，并没有解引用的含义。</p>`,readingTime:{minutes:17.43,words:5228},title:"五种兵器",type:"article"}}],["/src/advance/unsafe/ub.html",{loader:()=>F(()=>import("./ub.html-sWJ4Ig0M.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/rp44u5/request_for_unsafe_review/</p>
`,readingTime:{minutes:.04,words:11},title:"那些会导致UB的代码",type:"article"}}],["/src/appendix/rust-versions/1.58.html",{loader:()=>F(()=>import("./1.58.html-zdYqem2P.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>众所周知，Rust 小版本发布非常频繁，6 周就发布一次，因此通常不会有特别值得普通用户关注的内容，但是这次 1.58 版本不同，新增了(stable 化了)一个非常好用的功能： <strong>在格式化字符串时捕获环境中的值</strong>。</p>
<blockquote>
<p>Rust 1.58 官方 release doc: <a href="https://blog.rust-lang.org/2022/01/13/Rust-1.58.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.58.0 | Rust Blog</a></p>
</blockquote>`,readingTime:{minutes:2.19,words:658},title:"Rust 新版解读 | 1.58 | 重点: 格式化字符串捕获环境中的值",type:"article"}}],["/src/appendix/rust-versions/1.59.html",{loader:()=>F(()=>import("./1.59.html-BVCqs-U7.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 团队于今天凌晨( 2022-02-25 )发布了最新的 1.59 版本，其中最引人瞩目的特性应该就是支持在代码中内联汇编了，一起来看看。</p>
<h2>内联汇编( inline assembly )</h2>
<p>该特性对于需要底层控制的应用非常有用，例如想要控制底层执行、访问特定的机器指令等。</p>
<p>例如，如果目标平台是 <code>x86-64</code> 时，你可以这么写：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">arch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::asm;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 使用 shifts 和 adds 实现 x 乘以 6</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u64</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {\`\`</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    asm!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "mov {tmp}, {x}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "shl {tmp}, 1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "shl {x}, 2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        "add {x}, {tmp}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> inout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">reg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> * </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.29,words:987},title:"Rust 新版解读 | 1.59 | 重点: 内联汇编、解构式赋值",type:"article"}}],["/src/appendix/rust-versions/1.60.html",{loader:()=>F(()=>import("./1.60.html-VLCHoug4.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>原文链接: https://blog.rust-lang.org/2022/04/07/Rust-1.60.0.html</p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.60 版本:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> stable</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:5.73,words:1718},title:"Rust 新版解读 | 1.60 | 重点: 查看 Cargo 构建耗时详情、Cargo Feature 增加新语法",type:"article"}}],["/src/appendix/rust-versions/1.61.html",{loader:()=>F(()=>import("./1.61.html-mZE6juev.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>原文链接: https://blog.rust-lang.org/2022/05/19/Rust-1.61.0.html<br>
翻译 by ：<a href="https://github.com/AllanDowney" target="_blank" rel="noopener noreferrer">AllanDowney</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.61 版本:</p>`,readingTime:{minutes:2.56,words:768},title:"Rust 新版解读 | 1.61 | 重点: 自定义 main 函数 ExitCode、const fn 增强、为锁定的 stdio 提供静态句柄",type:"article"}}],["/src/appendix/rust-versions/1.62.html",{loader:()=>F(()=>import("./1.62.html-DzGy33vN.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>原文链接: https://blog.rust-lang.org/2022/06/30/Rust-1.62.0.html<br>
翻译 by ：<a href="https://github.com/AllanDowney" target="_blank" rel="noopener noreferrer">AllanDowney</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.62 版本:</p>`,readingTime:{minutes:1.92,words:577},title:"Rust 新版解读 | 1.62 | 重点: Cargo add，#[default] 枚举变量，Linux 上更薄更快的 Mutex，裸机 x86_64 构架",type:"article"}}],["/src/appendix/rust-versions/1.63.html",{loader:()=>F(()=>import("./1.63.html-B3M2tcVm.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.63 官方 release doc: <a href="https://blog.rust-lang.org/2022/08/11/Rust-1.63.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.63.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.63 版本:</p>`,readingTime:{minutes:2.96,words:888},title:"Rust 新版解读 | 1.63 | 重点: Scoped threads",type:"article"}}],["/src/appendix/rust-versions/1.64.html",{loader:()=>F(()=>import("./1.64.html-Dd4wTj9P.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.64 官方 release doc: <a href="https://blog.rust-lang.org/2022/09/22/Rust-1.64.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.64.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.64 版本:</p>`,readingTime:{minutes:3.63,words:1088},title:"Rust 新版解读 | 1.64 | 重点: IntoFuture , Cargo 优化",type:"article"}}],["/src/appendix/rust-versions/1.65.html",{loader:()=>F(()=>import("./1.65.html-LIwMIbYU.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.65 官方 release doc: <a href="https://blog.rust-lang.org/2022/11/03/Rust-1.65.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.65.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.65 版本:</p>`,readingTime:{minutes:2.98,words:893},title:"Rust 新版解读 | 1.65 | 重点: 泛型关联类型，新绑定语法！",type:"article"}}],["/src/appendix/rust-versions/1.66.html",{loader:()=>F(()=>import("./1.66.html-PN-SFDlU.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.66 官方 release doc: <a href="https://blog.rust-lang.org/2022/12/15/Rust-1.66.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.66.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.66 版本:</p>`,readingTime:{minutes:3.04,words:913},title:"Rust 新版解读 | 1.66 | 重点: 有字段枚举的显示判别",type:"article"}}],["/src/appendix/rust-versions/1.67.html",{loader:()=>F(()=>import("./1.67.html-BKM0Ype4.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.67 官方 release doc: <a href="https://blog.rust-lang.org/2023/01/26/Rust-1.67.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.67.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.67 版本:</p>`,readingTime:{minutes:1.04,words:313},title:"Rust 新版解读 | 1.67 | #[must_use] in async fn",type:"article"}}],["/src/appendix/rust-versions/1.68.html",{loader:()=>F(()=>import("./1.68.html-De0tnMfi.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.68 官方 release doc: <a href="https://blog.rust-lang.org/2023/03/09/Rust-1.68.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.68.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.68 版本:</p>`,readingTime:{minutes:2.3,words:689},title:"Rust 新版解读 | 1.68 | crates index 优化",type:"article"}}],["/src/appendix/rust-versions/1.69.html",{loader:()=>F(()=>import("./1.69.html-CNkIsSPy.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.69 官方 release doc: <a href="https://blog.rust-lang.org/2023/04/20/Rust-1.69.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.69.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.69 版本:</p>`,readingTime:{minutes:1.34,words:403},title:"Rust 新版解读 | 1.69 | cargo fix",type:"article"}}],["/src/appendix/rust-versions/1.70.html",{loader:()=>F(()=>import("./1.70.html-BKw9PJX-.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.70 官方 release doc: <a href="https://blog.rust-lang.org/2023/06/01/Rust-1.70.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.70.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.70 版本:</p>`,readingTime:{minutes:2.92,words:876},title:"Rust 新版解读 | 1.70 | OnceCell && IsTerminal",type:"article"}}],["/src/appendix/rust-versions/1.71.html",{loader:()=>F(()=>import("./1.71.html-BN-6SmZe.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.71 官方 release doc: <a href="https://blog.rust-lang.org/2023/07/13/Rust-1.71.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.71.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.71 版本:</p>`,readingTime:{minutes:2.5,words:750},title:"Rust 新版解读 | 1.71 | C-unwind API",type:"article"}}],["/src/appendix/rust-versions/1.72.html",{loader:()=>F(()=>import("./1.72.html-DbtAncTR.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.72 官方 release doc: <a href="https://blog.rust-lang.org/2023/08/24/Rust-1.72.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.72.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.72 版本:</p>`,readingTime:{minutes:2.9,words:871},title:"Rust 新版解读 | 1.72 | feature启用提示",type:"article"}}],["/src/appendix/rust-versions/1.73.html",{loader:()=>F(()=>import("./1.73.html-DBIAjLId.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.73 官方 release doc: <a href="https://blog.rust-lang.org/2023/10/05/Rust-1.73.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.73.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.73 版本:</p>`,readingTime:{minutes:1.43,words:430},title:"Rust 新版解读 | 1.73 | panic 报错展示优化",type:"article"}}],["/src/appendix/rust-versions/1.74.html",{loader:()=>F(()=>import("./1.74.html-DU2JlLvT.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.74 官方 release doc: <a href="https://blog.rust-lang.org/2023/11/16/Rust-1.74.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.74.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.74 版本:</p>`,readingTime:{minutes:2.29,words:687},title:"Rust 新版解读 | 1.74 | 通过 Cargo 配置 Lint",type:"article"}}],["/src/appendix/rust-versions/1.75.html",{loader:()=>F(()=>import("./1.75.html-Dv2fDk6H.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.75 官方 release doc: <a href="https://blog.rust-lang.org/2023/12/28/Rust-1.75.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.75.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.75 版本:</p>`,readingTime:{minutes:1.76,words:528},title:"Rust 新版解读 | 1.75 | async trait 和 RPITIT",type:"article"}}],["/src/appendix/rust-versions/1.76.html",{loader:()=>F(()=>import("./1.76.html-BVPnN0th.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.76 官方 release doc: <a href="https://blog.rust-lang.org/2024/02/08/Rust-1.76.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.76.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.76 版本:</p>`,readingTime:{minutes:1.31,words:394},title:"Rust 新版解读 | 1.76 | ABI 兼容性更新",type:"article"}}],["/src/appendix/rust-versions/1.77.html",{loader:()=>F(()=>import("./1.77.html-yw4JvIph.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.77 官方 release doc: <a href="https://blog.rust-lang.org/2024/03/21/Rust-1.77.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.77.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.77 版本:</p>`,readingTime:{minutes:1.96,words:587},title:"Rust 新版解读 | 1.77 | 异步函数支持递归",type:"article"}}],["/src/appendix/rust-versions/1.78.html",{loader:()=>F(()=>import("./1.78.html-BJ5hP9Eu.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.78 官方 release doc: <a href="https://blog.rust-lang.org/2024/05/02/Rust-1.78.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.78.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.78 版本:</p>`,readingTime:{minutes:3.95,words:1184},title:"Rust 新版解读 | 1.78 | 诊断属性宏",type:"article"}}],["/src/appendix/rust-versions/1.79.html",{loader:()=>F(()=>import("./1.79.html-Dy-zzCta.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.79 官方 release doc: <a href="https://blog.rust-lang.org/2024/06/13/Rust-1.79.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.79.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.79 版本:</p>`,readingTime:{minutes:2.55,words:766},title:"Rust 新版解读 | 1.79 | 内联 const，临时变量生命周期延长",type:"article"}}],["/src/appendix/rust-versions/1.80.html",{loader:()=>F(()=>import("./1.80.html-BP8SJUb-.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.80 官方 release doc: <a href="https://blog.rust-lang.org/2024/07/25/Rust-1.80.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.80.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.80 版本:</p>`,readingTime:{minutes:3.34,words:1001},title:"Rust 新版解读 | 1.80 | “懒”类型、开区间范围模式",type:"article"}}],["/src/appendix/rust-versions/1.81.html",{loader:()=>F(()=>import("./1.81.html-n1gb0Jqt.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.81 官方 release doc: <a href="https://blog.rust-lang.org/2024/09/05/Rust-1.81.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.81.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.81 版本:</p>`,readingTime:{minutes:2.33,words:700},title:"Rust 新版解读 | 1.81 | expect lint",type:"article"}}],["/src/appendix/rust-versions/1.82.html",{loader:()=>F(()=>import("./1.82.html-BmEuFuMT.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.82 官方 release doc: <a href="https://blog.rust-lang.org/2024/09/05/Rust-1.82.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.82.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.82 版本:</p>`,readingTime:{minutes:12.92,words:3876},title:"Rust 新版解读 | 1.82 | 超大更新",type:"article"}}],["/src/appendix/rust-versions/1.83.html",{loader:()=>F(()=>import("./1.83.html-BnbABaaR.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.83 官方 release doc: <a href="https://blog.rust-lang.org/2024/11/28/Rust-1.83.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.83.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.83 版本:</p>`,readingTime:{minutes:2.07,words:622},title:"Rust 新版解读 | 1.83 | Const 能力拓展",type:"article"}}],["/src/appendix/rust-versions/1.84.html",{loader:()=>F(()=>import("./1.84.html-n6erSZW5.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.84 官方 release doc: <a href="https://blog.rust-lang.org/2025/01/09/Rust-1.84.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.84.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.84 版本:</p>`,readingTime:{minutes:4.24,words:1272},title:"Rust 新版解读 | 1.84 | Const 能力拓展",type:"article"}}],["/src/appendix/rust-versions/1.85.html",{loader:()=>F(()=>import("./1.85.html-BcIvY3tq.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>Rust 1.85 官方 release doc: <a href="https://blog.rust-lang.org/2025/02/20/Rust-1.85.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.85.0 | Rust Blog</a></p>
</blockquote>
<p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.85 版本:</p>`,readingTime:{minutes:7.28,words:2183},title:"Rust 新版解读 | 1.85 | Rust 2024 稳定版、async 闭包",type:"article"}}],["/src/appendix/rust-versions/intro.html",{loader:()=>F(()=>import("./intro.html-BX73oqAb.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本目录包含了 Rust 历次版本更新的重要内容解读，需要注意，每个版本实际更新的内容要比这里记录的更多，全部内容请访问每节开头的官方链接查看。</p>
`,readingTime:{minutes:.24,words:72},title:"附录 G：Rust 更新版本列表",type:"article"}}],["/src/basic/base-type/char-bool.html",{loader:()=>F(()=>import("./char-bool.html-lLT3EBF6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这三个类型所处的地位比较尴尬，你说它们重要吧，确实出现的身影不是很多，说它们不重要吧，有时候也是不可或缺，而且这三个类型都有一个共同点：简单，因此我们统一放在一起讲。</p>
<h2>字符类型(char)</h2>
<p>字符，对于没有其它编程经验的新手来说可能不太好理解（没有编程经验敢来学 Rust 的绝对是好汉），但是你可以把它理解为英文中的字母，中文中的汉字。</p>
<p>下面的代码展示了几个颇具异域风情的字符：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'z'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> z</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ℤ'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> g</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '国'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> heart_eyed_cat</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '😻'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.77,words:832},title:"字符、布尔、单元类型",type:"article"}}],["/src/basic/base-type/function.html",{loader:()=>F(()=>import("./function.html-DqH4cTW3.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的函数我们在之前已经见过不少，跟其他语言几乎没有什么区别。因此本章的学习之路将轻松和愉快，骚年们，请珍惜这种愉快，下一章你将体验到不一样的 Rust。</p>
<p>在函数界，有一个函数只闻其名不闻其声，可以止小孩啼！在程序界只有 <code>hello,world!</code> 可以与之媲美，它就是 <code>add</code> 函数：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">j</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.03,words:1509},title:"函数",type:"article"}}],["/src/basic/base-type/",{loader:()=>F(()=>import("./index.html-E6rdMQyu.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>当一门语言不谈类型时，你得小心，这大概率是动态语言（别拍我，我承认是废话）。但是把类型大张旗鼓的用多个章节去讲的，Rust 是其中之一。</p>
<p>Rust 每个值都有其确切的数据类型，总的来说可以分为两类：基本类型和复合类型。 基本类型意味着它们往往是一个最小化原子类型，无法解构为其它类型（一般意义上来说），由以下组成：</p>
<ul>
<li>数值类型：有符号整数 (<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>isize</code>)、 无符号整数 (<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>, <code>usize</code>) 、浮点数 (<code>f32</code>, <code>f64</code>)、以及有理数、复数</li>
<li>字符串：字符串字面量和字符串切片 <code>&amp;str</code></li>
<li>布尔类型：<code>true</code> 和 <code>false</code></li>
<li>字符类型：表示单个 Unicode 字符，存储为 4 个字节</li>
<li>单元类型：即 <code>()</code> ，其唯一的值也是 <code>()</code></li>
</ul>`,readingTime:{minutes:1.8,words:541},title:"基本类型",type:"article"}}],["/src/basic/base-type/numbers.html",{loader:()=>F(()=>import("./numbers.html-DGlqBd7B.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>我朋友有一个领导（读者：你朋友？黑人问号）说过一句话：所有代码就是 0 和 1 ，简单的很。咱不评价这句话的正确性，但是计算机底层由 01 组成倒是真的。</p>
<p>计算机和数值关联在一起的时间，远比我们想象的要长，因此数值类型可以说是有计算机以来就有的类型，下面内容将深入讨论 Rust 的数值类型以及相关的运算符。</p>
<p>Rust 使用一个相对传统的语法来创建整数（<code>1</code>，<code>2</code>，...）和浮点数（<code>1.0</code>，<code>1.1</code>，...）。整数、浮点数的运算和你在其它语言上见过的一致，都是通过常见的运算符来完成。</p>`,readingTime:{minutes:13.43,words:4030},title:"数值类型",type:"article"}}],["/src/basic/base-type/statement-expression.html",{loader:()=>F(()=>import("./statement-expression.html-CZC5H4Rk.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的函数体是由一系列语句组成，最后由一个表达式来返回值，例如：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_with_extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 语句</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 语句</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic"> // 表达式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.19,words:957},title:"语句和表达式",type:"article"}}],["/src/basic/collections/hashmap.html",{loader:()=>F(()=>import("./hashmap.html-D1p1_ml6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>和动态数组一样，<code>HashMap</code> 也是 Rust 标准库中提供的集合类型，但是又与动态数组不同，<code>HashMap</code> 中存储的是一一映射的 <code>KV</code> 键值对，并提供了平均复杂度为 <code>O(1)</code> 的查询方法，当我们希望通过一个 <code>Key</code> 去查询值时，该类型非常有用，以致于 Go 语言将该类型设置成了语言级别的内置特性。</p>
<p>Rust 中哈希类型（哈希映射）为 <code>HashMap&lt;K,V&gt;</code>，在其它语言中，也有类似的数据结构，例如 <code>hash map</code>，<code>map</code>，<code>object</code>，<code>hash table</code>，<code>字典</code> 等等，引用小品演员孙涛的一句台词：大家都是本地狐狸，别搁那装貂 😃。</p>`,readingTime:{minutes:10.52,words:3157},title:"KV 存储 HashMap",type:"article"}}],["/src/basic/collections/intro.html",{loader:()=>F(()=>import("./intro.html-9bOfusgk.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 标准库中有这样一批原住民，它们天生贵族，当你看到的一瞬间，就能爱上它们，上面是我瞎编的，其实主要是离了它们不行，不信等会我介绍后，你放个狠话，偏不用它们试试？</p>
<p>集合在 Rust 中是一类比较特殊的类型，因为 Rust 中大多数数据类型都只能代表一个特定的值，但是集合却可以代表一大堆值。而且与语言级别的数组、字符串类型不同，标准库里的这些家伙是分配在堆上，因此都可以进行动态的增加和减少。</p>
<p>瞧，第一个集合排着整齐的队列登场了，它里面的每个元素都雄赳赳气昂昂跟在另外一个元素后面，大小、宽度、高度竟然全部一致，真是令人惊叹。 它就是 <code>Vector</code> 类型，允许你创建一个动态数组，它里面的元素是一个紧挨着另一个排列的。</p>`,readingTime:{minutes:1.61,words:484},title:"集合类型",type:"article"}}],["/src/basic/collections/vector.html",{loader:()=>F(()=>import("./vector.html-DbJNFXdm.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>动态数组类型用 <code>Vec&lt;T&gt;</code> 表示，事实上，在之前的章节，它的身影多次出现，我们一直没有细讲，只是简单的把它当作数组处理。</p>
<p>动态数组允许你存储多个值，这些值在内存中一个紧挨着另一个排列，因此访问其中某个元素的成本非常低。动态数组只能存储相同类型的元素，如果你想存储不同类型的元素，可以使用之前讲过的枚举类型或者特征对象。</p>
<p>总之，当我们想拥有一个列表，里面都是相同类型的数据时，动态数组将会非常有用。</p>
<h2>创建动态数组</h2>
<p>在 Rust 中，有多种方式可以创建动态数组。</p>
<h3>Vec::new</h3>`,readingTime:{minutes:13.39,words:4016},title:"动态数组 Vector",type:"article"}}],["/src/basic/compound-type/array.html",{loader:()=>F(()=>import("./array.html-BTENquZq.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在日常开发中，使用最广的数据结构之一就是数组，在 Rust 中，最常用的数组有两种，第一种是速度很快但是长度固定的 <code>array</code>，第二种是可动态增长的但是有性能损耗的 <code>Vector</code>，在本书中，我们称 <code>array</code> 为数组，<code>Vector</code> 为动态数组。</p>
<p>不知道你们发现没，这两个数组的关系跟 <code>&amp;str</code> 与 <code>String</code> 的关系很像，前者是长度固定的字符串切片，后者是可动态增长的字符串。其实，在 Rust 中无论是 <code>String</code> 还是 <code>Vector</code>，它们都是 Rust 的高级类型：集合类型，在后面章节会有详细介绍。</p>`,readingTime:{minutes:8.4,words:2521},title:"数组",type:"article"}}],["/src/basic/compound-type/enum.html",{loader:()=>F(()=>import("./enum.html-CGk7oko2.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>枚举(enum 或 enumeration)允许你通过列举可能的成员来定义一个<strong>枚举类型</strong>，例如扑克牌花色：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> PokerSuit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Clubs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Spades</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Diamonds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">  Hearts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:9.99,words:2997},title:"枚举",type:"article"}}],["/src/basic/compound-type/intro.html",{loader:()=>F(()=>import("./intro.html-Dn-V_XMB.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>行百里者半九十，欢迎大家来到这里，虽然还不到中点，但是已经不远了。如果说之前学的基础数据类型是原子，那么本章将讲的数据类型可以认为是分子。</p>
<p>本章的重点在复合类型上，顾名思义，复合类型是由其它类型组合而成的，最典型的就是结构体 <code>struct</code> 和枚举 <code>enum</code>。例如平面上的一个点 <code>point(x, y)</code>，它由两个数值类型的值 <code>x</code> 和 <code>y</code> 组合而来。我们无法单独去维护这两个数值，因为单独一个 <code>x</code> 或者 <code>y</code> 是含义不完整的，无法标识平面上的一个点，应该把它们看作一个整体去理解和处理。</p>`,readingTime:{minutes:2.46,words:737},title:"复合类型",type:"article"}}],["/src/basic/compound-type/string-slice.html",{loader:()=>F(()=>import("./string-slice.html-C8KDS_l3.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在其他语言中，字符串往往是送分题，因为实在是太简单了，例如 <code>"hello, world"</code> 就是字符串章节的几乎全部内容了，但是如果你带着同样的想法来学 Rust，我保证，绝对会栽跟头，<strong>因此这一章大家一定要重视，仔细阅读，这里有很多其它 Rust 书籍中没有的内容</strong>。</p>
<p>首先来看段很简单的代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> my_name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "Pascal"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  greet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">my_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> greet</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Hello, {}!"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:20.25,words:6076},title:"字符串",type:"article"}}],["/src/basic/compound-type/struct.html",{loader:()=>F(()=>import("./struct.html-yVoQ29Ic.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>上一节中提到需要一个更高级的数据结构来帮助我们更好的抽象问题，结构体 <code>struct</code> 恰恰就是这样的复合数据结构，它是由其它数据类型组合而来。 其它语言也有类似的数据结构，不过可能有不同的名称，例如 <code>object</code>、 <code>record</code> 等。</p>
<p>结构体跟之前讲过的<a href="https://course.rs/basic/compound-type/tuple.html" target="_blank" rel="noopener noreferrer">元组</a>有些相像：都是由多种类型组合而成。但是与元组不同的是，结构体可以为内部的每个字段起一个富有含义的名称。因此结构体更加灵活更加强大，你无需依赖这些字段的顺序来访问和解析它们。</p>`,readingTime:{minutes:11.06,words:3318},title:"结构体",type:"article"}}],["/src/basic/compound-type/tuple.html",{loader:()=>F(()=>import("./tuple.html-DuMKEjgV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>元组是由多种类型组合到一起形成的，因此它是复合类型，元组的长度是固定的，元组中元素的顺序也是固定的。</p>
<p>可以通过以下语法创建一个元组：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.2,words:661},title:"元组",type:"article"}}],["/src/basic/crate-module/crate.html",{loader:()=>F(()=>import("./crate.html-DjCtde6q.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>当读者按照章节顺序读到本章时，意味着你已经几乎具备了参与真实项目开发的能力。但是真实项目远比我们之前的 <code>cargo new</code> 的默认目录结构要复杂，好在，Rust 为我们提供了强大的包管理工具：</p>
<ul>
<li><strong>项目(Package)</strong>：可以用来构建、测试和分享包</li>
<li><strong>工作空间(WorkSpace)</strong>：对于大型项目，可以进一步将多个包联合在一起，组织成工作空间</li>
<li><strong>包(Crate)</strong>：一个由多个模块组成的树形结构，可以作为三方库进行分发，也可以生成可执行文件进行运行</li>
<li><strong>模块(Module)</strong>：可以一个文件多个模块，也可以一个文件一个模块，模块可以被认为是真实项目中的代码组织单元</li>
</ul>`,readingTime:{minutes:4.72,words:1417},title:"包和 Package",type:"article"}}],["/src/basic/crate-module/intro.html",{loader:()=>F(()=>import("./intro.html-B2Q5IXPi.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>当工程规模变大时，把代码写到一个甚至几个文件中，都是不太聪明的做法，可能存在以下问题：</p>
<ol>
<li>单个文件过大，导致打开、翻页速度大幅变慢</li>
<li>查询和定位效率大幅降低，类比下，你会把所有知识内容放在一个几十万字的文档中吗？</li>
<li>只有一个代码层次：函数，难以维护和协作，想象一下你的操作系统只有一个根目录，剩下的都是单层子目录会如何：<code>disaster</code></li>
<li>容易滋生 Bug</li>
</ol>
<p>同时，将大的代码文件拆分成包和模块，还允许我们实现代码抽象和复用：将你的代码封装好后提供给用户，那么用户只需要调用公共接口即可，无需知道内部该如何实现。</p>`,readingTime:{minutes:1.27,words:382},title:"包和模块",type:"article"}}],["/src/basic/crate-module/module.html",{loader:()=>F(()=>import("./module.html-DFk20ByN.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在本章节，我们将深入讲讲 Rust 的代码构成单元：模块。使用模块可以将包中的代码按照功能性进行重组，最终实现更好的可读性及易用性。同时，我们还能非常灵活地去控制代码的可见性，进一步强化 Rust 的安全性。</p>
<h2>创建嵌套模块</h2>
<p>小旅馆，sorry，是小餐馆，相信大家都挺熟悉的，学校外的估计也没少去，那么咱就用小餐馆为例，来看看 Rust 的模块该如何使用。</p>
<p>使用 <code>cargo new --lib restaurant</code> 创建一个小餐馆，注意，这里创建的是一个库类型的 <code>Package</code>，然后将以下代码放入 <code>src/lib.rs</code> 中：</p>`,readingTime:{minutes:12.17,words:3651},title:"模块 Module",type:"article"}}],["/src/basic/crate-module/use.html",{loader:()=>F(()=>import("./use.html-CCkRQMZA.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果代码中，通篇都是 <code>crate::front_of_house::hosting::add_to_waitlist</code> 这样的函数调用形式，我不知道有谁会喜欢，也许靠代码行数赚工资的人会很喜欢，但是强迫症肯定受不了，悲伤的是程序员大多都有强迫症。。。</p>
<p>因此我们需要一个办法来简化这种使用方式，在 Rust 中，可以使用 <code>use</code> 关键字把路径提前引入到当前作用域中，随后的调用就可以省略该路径，极大地简化了代码。</p>
<h2>基本引入方式</h2>
<p>在 Rust 中，引入模块中的项有两种方式：<a href="https://course.rs/basic/crate-module/module.html#%E7%94%A8%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E6%A8%A1%E5%9D%97" target="_blank" rel="noopener noreferrer">绝对路径和相对路径</a>，这两者在前面章节都有讲过，就不再赘述，先来看看使用绝对路径的引入方式。</p>`,readingTime:{minutes:11.62,words:3485},title:"使用 use 及受限可见性",type:"article"}}],["/src/basic/match-pattern/all-patterns.html",{loader:()=>F(()=>import("./all-patterns.html-_4ssld2I.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在本书中我们已领略过许多不同类型模式的例子，本节的目标就是把这些模式语法都罗列出来，方便大家检索查阅（模式匹配在我们的开发中会经常用到）。</p>
<h3>匹配字面值</h3>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"two"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"three"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"anything"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:17.76,words:5327},title:"全模式列表",type:"article"}}],["/src/basic/match-pattern/intro.html",{loader:()=>F(()=>import("./intro.html-BcR3Uc9k.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>模式匹配，这个词，对于非函数语言编程来说，真的还蛮少听到，因为它经常出现在函数式编程里，用于为复杂的类型系统提供一个轻松的解构能力。</p>
<p>曾记否？在枚举和流程控制那章，我们遗留了两个问题，都是关于 <code>match</code> 的，第一个是如何对 <code>Option</code> 枚举进行进一步处理，另外一个是如何用 <code>match</code> 来替代 <code>else if</code> 这种丑陋的多重分支使用方式。那么让我们先一起来揭开 <code>match</code> 的神秘面纱。</p>
`,readingTime:{minutes:.51,words:153},title:"模式匹配",type:"article"}}],["/src/basic/match-pattern/match-if-let.html",{loader:()=>F(()=>import("./match-if-let.html-B--V46Y1.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，模式匹配最常用的就是 <code>match</code> 和 <code>if let</code>，本章节将对两者及相关的概念进行详尽介绍。</p>
<p>先来看一个关于 <code>match</code> 的简单例子：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    East</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    West</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    North</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    South</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dire</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">South</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> dire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">East</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"East"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">North</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Direction</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">South</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"South or North"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"West"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.61,words:2582},title:"match 和 if let",type:"article"}}],["/src/basic/match-pattern/option.html",{loader:()=>F(()=>import("./option.html-BcPBKrti.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在枚举那章，提到过 <code>Option</code> 枚举，它用来解决 Rust 中变量是否有值的问题，定义如下：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.18,words:655},title:"解构 Option",type:"article"}}],["/src/basic/match-pattern/pattern-match.html",{loader:()=>F(()=>import("./pattern-match.html-BwZzlv_k.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2>模式</h2>
<p>模式是 Rust 中的特殊语法，它用来匹配类型中的结构和数据，它往往和 <code>match</code> 表达式联用，以实现强大的模式匹配能力。模式一般由以下内容组合而成：</p>
<ul>
<li>字面值</li>
<li>解构的数组、枚举、结构体或者元组</li>
<li>变量</li>
<li>通配符</li>
<li>占位符</li>
</ul>
<h3>所有可能用到模式的地方</h3>
<h4>match 分支</h4>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">match</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> VALUE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PATTERN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">EXPRESSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PATTERN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">EXPRESSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    PATTERN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">EXPRESSION</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.13,words:1238},title:"模式适用场景",type:"article"}}],["/src/basic/ownership/borrowing.html",{loader:()=>F(()=>import("./borrowing.html-DvDl0NSv.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>上节中提到，如果仅仅支持通过转移所有权的方式获取一个值，那会让程序变得复杂。 Rust 能否像其它编程语言一样，使用某个变量的指针或者引用呢？答案是可以。</p>
<p>Rust 通过 <code>借用(Borrowing)</code> 这个概念来达成上述的目的，<strong>获取变量的引用，称之为借用(borrowing)</strong>。正如现实生活中，如果一个人拥有某样东西，你可以从他那里借来，当使用完毕后，也必须要物归原主。</p>
<h2>引用与解引用</h2>
<p>常规引用是一个指针类型，指向了对象存储的内存地址。在下面代码中，我们创建一个 <code>i32</code> 值的引用 <code>y</code>，然后使用解引用运算符来解出 <code>y</code> 所使用的值:</p>`,readingTime:{minutes:9.78,words:2933},title:"引用与借用",type:"article"}}],["/src/basic/ownership/",{loader:()=>F(()=>import("./index.html-C6U-Hrkv.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 之所以能成为万众瞩目的语言，就是因为其内存安全性。在以往，内存安全几乎都是通过 GC 的方式实现，但是 GC 会引来性能、内存占用以及 Stop the world 等问题，在高性能场景和系统编程上是不可接受的，因此 Rust 采用了与 ( 不 ) 众 ( 咋 ) 不 ( 好 ) 同 ( 学 )的方式：<strong>所有权系统</strong>。</p>
<p>理解<strong>所有权</strong>和<strong>借用</strong>，对于 Rust 学习是至关重要的，因此我们把本章提到了非常靠前的位置，So，在座的各位，有一个算一个，准备好了嘛？</p>
<p>从现在开始，鉴于大家已经掌握了非常基本的语法，有些时候，在示例代码中，将省略 <code>fn main() {}</code> 的模版代码，只要将相应的示例放在 <code>fn main() {}</code> 中，即可运行。</p>`,readingTime:{minutes:.73,words:220},title:"所有权和借用",type:"article"}}],["/src/basic/ownership/ownership.html",{loader:()=>F(()=>import("./ownership.html-B0OLUSiB.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>所有的程序都必须和计算机内存打交道，如何从内存中申请空间来存放程序的运行内容，如何在不需要的时候释放这些空间，成了重中之重，也是所有编程语言设计的难点之一。在计算机语言不断演变过程中，出现了三种流派：</p>
<ul>
<li><strong>垃圾回收机制(GC)</strong>，在程序运行时不断寻找不再使用的内存，典型代表：Java、Go</li>
<li><strong>手动管理内存的分配和释放</strong>, 在程序中，通过函数调用的方式来申请和释放内存，典型代表：C++</li>
<li><strong>通过所有权来管理内存</strong>，编译器在编译时会根据一系列规则进行检查</li>
</ul>`,readingTime:{minutes:17.57,words:5272},title:"所有权",type:"article"}}],["/src/basic/result-error/intro.html",{loader:()=>F(()=>import("./intro.html-D_8NGExE.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>飞鸽传书、八百里加急，自古以来，掌权者最需要的就是及时获得对某个事物的信息反馈，在此过程中，也定义了相应的应急处理措施。</p>
<p>社会演变至今，这种思想依然没变，甚至来到计算中的微观世界，也是如此。及时、准确的获知系统在发生什么，是程序设计的重中之重。因此能够准确的分辨函数返回值是正确的还是错误的、以及在发生错误时该怎么快速处理，成了程序设计语言的必备功能。</p>
<p>Go 语言为人诟病的其中一点就是 <strong><em>if err != nil {}</em></strong> 的大量使用，缺乏一些程序设计的美感，不过我倒是觉得这种简单的方式也有其好处，就是阅读代码时的流畅感很强，你不需要过多的思考各种语法是什么意思。与 Go 语言不同，Rust 博采众家之长，实现了颇具自身色彩的返回值和错误处理体系，本章我们就高屋建瓴地来学习，更加深入的讲解见<a href="https://course.rs/advance/errors.html" target="_blank" rel="noopener noreferrer">错误处理</a>。</p>`,readingTime:{minutes:2.05,words:614},title:"返回值和错误处理",type:"article"}}],["/src/basic/result-error/panic.html",{loader:()=>F(()=>import("./panic.html-BVR23b_u.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在正式开始之前，先来思考一个问题：假设我们想要从文件读取数据，如果失败，你有没有好的办法通知调用者为何失败？如果成功，你有没有好的办法把读取的结果返还给调用者？</p>
<h2>panic! 与不可恢复错误</h2>
<p>上面的问题在真实场景会经常遇到，其实处理起来挺复杂的，让我们先做一个假设：文件读取操作发生在系统启动阶段。那么可以轻易得出一个结论，一旦文件读取失败，那么系统启动也将失败，这意味着该失败是不可恢复的错误，无论是因为文件不存在还是操作系统硬盘的问题，这些只是错误的原因不同，但是归根到底都是不可恢复的错误（梳理清楚当前场景的错误类型非常重要）。</p>
<p>对于这些严重到影响程序运行的错误，触发 <code>panic</code> 是很好的解决方式。在 Rust 中触发 <code>panic</code> 有两种方式：被动触发和主动调用，下面依次来看看。</p>`,readingTime:{minutes:11.74,words:3521},title:"panic 深入剖析",type:"article"}}],["/src/basic/result-error/result.html",{loader:()=>F(()=>import("./result.html-BZDjkO5A.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>还记得上一节中，提到的关于文件读取的思考题吧？当时我们解决了读取文件时遇到不可恢复错误该怎么处理的问题，现在来看看，读取过程中，正常返回和遇到可以恢复的错误时该如何处理。</p>
<p>假设，我们有一台消息服务器，每个用户都通过 websocket 连接到该服务器来接收和发送消息，该过程就涉及到 socket 文件的读写，那么此时，如果一个用户的读写发生了错误，显然不能直接 <code>panic</code>，否则服务器会直接崩溃，所有用户都会断开连接，因此我们需要一种更温和的错误处理方式：<code>Result&lt;T, E&gt;</code>。</p>
<p>之前章节有提到过，<code>Result&lt;T, E&gt;</code> 是一个枚举类型，定义如下：</p>`,readingTime:{minutes:13.41,words:4022},title:"可恢复的错误 Result",type:"article"}}],["/src/basic/trait/advance-trait.html",{loader:()=>F(()=>import("./advance-trait.html-k-bTEkNi.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>特征之于 Rust 更甚于接口之于其他语言，因此特征在 Rust 中很重要也相对较为复杂，我们决定把特征分为两篇进行介绍，<a href="https://course.rs/basic/trait/trait.html" target="_blank" rel="noopener noreferrer">第一篇</a>在之前已经讲过，现在就是第二篇：关于特征的进阶篇，会讲述一些不常用到但是你该了解的特性。</p>
<h2>关联类型</h2>
<p>在方法一章中，我们讲到了<a href="https://course.rs/basic/method#%E5%85%B3%E8%81%94%E5%87%BD%E6%95%B0" target="_blank" rel="noopener noreferrer">关联函数</a>，但是实际上关联类型和关联函数并没有任何交集，虽然它们的名字有一半的交集。</p>`,readingTime:{minutes:13.17,words:3950},title:"深入了解特征",type:"article"}}],["/src/basic/trait/generic.html",{loader:()=>F(()=>import("./generic.html-CGGHA4Xa.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Go 语言在 2022 年，就要正式引入泛型，被视为在 1.0 版本后，语言特性发展迈出的一大步，为什么泛型这么重要？到底什么是泛型？Rust 的泛型有几种？<br>
本章将一一为你讲解。</p>
<p>我们在编程中，经常有这样的需求：用同一功能的函数处理不同类型的数据，例如两个数的加法，无论是整数还是浮点数，甚至是自定义类型，都能进行支持。在不支持泛型的编程语言中，通常需要为每一种类型编写一个函数：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add_f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"add i8: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"add i32: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"add f64: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add_f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.23</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:16.87,words:5060},title:"泛型 Generics",type:"article"}}],["/src/basic/trait/intro.html",{loader:()=>F(()=>import("./intro.html-DFUIK64m.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>泛型和特征是 Rust 中最最重要的抽象类型，也是你在学习 Rust 路上的拦路虎，但是挑战往往与乐趣并存，一旦学会，在后面学习 Rust 的路上，你将一往无前。</p>
`,readingTime:{minutes:.22,words:65},title:"泛型和特征",type:"article"}}],["/src/basic/trait/trait-object.html",{loader:()=>F(()=>import("./trait-object.html-P04YQo29.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在上一节中有一段代码无法通过编译：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> returns_summarizable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Summary</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Post</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">           // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Weibo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:13.36,words:4008},title:"特征对象",type:"article"}}],["/src/basic/trait/trait.html",{loader:()=>F(()=>import("./trait.html-BKwf4R8B.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果我们想定义一个文件系统，那么把该系统跟底层存储解耦是很重要的。文件操作主要包含四个：<code>open</code> 、<code>write</code>、<code>read</code>、<code>close</code>，这些操作可以发生在硬盘，可以发生在内存，还可以发生在网络 IO 甚至（...我实在编不下去了，大家来帮帮我）。总之如果你要为每一种情况都单独实现一套代码，那这种实现将过于繁杂，而且也没那个必要。</p>
<p>要解决上述问题，需要把这些行为抽象出来，就要使用 Rust 中的特征 <code>trait</code> 概念。可能你是第一次听说这个名词，但是不要怕，如果学过其他语言，那么大概率你听说过接口，没错，特征跟接口很类似。</p>`,readingTime:{minutes:17.01,words:5104},title:"特征 Trait",type:"article"}}],["/src/cargo/guide/build-cache.html",{loader:()=>F(()=>import("./build-cache.html-BQzNKPqj.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>cargo build</code> 的结果会被放入项目根目录下的 <code>target</code> 文件夹中，当然，这个位置可以三种方式更改：设置 <code>CARGO_TARGET_DIR</code> <a href="https://doc.rust-lang.org/stable/cargo/reference/environment-variables.html" target="_blank" rel="noopener noreferrer">环境变量</a>、<a href="https://course.rs/cargo/reference/configuration.html#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A6%82%E8%A7%88" target="_blank" rel="noopener noreferrer"><code>build.target-dir</code></a> 配置项以及 <code>--target-dir</code> 命令行参数。</p>`,readingTime:{minutes:3.27,words:982},title:"构建( Build )缓存",type:"article"}}],["/src/cargo/guide/cargo-cache.html",{loader:()=>F(()=>import("./cargo-cache.html-Ip28wl_Z.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Cargo 使用了缓存的方式提升构建效率，当构建时，Cargo 会将已下载的依赖包放在 <code>CARGO_HOME</code> 目录下，下面一起来看看。</p>
<h2>Cargo Home</h2>
<p>默认情况下，Cargo Home 所在的目录是 <code>$HOME/.cargo/</code>，例如在 <code>macos</code> ，对应的目录是:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> $HOME</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">/.cargo/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/Users/sunfei/.cargo/</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.45,words:1035},title:"Cargo 缓存",type:"article"}}],["/src/cargo/guide/cargo-toml-lock.html",{loader:()=>F(()=>import("./cargo-toml-lock.html-BDi4yqjQ.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>Cargo.toml</code> 和 <code>Cargo.lock</code> 是 <code>Cargo</code> 的两个元配置文件，但是它们拥有不同的目的:</p>
<ul>
<li>前者从用户的角度出发来描述项目信息和依赖管理，因此它是由用户来编写</li>
<li>后者包含了依赖的精确描述信息，它是由 <code>Cargo</code> 自行维护，因此不要去手动修改</li>
</ul>
<p>它们的关系跟 <code>package.json</code> 和 <code>package-lock.json</code> 非常相似，从 JavaScript 过来的同学应该会比较好理解。</p>`,readingTime:{minutes:4.24,words:1271},title:"Cargo.toml vs Cargo.lock",type:"article"}}],["/src/cargo/guide/dependencies.html",{loader:()=>F(()=>import("./dependencies.html-DZcF7ipn.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><a href="https://crates.io" target="_blank" rel="noopener noreferrer"><code>crates.io</code></a> 是 Rust 社区维护的中心化注册服务，用户可以在其中寻找和下载所需的包。对于 <code>cargo</code> 来说，默认就是从这里下载依赖。</p>
<p>下面我们来添加一个 <code>time</code> 依赖包，若你的 <code>Cargo.toml</code> 文件中没有 <code>[dependencies]</code> 部分，就手动添加一个，并添加目标包名和版本号:</p>`,readingTime:{minutes:1.49,words:447},title:"添加依赖",type:"article"}}],["/src/cargo/guide/download-package.html",{loader:()=>F(()=>import("./download-package.html-mQDTEZrm.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果看中 <code>GitHub</code> 上的某个开源 Rust 项目，那下载并构建它将是非常简单的。</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> https://github.com/rust-lang/regex.git</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> regex</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.51,words:153},title:"下载并构建 Package",type:"article"}}],["/src/cargo/guide/intro.html",{loader:()=>F(()=>import("./intro.html-CMCcE7qO.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在本章中，我们将学习 <code>Cargo</code> 的详细使用方式，例如 <code>Package</code> 的创建与管理、依赖拉取、<code>Package</code> 结构描述等。</p>
`,readingTime:{minutes:.13,words:40},title:"使用手册",type:"article"}}],["/src/cargo/guide/package-layout.html",{loader:()=>F(()=>import("./package-layout.html-BvA-N7TE.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>一个典型的 <code>Package</code> 目录结构如下：</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cargo.lock</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Cargo.toml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> src/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> lib.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bin/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> named-executable.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> another-executable.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-executable/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">           ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">           └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> some_module.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> benches/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> large-input.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-bench/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bench_module.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> examples/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> simple.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-example/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">       └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ex_module.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tests/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> some-integration-tests.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> multi-file-test/</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> main.rs</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> test_module.rs</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.73,words:220},title:"标准的 Package 目录结构",type:"article"}}],["/src/cargo/guide/tests-ci.html",{loader:()=>F(()=>import("./tests-ci.html-DuBnFqlq.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Cargo 可以通过 <code>cargo test</code> 命令运行项目中的测试文件：它会在 <code>src/</code> 底下的文件寻找单元测试，也会在 <code>tests/</code> 目录下寻找集成测试。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">$ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cargo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> test</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">   Compiling</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> regex</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">https</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">//github.com/rust-lang/regex.git#9f9f693)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">   Compiling</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> hello_world</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///path/to/package/hello_world)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">     Running</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">hello_world</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">9c2b65bbb79eabce</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">running</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">test</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">. </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> passed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ignored</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> measured</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> filtered</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> out</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.25,words:676},title:"测试和 CI",type:"article"}}],["/src/cargo/guide/why-exist.html",{loader:()=>F(()=>import("./why-exist.html-BBjFkI-Y.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>根据之前学习的知识，Rust 有两种类型的包: 库包和二进制包，前者是我们经常使用的依赖包，用于被其它包所引入，而后者是一个应用服务，可以编译成二进制可执行文件进行运行。</p>
<p>包是通过 Rust 编译器 <code>rustc</code> 进行编译的:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">$ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">rustc</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.rs</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">$ ./</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">hello</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">world!</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.79,words:538},title:"为何会有 Cargo",type:"article"}}],["/src/cargo/reference/cargo-target.html",{loader:()=>F(()=>import("./cargo-target.html-C8IT4aOW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><strong>Cargo 项目中包含有一些对象，它们包含的源代码文件可以被编译成相应的包，这些对象被称之为 Cargo Target</strong>。例如<a href="https://course.rs/cargo/guide/package-layout.html" target="_blank" rel="noopener noreferrer">之前章节</a>提到的库对象 <code>Library</code> 、二进制对象 <code>Binary</code>、示例对象 <code>Examples</code>、测试对象 <code>Tests</code> 和 基准性能对象 <code>Benches</code> 都是 Cargo Target。</p>`,readingTime:{minutes:6.44,words:1932},title:"Cargo Target",type:"article"}}],["/src/cargo/reference/configuration.html",{loader:()=>F(()=>import("./configuration.html-eBFG6XOK.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Cargo 相关的配置有两种，第一种是对自身进行配置，第二种是对指定的项目进行配置，关于后者请查看 <a href="https://course.rs/cargo/reference/manifest.html" target="_blank" rel="noopener noreferrer">Cargo.toml 清单</a>。对于普通用户而言第二种才是我们最常使用的。</p>
<p>本文讲述的是如何对 Cargo 相关的工具进行配置，该配置中的部分内容可能会覆盖掉 <code>Cargo.toml</code> 中对应的部分，例如关于 <code>profile</code> 的内容。</p>`,readingTime:{minutes:4.87,words:1460},title:"通过 config.toml 对 Cargo 进行配置",type:"article"}}],["/src/cargo/reference/deps-overriding.html",{loader:()=>F(()=>import("./deps-overriding.html-Vbrr4sZz.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>依赖覆盖对于本地开发来说，是很常见的，大部分原因都是我们希望在某个包发布到 <code>crates.io</code> 之前使用它，例如：</p>
<ul>
<li>你正在同时开发一个包和一个项目，而后者依赖于前者，你希望能在该项目中对正在开发的包进行测试</li>
<li>你引入的一个依赖包在 <code>master</code> 分支发布了新的代码，恰好修复了某个 bug，因此你希望能单独对该分支进行下测试</li>
<li>你即将发布一个包的新版本，为了确保新版本正常工作，你需要对其进行集成测试</li>
<li>你为项目的某个依赖包提了一个 PR 并解决了一个重要 bug，在等待合并到 <code>master</code> 分支，但是时间不等人，因此你决定先使用自己修改的版本，等未来合并后，再继续使用官方版本</li>
</ul>`,readingTime:{minutes:7.35,words:2206},title:"依赖覆盖",type:"article"}}],["/src/cargo/reference/env.html",{loader:()=>F(()=>import("./env.html-C_TBAqO5.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"环境变量",type:"article"}}],["/src/cargo/reference/intro.html",{loader:()=>F(()=>import("./intro.html-BeCtDdtv.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>进阶指南包含了 Cargo 的参考级内容，大家可以先看一遍了解下大概有什么，然后在后面需要时，再回来查询如何使用。</p>
`,readingTime:{minutes:.17,words:51},title:"进阶指南",type:"article"}}],["/src/cargo/reference/manifest.html",{loader:()=>F(()=>import("./manifest.html-DlDCxQ2y.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>Cargo.toml</code> 又被称为清单( <code>manifest</code> )，文件格式是 <code>TOML</code>，每一个清单文件都由以下部分组成：</p>
<ul>
<li><a href="/rust-course/src/cargo/reference/unstable.html" target="_blank"><code>cargo-features</code></a> — 只能用于 <code>nightly</code>版本的 <code>feature</code></li>
<li><a href="#package"><code>[package]</code></a> — 定义项目( <code>package</code> )的元信息
<ul>
<li><a href="#name"><code>name</code></a> — 名称</li>
<li><a href="#version"><code>version</code></a> — 版本</li>
<li><a href="#authors"><code>authors</code></a> — 开发作者</li>
<li><a href="#edition"><code>edition</code></a> — Rust edition.</li>
<li><a href="#rust-version"><code>rust-version</code></a> — 支持的最小化 Rust 版本</li>
<li><a href="#description"><code>description</code></a> — 描述</li>
<li><a href="#documentation"><code>documentation</code></a> — 文档 URL</li>
<li><a href="#readme"><code>readme</code></a> — README 文件的路径</li>
<li><a href="#homepage"><code>homepage</code></a> - 主页 URL</li>
<li><a href="#repository"><code>repository</code></a> — 源代码仓库的 URL</li>
<li><a href="#license%E5%92%8Clicense-file"><code>license</code></a> — 开源协议 License.</li>
<li><a href="#license%E5%92%8Clicense-file"><code>license-file</code></a> — License 文件的路径.</li>
<li><a href="#keywords"><code>keywords</code></a> — 项目的关键词</li>
<li><a href="#categories"><code>categories</code></a> — 项目分类</li>
<li><a href="#workspace"><code>workspace</code></a> — 工作空间 workspace 的路径</li>
<li><a href="#build"><code>build</code></a> — 构建脚本的路径</li>
<li><a href="#links"><code>links</code></a> — 本地链接库的名称</li>
<li><a href="#exclude%E5%92%8Cinclude"><code>exclude</code></a> — 发布时排除的文件</li>
<li><a href="#exclude%E5%92%8Cinclude"><code>include</code></a> — 发布时包含的文件</li>
<li><a href="#the-publish-field"><code>publish</code></a> — 用于阻止项目的发布</li>
<li><a href="#metadata"><code>metadata</code></a> — 额外的配置信息，用于提供给外部工具</li>
<li><a href="#default-run"><code>default-run</code></a> — [<code>cargo run</code>] 所使用的默认可执行文件( binary )</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autobins</code></a> — 禁止可执行文件的自动发现</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autoexamples</code></a> — 禁止示例文件的自动发现</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autotests</code></a> — 禁止测试文件的自动发现</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autobenches</code></a> — 禁止 bench 文件的自动发现</li>
<li><a href="/rust-course/src/cargo/reference/resolver.html#resolver-versions" target="_blank"><code>resolver</code></a> — 设置依赖解析器( dependency resolver)</li>
</ul>
</li>
<li>Cargo Target 列表: (查看 <a href="https://course.rs/cargo/reference/cargo-target.html#Target%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">Target 配置</a> 获取详细设置)
<ul>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%BA%93%E5%AF%B9%E8%B1%A1library" target="_blank" rel="noopener noreferrer"><code>[lib]</code></a> — Library target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AF%B9%E8%B1%A1binaries" target="_blank" rel="noopener noreferrer"><code>[[bin]]</code></a> — Binary target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E7%A4%BA%E4%BE%8B%E5%AF%B9%E8%B1%A1examples" target="_blank" rel="noopener noreferrer"><code>[[example]]</code></a> — Example target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E6%B5%8B%E8%AF%95%E5%AF%B9%E8%B1%A1tests" target="_blank" rel="noopener noreferrer"><code>[[test]]</code></a> — Test target 设置.</li>
<li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%9F%BA%E5%87%86%E6%80%A7%E8%83%BD%E5%AF%B9%E8%B1%A1benches" target="_blank" rel="noopener noreferrer"><code>[[bench]]</code></a> — Benchmark target 设置.</li>
</ul>
</li>
<li>Dependency tables:
<ul>
<li><a href="https://course.rs/cargo/reference/specify-deps.html" target="_blank" rel="noopener noreferrer"><code>[dependencies]</code></a> — 项目依赖包</li>
<li><a href="https://course.rs/cargo/reference/specify-deps.html#dev-dependencies" target="_blank" rel="noopener noreferrer"><code>[dev-dependencies]</code></a> — 用于 examples、tests 和 benchmarks 的依赖包</li>
<li><a href="https://course.rs/cargo/reference/specify-deps.html#build-dependencies" target="_blank" rel="noopener noreferrer"><code>[build-dependencies]</code></a> — 用于构建脚本的依赖包</li>
<li><a href="https://course.rs/cargo/reference/specify-deps.html#%E6%A0%B9%E6%8D%AE%E5%B9%B3%E5%8F%B0%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96" target="_blank" rel="noopener noreferrer"><code>[target]</code></a> — 平台特定的依赖包</li>
</ul>
</li>
<li><a href="#badges"><code>[badges]</code></a> — 用于在注册服务(例如 crates.io ) 上显示项目的一些状态信息，例如当前的维护状态：活跃中、寻找维护者、deprecated</li>
<li><a href="https://course.rs/cargo/reference/features/intro.html" target="_blank" rel="noopener noreferrer"><code>[features]</code></a> — <code>features</code> 可以用于条件编译</li>
<li><a href="https://course.rs/cargo/reference/deps-overriding.html" target="_blank" rel="noopener noreferrer"><code>[patch]</code></a> — 推荐使用的依赖覆盖方式</li>
<li><a href="https://course.rs/cargo/reference/deps-overriding.html#%E4%B8%8D%E6%8E%A8%E8%8D%90%E7%9A%84replace" target="_blank" rel="noopener noreferrer"><code>[replace]</code></a> — 不推荐使用的依赖覆盖方式 (deprecated).</li>
<li><a href="https://course.rs/cargo/reference/profiles.html" target="_blank" rel="noopener noreferrer"><code>[profile]</code></a> — 编译器设置和优化</li>
<li><a href="https://course.rs/cargo/reference/workspaces.html" target="_blank" rel="noopener noreferrer"><code>[workspace]</code></a> — 工作空间的定义</li>
</ul>`,readingTime:{minutes:12.54,words:3761},title:"Cargo.toml 格式讲解",type:"article"}}],["/src/cargo/reference/package-id.html",{loader:()=>F(()=>import("./package-id.html-BkV1__5A.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"Package ID 说明",type:"article"}}],["/src/cargo/reference/profile.html",{loader:()=>F(()=>import("./profile.html-gnx_7HKV.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"发布配置 profile todo",type:"article"}}],["/src/cargo/reference/profiles.html",{loader:()=>F(()=>import("./profiles.html-BcrmHVDY.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>细心的同学可能发现了迄今为止我们已经为 Cargo 引入了不少新的名词，而且这些名词有一个共同的特点，不容易或不适合翻译成中文，因为难以表达的很准确，例如 Cargo Target, Feature 等，这不现在又多了一个 Profile。</p>
<h2>默认的 profile</h2>
<p>Profile 其实是一种发布配置，例如它默认包含四种: <code>dev</code>、 <code>release</code>、 <code>test</code> 和 <code>bench</code>，正常情况下，我们无需去指定，<code>Cargo</code> 会根据我们使用的命令来自动进行选择</p>`,readingTime:{minutes:9.66,words:2897},title:"发布配置 Profile",type:"article"}}],["/src/cargo/reference/publishing-on-crates.io.html",{loader:()=>F(()=>import("./publishing-on-crates.io.html-D7gu9S9z.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果你想要把自己的开源项目分享给全世界，那最好的办法自然是 GitHub。但如果是 Rust 的库，那除了发布到 GitHub 外，我们还可以将其发布到 <a href="https://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a> 上，然后其它用户就可以很简单的对其进行引用。</p>
<blockquote>
<p>注意：发布包到 <code>crates.io</code> 后，特定的版本无法被覆盖，要发布就必须使用新的版本号，代码也无法被删除!</p>
</blockquote>
<h2>首次发布之前</h2>`,readingTime:{minutes:5.22,words:1566},title:"发布到 crates.io",type:"article"}}],["/src/cargo/reference/specify-deps.html",{loader:()=>F(()=>import("./specify-deps.html-LzepkPFg.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>我们的项目可以引用在 <code>crates.io</code> 或 <code>GitHub</code> 上的依赖包，也可以引用存放在本地文件系统中的依赖包。</p>
<p>大家可能会想，直接从前两个引用即可，为何还提供了本地方式？可以设想下，如果你要有一个正处于开发中的包，然后需要在本地的另一个项目中引用测试，那是将该包先传到网上，然后再引用简单，还是直接从本地路径的方式引用简单呢？答案显然不言而喻。</p>
<p>本章节，我们一起来看看有哪些方式可以指定和引用三方依赖包。</p>
<h2>从 <code>crates.io</code> 引入依赖包</h2>
<p>默认设置下，<code>Cargo</code> 就从 <a href="https://crates.io" target="_blank" rel="noopener noreferrer">crates.io</a> 上下载依赖包，只需要一个包名和版本号即可：</p>`,readingTime:{minutes:10.26,words:3077},title:"指定依赖项",type:"article"}}],["/src/cargo/reference/workspaces.html",{loader:()=>F(()=>import("./workspaces.html-COlIPxLI.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>一个工作空间是由多个 <code>package</code> 组成的集合，它们共享同一个 <code>Cargo.lock</code> 文件、输出目录和一些设置(例如 profiles : 编译器设置和优化)。组成工作空间的 <code>packages</code> 被称之为工作空间的成员。</p>
<h2>工作空间的两种类型</h2>
<p>工作空间有两种类型：<code>root package</code> 和虚拟清单( virtual manifest )。</p>
<h4>根 package</h4>
<p><strong>若一个 <code>package</code> 的 <code>Cargo.toml</code> 包含了<code>[package]</code> 的同时又包含了 <code>[workspace]</code> 部分，则该 <code>package</code> 被称为工作空间的根 <code>package</code></strong>。</p>`,readingTime:{minutes:4.49,words:1346},title:"工作空间 Workspace",type:"article"}}],["/src/compiler/fight-with-compiler/intro.html",{loader:()=>F(()=>import("./intro.html-CcfLLV0N.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"对抗编译检查",type:"article"}}],["/src/compiler/fight-with-compiler/phantom-data.html",{loader:()=>F(()=>import("./phantom-data.html-Behr-iHU.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"幽灵数据",type:"article"}}],["/src/compiler/fight-with-compiler/unconstrained.html",{loader:()=>F(()=>import("./unconstrained.html-BVYcA2SE.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"类型未限制",type:"article"}}],["/src/compiler/pitfalls/arithmetic-overflow.html",{loader:()=>F(()=>import("./arithmetic-overflow.html-BOkX_zc6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，溢出后的数值被截断是很正常的:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u16</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 65535</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.25,words:375},title:"算术溢出导致的 panic",type:"article"}}],["/src/compiler/pitfalls/closure-with-lifetime.html",{loader:()=>F(()=>import("./closure-with-lifetime.html-BlyAKIQl.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 一道独特的靓丽风景就是生命周期，也是反复折磨新手的最大黑手，就连老手，可能一不注意就会遇到一些生命周期上的陷阱，例如闭包上使用引用。</p>
<h2>一段简单的代码</h2>
<p>先来看一段简单的代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fn_elision</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> closure_slision</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> |</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> };</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.54,words:1062},title:"闭包上奇怪的生命周期",type:"article"}}],["/src/compiler/pitfalls/",{loader:()=>F(()=>import("./index.html-COVKThGS.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本章收录一些 Rust 常见的陷阱，一不小心就会坑你的那种(当然，这不是 Rust 语言的问题，而是一些边边角角的知识点)。</p>
`,readingTime:{minutes:.17,words:51},title:"Rust 陷阱系列",type:"article"}}],["/src/compiler/pitfalls/iterator-everywhere.html",{loader:()=>F(()=>import("./iterator-everywhere.html-D3YkuGRC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的迭代器无处不在，直至你在它上面栽了跟头，经过深入调查才发现：哦，原来是迭代器的锅。不信的话，看看这个报错你能想到是迭代器的问题吗: <code>borrow of moved value: words</code>.</p>
<h2>报错的代码</h2>
<p>以下的代码非常简单，用来统计文本中字词的数量，并打印出来：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "hello world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> words</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">" "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> words</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">words</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.33,words:1300},title:"无处不在的迭代器",type:"article"}}],["/src/compiler/pitfalls/lazy-iterators.html",{loader:()=>F(()=>import("./lazy-iterators.html-DRIBMubd.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>迭代器，在 Rust 中是一个非常耀眼的存在，它光鲜亮丽，它让 Rust 大道至简，它备受用户的喜爱。可是，它也是懒惰的，不信？一起来看看。</p>
<h2>for 循环 vs 迭代器</h2>
<p>在迭代器学习中，我们提到过迭代器在功能上可以替代循环，性能上略微优于循环(避免边界检查),安全性上优于循环，因此在 Rust 中，迭代器往往都是更优的选择，前提是迭代器得发挥作用。</p>
<p>在下面代码中，分别是使用<code>for</code>循环和迭代器去生成一个<code>HashMap</code>。</p>
<p>使用循环:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accounts</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Account</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> resolvers</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> accounts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        resolvers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.id).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">or_insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">resolvers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.27,words:982},title:"不太勤快的迭代器",type:"article"}}],["/src/compiler/pitfalls/main-with-channel-blocked.html",{loader:()=>F(()=>import("./main-with-channel-blocked.html-HzKBZITe.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本篇陷阱较短，主要解决新手在多线程间传递消息时可能会遇到的一个问题：主线程会一直阻塞，无法结束。</p>
<p>Rust 标准库中提供了一个消息通道，非常好用，也相当简单明了，但是但是在使用起来还是可能存在坑：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::mpsc;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::thread;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">recv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> mpsc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">channel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> num_threads</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">num_threads</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> thread_send</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        thread</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">spawn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">move</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            thread_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"thread {:?} finished"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> recv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Got: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"finished iterating"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.09,words:626},title:"线程间传递消息导致主线程无法结束",type:"article"}}],["/src/compiler/pitfalls/multiple-mutable-references.html",{loader:()=>F(()=>import("./multiple-mutable-references.html-CxnH4JtF.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>相信大家都听说过<strong>重构一时爽，一直重构一直爽</strong>的说法，私以为这种说法是很有道理的，不然技术团队绩效从何而来？但是，在 Rust 中，重构可能就不是那么爽快的事了，不信？咱们来看看。</p>
<h2>欣赏下报错</h2>
<p>很多时候，错误也是一种美，但是当这种错误每天都能见到时(呕):</p>
<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">error[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">e0499</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">]: cannot borrow \` </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">*</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> self\` as mutable more than once at </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> time;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:7.71,words:2314},title:"代码重构导致的可变借用错误",type:"article"}}],["/src/compiler/pitfalls/stack-overflow.html",{loader:()=>F(()=>import("./stack-overflow.html-D63o_JTQ.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust 中，我们不太容易遇到栈溢出，因为默认栈还挺大的，而且大的数据往往存在堆上(动态增长)，但是一旦遇到该如何处理？先来看段代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#![feature(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">extern</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> crate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tests {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bencher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[bench]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> it_works</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Bencher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">||</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> stack</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [[[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">512</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">512</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; });</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.88,words:565},title:"线程类型导致的栈溢出",type:"article"}}],["/src/compiler/pitfalls/the-disabled-mutability.html",{loader:()=>F(()=>import("./the-disabled-mutability.html-CF_gtmub.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>众所周知 Rust 是一门安全性非常强的系统级语言，其中，显式的设置变量可变性，是安全性的重要组成部分。按理来说，变量可变不可变在设置时就已经决定了，但是你遇到过可变变量在某些情况失效，变成不可变吗？</p>
<p>先来看段正确的代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">A</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // b不可变</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">B</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> };</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // 但是b中的字段a可以变</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.a.f1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"b is {:?} "</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.13,words:938},title:"失效的可变性",type:"article"}}],["/src/compiler/pitfalls/use-vec-in-for.html",{loader:()=>F(()=>import("./use-vec-in-for.html--t5EWKk6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>一般来说，<code>for</code>循环能做到的，<code>while</code>也可以，反之亦然，但是有一种情况，还真不行，先来看代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.04,words:312},title:"for 循环中使用外部数组",type:"article"}}],["/src/compiler/pitfalls/utf8-performance.html",{loader:()=>F(()=>import("./utf8-performance.html-CruMVwb8.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>大家应该都知道, 虽然 Rust 的字符串 <code>&amp;str</code>、<code>String</code> 在底层是通过 <code>Vec&lt;u8&gt;</code> 实现的：字符串数据以字节数组的形式存在堆上，但在使用时，它们都是 UTF-8 编码的，例如:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "中国人"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">chars</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 依次输出：中 、 国 、 人</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 1. "中" 在 UTF-8 中占用 3 个字节 2. Rust 不支持字符串索引，因此只能通过切片的方式获取 "中"</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">c</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"中"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.03,words:610},title:"警惕 UTF-8 引发的性能隐患",type:"article"}}],["/src/compiler/pitfalls/weird-ranges.html",{loader:()=>F(()=>import("./weird-ranges.html-f9IZ4kig.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>@todo</p>
<p>https://www.reddit.com/r/rust/comments/rrgxr0/a_critique_of_rusts_range_types/</p>
`,readingTime:{minutes:.03,words:9},title:"奇怪的序列x..y",type:"article"}}],["/src/libraries/command/intro.html",{loader:()=>F(()=>import("./intro.html-CdT9EyfK.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"命令行解析",type:"article"}}],["/src/libraries/command/structopt.html",{loader:()=>F(()=>import("./structopt.html-DbgsJCOo.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:2},title:"structopt(todo)",type:"article"}}],["/src/libraries/http/intro.html",{loader:()=>F(()=>import("./intro.html-BsZKohRF.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:0,words:1},title:"Http",type:"article"}}],["/src/libraries/http/reqwest.html",{loader:()=>F(()=>import("./reqwest.html-DO1LqLIB.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:2},title:"reqwest(todo)",type:"article"}}],["/src/libraries/json/intro.html",{loader:()=>F(()=>import("./intro.html-B0HVtisg.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:0,words:1},title:"Json",type:"article"}}],["/src/libraries/json/serde.html",{loader:()=>F(()=>import("./serde.html-BXsy4ohL.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:2},title:"serde(todo)",type:"article"}}],["/src/logs/observe/about-observe.html",{loader:()=>F(()=>import("./about-observe.html-DZAHdSAi.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在监控章节的<a href="https://course.rs/logs/observe/intro.html" target="_blank" rel="noopener noreferrer">引言</a>中，我们提到了老板、前端、后端眼中的监控是各不相同的，那么有没有办法将监控模型进行抽象、统一呢？</p>
<p>来简单分析一下：</p>
<ul>
<li>业务指标实时展示，这是一个指标型的数据( metric )</li>
<li>手机 APP 上传的数据，包含了日志( log )和指标类型( metric )，如果考虑到 APP 作为一次 HTTP 请求的发起端，那还涉及到请求链路的跟踪( trace)</li>
<li>后端链路跟踪是 trace，请求错误率、QPS 是 metric，异常日志是 log</li>
</ul>`,readingTime:{minutes:6.16,words:1847},title:"可观测性",type:"article"}}],["/src/logs/observe/intro.html",{loader:()=>F(()=>import("./intro.html-Ci3FHRwB.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>监控是一个很大的领域，大到老板、前端开发、后端开发理解的监控可能都不相同。</p>
<ul>
<li>老板眼中的监控：业务大数据实时展示</li>
<li>前端眼中的监控：手机 APP 收集上来的异常、崩溃、用户操作日志等</li>
<li>后端眼中的监控：请求链路跟踪、一段时间内的请求错误率、QPS 过高、异常日志等</li>
</ul>
<p>正是因为这些复杂性，导致很多同学难以准确的说出监控到底是什么。</p>
<p>下面，我们将试图解释清楚监控的概念，并引入一个全新的概念：可观测性。</p>
`,readingTime:{minutes:.56,words:168},title:"监控",type:"article"}}],["/src/logs/observe/trace.html",{loader:()=>F(()=>import("./trace.html-B3gCsNuU.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:5},title:"分布式追踪",type:"article"}}],["/src/profiling/compiler/attributes.html",{loader:()=>F(()=>import("./attributes.html-CI6hAQYF.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2>强制内存对齐</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[repr(align(64))]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CachePadded</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">AtomicU64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.12,words:36},title:"常见属性标记",type:"article"}}],["/src/profiling/compiler/intro.html",{loader:()=>F(()=>import("./intro.html-Bjb4UNKb.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"对抗编译检查",type:"article"}}],["/src/profiling/compiler/llvm.html",{loader:()=>F(()=>import("./llvm.html-CaW8H6Sg.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://ttalk.im/2021/12/llvm-infrastructure-and-rust.html</p>
`,readingTime:{minutes:.02,words:7},title:"LLVM todo",type:"article"}}],["/src/profiling/compiler/phantom-data.html",{loader:()=>F(()=>import("./phantom-data.html-QOzPU-G3.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在编写非安全代码时，我们常常遇见这种情况：类型或生命周期逻辑上与一个结构体关联起来了，但是却不属于结构体的任何一个成员。这种情况对于生命周期尤为常见。比如，<code>&amp;'a [T]</code>的<code>Iter</code>大概是这么定义的：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: '</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.55,words:764},title:"PhantomData（幽灵数据）",type:"article"}}],["/src/profiling/compiler/speed-up.html",{loader:()=>F(()=>import("./speed-up.html-jv18lO91.js"),[]),meta:{date:1745158063e3,excerpt:`
<!-- 
https://www.reddit.com/r/rust/comments/rnkyc0/why_does_my_code_compile_faster_on_nightly/

https://www.reddit.com/r/rust/comments/rv8126/speedup_compilation_time/

https://www.reddit.com/r/rust/comments/rsfcgb/why_is_my_rust_build_so_slow/

https://www.reddit.com/r/rust/comments/sqi1ba/is_it_just_me_or_rustanalyzer_is_unreliableslow/ -->`,readingTime:{minutes:.05,words:14},title:"优化编译速度",type:"article"}}],["/src/profiling/memory/allocation.html",{loader:()=>F(()=>import("./allocation.html-D79T-p0u.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/s4pknf/investigating_memory_allocations_in_rust/</p>
`,readingTime:{minutes:.02,words:7},title:"内存分配(todo)",type:"article"}}],["/src/profiling/memory/intro.html",{loader:()=>F(()=>import("./intro.html-Cg3uPt6z.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>部分内容借鉴了Rust in action和Rust高级编程</p>
<p>https://www.youtube.com/watch?v=rDoqT-a6UFg</p>
`,readingTime:{minutes:.08,words:25},title:"深入内存",type:"article"}}],["/src/profiling/memory/layout.html",{loader:()=>F(()=>import("./layout.html-CwWUBbB-.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/rwta4h/why_arent_rust_structs_laid_out_in_memory_like_c/</p>
`,readingTime:{minutes:.02,words:7},title:"内存布局(todo)",type:"article"}}],["/src/profiling/memory/pointer-ref.html",{loader:()=>F(()=>import("./pointer-ref.html-Cyd8Uo_W.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"指针和引用(todo)",type:"article"}}],["/src/profiling/memory/uninit.html",{loader:()=>F(()=>import("./uninit.html-DMEEjnhC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://lucumr.pocoo.org/2022/1/30/unsafe-rust/</p>
`,readingTime:{minutes:.03,words:9},title:"未初始化内存",type:"article"}}],["/src/profiling/memory/virtual.html",{loader:()=>F(()=>import("./virtual.html-B3v3htmJ.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"虚拟内存",type:"article"}}],["/src/profiling/performance/allocator.html",{loader:()=>F(()=>import("./allocator.html-CN1onfla.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/s28g4x/allocating_many_boxes_at_once/</p>
<p>https://www.reddit.com/r/rust/comments/szza43/memory_freed_but_not_immediately/</p>
`,readingTime:{minutes:.03,words:8},title:"内存allocator todo",type:"article"}}],["/src/profiling/performance/calculate.html",{loader:()=>F(()=>import("./calculate.html-Cx3N6hJN.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/rn7ozz/find_perfect_number_comparison_go_java_rust/</p>
<div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">	"fmt"</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">	"math"</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">	"time"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	n</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 320000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	nums</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	start</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">	calPerfs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"runtime: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">%s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Since</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> calPerfs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">n</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">nums</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">][]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		d</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> divs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">		if</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">			nums</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> divs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">num</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{} {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	r</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{})</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}{}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">	mid</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Sqrt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">float64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> mid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">		if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> num</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">%</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">			r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}{}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">			r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">num</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}{}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">		}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> r</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ds</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> int</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> range</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		n</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> +=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> all</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic">ds</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{}) []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">int</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> k</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> :=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> range</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">		a</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">k</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">	return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> a</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.05,words:316},title:"计算性能优化",type:"article"}}],["/src/profiling/performance/clone-copy.html",{loader:()=>F(()=>import("./clone-copy.html-Mh4T9tJr.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:3},title:"Clone和Copy",type:"article"}}],["/src/profiling/performance/cpu-cache.html",{loader:()=>F(()=>import("./cpu-cache.html-BhAxrrUw.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://github.com/TC5027/blog/blob/master/false_sharing.md</p>
<h1>On a use of the "repr" attribute in Rust</h1>
<p>Consider we work with the following struct representing a counter,</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Counter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:4.22,words:1266},title:"CPU缓存性能优化",type:"article"}}],["/src/profiling/performance/deep-into-move.html",{loader:()=>F(()=>import("./deep-into-move.html-BzDNi4OW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>深拷贝可以说是Rust性能优化的禁忌之词，但是在最不该发生深拷贝的地方却发生了, 本文带领大家来深入分析下原因。</p>
<p>在所有权章节中，我们详细介绍过<a href="https://course.rs/basic/ownership/ownership.html#%E8%BD%AC%E7%A7%BB%E6%89%80%E6%9C%89%E6%9D%83" target="_blank" rel="noopener noreferrer">所有权转移(move)</a>, 里面提到过一个重点：当类型实现<code>Copy</code>特征时，不会转移所有权，而是直接对值进行拷贝：</p>`,readingTime:{minutes:7.91,words:2372},title:"Rust所有权转移时发生了奇怪的深拷贝",type:"article"}}],["/src/profiling/performance/early-optimise.html",{loader:()=>F(()=>import("./early-optimise.html-DEwbwU76.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2>函数调用</h2>
<p>由于Rust的编译器和LLVM很强大，因此就算你使用了多层函数调用去完成一件事(嵌套函数调用往往出于设计上的考虑)，依然不会有性能上的影响，因为最终生成的机器码会消除这些多余的函数调用。</p>
<p>总之用Rust时，你不必操心多余的函数调用，只要写合理的代码，然后Rust会帮助你运行的更快!</p>
`,readingTime:{minutes:.43,words:129},title:"糟糕的提前优化",type:"article"}}],["/src/profiling/performance/enum.html",{loader:()=>F(()=>import("./enum.html-ByABNYZO.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://blog.zhuangty.com/rust-enum-layout/</p>
`,readingTime:{minutes:.03,words:10},title:"Enum内存优化 todo",type:"article"}}],["/src/profiling/performance/heap-stack.html",{loader:()=>F(()=>import("./heap-stack.html-BmQgnpO2.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/rkddg3/stackheap_question_regarding_performance/</p>
`,readingTime:{minutes:.02,words:5},title:"堆和栈",type:"article"}}],["/src/profiling/performance/intro.html",{loader:()=>F(()=>import("./intro.html-BrTpXz_2.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://nnethercote.github.io/perf-book/profiling.html</p>
<h2>How do I profile a Rust web application in production?</h2>
<p>https://www.reddit.com/r/rust/comments/rupcux/how_do_i_profile_a_rust_web_application_in/</p>
<p>https://zhuanlan.zhihu.com/p/191655266</p>
<h2>内存对齐</h2>
<p>https://www.reddit.com/r/rust/comments/s793x7/force_4byte_memory_alignment/</p>`,readingTime:{minutes:.13,words:39},title:"performance",type:"article"}}],["/src/profiling/performance/runtime-check.html",{loader:()=>F(()=>import("./runtime-check.html-BdTiNvN4.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/rust/comments/sx8b7m/how_is_rust_able_to_elide_bounds_checks/</p>
<h2>减少集合访问的边界检查</h2>
<p>以下代码，我们实现了两种循环方式：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 第一种</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">  // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// 第二种</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> collection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.77,words:231},title:"减少runtime check",type:"article"}}],["/src/profiling/performance/string.html",{loader:()=>F(()=>import("./string.html-3GZANhaJ.js"),[]),meta:{date:1745158063e3,excerpt:`<p>https://www.reddit.com/r/rust/comments/t06hk7/string_concatenations_benchmarks_updated/</p>
`,readingTime:{minutes:.01,words:2},title:"",type:"article",s:"string"}}],["/src/profiling/performance/tools.html",{loader:()=>F(()=>import("./tools.html-BtPbvpps.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://era.co/blog/unbuffered-io-slows-rust-programs</p>
<h1>profiling</h1>
<p>https://www.reddit.com/r/rust/comments/rxj81f/rust_profiling/</p>
`,readingTime:{minutes:.06,words:17},title:"常用性能测试工具",type:"article"}}],["/src/templates/files/dir.html",{loader:()=>F(()=>import("./dir.html-D1M1OR28.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:2},title:"目录",type:"article"}}],["/src/templates/files/intro.html",{loader:()=>F(()=>import("./intro.html-DyQ4ITMB.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:4},title:"文件操作",type:"article"}}],["/src/templates/http/intro.html",{loader:()=>F(()=>import("./intro.html-Boaql4Wz.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.01,words:3},title:"Http请求",type:"article"}}],["/src/too-many-lists/advanced-lists/double-singly.html",{loader:()=>F(()=>import("./double-singly.html-G0bPmgXs.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前的双向链表章节中，我们一度非常纠结，原因来自同样纠结成一团的所有权依赖。还有一个重要原因就是：先入为主的链表定义。</p>
<p>谁说所有的链接一定要一个方向呢？这里一起来尝试下新的东东：链表的其中一半朝左，另一半朝右。</p>
<p>新规矩( 老规矩是创建文件 )，创建一个新的模块:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// lib.rs</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> silly1;     </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// NEW!</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.94,words:882},title:"双单向链表",type:"article"}}],["/src/too-many-lists/advanced-lists/intro.html",{loader:()=>F(()=>import("./intro.html-BKsoZGxW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>说句实话，我们之前实现的链表都达不到生产级可用的程度，而且也没有用到一些比较时髦的技巧。</p>
<p>本章我们一起来看一些更时髦的链表实现:</p>
<ol>
<li>双重单向链表</li>
<li>栈分配的链表</li>
<li>自引用和Arena分配器实现( 原文作者还未实现，所以... Todo )</li>
<li>GhostCell 实现( 同上 )</li>
</ol>
`,readingTime:{minutes:.37,words:112},title:"使用高级技巧实现链表",type:"article"}}],["/src/too-many-lists/advanced-lists/stack-allocated.html",{loader:()=>F(()=>import("./stack-allocated.html-C_bKrg0j.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前的章节中，无一例外，我们创建的都是数据存储在堆上的链表，这种链表最常见也最实用：堆内存在动态分配的场景非常好用。</p>
<p>但是，既然是高级技巧章节，那栈链表也应该拥有一席之地。但与堆内存的简单分配相比，栈内存就没那么友好了，你们猜大名鼎鼎的 C 语言的 <code>alloca</code> 是因为什么而出名的 😃</p>
<p>限于章节篇幅，这里我们使用一个简单的栈分配方法：调用一个函数，获取一个新的、拥有更多空间的栈帧。说实话，该解决方法要多愚蠢有多愚蠢，但是它确实相当实用，甚至...有用。</p>
<p>任何时候，当我们在做一些递归的任务时，都可以将当前步骤状态的指针传递给下一个步骤。如果指针本身就是状态的一部分，那恭喜你：你在创建一个栈上分配的链表！</p>`,readingTime:{minutes:7.95,words:2385},title:"栈上的链表",type:"article"}}],["/src/too-many-lists/advanced-lists/unsafe-deque.html",{loader:()=>F(()=>import("./unsafe-deque.html-Dg0PFStl.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>打开<a href="https://rust-unofficial.github.io/too-many-lists/sixth.html" target="_blank" rel="noopener noreferrer">原文</a>，发现这一篇只有两行，我以为自己看花了眼，揉了揉眼，定睛一看，还是两行。</p>
<p>没错，貌似作者想要偷懒，而且为了掩饰，他还提供了标准库的实现:) 如果大家想要学习，看<a href="https://github.com/rust-lang/rust/blob/master/library/alloc/src/collections/linked_list.rs" target="_blank" rel="noopener noreferrer">标准库</a>吧 😄</p>`,readingTime:{minutes:.41,words:122},title:"生产级可用的双向链表",type:"article"}}],["/src/too-many-lists/bad-stack/basic-operations.html",{loader:()=>F(()=>import("./basic-operations.html-Dvk55Ipd.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这个章节我们一起来为新创建的 <code>List</code> 定义一些基本操作，首先从创建链表开始。</p>
<h2>New</h2>
<p>为了将实际的代码跟类型关联在一起，我们需要使用 <code>impl</code> 语句块：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // TODO</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.6,words:1681},title:"定义基本操作",type:"article"}}],["/src/too-many-lists/bad-stack/final-code.html",{loader:()=>F(()=>import("./final-code.html-Dw12cSiO.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前的章节中，我们完成了 Bad 单链表栈的数据定义和基本操作，下面一起来写一些测试代码。</p>
<h2>单元测试</h2>
<blockquote>
<p>关于如何编写测试，请参见<a href="https://course.rs/test/write-tests.html" target="_blank" rel="noopener noreferrer">自动化测试章节</a></p>
</blockquote>
<p>首先，单元测试代码要放在待测试的目标代码旁边，也就是同一个文件中:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in first.rs</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> basics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.3,words:1589},title:"一些收尾工作以及最终代码",type:"article"}}],["/src/too-many-lists/bad-stack/intro.html",{loader:()=>F(()=>import("./intro.html-4vcSzRqr.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本章，让我们用一个不咋样的单向链表来实现一个栈数据结构，因为不咋样，实现起来倒是很简单。</p>
<p>首先，创建一个文件 <code>src/first.rs</code> 用于存放本章节的链表代码，虽然糟糕，也不能用完就扔，大家说是不 😛 然后在 <code>lib.rs</code> 中添加这一行代码：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.35,words:105},title:"糟糕的单向链表栈",type:"article"}}],["/src/too-many-lists/bad-stack/layout.html",{loader:()=>F(()=>import("./layout.html-B95Reonk.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>发现一件尴尬的事情，之前介绍了这么多，但是竟然没有介绍链表是什么...亡羊补牢未为晚也，链表就是一系列存储在堆上的连续数据，大家是不是发现这个定义跟动态数据 <code>Vector</code> 非常相似，那么区别在于什么呢？</p>
<p>区别就在于链表中的每一个元素都指向下一个元素，最终形成 - 顾名思义的链表: <code>A1 -&gt; A2 -&gt; A3 -&gt; Null</code>。 而数组中的元素只是连续排列，并不存在前一个元素指向后一个元素的情况，而是每个元素通过下标索引来访问。</p>
<p>既然函数式语言的程序员最常使用链表，那么我们来看看他们给出的定义长什么样:</p>`,readingTime:{minutes:7.01,words:2103},title:"基本数据布局( Layout )",type:"article"}}],["/src/too-many-lists/deque/final-code.html",{loader:()=>F(()=>import("./final-code.html-tG-7x4Wp.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这一章真不好写( 也很难翻译... )，最终我们实现了一个 100% 安全但是功能残缺的双向链表。</p>
<p>同时在实现中，还有大量 <code>Rc</code> 和 <code>RefCell</code> 引起的运行时检查，最终会影响链表的性能。整个双向链表实现史就是一部别名和所有权的奋斗史。</p>
<p>总之，不管爱与不爱，它就这样了，特别是如果我们不在意内部的细节暴露给外面用户时。</p>
<p>而从下一章开始，我们将实现一个真正能够全盘掌控的链表，当然...通过 unsafe 代码实现！</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#![allow(unused)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt;&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">RefCell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        match</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        match</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">try_unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_inner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().prev.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Rc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">try_unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_inner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            Ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            RefMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">borrow_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> basics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // ---- back -----</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.41,words:723},title:"最终代码",type:"article"}}],["/src/too-many-lists/deque/intro.html",{loader:()=>F(()=>import("./intro.html-BP4fx56c.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在实现了之前的队列后，我们不禁浮想联翩，如果 <code>Rc</code> 是可变的，那是不是可以实现一个双向链表？</p>
<p>心动不如行动，先来创建新的链表文件 <code>fourth.rs</code>，并在 <code>src/lib.rs</code> 中添加以下内容：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> second;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> third;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> fourth;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.55,words:165},title:"不太优秀的双端队列",type:"article"}}],["/src/too-many-lists/deque/iterator.html",{loader:()=>F(()=>import("./iterator.html-D-Ona3m1.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>坏男孩最令人头疼，而链表实现中，迭代器就是这样的坏男孩，所以我们放在最后来处理。</p>
<h2>IntoIter</h2>
<p>由于是转移所有权，因此 <code>IntoIter</code> 一直都是最好实现的:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.28,words:1583},title:"迭代器",type:"article"}}],["/src/too-many-lists/deque/layout.html",{loader:()=>F(()=>import("./layout.html-DPWBYj2r.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>聪明的读者应该已经想到了：让 <code>Rc</code> 可变，就需要使用 <code>RefCell</code> 的配合。关于 <code>RefCell</code> 的一切，在之前的章节都有介绍，还不熟悉的同学请移步<a href="https://course.rs/advance/smart-pointer/cell-refcell.html" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<p>好了，绝世神兵在手，接下来...我们将见识一个绝世啰嗦的数据结构...如果你来自 GC 语言，那很可能就没有见识过这种阵仗。</p>`,readingTime:{minutes:5.85,words:1756},title:"数据布局和构建",type:"article"}}],["/src/too-many-lists/deque/peek.html",{loader:()=>F(()=>import("./peek.html-BWkcimC9.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>push</code> 和 <code>pop</code> 的防不胜防的编译报错着实让人出了些冷汗，下面来看看轻松的，至少在之前的链表中是很轻松的 😃</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.09,words:926},title:"Peek",type:"article"}}],["/src/too-many-lists/deque/symmetric.html",{loader:()=>F(()=>import("./symmetric.html-CceBq-xG.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>之前我们仅实现了头部的 <code>push</code>、<code>pop</code> ，现在来补全一下，大自然的对称之美咱的双向链表也不能少了。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;-&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &lt;-&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.79,words:538},title:"基本操作的对称镜像",type:"article"}}],["/src/too-many-lists/ok-stack/intro.html",{loader:()=>F(()=>import("./intro.html-DZwqWkBT.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前我们写了一个最小可用的单向链表，下面一起来完善下，首先创建一个新的文件 <code>src/second.rs</code>，然后在 <code>lib.rs</code> 中引入：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> second;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.25,words:76},title:"还可以的单向链表",type:"article"}}],["/src/too-many-lists/ok-stack/iter.html",{loader:()=>F(()=>import("./iter.html-Dlv6dStr.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>迭代器</h2>
<p>集合类型可以通过 <code>Iterator</code> 特征进行迭代，该特征看起来比 <code>Drop</code> 要复杂点：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> trait</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:8.06,words:2418},title:"",type:"article",s:"iter"}}],["/src/too-many-lists/ok-stack/itermut.html",{loader:()=>F(()=>import("./itermut.html-C6ovAp42.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>上一章节中我们讲到了要为 <code>List</code> 实现三种类型的迭代器并实现了其中两种: <code>IntoIter</code> 和 <code>Iter</code>。下面再来看看最后一种 <code>IterMut</code>。</p>
<p>再来回顾下 <code>Iter</code> 的实现：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/* stuff */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4,words:1200},title:"IterMut以及完整代码",type:"article"}}],["/src/too-many-lists/ok-stack/peek.html",{loader:()=>F(()=>import("./peek.html-DgkuT9h1.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前章节中，我们定义了 <code>push</code>、<code>pop</code> 等基础操作，下面一起添加几个进阶操作，让我们的链表有用起来。</p>
<p>首先实现的就是 <code>peek</code> 函数，它会返回链表的表头元素的引用:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.36,words:709},title:"Peek 函数",type:"article"}}],["/src/too-many-lists/ok-stack/type-optimizing.html",{loader:()=>F(()=>import("./type-optimizing.html-EluWdlHX.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>首先，我们需要优化下类型的定义，可能一部分同学已经觉得之前的类型定义相当不错了，但是如果大家仔细观察下 <code>Link</code>:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    More</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.1,words:930},title:"优化类型定义",type:"article"}}],["/src/too-many-lists/persistent-stack/drop-arc.html",{loader:()=>F(()=>import("./drop-arc.html-Bvyaf0UE.js"),[]),meta:{date:1745158063e3,excerpt:`
<h2>Drop</h2>
<p>与之前链表存在的问题相似，新的链表也有递归的问题。下面是之前的解决方法:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cur_link</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cur_link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            cur_link</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.29,words:987},title:"Drop、Arc 及完整代码",type:"article"}}],["/src/too-many-lists/persistent-stack/intro.html",{loader:()=>F(()=>import("./intro.html-Ij_8BHiE.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>迄今为止，我们已经掌握了如何实现一个可变的单向链表。但是之前的链表都是单所有权的，在实际使用中，共享所有权才是更实用的方式，下面一起来看看该如何实现一个不可变的、共享所有权的持久化链表( persistent )。</p>
<p>开始之前，还需要创建一个新文件 <code>third.rs</code> ，并在 <code>lib.rs</code> 中添加以下内容:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// in lib.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> first;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> second;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> third;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.56,words:169},title:"持久化单向链表",type:"article"}}],["/src/too-many-lists/persistent-stack/layout.html",{loader:()=>F(()=>import("./layout.html-Ct7GSYZa.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>对于新的链表来说，最重要的就是我们可以自由地操控列表的尾部( tail )。</p>
<h2>数据布局</h2>
<p>例如以下是一个不太常见的持久化列表布局:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">D</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">D</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">list2,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">B</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">C</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">D</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.55,words:1364},title:"数据布局和基本操作",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/basics.html",{loader:()=>F(()=>import("./basics.html-DqfPIPQY.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>好了，这就是本书最烂的部分，也是我花了 7 年时间才写完这一章的原因！是时候把我们已经做过 5 次的枯燥乏味的东西再写一遍了，但因为我们必须使用 <code>Option&lt;NonNull&lt;Node&lt;T&gt;&gt;</code> 把每件事都做两遍，所以显得格外冗长！</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.47,words:740},title:"Basics",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/boring-combinatorics.html",{loader:()=>F(()=>import("./boring-combinatorics.html-BkBjMIQU.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>好了，回到我们的常规链接列表！</p>
<p>首先，让我们来解决 <code>Drop</code> 的问题：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Pop until we have to stop</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.11,words:1834},title:"Boring Combinatorics",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/drop-and-panic-safety.html",{loader:()=>F(()=>import("./drop-and-panic-safety.html-C_4er0gC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>嘿，你注意到这些注释了吗：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Note that we don't need to mess around with \`take\` anymore</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// because everything is Copy and there are no dtors that will</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// run if we mess up... right? :) Riiiight? :)))</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.73,words:1420},title:"Drop and Panic Safety",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/filling-in-random-bits.html",{loader:()=>F(()=>import("./filling-in-random-bits.html-Cge75HfV.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>嘿，你不是说要做成精品吗？</p>
<p>为了成为一个 "好 "系列，这里还有一些乱七八糟的东西：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Oh look it's drop again</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.05,words:1815},title:"Filling In Random Bits",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/final-code.html",{loader:()=>F(()=>import("./final-code.html-Dg3lRn1Y.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>我真不敢相信，我居然让你坐在那里，听我从头开始重新实现 std</p>
<p>我做到了，书写完了，我终于可以休息了。</p>
<p>好了，下面是我们完整重写的 1200 行代码的全部内容。这应该与 <a href="https://github.com/contain-rs/linked-list/commit/5b69cc29454595172a5167a09277660342b78092" target="_blank" rel="noopener noreferrer">this commit</a> 的文本相同。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ordering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">FromIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">marker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // SAFETY: it's a linked-list, what do you want?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new_unchecked</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Put the new front before the old one</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // If there's no front, then we're the empty list and need</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // to set the back too.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // These things always happen!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // SAFETY: it's a linked-list, what do you want?</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> NonNull</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new_unchecked</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })));</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Put the new back before the old one</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // If there's no back, then we're the empty list and need</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // to set the front too.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // These things always happen!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Only have to do stuff if there is a front node to pop.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Bring the Box back to life so we can move out its value and</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Drop it (Box continues to magically understand this for us).</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Make the next node into the new front.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // Cleanup its reference to the removed node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // If the front is now null, then this list is now empty!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                result</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Box gets implicitly freed here, knows there is no T.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Only have to do stuff if there is a back node to pop.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Bring the Box front to life so we can move out its value and</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Drop it (Box continues to magically understand this for us).</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Make the next node into the new back.</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> boxed_node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // Cleanup its reference to the removed node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // If the back is now null, then this list is now empty!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                result</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Box gets implicitly freed here, knows there is no T.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clear</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Oh look it's drop again</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Pop until we have to stop</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Default</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            new_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        new_list</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">FromIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> from_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">I</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Formatter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">debug_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">entries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">finish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialEq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialEq</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&amp;&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Eq</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialOrd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialOrd</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> partial_cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ordering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">partial_cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ord</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Ordering</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">other</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hash</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">H</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Hasher</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> H</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // While self.front == self.back is a tempting condition to check here,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // it won't do the right for yielding the last element! That sort of</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // thing only works for arrays because of "one-past-the-end" pointers.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We could unwrap front, but this is safer and easier</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">ExactSizeIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // While self.front == self.back is a tempting condition to check here,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // it won't do the right for yielding the last element! That sort of</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // thing only works for arrays because of "one-past-the-end" pointers.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We could unwrap front, but this is safer and easier</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">            None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">ExactSizeIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; (</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        (</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">DoubleEndedIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">ExactSizeIterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">CursorMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on a real element, go to its next (back)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // We just walked to the ghost, no more index</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, and there is a real front, so move to it!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, but that's the only element... do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on a real element, go to its previous (front)</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // We just walked to the ghost, no more index</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, and there is a real back, so move to it!</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len - </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, but that's the only element... do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem) }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Normal case, try to follow the cur node's back pointer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Ghost case, try to use the list's front pointer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Yield the element if the next node exists</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Normal case, try to follow the cur node's front pointer</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Ghost case, try to use the list's back pointer</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Yield the element if the prev node exists</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> split_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;-&gt; D &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                               ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                              cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // And we want to produce this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; C &lt;-&gt; D &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                   ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                  cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //    return.front -&gt; A &lt;-&gt; B &lt;- return.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We are pointing at a real element, so the list is non-empty.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Current state</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What self will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What the output will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Break the links between cur and prev</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Produce the result:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">                LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, just replace our list with an empty one.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // No other state needs to be changed.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> split_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;-&gt; D &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                         ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                        cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // And we want to produce this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //     list.front -&gt; A &lt;-&gt; B &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                         ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                        cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //    return.front -&gt; C &lt;-&gt; D &lt;- return.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We are pointing at a real element, so the list is non-empty.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Current state</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What self will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">old_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // What the output will become</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> old_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Break the links between cur and next</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Produce the result:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_idx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">                LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">output_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                    _boo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PhantomData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We're at the ghost, just replace our list with an empty one.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // No other state needs to be changed.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // input.front -&gt; 1 &lt;-&gt; 2 &lt;- input.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                     ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                    cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Becoming this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; 1 &lt;-&gt; 2 &lt;-&gt; B &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                                 ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                                cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We can either \`take\` the input's pointers or \`mem::forget\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // it. Using \`take\` is more responsible in case we ever do custom</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // allocators or something that also needs to be cleaned up!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Input is empty, do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Both lists are non-empty</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // General Case, no boundaries, just internal fixups</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // No prev, we're appending to the front</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Index moves forward by input length</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                *</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.index.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on the ghost but non-empty, append to the back</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're empty, become the input, remain on the ghost</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">swap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Not necessary but Polite To Do</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Input dropped here</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // We have this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // input.front -&gt; 1 &lt;-&gt; 2 &lt;- input.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; B &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                     ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                    cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Becoming this:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // list.front -&gt; A &lt;-&gt; B &lt;-&gt; 1 &lt;-&gt; 2 &lt;-&gt; C &lt;- list.back</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                     ^</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //                    cur</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        //</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // We can either \`take\` the input's pointers or \`mem::forget\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // it. Using \`take\` is more responsible in case we ever do custom</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // allocators or something that also needs to be cleaned up!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Input is empty, do nothing.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.cur {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Both lists are non-empty</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // General Case, no boundaries, just internal fixups</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                    // No next, we're appending to the back</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // Index doesn't change</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're on the ghost but non-empty, append to the front</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.front.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.back.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).back </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.front </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">in_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">                // We're empty, become the input, remain on the ghost</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">swap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list, &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.list.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Not necessary but Polite To Do</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.len </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">            // Input dropped here</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">unsafe</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[allow(dead_code)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> assert_properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;() {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_send</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    is_sync</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> linked_list_covariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">static</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_covariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, '</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">static</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter_covariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">static</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        x</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// \`\`\`compile_fail,E0308</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// use linked_list::IterMut;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    ///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// fn iter_mut_covariant&lt;'i, 'a, T&gt;(x: IterMut&lt;'i, &amp;'static T&gt;) -&gt; IterMut&lt;'i, &amp;'a T&gt; { x }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    /// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut_invariant</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;[</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break an empty list</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break a one item list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Mess around</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_rev_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_mut_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_mut_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord_nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nan</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"just"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"more"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">copied</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">r#"["just", "one", "test", "more"]"#</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_hashmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check that HashMap works with this as a key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_move_peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_mut_insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* remove_current not impl'd</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        let mut cursor = m.cursor_mut();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), None);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(7));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(9));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(10));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(m.iter().cloned().collect::&lt;Vec&lt;_&gt;&gt;(), &amp;[1, 8, 2, 3, 4, 5, 6]);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> from_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> from_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> re_reved</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> from_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">from_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">re_reved</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:13.01,words:3904},title:"Final Code",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/implementing-cursors.html",{loader:()=>F(()=>import("./implementing-cursors.html-C-b1XZef.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>好了，我们现在讨论 CursorMut。就像我最初的设计一样，它有一个包含 None 的 "幽灵 "元素，用来指示列表的开始/结束，你可以 "跨过它"，绕到列表的另一边。要实现它，我们需要</p>
<ul>
<li>指向当前节点的指针</li>
<li>指向列表的指针</li>
<li>当前索引</li>
</ul>
<p>等等，当我们指向 "幽灵 "时，索引是多少？</p>
<p>好吧，游标 (cursors)上的索引返回一个 <code>Option&lt;usize&gt;</code>，这很合理。Std 的实现做了一堆垃圾来避免将其存储为一个 Option，但是...... 我们是一个链接列表，这很好。此外，std 还有 cursor_front/cursor_back 功能，它可以在前/后元素上启动光标，感觉很直观，但当列表为空时，又要做一些奇怪的事情。</p>`,readingTime:{minutes:12.25,words:3674},title:"Implementing Cursors",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/intro.html",{loader:()=>F(()=>import("./intro.html-D3DU7Rcb.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>我们终于成功了。我最大的克星：<strong><a href="https://github.com/rust-lang/rust/blob/master/library/alloc/src/collections/linked_list.rs" target="_blank" rel="noopener noreferrer">std</a>，双向链接的 Deque</strong>。</p>
<p>我尝试过但未能击败的那个。</p>
<p>来吧，我将向你展示你需要知道的一切，帮助我一劳永逸地摧毁它--实现一个 <strong>unsafe</strong> 的生产质量双向链接 Deque 所需要知道的一切。</p>`,readingTime:{minutes:.51,words:154},title:"A Production-Quality Unsafe Doubly-Linked Deque",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/layout.html",{loader:()=>F(()=>import("./layout.html-CiuxG93w.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>首先，让我们来研究一下敌人的结构。双向链接列表在概念上很简单，但它就是这样欺骗和操纵你的。这是我们反复研究过的同一种链接列表，但链接是双向的。双倍链接，双倍邪恶。</p>
<p>相比于单向（删掉了 Some/None 这类东西以保持简洁）：</p>
<div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>... -&gt; (A, ptr) -&gt; (B, ptr) -&gt; ...</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,readingTime:{minutes:3.76,words:1128},title:"数据布局",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/send-sync-and-compile-tests.html",{loader:()=>F(()=>import("./send-sync-and-compile-tests.html-BZC_Rfpo.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>好吧，其实我们还有一对特征需要考虑，但它们很特别。我们必须对付 Rust 的神圣罗马帝国： unsafe 的 Opt-in Built-out 特征（OIBITs）： Send 和 Sync，它们实际上是（opt-out）和（built-out）（3 个中有 1 个已经很不错了！）。</p>
<p>与 Copy 一样，这些特征完全没有相关代码，只是标记您的类型具有特定属性。Send 表示你的类型可以安全地发送到另一个线程。Sync 表示你的类型可以在线程间安全共享（&amp;Self: Send）。</p>
<p>关于 LinkedList <em>covariant(协变的)</em> 论点在这里同样适用：一般来说，不使用花哨的内部可变技巧的普通集合可以安全地进行 Send 和 Sync。</p>`,readingTime:{minutes:5.42,words:1625},title:"Send, Sync, and Compile Tests",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/testing-cursors.html",{loader:()=>F(()=>import("./testing-cursors.html-Bt1kYnAv.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>是时候找出我在上一节中犯了多少令人尴尬的错误了！</p>
<p>哦，天哪，我们的 API 既不像标准版，也不像旧版。好吧，那我打算从这两个地方拼凑一些东西吧。是的，让我们 "借用 " 标准版中的这些测试：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_move_peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_cursor_mut_insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        /* remove_current not impl'd</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        let mut cursor = m.cursor_mut();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), None);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(7));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_prev();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(9));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        cursor.move_next();</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(cursor.remove_current(), Some(10));</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        check_links(&amp;m);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        assert_eq!(m.iter().cloned().collect::&lt;Vec&lt;_&gt;&gt;(), &amp;[1, 8, 2, 3, 4, 5, 6]);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">       let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">extend</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">splice_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">q</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_prev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cursor_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">move_next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> cursor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">split_after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tmp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">102</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">103</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cloned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Vec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;(), &amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">201</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">202</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">203</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">101</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> check_links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // would be good to do this!</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.39,words:1917},title:"Testing Cursors",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/testing.html",{loader:()=>F(()=>import("./testing.html-Eh7Jy77R.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>好吧，我推迟了一段时间测试，因为我们都知道，我们现在是 Rust 的主人，不会再犯错了！另外，这是对一个旧 crate 的重写，所以我已经有了所有的测试。你已经看过很多测试了。它们就在这里：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;[</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break an empty list</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Try to break a one item list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Mess around</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_basic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">front_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">back_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_rev_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rev</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_mut_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> generate_test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enumerate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            len</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_iterator_mut_double_end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> it</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">size_hint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unwrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">it</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_eq</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">u8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_front</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_back</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_ord_nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> nan</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">n</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">nan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">u</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> list_from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &lt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_debug</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> vec!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"just"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"one"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"test"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"more"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">copied</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">format!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{:?}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">r#"["just", "one", "test", "more"]"#</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_hashmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check that HashMap works with this as a key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">LinkedList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">collect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> map</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">collections</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">HashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">insert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"list2"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.77,words:1132},title:"Testing",type:"article"}}],["/src/too-many-lists/production-unsafe-deque/variance-and-phantomData.html",{loader:()=>F(()=>import("./variance-and-phantomData.html-CmzL3rQH.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>如果现在不做，等以后再修，会很麻烦，所以我们现在要做的是硬核布局。</p>
<p>建造 Rust collections 时，有这五个可怕的难题：</p>
<ol>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/subtyping.html" target="_blank" rel="noopener noreferrer">Variance</a></li>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/dropck.html" target="_blank" rel="noopener noreferrer">Drop Check</a></li>
<li><a href="https://doc.rust-lang.org/nightly/std/ptr/struct.NonNull.html" target="_blank" rel="noopener noreferrer">NonNull Optimizations</a></li>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/vec/vec-alloc.html" target="_blank" rel="noopener noreferrer">The isize::MAX Allocation Rule</a></li>
<li><a href="https://doc.rust-lang.org/nightly/nomicon/vec/vec-zsts.html" target="_blank" rel="noopener noreferrer">Zero-Sized Types</a></li>
</ol>`,readingTime:{minutes:5.74,words:1722},title:"Variance and PhantomData",type:"article"}}],["/src/too-many-lists/unsafe-queue/basics.html",{loader:()=>F(()=>import("./basics.html-OeetT8w0.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>本章节的代码中有一个隐藏的 bug，因为它藏身于 unsafe 中，因此不会导致报错，我们会在后续章节解决这个问题，所以，请不要在生产环境使用此处的代码</p>
</blockquote>
<p>在开始之前，大家需要先了解 unsafe 的<a href="https://course.rs/advance/unsafe/intro.html" target="_blank" rel="noopener noreferrer">相关知识</a>。那么，言归正传，该如何构建一个链表？在之前我们是这么做的：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.18,words:1255},title:"基本操作",type:"article"}}],["/src/too-many-lists/unsafe-queue/extra-junk.html",{loader:()=>F(()=>import("./extra-junk.html-KT7KvYeW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在搞定 <code>push</code>、<code>pop</code> 后，剩下的基本跟栈链表的实现没有啥区别。只有会改变链表长度的操作才会使用<ruby>尾<rt>tail</rt></ruby>指针。</p>
<p>当然，现在一切都是裸指针，因此我们要重写代码来使用它们，在此过程中必须要确保没有遗漏地修改所有地方。</p>
<p>首先，先从栈链表实现中拷贝以下代码:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.3,words:1890},title:"额外的操作",type:"article"}}],["/src/too-many-lists/unsafe-queue/final-code.html",{loader:()=>F(()=>import("./final-code.html-C5QWQd1V.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>得益于不安全代码的引入，新的实现可以获得线性的性能提升，同时我们还设法复用了栈链表的很多代码。</p>
<p>当然，这个过程中，我们还引入了新的概念，例如借用栈，相信直到现在有些同学还晕乎乎的。不管如何，我们不用再去写一大堆嵌套来嵌套去的 <code>Rc</code> 和 <code>RefCell</code>。</p>
<p>下面来看看咱们这个不安全链表的全貌吧。</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::ptr;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Link</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> !</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                (*</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail).next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> new_tail</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                None</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from_raw</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                if</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">is_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                    self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.tail </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">null_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">                Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">head</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> peek_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">            IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.head.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Drop</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> drop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        while</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() { }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IntoIter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Iterator</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> IterMut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        unsafe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">take</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">node</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">                self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.next.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">as_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> node</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.elem</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> test {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> basics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check empty list behaves right</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Populate list</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Push some more just to make sure nothing's corrupted</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check exhaustion</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check the exhaustion case fixed the pointer right</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Check normal removal</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">into_iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">); </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> miri_food</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> elem</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> iter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">iter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">next</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(), </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">400</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> *=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">peek</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">        // Drop it on the ground and let the dtor exercise itself</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.36,words:707},title:"最终代码",type:"article"}}],["/src/too-many-lists/unsafe-queue/intro.html",{loader:()=>F(()=>import("./intro.html-Bh1kzHHy.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在之前章节中，基于内部可变性和引用计数的双向链表有些失控了，原因在于 <code>Rc</code> 和 <code>RefCell</code> 对于简单的任务而言，它们是非常称职的，但是对于复杂的任务，它们可能会变得相当笨拙，特别是当我们试图隐藏一些细节时。</p>
<p>总之，一定有更好的办法！下面来看看该如何使用裸指针和 unsafe 代码实现一个单向链表。</p>
<blockquote>
<p>大家可能想等着看我犯错误，unsafe 嘛，不犯错误不可能的，但是呢，俺偏就不犯错误：）</p>
</blockquote>
<p>国际惯例，添加第五个链表所需的文件 <code>fifth.rs</code>:</p>`,readingTime:{minutes:.81,words:244},title:"不错的unsafe队列",type:"article"}}],["/src/too-many-lists/unsafe-queue/layout.html",{loader:()=>F(()=>import("./layout.html-B58bC_SW.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>那么单向链表的队列长什么样？对于栈来说，我们向一端推入( push )元素，然后再从同一端弹出( pop )。对于栈和队列而言，唯一的区别在于队列从末端弹出。</p>
<p>栈的实现类似于下图：</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">input</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> list:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Some(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)] -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">B,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> X:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Some(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)] -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">X,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">B,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stack</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> pop:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[Some(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)] -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">A,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ptr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)) -&gt; (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">B,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:5.47,words:1642},title:"数据布局",type:"article"}}],["/src/too-many-lists/unsafe-queue/layout2.html",{loader:()=>F(()=>import("./layout2.html-D9EBOPdr.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>TL;DR 在之前部分中，将安全的指针 <code>&amp;</code> 、<code>&amp;mut</code> 和 <code>Box</code> 跟不安全的裸指针 <code>*mut</code> 和 <code>*const</code> 混用是 UB 的根源之一，原因是安全指针会引入额外的约束，但是裸指针并不会遵守这些约束。</p>
</blockquote>
<p>一个好消息，一个坏消息。坏消息是我们又要开始写链表了，悲剧 = , = 好消息呢是之前我们已经讨论过该如何设计了，之前做的工作基本都是正确的，除了混用安全指针和不安全指针的部分。</p>`,readingTime:{minutes:5,words:1499},title:"数据布局2: 再裸一些吧",type:"article"}}],["/src/too-many-lists/unsafe-queue/miri.html",{loader:()=>F(()=>import("./miri.html-CE7S25SS.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>看到这里，大家是不是暗中松了口气？unsafe 不过如此嘛，不知道为何其它人都谈之色变。</p>
<p>怎么说呢？你以为的编译器已经不是以前的编译器了，它不报错不代表没有错误。包括测试用例也是，正常地运行不能意味着代码没有任何错误。</p>
<p>在周星驰电影功夫中，还有一个奇怪大叔 10 元一本主动上门卖如来神掌，那么有没有 10 元一本的 Rust 秘笈呢？( 喂，Rust语言圣经都免费让你读了，有了摩托车，还要什么拖拉机... 哈哈，开个玩笑 )</p>
<p>有的，奇怪大叔正在赶来，他告诉我们先来安装一个命令:</p>
<div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> +nightly-2022-01-21</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> miri</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> syncing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> channel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> updates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'nightly-2022-01-21-x86_64-pc-windows-msvc'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> latest</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> on</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 2022-01-21,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> rust</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 1.60.0-nightly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (777bb86bc </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">2022-01-20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'cargo'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'clippy'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-docs'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-std'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustc'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustfmt'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'cargo'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'clippy'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-docs'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rust-std'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustc'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'rustfmt'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> downloading</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'miri'</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">info:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> installing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'miri'</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.29,words:1286},title:"Miri",type:"article"}}],["/src/too-many-lists/unsafe-queue/stacked-borrow.html",{loader:()=>F(()=>import("./stacked-borrow.html-DntHCfor.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>上一章节中我们运行 miri 时遇到了一个栈借用错误，还给了文档链接，但这些文档主要是给编译器开发者和 Rust 研究者看的，因此就不进行讲解了。</p>
<p>而这里，我们将从一个更高层次的角度来看看何为栈借用。</p>
<blockquote>
<p>目前栈借用在 Rust 语义模型中还是试验阶段，因此破坏这些规则不一定说明你的程序错了。但是除非你在做编译器开发，否则最好还是修复这些错误。事前的麻烦总比事后的不安全要好，特别是当涉及到 UB 未定义行为时</p>
</blockquote>
<h2>指针混叠( Pointer Aliasing )</h2>
<p>在开始了解我们破坏的规则之前，首先应该了解为何会有这些规则的存在。这里有多个动机，但是我认为最重要的动机是： 指针混叠.</p>`,readingTime:{minutes:6.78,words:2033},title:"栈借用( Stacked Borrorw)",type:"article"}}],["/src/too-many-lists/unsafe-queue/testing-stacked-borrow.html",{loader:()=>F(()=>import("./testing-stacked-borrow.html-DcaTpThT.js"),[]),meta:{date:1745158063e3,excerpt:`
<blockquote>
<p>关于上一章节的简单总结:</p>
<ul>
<li>Rust 通过借用栈来处理再借用</li>
<li>只有栈顶的元素是处于 <code>live</code> 状态的( 被借用 )</li>
<li>当访问栈顶下面的元素时，该元素会变为 <code>live</code>，而栈顶元素会被弹出( <code>pop</code> )</li>
<li>从借用栈中弹出的元素无法再被借用</li>
<li>借用检查器会保证我们的安全代码遵守以上规则</li>
<li>Miri 可以在一定程度上保证裸指针在运行时也遵循以上规则</li>
</ul>
</blockquote>`,readingTime:{minutes:14.61,words:4384},title:"测试栈借用",type:"article"}}],["/assets/rustlings-zh/exercises/clippy/",{loader:()=>F(()=>import("./index.html-BnqrbNZK.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>The Clippy tool is a collection of lints to analyze your code so you can catch common mistakes and improve your Rust code.</p>
<p>If you used the installation script for Rustlings, Clippy should be already installed.<br>
If not you can install it manually via <code>rustup component add clippy</code>.</p>`,readingTime:{minutes:.2,words:59},title:"Clippy",type:"article"}}],["/assets/rustlings-zh/exercises/collections/",{loader:()=>F(()=>import("./index.html-DMcRVlAR.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 的标准库包含了很多有用的数据结构，它们称作为集合。<br>
大多其它的数据类型通常仅表示一个特定的值，但集合可以包含多个值。<br>
内置的数组和元组类型指向的数据存储在堆上，这意味着存储的数据不必在编译时确定，<br>
并可以根据程序的运行来增加或减少。</p>
<p>本次练习将带你熟悉 Rust 程序中两个特别常用的基本数据结构：</p>
<ul>
<li>
<p><em>vector</em> 能够存储一段连续且数量不定的值。</p>
</li>
<li>
<p><em>散列表（hash map）</em> 能够将某个值与一个特定的键关联起来。<br>
你可能也知道它们：<a href="https://en.cppreference.com/w/cpp/container/unordered_map" target="_blank" rel="noopener noreferrer">C++ 中的 <em>unordered map</em></a>、<a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" target="_blank" rel="noopener noreferrer">Python 的 <em>dictionary</em></a> 或其它语言中的 <em>associative array（译：关联数组、map、映射）</em>。</p>
</li>
</ul>`,readingTime:{minutes:.8,words:241},title:"集合（Collections）",type:"article"}}],["/assets/rustlings-zh/exercises/conversions/",{loader:()=>F(()=>import("./index.html-q_0YO1PS.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust offers a multitude of ways to convert a value of a given type into another type.</p>
<p>The simplest form of type conversion is a type cast expression. It is denoted with the binary operator <code>as</code>. For instance, <code>println!("{}", 1 + 1.0);</code> would not compile, since <code>1</code> is an integer while <code>1.0</code> is a float. However, <code>println!("{}", 1 as f32 + 1.0)</code> should compile. The exercise <a href="using_as.rs"><code>using_as</code></a> tries to cover this.</p>`,readingTime:{minutes:.72,words:217},title:"Type conversions",type:"article"}}],["/assets/rustlings-zh/exercises/enums/",{loader:()=>F(()=>import("./index.html-D6miI6-T.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 有一种叫做“枚举”的类型，这种类型列举出了某种集合中所有可能的值。<br>
枚举是许多语言共有的一个功能，但它的作用在每种语言中都有所不同。<br>
如 F#、OCaml 和 Haskell 之类的函数式语言中的代数数据类型（algebraic data types）和 Rust 的枚举很相似。<br>
Rust 的“模式匹配”功能与枚举结合起非常强大，利用它我们很容易就能针对枚举的不同类型运行不同的代码。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch06-00-enums.html" target="_blank" rel="noopener noreferrer">Enums</a></li>
<li><a href="https://doc.rust-lang.org/book/ch18-03-pattern-syntax.html" target="_blank" rel="noopener noreferrer">Pattern syntax</a></li>
</ul>`,readingTime:{minutes:.52,words:157},title:"枚举（enums）",type:"article"}}],["/assets/rustlings-zh/exercises/error_handling/",{loader:()=>F(()=>import("./index.html-C79Ay4uD.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>大多数的错误并没有严重到需要让程序完全停止运行的程度。<br>
有时一个函数执行失败时，你可以很容易地对造成失败的原因进行解释并采取对应措施的。<br>
例如，你正试图打开一个文件，但由于该文件不存在导致了操作失败，这时你可能想创建<br>
该文件而不是直接终止程序。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch09-02-recoverable-errors-with-result.html" target="_blank" rel="noopener noreferrer">Error Handling</a></li>
<li><a href="https://doc.rust-lang.org/book/ch10-01-syntax.html" target="_blank" rel="noopener noreferrer">Generics</a></li>
<li><a href="https://doc.rust-lang.org/rust-by-example/error/result.html" target="_blank" rel="noopener noreferrer">Result</a></li>
<li><a href="https://doc.rust-lang.org/rust-by-example/error/multiple_error_types/boxing_errors.html" target="_blank" rel="noopener noreferrer">Boxing errors</a></li>
</ul>`,readingTime:{minutes:.5,words:149},title:"错误处理",type:"article"}}],["/assets/rustlings-zh/exercises/functions/",{loader:()=>F(()=>import("./index.html-C2r5GiJC.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在本练习，你将学习如何编写一个函数，以及 Rust 编译器怎样可以对事物进行追溯（trace things way back）。</p>
<p>译：依据练习的内容，追溯的意思可能是类型推导之类的事。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch03-03-how-functions-work.html" target="_blank" rel="noopener noreferrer">How Functions Work</a></li>
</ul>
`,readingTime:{minutes:.26,words:78},title:"函数（Functions）",type:"article"}}],["/assets/rustlings-zh/exercises/generics/",{loader:()=>F(()=>import("./index.html-K6Ji4uJL.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>泛型的主旨是把类型和函数泛化到多种情况。<br>
这在很多方面有助于减少重复代码，但也可能需要为此使用相当多的语法。<br>
也就是说，使用泛型的话则需要小心谨慎地标明泛型适用于哪些类型。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/stable/book/ch10-01-syntax.html" target="_blank" rel="noopener noreferrer">Generic Data Types</a></li>
<li><a href="https://doc.rust-lang.org/rust-by-example/generics/bounds.html" target="_blank" rel="noopener noreferrer">Bounds</a></li>
</ul>`,readingTime:{minutes:.33,words:99},title:"泛型",type:"article"}}],["/assets/rustlings-zh/exercises/if/",{loader:()=>F(()=>import("./index.html-BnW1m0SS.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>你将在这学习最基本的控制流（control flow）——<code>if</code></p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch03-05-control-flow.html#if-expressions" target="_blank" rel="noopener noreferrer">Control Flow - if expressions</a></li>
</ul>
`,readingTime:{minutes:.11,words:33},title:"If",type:"article"}}],["/assets/rustlings-zh/exercises/macros/",{loader:()=>F(()=>import("./index.html-DVYxYNr8.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust's macro system is very powerful, but also kind of difficult to wrap your<br>
head around. We're not going to teach you how to write your own fully-featured<br>
macros. Instead, we'll show you how to use and create them.</p>
<h2>Further information</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch19-06-macros.html" target="_blank" rel="noopener noreferrer">Macros</a></li>
<li><a href="https://danielkeep.github.io/tlborm/book/index.html" target="_blank" rel="noopener noreferrer">The Little Book of Rust Macros</a></li>
</ul>`,readingTime:{minutes:.2,words:60},title:"Macros",type:"article"}}],["/assets/rustlings-zh/exercises/modules/",{loader:()=>F(()=>import("./index.html-CBCQxD6Y.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这部分我们将向你介绍 Rust 的模块系统。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch07-00-managing-growing-projects-with-packages-crates-and-modules.html" target="_blank" rel="noopener noreferrer">The Module System</a></li>
</ul>
`,readingTime:{minutes:.13,words:38},title:"模块（Modules）",type:"article"}}],["/assets/rustlings-zh/exercises/move_semantics/",{loader:()=>F(()=>import("./index.html-pAxLc53Y.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这些练习改编自 <a href="https://github.com/pnkfelix" target="_blank" rel="noopener noreferrer">pnkfelix</a> 的 <a href="https://pnkfelix.github.io/rust-examples-icfp2014/" target="_blank" rel="noopener noreferrer">Rust Tutorial</a> -- 谢谢 Felix !!!</p>
<h2>更多信息</h2>
<p>以下书籍中的内容对于当前的学习尤其重要。</p>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html" target="_blank" rel="noopener noreferrer">Ownership</a></li>
<li><a href="https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html" target="_blank" rel="noopener noreferrer">Reference and borrowing</a></li>
</ul>`,readingTime:{minutes:.22,words:67},title:"移动语义（Move Semantics）",type:"article"}}],["/assets/rustlings-zh/exercises/option/",{loader:()=>F(()=>import("./index.html-C8ErPTxU.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Option 类型代表可选的值：每个 Option 要么是 Some ，包含一个值；要么是 None ，表示空值。<br>
Option 在 Rust 代码中十分常见，因为它有许多用途：</p>
<ul>
<li>初始值</li>
<li>输入值不符合定义的情况下作为函数的返回值（部分函数）。</li>
<li>返回 None 作为简单错误的返回值</li>
<li>可选的结构字段</li>
<li>可以借用或 "取走" 的结构字段（的值）</li>
<li>可选的函数参数</li>
<li>空指针</li>
<li>在某些情况下交换值*</li>
</ul>
<p>译注：“在某些情况下交换值”可以假设有个可变数组，现在要通过两个可变引用来交换其中两个元素的值。但 Rust 显然不允许有两个对数组的可变引用，这时候可以用 Option 包装下元素值，比如：</p>`,readingTime:{minutes:.98,words:295},title:"Option",type:"article"}}],["/assets/rustlings-zh/exercises/primitive_types/",{loader:()=>F(()=>import("./index.html-DuF6i_S3.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 有几个直接在编译器中实现基本类型。在本节中，我们来看看最重要的几个。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/stable/book/ch03-02-data-types.html" target="_blank" rel="noopener noreferrer">Data Types</a></li>
<li><a href="https://doc.rust-lang.org/stable/book/ch04-03-slices.html" target="_blank" rel="noopener noreferrer">The Slice Type</a></li>
</ul>`,readingTime:{minutes:.19,words:58},title:"基本类型（Primitive Types）",type:"article"}}],["/assets/rustlings-zh/exercises/standard_library_types/",{loader:()=>F(()=>import("./index.html-BJ_fp0aZ.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>This section will teach you about Box, Shared-State Concurrency and Iterators.</p>
<h2>Further information</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch15-01-box.html" target="_blank" rel="noopener noreferrer">Using Box to Point to Data on the Heap</a></li>
<li><a href="https://doc.rust-lang.org/book/ch16-03-shared-state.html" target="_blank" rel="noopener noreferrer">Shared-State Concurrency</a></li>
<li><a href="https://doc.rust-lang.org/book/ch13-02-iterators.html" target="_blank" rel="noopener noreferrer">Iterator</a></li>
<li><a href="https://doc.rust-lang.org/stable/std/iter/" target="_blank" rel="noopener noreferrer">Iterator documentation</a></li>
</ul>`,readingTime:{minutes:.17,words:51},title:"Standard library types",type:"article"}}],["/assets/rustlings-zh/exercises/strings/",{loader:()=>F(()=>import("./index.html-Ccxn94qb.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 有两种字符串类型，一种是字符串切片（<code>&amp;str</code>），另一种是拥有所有权的字符串（<code>String</code>）。我们不打算向你说明何时使用其中哪一种，但我们将为你讲解如何区分和创建它们，并灵活使用。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch08-02-strings.html" target="_blank" rel="noopener noreferrer">Strings</a></li>
</ul>
`,readingTime:{minutes:.28,words:85},title:"字符串",type:"article"}}],["/assets/rustlings-zh/exercises/structs/",{loader:()=>F(()=>import("./index.html-DptrIIOG.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Rust 有三种结构类型：经典的 C 结构、元组结构和单元结构。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch05-01-defining-structs.html" target="_blank" rel="noopener noreferrer">Structures</a></li>
<li><a href="https://doc.rust-lang.org/book/ch05-03-method-syntax.html" target="_blank" rel="noopener noreferrer">Method Syntax</a></li>
</ul>`,readingTime:{minutes:.15,words:45},title:"结构（Structs）",type:"article"}}],["/assets/rustlings-zh/exercises/tests/",{loader:()=>F(()=>import("./index.html-CXyEZu5K.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>这次不按书本上的顺序介绍测试——接下来的很多练习都会要求你通过测试！</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch11-01-writing-tests.html" target="_blank" rel="noopener noreferrer">Writing Tests</a></li>
</ul>
`,readingTime:{minutes:.15,words:45},title:"测试",type:"article"}}],["/assets/rustlings-zh/exercises/threads/",{loader:()=>F(()=>import("./index.html-BDfG-sDp.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>In most current operating systems, an executed program’s code is run in a process, and the operating system manages multiple processes at once.<br>
Within your program, you can also have independent parts that run simultaneously. The features that run these independent parts are called threads.</p>`,readingTime:{minutes:.22,words:67},title:"Threads",type:"article"}}],["/assets/rustlings-zh/exercises/traits/",{loader:()=>F(()=>import("./index.html-BeEW8CpA.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>Trait 是一系列方法的集合。</p>
<p>数据类型可以实现 trait。为此需要帮数据类型定义好构成 trait 的方法。<br>
例如，<code>String</code> 类型实现了 <code>From&lt;&amp;str&gt;</code> trait。它赋予我们能力写出 <code>String::from("hello")</code>。</p>
<p>如此一来，trait 就有点类似于 Java 的接口和 C++ 的抽象类。</p>
<p>另外一些常见的 Rust trait 包括：</p>
<ul>
<li><code>Clone</code> （<code>clone</code> 方法）</li>
<li><code>Display</code> (实现通过 <code>{}</code> 进行格式化显示)</li>
<li><code>Debug</code> (实现通过 <code>{:?}</code> 进行格式化显示 )</li>
</ul>`,readingTime:{minutes:.54,words:161},title:"Traits",type:"article"}}],["/assets/rustlings-zh/exercises/variables/",{loader:()=>F(()=>import("./index.html-CvVPtjln.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在 Rust，变量默认是不可变的.<br>
不可变意味着当一个值被绑定到某个名字上，你就不能再对这个值做出更改。<br>
当然，你可以通过在变量名前添加 mut 来使它们变得可变。</p>
<h2>更多信息</h2>
<ul>
<li><a href="https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html" target="_blank" rel="noopener noreferrer">Variables and Mutability</a></li>
</ul>
`,readingTime:{minutes:.28,words:84},title:"变量（Variables）",type:"article"}}],["/assets/writing-material/posts/fight-with-compiler-check/borrow.html",{loader:()=>F(()=>import("./borrow.html-CZkmNhWm.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>可以通过move struct中的字段，来解决borrow和mut borrow无法共存的问题</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bar</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Bar</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.bar;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Can’t do it.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">foo_mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.35,words:106},title:"",type:"article",s:"borrow"}}],["/assets/writing-material/posts/fight-with-compiler-check/generic.html",{loader:()=>F(()=>import("./generic.html-DqGymtUH.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>the type parameter <code>T</code> is not constrained by the impl trait</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">trait</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Maker</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Maker</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> for</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Bar</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    where</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Item</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Foo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(),</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.06,words:318},title:"",type:"article",s:"generic"}}],["/assets/writing-material/posts/tests/doc_test.html",{loader:()=>F(()=>import("./doc_test.html-W0uWwRBW.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Documentation testing</h2>
<p>The primary way of documenting a Rust project is through annotating the source code. Documentation comments are written in markdown and support code blocks in them. Rust takes care about correctness, so these code blocks are compiled and used as tests.</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// First line is a short summary describing function.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// The next lines present detailed documentation. Code blocks start with</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// triple backquotes and have implicit \`fn main()\` inside</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// and \`extern crate &lt;cratename&gt;\`. Assume we're testing \`doccomments\` crate:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// let result = doccomments::add(2, 3);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// assert_eq!(result, 5);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// Usually doc comments may include sections "Examples", "Panics" and "Failures".</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// The next function divides two numbers.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # Examples</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// let result = doccomments::div(10, 2);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// assert_eq!(result, 5);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # Panics</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// The function panics if the second argument is zero.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`rust,should_panic</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// // panics on division by zero</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// doccomments::div(10, 0);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        panic!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Divide-by-zero error"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// Using hidden \`try_main\` in doc tests.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">///</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # // hidden lines start with \`#\` symbol, but they're still compileable!</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # fn try_main() -&gt; Result&lt;(), String&gt; { // line that wraps the body shown in doc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// let res = try::try_div(10, 2)?;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # Ok(()) // returning from try_main</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # fn main() { // starting main that'll unwrap()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// #    try_main().unwrap(); // calling try_main and unwrapping</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// #                         // so that test will panic in case of error</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// # }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">/// \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> try_div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Divide-by-zero"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> / </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:1.42,words:426},title:"",type:"article",s:"doc_test"}}],["/assets/writing-material/posts/tests/integration_test.html",{loader:()=>F(()=>import("./integration_test.html-BdtIZmSU.js"),[]),meta:{date:1745158063e3,excerpt:`<p>Cargo looks for integration tests in <code>tests</code> directory next to <code>src</code>.</p>
<p>File <code>src/lib.rs</code>:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">// Define this in a crate called \`adder\`.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">i32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> + </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.16,words:48},title:"",type:"article",s:"integration_test"}}],["/assets/writing-material/posts/tests/misc.html",{loader:()=>F(()=>import("./misc.html-3AOHcIUD.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Development dependencies</h2>
<p>Sometimes there is a need to have dependencies for tests (or examples, or benchmarks) only. Such dependencies are added to Cargo.toml in the [dev-dependencies] section. These dependencies are not propagated to other packages which depend on this package.</p>
<p>One such example is using a crate that extends standard assert! macros.<br>
File Cargo.toml:</p>`,readingTime:{minutes:.35,words:106},title:"",type:"article",s:"misc"}}],["/assets/writing-material/posts/tests/unit_test.html",{loader:()=>F(()=>import("./unit_test.html-CNlwuMet.js"),[]),meta:{date:1745158063e3,excerpt:`<h2>Tests and ?</h2>
<p>in Rust 2018, your unit tests can return Result&lt;()&gt;, which lets you use ? in them! This can make them much more concise.</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> sqrt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">f64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> number</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> &gt;=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">powf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"negative floats don't have square roots"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">to_owned</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[cfg(test)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tests {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    use</span><span style="--shiki-light:#E45649;--shiki-light-font-style:inherit;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic"> super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::*;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">    #[test]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test_sqrt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;(), </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        assert_eq!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sqrt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)?.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">powf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">        Ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:.83,words:248},title:"",type:"article",s:"unit_test"}}],["/src/cargo/reference/build-script/examples.html",{loader:()=>F(()=>import("./examples.html-BSLGoMq-.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>下面我们通过一些例子来说明构建脚本该如何使用。社区中也提供了一些构建脚本的<a href="https://crates.io/keywords/build-dependencies" target="_blank" rel="noopener noreferrer">常用功能</a>，例如：</p>
<ul>
<li><a href="https://crates.io/crates/bindgen" target="_blank" rel="noopener noreferrer">bindgen</a>, 自动生成 Rust -&gt; C 的 FFI 绑定</li>
<li><a href="https://crates.io/crates/cc" target="_blank" rel="noopener noreferrer">cc</a>, 编译 C/C++/汇编</li>
<li><a href="https://crates.io/crates/pkg-config" target="_blank" rel="noopener noreferrer">pkg-config</a>, 使用 <code>pkg-config</code> 工具检测系统库</li>
<li><a href="https://crates.io/crates/cmake" target="_blank" rel="noopener noreferrer">cmake</a>, 运行 <code>cmake</code> 来构建一个本地库</li>
<li><a href="https://crates.io/crates/autocfg" target="_blank" rel="noopener noreferrer">autocfg</a>, <a href="https://crates.io/crates/rustc_version" target="_blank" rel="noopener noreferrer">rustc_version</a>, <a href="https://crates.io/crates/version_check" target="_blank" rel="noopener noreferrer">version_check</a>，这些包提供基于 <code>rustc</code> 的当前版本来实现条件编译的方法</li>
</ul>`,readingTime:{minutes:9.13,words:2738},title:"构建脚本示例",type:"article"}}],["/src/cargo/reference/build-script/intro.html",{loader:()=>F(()=>import("./intro.html-DTlxZzRT.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>一些项目希望编译第三方的非 Rust 代码，例如 C 依赖库；一些希望链接本地或者基于源码构建的 C 依赖库；还有一些项目需要功能性的工具，例如在构建之间执行一些代码生成的工作等。</p>
<p>对于这些目标，社区已经提供了一些工具来很好的解决，Cargo 并不想替代它们，但是为了给用户带来一些便利，Cargo 提供了自定义构建脚本的方式，来帮助用户更好的解决类似的问题。</p>
<h2>build.rs</h2>
<p>若要创建构建脚本，我们只需在项目的根目录下添加一个 <code>build.rs</code> 文件即可。这样一来， Cargo 就会先编译和执行该构建脚本，然后再去构建整个项目。</p>`,readingTime:{minutes:7.56,words:2268},title:"构建脚本( Build Scripts)",type:"article"}}],["/src/cargo/reference/features/examples.html",{loader:()=>F(()=>import("./examples.html-BFqCAdQu.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>以下我们一起来看看一些来自真实世界的示例。</p>
<h3>最小化构建时间和文件大小</h3>
<p>如果一些包的部分特性不再启用，就可以减少该包占用的大小以及编译时间:</p>
<ul>
<li><a href="https://crates.io/crates/syn" target="_blank" rel="noopener noreferrer"><code>syn</code></a> 包可以用来解析 Rust 代码，由于它很受欢迎，大量的项目都在引用，因此它给出了<a href="https://docs.rs/syn/1.0.54/syn/#optional-features" target="_blank" rel="noopener noreferrer">非常清晰的文档</a>关于如何最小化使用它包含的 <code>features</code></li>
<li><a href="https://crates.io/crates/regex" target="_blank" rel="noopener noreferrer"><code>regex</code></a> 也有关于 features 的<a href="https://docs.rs/regex/1.4.2/regex/#crate-features" target="_blank" rel="noopener noreferrer">描述文档</a>，例如移除 Unicode 支持的 feature 可以降低最终生成可执行文件的大小</li>
<li><a href="https://crates.io/crates/winapi" target="_blank" rel="noopener noreferrer"><code>winapi</code></a> 拥有<a href="https://github.com/retep998/winapi-rs/blob/0.3.9/Cargo.toml#L25-L431" target="_blank" rel="noopener noreferrer">众多 features</a>，这些 <code>feature</code> 对用了各种 Windows API，你可以只引入代码中用到的 API 所对应的 feature.</li>
</ul>`,readingTime:{minutes:4.37,words:1311},title:"Features 示例",type:"article"}}],["/src/cargo/reference/features/intro.html",{loader:()=>F(()=>import("./intro.html-yFDmu8fh.js"),[]),meta:{date:1745158063e3,excerpt:`
<p><code>Cargo Feature</code> 是非常强大的机制，可以为大家提供<a href="https://doc.rust-lang.org/stable/reference/conditional-compilation.html" target="_blank" rel="noopener noreferrer">条件编译</a>和可选依赖的高级特性。</p>
<h2>[features]</h2>
<p><code>Feature</code> 可以通过 <code>Cargo.toml</code> 中的 <code>[features]</code> 部分来定义：其中每个 <code>feature</code> 通过列表的方式指定了它所能启用的其他 <code>feature</code> 或可选依赖。</p>`,readingTime:{minutes:11.68,words:3505},title:"条件编译 Features",type:"article"}}],["/src/compiler/fight-with-compiler/borrowing/borrow-distinct-fields-of-struct.html",{loader:()=>F(()=>import("./borrow-distinct-fields-of-struct.html-z7pntMvd.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本文将彻底解决一个困扰广大 Rust 用户已久的常见错误： 当智能指针和结构体一起使用时导致的借用错误: <code>cannot borrow</code>mut_s<code> as mutable because it is also borrowed as immutable</code>.</p>
<p>相信看过<a href="https://course.rs/fight-with-compiler/intro.html" target="_blank" rel="noopener noreferrer">&lt;&lt;对抗 Rust 编译检查系列&gt;&gt;</a>的读者都知道结构体中的不同字段可以独立借用吧？</p>`,readingTime:{minutes:5.59,words:1678},title:"智能指针引起的重复借用错误",type:"article"}}],["/src/compiler/fight-with-compiler/borrowing/intro.html",{loader:()=>F(()=>import("./intro.html-YkFToCPT.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本章讲述如何解决类似<code>cannot borrow *self as mutable because it is also borrowed as immutable</code>这种重复借用的错误。</p>
`,readingTime:{minutes:.12,words:35},title:"重复借用",type:"article"}}],["/src/compiler/fight-with-compiler/borrowing/ref-exist-in-out-fn.html",{loader:()=>F(()=>import("./ref-exist-in-out-fn.html-CkzyrMMb.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本文将彻底解决一个困扰广大 Rust 用户已久的常见错误：因为在函数内外同时借用一个引用，导致了重复借用错误<code>cannot borrow *self as mutable because it is also borrowed as immutable</code>.</p>
<blockquote>
<p>本文大部分内容节选自<a href="https://course.rs/pitfalls/index.html" target="_blank" rel="noopener noreferrer">Rust 常见陷阱</a>专题，由于借用是新手绕不过去的坎，因此将其提取出来形成一个新的系列</p>
</blockquote>`,readingTime:{minutes:6.42,words:1926},title:"同时在函数内外使用引用导致的重复借用错误",type:"article"}}],["/src/compiler/fight-with-compiler/lifetime/closure-with-static.html",{loader:()=>F(()=>import("./closure-with-static.html-Diave2F6.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>特征对象是一个好东西，闭包也是一个好东西，但是如果两者你都想要时，可能就会火星撞地球，boom! 至于这两者为何会勾搭到一起？考虑一个常用场景：使用闭包作为回调函数.</p>
<h2>学习目标</h2>
<p>如何使用闭包作为特征对象，并解决以下错误：<code>the parameter type </code> \`impl Fn(&amp;str) -&gt; Res\` <code> may not live long enough</code></p>
<h2>报错的代码</h2>
<p>在下面代码中，我们通过闭包实现了一个简单的回调函数(错误代码已经标注)：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Option</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">dyn</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Fn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.callback </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inl</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Inline"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    inl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Inline: {}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">val</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">new</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"inline"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> let</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Some</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> inl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.callback {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        cb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello, world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:4.76,words:1428},title:"当闭包碰到特征对象 1",type:"article"}}],["/src/compiler/fight-with-compiler/lifetime/intro.html",{loader:()=>F(()=>import("./intro.html-BLrxDSMt.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>本章并不讲太多的概念，主要是用例子来引导大家去思考该如何对抗编译检查。</p>
`,readingTime:{minutes:.12,words:37},title:"生命周期",type:"article"}}],["/src/compiler/fight-with-compiler/lifetime/loop.html",{loader:()=>F(()=>import("./loop.html-CtE3yyE-.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>当涉及生命周期时，Rust 编译器有时会变得不太聪明，如果再配合循环，蠢笨都不足以形容它，不信？那继续跟着我一起看看。</p>
<h2>循环中的生命周期错误</h2>
<p>Talk is cheap, 一起来看个例子：</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">use</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> rand</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::{thread_rng, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Rng</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">#[derive(</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Debug</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">PartialEq</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF">)]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">enum</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">    Empty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> random_empty_tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) -&gt; &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    loop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> thread_rng</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">gen_range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tile</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">::</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Empty</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> *</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> tile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:6.83,words:2049},title:"蠢笨编译器之循环生命周期",type:"article"}}],["/src/compiler/fight-with-compiler/lifetime/too-long1.html",{loader:()=>F(()=>import("./too-long1.html-B7FEGAcg.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在大多时候，Rust 的生命周期你只要标识了，即可以通过编译，但是总是存在一些情况，会导致编译无法通过，本文就讲述这样一种情况：因为生命周期声明的范围过大，导致了编译无法通过，希望大家喜欢</p>
<h2>例子 1</h2>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> noop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"interface consumed"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> str</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> get_interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">        Interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.manager</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">get_interface</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">noop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Interface should be dropped here and the borrow released"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // this fails because inmutable/mutable borrow</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic">    // but Interface should be already dropped here and the borrow released</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    use_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> use_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    println!</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"{}"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.manager.text);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:2.4,words:720},title:"生命周期声明的范围过大",type:"article"}}],["/src/compiler/fight-with-compiler/lifetime/too-long2.html",{loader:()=>F(()=>import("./too-long2.html-C7GgLO50.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>继上篇文章后，我们再来看一段<strong>可能</strong>涉及生命周期过大导致的无法编译问题:</p>
<div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> bar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    baz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"world"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> baz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">pub</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> struct</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">usize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">impl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B">Writer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) -&gt; &amp;'</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> Self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            indent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.indent + </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> write</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(&amp;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">mut</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: &amp;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> _</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">..</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.indent {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' '</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push_str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        self</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.target.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,readingTime:{minutes:3.14,words:943},title:"生命周期过大-02",type:"article"}}],["/src/profiling/compiler/optimization/intro.html",{loader:()=>F(()=>import("./intro.html--PWGyfGQ.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>在Rust中，一段很不起眼的代码中可能也隐藏着玄机，编译器在细无声的为我们做着各种优化，本章将记录这些优化，帮助大家更好的理解程序的性能。</p>
`,readingTime:{minutes:.22,words:66},title:"编译器优化",type:"article"}}],["/src/profiling/compiler/optimization/option.html",{loader:()=>F(()=>import("./option.html-BpyK5LP7.js"),[]),meta:{date:1745158063e3,excerpt:`
<p>https://www.reddit.com/r/learnrust/comments/rz34ht/where_does_the_data_go_if_you_replace_some_with/</p>
`,readingTime:{minutes:.02,words:5},title:"Option枚举",type:"article"}}],["/src/profiling/profiling/performance/benchmark.html",{loader:()=>F(()=>import("./benchmark.html-BOBUxsNF.js"),[]),meta:{date:1745158063e3,excerpt:`
`,readingTime:{minutes:.02,words:6},title:"Benchmark性能测试(todo)",type:"article"}}],["/404.html",{loader:()=>F(()=>import("./404.html-BjNdS9aU.js"),[]),meta:{title:"",s:"404"}}],["/src/",{loader:()=>F(()=>import("./index.html-BX06Cfbi.js"),[]),meta:{title:"Src"}}],["/assets/",{loader:()=>F(()=>import("./index.html-MpB73ldw.js"),[]),meta:{title:"Assets"}}],["/assets/writing-material/",{loader:()=>F(()=>import("./index.html-B5iEdiPL.js"),[]),meta:{title:"Writing Material"}}],["/src/advance/",{loader:()=>F(()=>import("./index.html-BlcNAxiO.js"),[]),meta:{title:"Advance"}}],["/src/advance-practice/",{loader:()=>F(()=>import("./index.html-BfctGhfw.js"),[]),meta:{title:"Advance Practice"}}],["/src/advance-practice1/",{loader:()=>F(()=>import("./index.html-CpDLNARg.js"),[]),meta:{title:"Advance Practice1"}}],["/src/appendix/",{loader:()=>F(()=>import("./index.html-DE2CaQ8w.js"),[]),meta:{title:"Appendix"}}],["/src/basic/",{loader:()=>F(()=>import("./index.html-BUD_dKeU.js"),[]),meta:{title:"Basic"}}],["/src/basic-practice/",{loader:()=>F(()=>import("./index.html-BY8P37nV.js"),[]),meta:{title:"Basic Practice"}}],["/src/cargo/",{loader:()=>F(()=>import("./index.html-GFHMzepr.js"),[]),meta:{title:"Cargo"}}],["/src/compiler/",{loader:()=>F(()=>import("./index.html-D6B6wCug.js"),[]),meta:{title:"Compiler"}}],["/src/difficulties/",{loader:()=>F(()=>import("./index.html-CnSekXEz.js"),[]),meta:{title:"Difficulties"}}],["/src/first-try/",{loader:()=>F(()=>import("./index.html-DjLTvjhj.js"),[]),meta:{title:"First Try"}}],["/src/libraries/",{loader:()=>F(()=>import("./index.html-VII66gGa.js"),[]),meta:{title:"Libraries"}}],["/src/logs/",{loader:()=>F(()=>import("./index.html-Chs6R3eJ.js"),[]),meta:{title:"Logs"}}],["/src/practice/",{loader:()=>F(()=>import("./index.html-ESwbEZhx.js"),[]),meta:{title:"Practice"}}],["/src/profiling/",{loader:()=>F(()=>import("./index.html-DQAVc-xC.js"),[]),meta:{title:"Profiling"}}],["/src/std/",{loader:()=>F(()=>import("./index.html-Dn1RGmNi.js"),[]),meta:{title:"Std"}}],["/src/templates/",{loader:()=>F(()=>import("./index.html-DvvddDmP.js"),[]),meta:{title:"Templates"}}],["/src/test/",{loader:()=>F(()=>import("./index.html-EuE10xOS.js"),[]),meta:{title:"Test"}}],["/src/too-many-lists/",{loader:()=>F(()=>import("./index.html-DxkXMH3J.js"),[]),meta:{title:"Too Many Lists"}}],["/src/usecases/",{loader:()=>F(()=>import("./index.html-2XGRxJzS.js"),[]),meta:{title:"Usecases"}}],["/assets/writing-material/posts/",{loader:()=>F(()=>import("./index.html-BcnZpgAE.js"),[]),meta:{title:"Posts"}}],["/assets/writing-material/style_guide/",{loader:()=>F(()=>import("./index.html-q9rNRqxx.js"),[]),meta:{title:"Style Guide"}}],["/src/advance/async/",{loader:()=>F(()=>import("./index.html-Bi2lpRJi.js"),[]),meta:{title:"Async"}}],["/src/advance/circle-self-ref/",{loader:()=>F(()=>import("./index.html-DPXhLrud.js"),[]),meta:{title:"Circle Self Ref"}}],["/src/advance/concurrency-with-threads/",{loader:()=>F(()=>import("./index.html-BpVOXQKF.js"),[]),meta:{title:"Concurrency with Threads"}}],["/src/advance/difficulties/",{loader:()=>F(()=>import("./index.html-D636REs-.js"),[]),meta:{title:"Difficulties"}}],["/src/advance/functional-programing/",{loader:()=>F(()=>import("./index.html-YwuVqAAI.js"),[]),meta:{title:"Functional Programing"}}],["/src/advance/into-types/",{loader:()=>F(()=>import("./index.html-D3BPQ9gL.js"),[]),meta:{title:"Into Types"}}],["/src/advance/lifetime/",{loader:()=>F(()=>import("./index.html-1rhi7Lhw.js"),[]),meta:{title:"Lifetime"}}],["/src/advance/smart-pointer/",{loader:()=>F(()=>import("./index.html-C1Al5Y92.js"),[]),meta:{title:"Smart Pointer"}}],["/src/advance/unsafe/",{loader:()=>F(()=>import("./index.html-BWxOwuJQ.js"),[]),meta:{title:"Unsafe"}}],["/src/appendix/rust-versions/",{loader:()=>F(()=>import("./index.html-6NlRxeKo.js"),[]),meta:{title:"Rust Versions"}}],["/src/basic/collections/",{loader:()=>F(()=>import("./index.html-B7KFOSAj.js"),[]),meta:{title:"Collections"}}],["/src/basic/compound-type/",{loader:()=>F(()=>import("./index.html-aqJrbTDm.js"),[]),meta:{title:"Compound Type"}}],["/src/basic/crate-module/",{loader:()=>F(()=>import("./index.html-BdPKa9kv.js"),[]),meta:{title:"Crate Module"}}],["/src/basic/match-pattern/",{loader:()=>F(()=>import("./index.html-CxNnR04k.js"),[]),meta:{title:"Match Pattern"}}],["/src/basic/result-error/",{loader:()=>F(()=>import("./index.html-BOr8LfAj.js"),[]),meta:{title:"Result Error"}}],["/src/basic/trait/",{loader:()=>F(()=>import("./index.html-Bza3qbcw.js"),[]),meta:{title:"Trait"}}],["/src/cargo/guide/",{loader:()=>F(()=>import("./index.html-COBEBnDo.js"),[]),meta:{title:"Guide"}}],["/src/cargo/reference/",{loader:()=>F(()=>import("./index.html-CfuLRh_3.js"),[]),meta:{title:"Reference"}}],["/src/compiler/fight-with-compiler/",{loader:()=>F(()=>import("./index.html-Ce17V7Wz.js"),[]),meta:{title:"Fight with Compiler"}}],["/src/libraries/command/",{loader:()=>F(()=>import("./index.html-CsZq2Eql.js"),[]),meta:{title:"Command"}}],["/src/libraries/http/",{loader:()=>F(()=>import("./index.html-Bo59f2SQ.js"),[]),meta:{title:"Http"}}],["/src/libraries/json/",{loader:()=>F(()=>import("./index.html-4c28-0P2.js"),[]),meta:{title:"Json"}}],["/src/logs/observe/",{loader:()=>F(()=>import("./index.html-BgXdWdFX.js"),[]),meta:{title:"Observe"}}],["/src/profiling/compiler/",{loader:()=>F(()=>import("./index.html-CaI1TEMA.js"),[]),meta:{title:"Compiler"}}],["/src/profiling/memory/",{loader:()=>F(()=>import("./index.html-DI6u3A51.js"),[]),meta:{title:"Memory"}}],["/src/profiling/performance/",{loader:()=>F(()=>import("./index.html-Bfnbk5Dh.js"),[]),meta:{title:"Performance"}}],["/src/templates/files/",{loader:()=>F(()=>import("./index.html-39i8wXZK.js"),[]),meta:{title:"Files"}}],["/src/templates/http/",{loader:()=>F(()=>import("./index.html-LkzHowT6.js"),[]),meta:{title:"Http"}}],["/src/too-many-lists/advanced-lists/",{loader:()=>F(()=>import("./index.html-AbaOrMaT.js"),[]),meta:{title:"Advanced Lists"}}],["/src/too-many-lists/bad-stack/",{loader:()=>F(()=>import("./index.html-BKMBRCGW.js"),[]),meta:{title:"Bad Stack"}}],["/src/too-many-lists/deque/",{loader:()=>F(()=>import("./index.html-D1tlrsqd.js"),[]),meta:{title:"Deque"}}],["/src/too-many-lists/ok-stack/",{loader:()=>F(()=>import("./index.html-B3pDz8BF.js"),[]),meta:{title:"Ok Stack"}}],["/src/too-many-lists/persistent-stack/",{loader:()=>F(()=>import("./index.html-B1lahQjQ.js"),[]),meta:{title:"Persistent Stack"}}],["/src/too-many-lists/production-unsafe-deque/",{loader:()=>F(()=>import("./index.html-CkoOq7jY.js"),[]),meta:{title:"Production Unsafe Deque"}}],["/src/too-many-lists/unsafe-queue/",{loader:()=>F(()=>import("./index.html-BLrVjJ6T.js"),[]),meta:{title:"Unsafe Queue"}}],["/assets/writing-material/posts/fight-with-compiler-check/",{loader:()=>F(()=>import("./index.html-DqDU13XH.js"),[]),meta:{title:"Fight with Compiler Check"}}],["/assets/writing-material/posts/tests/",{loader:()=>F(()=>import("./index.html-CEhqcCZZ.js"),[]),meta:{title:"Tests"}}],["/src/cargo/reference/build-script/",{loader:()=>F(()=>import("./index.html-BoE08U9T.js"),[]),meta:{title:"Build Script"}}],["/src/cargo/reference/features/",{loader:()=>F(()=>import("./index.html-BqUxfe-j.js"),[]),meta:{title:"Features"}}],["/src/compiler/fight-with-compiler/borrowing/",{loader:()=>F(()=>import("./index.html-DMAuxjzN.js"),[]),meta:{title:"Borrowing"}}],["/src/compiler/fight-with-compiler/lifetime/",{loader:()=>F(()=>import("./index.html-B---OtNu.js"),[]),meta:{title:"Lifetime"}}],["/src/profiling/compiler/optimization/",{loader:()=>F(()=>import("./index.html-qUzmTFVx.js"),[]),meta:{title:"Optimization"}}],["/src/profiling/profiling/performance/",{loader:()=>F(()=>import("./index.html-MuT8ugV6.js"),[]),meta:{title:"Performance"}}],["/src/profiling/profiling/",{loader:()=>F(()=>import("./index.html-CM85270V.js"),[]),meta:{title:"Profiling"}}],["/category/",{loader:()=>F(()=>import("./index.html-zm_jF-c5.js"),[]),meta:{title:"分类",index:!1}}],["/tag/",{loader:()=>F(()=>import("./index.html-Dq4JQ-u2.js"),[]),meta:{title:"标签",index:!1}}],["/Blog/",{loader:()=>F(()=>import("./index.html-pyls3fZJ.js"),[]),meta:{title:"文章",index:!1}}],["/star/",{loader:()=>F(()=>import("./index.html-BvM5QdX5.js"),[]),meta:{title:"星标",index:!1}}],["/timeline/",{loader:()=>F(()=>import("./index.html-DoGdJdCP.js"),[]),meta:{title:"时间轴",index:!1}}]]);function qF(){return x4().__VUE_DEVTOOLS_GLOBAL_HOOK__}function x4(){return typeof navigator<"u"&&typeof window<"u"?window:typeof globalThis<"u"?globalThis:{}}const HF=typeof Proxy=="function",jF="devtools-plugin:setup",UF="plugin:settings:set";let Nn,Zd;function GF(){var s;return Nn!==void 0||(typeof window<"u"&&window.performance?(Nn=!0,Zd=window.performance):typeof globalThis<"u"&&(!((s=globalThis.perf_hooks)===null||s===void 0)&&s.performance)?(Nn=!0,Zd=globalThis.perf_hooks.performance):Nn=!1),Nn}function WF(){return GF()?Zd.now():Date.now()}class KF{constructor(i,e){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=i,this.hook=e;const a={};if(i.settings)for(const l in i.settings){const r=i.settings[l];a[l]=r.defaultValue}const n=`__vue-devtools-plugin-settings__${i.id}`;let t=Object.assign({},a);try{const l=localStorage.getItem(n),r=JSON.parse(l);Object.assign(t,r)}catch{}this.fallbacks={getSettings(){return t},setSettings(l){try{localStorage.setItem(n,JSON.stringify(l))}catch{}t=l},now(){return WF()}},e&&e.on(UF,(l,r)=>{l===this.plugin.id&&this.fallbacks.setSettings(r)}),this.proxiedOn=new Proxy({},{get:(l,r)=>this.target?this.target.on[r]:(...h)=>{this.onQueue.push({method:r,args:h})}}),this.proxiedTarget=new Proxy({},{get:(l,r)=>this.target?this.target[r]:r==="on"?this.proxiedOn:Object.keys(this.fallbacks).includes(r)?(...h)=>(this.targetQueue.push({method:r,args:h,resolve:()=>{}}),this.fallbacks[r](...h)):(...h)=>new Promise(p=>{this.targetQueue.push({method:r,args:h,resolve:p})})})}async setRealTarget(i){this.target=i;for(const e of this.onQueue)this.target.on[e.method](...e.args);for(const e of this.targetQueue)e.resolve(await this.target[e.method](...e.args))}}function YF(s,i){const e=s,a=x4(),n=qF(),t=HF&&e.enableEarlyProxy;if(n&&(a.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__||!t))n.emit(jF,s,i);else{const l=t?new KF(e,n):null;(a.__VUE_DEVTOOLS_PLUGINS__=a.__VUE_DEVTOOLS_PLUGINS__||[]).push({pluginDescriptor:e,setupFn:i,proxy:l}),l&&i(l.proxiedTarget)}}/*!
  * vue-router v4.5.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const pa=typeof document<"u";function T4(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function XF(s){return s.__esModule||s[Symbol.toStringTag]==="Module"||s.default&&T4(s.default)}const zs=Object.assign;function nk(s,i){const e={};for(const a in i){const n=i[a];e[a]=ae(n)?n.map(s):s(n)}return e}const rl=()=>{},ae=Array.isArray,S4=/#/g,ZF=/&/g,JF=/\//g,QF=/=/g,sE=/\?/g,I4=/\+/g,iE=/%5B/g,eE=/%5D/g,R4=/%5E/g,aE=/%60/g,O4=/%7B/g,nE=/%7C/g,P4=/%7D/g,tE=/%20/g;function Fu(s){return encodeURI(""+s).replace(nE,"|").replace(iE,"[").replace(eE,"]")}function lE(s){return Fu(s).replace(O4,"{").replace(P4,"}").replace(R4,"^")}function Jd(s){return Fu(s).replace(I4,"%2B").replace(tE,"+").replace(S4,"%23").replace(ZF,"%26").replace(aE,"`").replace(O4,"{").replace(P4,"}").replace(R4,"^")}function rE(s){return Jd(s).replace(QF,"%3D")}function hE(s){return Fu(s).replace(S4,"%23").replace(sE,"%3F")}function pE(s){return s==null?"":hE(s).replace(JF,"%2F")}function dt(s){try{return decodeURIComponent(""+s)}catch{}return""+s}const kE=/\/$/,dE=s=>s.replace(kE,"");function tk(s,i,e="/"){let a,n={},t="",l="";const r=i.indexOf("#");let h=i.indexOf("?");return r<h&&r>=0&&(h=-1),h>-1&&(a=i.slice(0,h),t=i.slice(h+1,r>-1?r:i.length),n=s(t)),r>-1&&(a=a||i.slice(0,r),l=i.slice(r,i.length)),a=gE(a??i,e),{fullPath:a+(t&&"?")+t+l,path:a,query:n,hash:dt(l)}}function oE(s,i){const e=i.query?s(i.query):"";return i.path+(e&&"?")+e+(i.hash||"")}function wg(s,i){return!i||!s.toLowerCase().startsWith(i.toLowerCase())?s:s.slice(i.length)||"/"}function uE(s,i,e){const a=i.matched.length-1,n=e.matched.length-1;return a>-1&&a===n&&Za(i.matched[a],e.matched[n])&&L4(i.params,e.params)&&s(i.query)===s(e.query)&&i.hash===e.hash}function Za(s,i){return(s.aliasOf||s)===(i.aliasOf||i)}function L4(s,i){if(Object.keys(s).length!==Object.keys(i).length)return!1;for(const e in s)if(!cE(s[e],i[e]))return!1;return!0}function cE(s,i){return ae(s)?xg(s,i):ae(i)?xg(i,s):s===i}function xg(s,i){return ae(i)?s.length===i.length&&s.every((e,a)=>e===i[a]):s.length===1&&s[0]===i}function gE(s,i){if(s.startsWith("/"))return s;if(!s)return i;const e=i.split("/"),a=s.split("/"),n=a[a.length-1];(n===".."||n===".")&&a.push("");let t=e.length-1,l,r;for(l=0;l<a.length;l++)if(r=a[l],r!==".")if(r==="..")t>1&&t--;else break;return e.slice(0,t).join("/")+"/"+a.slice(l).join("/")}const ta={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var vl;(function(s){s.pop="pop",s.push="push"})(vl||(vl={}));var hl;(function(s){s.back="back",s.forward="forward",s.unknown=""})(hl||(hl={}));function BE(s){if(!s)if(pa){const i=document.querySelector("base");s=i&&i.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),dE(s)}const AE=/^[^#]+#/;function yE(s,i){return s.replace(AE,"#")+i}function fE(s,i){const e=document.documentElement.getBoundingClientRect(),a=s.getBoundingClientRect();return{behavior:i.behavior,left:a.left-e.left-(i.left||0),top:a.top-e.top-(i.top||0)}}const tp=()=>({left:window.scrollX,top:window.scrollY});function mE(s){let i;if("el"in s){const e=s.el,a=typeof e=="string"&&e.startsWith("#"),n=typeof e=="string"?a?document.getElementById(e.slice(1)):document.querySelector(e):e;if(!n)return;i=fE(n,s)}else i=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(i):window.scrollTo(i.left!=null?i.left:window.scrollX,i.top!=null?i.top:window.scrollY)}function Tg(s,i){return(history.state?history.state.position-i:-1)+s}const Qd=new Map;function vE(s,i){Qd.set(s,i)}function FE(s){const i=Qd.get(s);return Qd.delete(s),i}let EE=()=>location.protocol+"//"+location.host;function N4(s,i){const{pathname:e,search:a,hash:n}=i,t=s.indexOf("#");if(t>-1){let r=n.includes(s.slice(t))?s.slice(t).length:1,h=n.slice(r);return h[0]!=="/"&&(h="/"+h),wg(h,"")}return wg(e,s)+a+n}function bE(s,i,e,a){let n=[],t=[],l=null;const r=({state:o})=>{const u=N4(s,location),c=e.value,A=i.value;let g=0;if(o){if(e.value=u,i.value=o,l&&l===c){l=null;return}g=A?o.position-A.position:0}else a(u);n.forEach(f=>{f(e.value,c,{delta:g,type:vl.pop,direction:g?g>0?hl.forward:hl.back:hl.unknown})})};function h(){l=e.value}function p(o){n.push(o);const u=()=>{const c=n.indexOf(o);c>-1&&n.splice(c,1)};return t.push(u),u}function k(){const{history:o}=window;o.state&&o.replaceState(zs({},o.state,{scroll:tp()}),"")}function d(){for(const o of t)o();t=[],window.removeEventListener("popstate",r),window.removeEventListener("beforeunload",k)}return window.addEventListener("popstate",r),window.addEventListener("beforeunload",k,{passive:!0}),{pauseListeners:h,listen:p,destroy:d}}function Sg(s,i,e,a=!1,n=!1){return{back:s,current:i,forward:e,replaced:a,position:window.history.length,scroll:n?tp():null}}function CE(s){const{history:i,location:e}=window,a={value:N4(s,e)},n={value:i.state};n.value||t(a.value,{back:null,current:a.value,forward:null,position:i.length-1,replaced:!0,scroll:null},!0);function t(h,p,k){const d=s.indexOf("#"),o=d>-1?(e.host&&document.querySelector("base")?s:s.slice(d))+h:EE()+s+h;try{i[k?"replaceState":"pushState"](p,"",o),n.value=p}catch(u){console.error(u),e[k?"replace":"assign"](o)}}function l(h,p){const k=zs({},i.state,Sg(n.value.back,h,n.value.forward,!0),p,{position:n.value.position});t(h,k,!0),a.value=h}function r(h,p){const k=zs({},n.value,i.state,{forward:h,scroll:tp()});t(k.current,k,!0);const d=zs({},Sg(a.value,h,null),{position:k.position+1},p);t(h,d,!1),a.value=h}return{location:a,state:n,push:r,replace:l}}function _E(s){s=BE(s);const i=CE(s),e=bE(s,i.state,i.location,i.replace);function a(t,l=!0){l||e.pauseListeners(),history.go(t)}const n=zs({location:"",base:s,go:a,createHref:yE.bind(null,s)},i,e);return Object.defineProperty(n,"location",{enumerable:!0,get:()=>i.location.value}),Object.defineProperty(n,"state",{enumerable:!0,get:()=>i.state.value}),n}function M4(s){return typeof s=="string"||s&&typeof s=="object"}function V4(s){return typeof s=="string"||typeof s=="symbol"}const $4=Symbol("");var Ig;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(Ig||(Ig={}));function ot(s,i){return zs(new Error,{type:s,[$4]:!0},i)}function ia(s,i){return s instanceof Error&&$4 in s&&(i==null||!!(s.type&i))}const Rg="[^/]+?",DE={sensitive:!1,strict:!1,start:!0,end:!0},wE=/[.+*?^${}()[\]/\\]/g;function xE(s,i){const e=zs({},DE,i),a=[];let n=e.start?"^":"";const t=[];for(const p of s){const k=p.length?[]:[90];e.strict&&!p.length&&(n+="/");for(let d=0;d<p.length;d++){const o=p[d];let u=40+(e.sensitive?.25:0);if(o.type===0)d||(n+="/"),n+=o.value.replace(wE,"\\$&"),u+=40;else if(o.type===1){const{value:c,repeatable:A,optional:g,regexp:f}=o;t.push({name:c,repeatable:A,optional:g});const m=f||Rg;if(m!==Rg){u+=10;try{new RegExp(`(${m})`)}catch(v){throw new Error(`Invalid custom RegExp for param "${c}" (${m}): `+v.message)}}let y=A?`((?:${m})(?:/(?:${m}))*)`:`(${m})`;d||(y=g&&p.length<2?`(?:/${y})`:"/"+y),g&&(y+="?"),n+=y,u+=20,g&&(u+=-8),A&&(u+=-20),m===".*"&&(u+=-50)}k.push(u)}a.push(k)}if(e.strict&&e.end){const p=a.length-1;a[p][a[p].length-1]+=.7000000000000001}e.strict||(n+="/?"),e.end?n+="$":e.strict&&!n.endsWith("/")&&(n+="(?:/|$)");const l=new RegExp(n,e.sensitive?"":"i");function r(p){const k=p.match(l),d={};if(!k)return null;for(let o=1;o<k.length;o++){const u=k[o]||"",c=t[o-1];d[c.name]=u&&c.repeatable?u.split("/"):u}return d}function h(p){let k="",d=!1;for(const o of s){(!d||!k.endsWith("/"))&&(k+="/"),d=!1;for(const u of o)if(u.type===0)k+=u.value;else if(u.type===1){const{value:c,repeatable:A,optional:g}=u,f=c in p?p[c]:"";if(ae(f)&&!A)throw new Error(`Provided param "${c}" is an array but it is not repeatable (* or + modifiers)`);const m=ae(f)?f.join("/"):f;if(!m)if(g)o.length<2&&(k.endsWith("/")?k=k.slice(0,-1):d=!0);else throw new Error(`Missing required param "${c}"`);k+=m}}return k||"/"}return{re:l,score:a,keys:t,parse:r,stringify:h}}function TE(s,i){let e=0;for(;e<s.length&&e<i.length;){const a=i[e]-s[e];if(a)return a;e++}return s.length<i.length?s.length===1&&s[0]===80?-1:1:s.length>i.length?i.length===1&&i[0]===80?1:-1:0}function z4(s,i){let e=0;const a=s.score,n=i.score;for(;e<a.length&&e<n.length;){const t=TE(a[e],n[e]);if(t)return t;e++}if(Math.abs(n.length-a.length)===1){if(Og(a))return 1;if(Og(n))return-1}return n.length-a.length}function Og(s){const i=s[s.length-1];return s.length>0&&i[i.length-1]<0}const SE={type:0,value:""},IE=/[a-zA-Z0-9_]/;function RE(s){if(!s)return[[]];if(s==="/")return[[SE]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function i(u){throw new Error(`ERR (${e})/"${p}": ${u}`)}let e=0,a=e;const n=[];let t;function l(){t&&n.push(t),t=[]}let r=0,h,p="",k="";function d(){p&&(e===0?t.push({type:0,value:p}):e===1||e===2||e===3?(t.length>1&&(h==="*"||h==="+")&&i(`A repeatable param (${p}) must be alone in its segment. eg: '/:ids+.`),t.push({type:1,value:p,regexp:k,repeatable:h==="*"||h==="+",optional:h==="*"||h==="?"})):i("Invalid state to consume buffer"),p="")}function o(){p+=h}for(;r<s.length;){if(h=s[r++],h==="\\"&&e!==2){a=e,e=4;continue}switch(e){case 0:h==="/"?(p&&d(),l()):h===":"?(d(),e=1):o();break;case 4:o(),e=a;break;case 1:h==="("?e=2:IE.test(h)?o():(d(),e=0,h!=="*"&&h!=="?"&&h!=="+"&&r--);break;case 2:h===")"?k[k.length-1]=="\\"?k=k.slice(0,-1)+h:e=3:k+=h;break;case 3:d(),e=0,h!=="*"&&h!=="?"&&h!=="+"&&r--,k="";break;default:i("Unknown state");break}}return e===2&&i(`Unfinished custom RegExp for param "${p}"`),d(),l(),n}function OE(s,i,e){const a=xE(RE(s.path),e),n=zs(a,{record:s,parent:i,children:[],alias:[]});return i&&!n.record.aliasOf==!i.record.aliasOf&&i.children.push(n),n}function PE(s,i){const e=[],a=new Map;i=Mg({strict:!1,end:!0,sensitive:!1},i);function n(d){return a.get(d)}function t(d,o,u){const c=!u,A=Lg(d);A.aliasOf=u&&u.record;const g=Mg(i,d),f=[A];if("alias"in d){const v=typeof d.alias=="string"?[d.alias]:d.alias;for(const _ of v)f.push(Lg(zs({},A,{components:u?u.record.components:A.components,path:_,aliasOf:u?u.record:A})))}let m,y;for(const v of f){const{path:_}=v;if(o&&_[0]!=="/"){const S=o.record.path,N=S[S.length-1]==="/"?"":"/";v.path=o.record.path+(_&&N+_)}if(m=OE(v,o,g),u?u.alias.push(m):(y=y||m,y!==m&&y.alias.push(m),c&&d.name&&!Ng(m)&&l(d.name)),q4(m)&&h(m),A.children){const S=A.children;for(let N=0;N<S.length;N++)t(S[N],m,u&&u.children[N])}u=u||m}return y?()=>{l(y)}:rl}function l(d){if(V4(d)){const o=a.get(d);o&&(a.delete(d),e.splice(e.indexOf(o),1),o.children.forEach(l),o.alias.forEach(l))}else{const o=e.indexOf(d);o>-1&&(e.splice(o,1),d.record.name&&a.delete(d.record.name),d.children.forEach(l),d.alias.forEach(l))}}function r(){return e}function h(d){const o=ME(d,e);e.splice(o,0,d),d.record.name&&!Ng(d)&&a.set(d.record.name,d)}function p(d,o){let u,c={},A,g;if("name"in d&&d.name){if(u=a.get(d.name),!u)throw ot(1,{location:d});g=u.record.name,c=zs(Pg(o.params,u.keys.filter(y=>!y.optional).concat(u.parent?u.parent.keys.filter(y=>y.optional):[]).map(y=>y.name)),d.params&&Pg(d.params,u.keys.map(y=>y.name))),A=u.stringify(c)}else if(d.path!=null)A=d.path,u=e.find(y=>y.re.test(A)),u&&(c=u.parse(A),g=u.record.name);else{if(u=o.name?a.get(o.name):e.find(y=>y.re.test(o.path)),!u)throw ot(1,{location:d,currentLocation:o});g=u.record.name,c=zs({},o.params,d.params),A=u.stringify(c)}const f=[];let m=u;for(;m;)f.unshift(m.record),m=m.parent;return{name:g,path:A,params:c,matched:f,meta:NE(f)}}s.forEach(d=>t(d));function k(){e.length=0,a.clear()}return{addRoute:t,resolve:p,removeRoute:l,clearRoutes:k,getRoutes:r,getRecordMatcher:n}}function Pg(s,i){const e={};for(const a of i)a in s&&(e[a]=s[a]);return e}function Lg(s){const i={path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:s.aliasOf,beforeEnter:s.beforeEnter,props:LE(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}};return Object.defineProperty(i,"mods",{value:{}}),i}function LE(s){const i={},e=s.props||!1;if("component"in s)i.default=e;else for(const a in s.components)i[a]=typeof e=="object"?e[a]:e;return i}function Ng(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function NE(s){return s.reduce((i,e)=>zs(i,e.meta),{})}function Mg(s,i){const e={};for(const a in s)e[a]=a in i?i[a]:s[a];return e}function ME(s,i){let e=0,a=i.length;for(;e!==a;){const t=e+a>>1;z4(s,i[t])<0?a=t:e=t+1}const n=VE(s);return n&&(a=i.lastIndexOf(n,a-1)),a}function VE(s){let i=s;for(;i=i.parent;)if(q4(i)&&z4(s,i)===0)return i}function q4({record:s}){return!!(s.name||s.components&&Object.keys(s.components).length||s.redirect)}function $E(s){const i={};if(s===""||s==="?")return i;const a=(s[0]==="?"?s.slice(1):s).split("&");for(let n=0;n<a.length;++n){const t=a[n].replace(I4," "),l=t.indexOf("="),r=dt(l<0?t:t.slice(0,l)),h=l<0?null:dt(t.slice(l+1));if(r in i){let p=i[r];ae(p)||(p=i[r]=[p]),p.push(h)}else i[r]=h}return i}function Vg(s){let i="";for(let e in s){const a=s[e];if(e=rE(e),a==null){a!==void 0&&(i+=(i.length?"&":"")+e);continue}(ae(a)?a.map(t=>t&&Jd(t)):[a&&Jd(a)]).forEach(t=>{t!==void 0&&(i+=(i.length?"&":"")+e,t!=null&&(i+="="+t))})}return i}function zE(s){const i={};for(const e in s){const a=s[e];a!==void 0&&(i[e]=ae(a)?a.map(n=>n==null?null:""+n):a==null?a:""+a)}return i}const qE=Symbol(""),$g=Symbol(""),lp=Symbol(""),Eu=Symbol(""),so=Symbol("");function Mt(){let s=[];function i(a){return s.push(a),()=>{const n=s.indexOf(a);n>-1&&s.splice(n,1)}}function e(){s=[]}return{add:i,list:()=>s.slice(),reset:e}}function Na(s,i,e,a,n,t=l=>l()){const l=a&&(a.enterCallbacks[n]=a.enterCallbacks[n]||[]);return()=>new Promise((r,h)=>{const p=o=>{o===!1?h(ot(4,{from:e,to:i})):o instanceof Error?h(o):M4(o)?h(ot(2,{from:i,to:o})):(l&&a.enterCallbacks[n]===l&&typeof o=="function"&&l.push(o),r())},k=t(()=>s.call(a&&a.instances[n],i,e,p));let d=Promise.resolve(k);s.length<3&&(d=d.then(p)),d.catch(o=>h(o))})}function lk(s,i,e,a,n=t=>t()){const t=[];for(const l of s)for(const r in l.components){let h=l.components[r];if(!(i!=="beforeRouteEnter"&&!l.instances[r]))if(T4(h)){const k=(h.__vccOpts||h)[i];k&&t.push(Na(k,e,a,l,r,n))}else{let p=h();t.push(()=>p.then(k=>{if(!k)throw new Error(`Couldn't resolve component "${r}" at "${l.path}"`);const d=XF(k)?k.default:k;l.mods[r]=k,l.components[r]=d;const u=(d.__vccOpts||d)[i];return u&&Na(u,e,a,l,r,n)()}))}}return t}function zg(s){const i=Ns(lp),e=Ns(Eu),a=V(()=>{const h=ms(s.to);return i.resolve(h)}),n=V(()=>{const{matched:h}=a.value,{length:p}=h,k=h[p-1],d=e.matched;if(!k||!d.length)return-1;const o=d.findIndex(Za.bind(null,k));if(o>-1)return o;const u=qg(h[p-2]);return p>1&&qg(k)===u&&d[d.length-1].path!==u?d.findIndex(Za.bind(null,h[p-2])):o}),t=V(()=>n.value>-1&&WE(e.params,a.value.params)),l=V(()=>n.value>-1&&n.value===e.matched.length-1&&L4(e.params,a.value.params));function r(h={}){if(GE(h)){const p=i[ms(s.replace)?"replace":"push"](ms(s.to)).catch(rl);return s.viewTransition&&typeof document<"u"&&"startViewTransition"in document&&document.startViewTransition(()=>p),p}return Promise.resolve()}if(pa){const h=pe();if(h){const p={route:a.value,isActive:t.value,isExactActive:l.value,error:null};h.__vrl_devtools=h.__vrl_devtools||[],h.__vrl_devtools.push(p),ep(()=>{p.route=a.value,p.isActive=t.value,p.isExactActive=l.value,p.error=M4(ms(s.to))?null:'Invalid "to" value'},{flush:"post"})}}return{route:a,href:V(()=>a.value.href),isActive:t,isExactActive:l,navigate:r}}function HE(s){return s.length===1?s[0]:s}const jE=ts({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:zg,setup(s,{slots:i}){const e=Ya(zg(s)),{options:a}=Ns(lp),n=V(()=>({[Hg(s.activeClass,a.linkActiveClass,"router-link-active")]:e.isActive,[Hg(s.exactActiveClass,a.linkExactActiveClass,"router-link-exact-active")]:e.isExactActive}));return()=>{const t=i.default&&HE(i.default(e));return s.custom?t:B("a",{"aria-current":e.isExactActive?s.ariaCurrentValue:null,href:e.href,onClick:e.navigate,class:n.value},t)}}}),UE=jE;function GE(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const i=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(i))return}return s.preventDefault&&s.preventDefault(),!0}}function WE(s,i){for(const e in i){const a=i[e],n=s[e];if(typeof a=="string"){if(a!==n)return!1}else if(!ae(n)||n.length!==a.length||a.some((t,l)=>t!==n[l]))return!1}return!0}function qg(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const Hg=(s,i,e)=>s??i??e,KE=ts({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:i,slots:e}){const a=Ns(so),n=V(()=>s.route||a.value),t=Ns($g,0),l=V(()=>{let p=ms(t);const{matched:k}=n.value;let d;for(;(d=k[p])&&!d.components;)p++;return p}),r=V(()=>n.value.matched[l.value]);Di($g,V(()=>l.value+1)),Di(qE,r),Di(so,n);const h=Q();return bs(()=>[h.value,r.value,s.name],([p,k,d],[o,u,c])=>{k&&(k.instances[d]=p,u&&u!==k&&p&&p===o&&(k.leaveGuards.size||(k.leaveGuards=u.leaveGuards),k.updateGuards.size||(k.updateGuards=u.updateGuards))),p&&k&&(!u||!Za(k,u)||!o)&&(k.enterCallbacks[d]||[]).forEach(A=>A(p))},{flush:"post"}),()=>{const p=n.value,k=s.name,d=r.value,o=d&&d.components[k];if(!o)return jg(e.default,{Component:o,route:p});const u=d.props[k],c=u?u===!0?p.params:typeof u=="function"?u(p):u:null,g=B(o,zs({},c,i,{onVnodeUnmounted:f=>{f.component.isUnmounted&&(d.instances[k]=null)},ref:h}));if(pa&&g.ref){const f={depth:l.value,name:d.name,path:d.path,meta:d.meta};(ae(g.ref)?g.ref.map(y=>y.i):[g.ref.i]).forEach(y=>{y.__vrv_devtools=f})}return jg(e.default,{Component:g,route:p})||g}}});function jg(s,i){if(!s)return null;const e=s(i);return e.length===1?e[0]:e}const YE=KE;function Vt(s,i){const e=zs({},s,{matched:s.matched.map(a=>l5(a,["instances","children","aliasOf"]))});return{_custom:{type:null,readOnly:!0,display:s.fullPath,tooltip:i,value:e}}}function Ir(s){return{_custom:{display:s}}}let XE=0;function ZE(s,i,e){if(i.__hasDevtools)return;i.__hasDevtools=!0;const a=XE++;YF({id:"org.vuejs.router"+(a?"."+a:""),label:"Vue Router",packageName:"vue-router",homepage:"https://router.vuejs.org",logo:"https://router.vuejs.org/logo.png",componentStateTypes:["Routing"],app:s},n=>{typeof n.now!="function"&&console.warn("[Vue Router]: You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),n.on.inspectComponent((k,d)=>{k.instanceData&&k.instanceData.state.push({type:"Routing",key:"$route",editable:!1,value:Vt(i.currentRoute.value,"Current Route")})}),n.on.visitComponentTree(({treeNode:k,componentInstance:d})=>{if(d.__vrv_devtools){const o=d.__vrv_devtools;k.tags.push({label:(o.name?`${o.name.toString()}: `:"")+o.path,textColor:0,tooltip:"This component is rendered by &lt;router-view&gt;",backgroundColor:H4})}ae(d.__vrl_devtools)&&(d.__devtoolsApi=n,d.__vrl_devtools.forEach(o=>{let u=o.route.path,c=G4,A="",g=0;o.error?(u=o.error,c=e5,g=a5):o.isExactActive?(c=U4,A="This is exactly active"):o.isActive&&(c=j4,A="This link is active"),k.tags.push({label:u,textColor:g,tooltip:A,backgroundColor:c})}))}),bs(i.currentRoute,()=>{h(),n.notifyComponentUpdate(),n.sendInspectorTree(r),n.sendInspectorState(r)});const t="router:navigations:"+a;n.addTimelineLayer({id:t,label:`Router${a?" "+a:""} Navigations`,color:4237508}),i.onError((k,d)=>{n.addTimelineEvent({layerId:t,event:{title:"Error during Navigation",subtitle:d.fullPath,logType:"error",time:n.now(),data:{error:k},groupId:d.meta.__navigationId}})});let l=0;i.beforeEach((k,d)=>{const o={guard:Ir("beforeEach"),from:Vt(d,"Current Location during this navigation"),to:Vt(k,"Target location")};Object.defineProperty(k.meta,"__navigationId",{value:l++}),n.addTimelineEvent({layerId:t,event:{time:n.now(),title:"Start of navigation",subtitle:k.fullPath,data:o,groupId:k.meta.__navigationId}})}),i.afterEach((k,d,o)=>{const u={guard:Ir("afterEach")};o?(u.failure={_custom:{type:Error,readOnly:!0,display:o?o.message:"",tooltip:"Navigation Failure",value:o}},u.status=Ir("❌")):u.status=Ir("✅"),u.from=Vt(d,"Current Location during this navigation"),u.to=Vt(k,"Target location"),n.addTimelineEvent({layerId:t,event:{title:"End of navigation",subtitle:k.fullPath,time:n.now(),data:u,logType:o?"warning":"default",groupId:k.meta.__navigationId}})});const r="router-inspector:"+a;n.addInspector({id:r,label:"Routes"+(a?" "+a:""),icon:"book",treeFilterPlaceholder:"Search routes"});function h(){if(!p)return;const k=p;let d=e.getRoutes().filter(o=>!o.parent||!o.parent.record.components);d.forEach(Y4),k.filter&&(d=d.filter(o=>io(o,k.filter.toLowerCase()))),d.forEach(o=>K4(o,i.currentRoute.value)),k.rootNodes=d.map(W4)}let p;n.on.getInspectorTree(k=>{p=k,k.app===s&&k.inspectorId===r&&h()}),n.on.getInspectorState(k=>{if(k.app===s&&k.inspectorId===r){const o=e.getRoutes().find(u=>u.record.__vd_id===k.nodeId);o&&(k.state={options:QE(o)})}}),n.sendInspectorTree(r),n.sendInspectorState(r)})}function JE(s){return s.optional?s.repeatable?"*":"?":s.repeatable?"+":""}function QE(s){const{record:i}=s,e=[{editable:!1,key:"path",value:i.path}];return i.name!=null&&e.push({editable:!1,key:"name",value:i.name}),e.push({editable:!1,key:"regexp",value:s.re}),s.keys.length&&e.push({editable:!1,key:"keys",value:{_custom:{type:null,readOnly:!0,display:s.keys.map(a=>`${a.name}${JE(a)}`).join(" "),tooltip:"Param keys",value:s.keys}}}),i.redirect!=null&&e.push({editable:!1,key:"redirect",value:i.redirect}),s.alias.length&&e.push({editable:!1,key:"aliases",value:s.alias.map(a=>a.record.path)}),Object.keys(s.record.meta).length&&e.push({editable:!1,key:"meta",value:s.record.meta}),e.push({key:"score",editable:!1,value:{_custom:{type:null,readOnly:!0,display:s.score.map(a=>a.join(", ")).join(" | "),tooltip:"Score used to sort routes",value:s.score}}}),e}const H4=15485081,j4=2450411,U4=8702998,s5=2282478,G4=16486972,i5=6710886,e5=16704226,a5=12131356;function W4(s){const i=[],{record:e}=s;e.name!=null&&i.push({label:String(e.name),textColor:0,backgroundColor:s5}),e.aliasOf&&i.push({label:"alias",textColor:0,backgroundColor:G4}),s.__vd_match&&i.push({label:"matches",textColor:0,backgroundColor:H4}),s.__vd_exactActive&&i.push({label:"exact",textColor:0,backgroundColor:U4}),s.__vd_active&&i.push({label:"active",textColor:0,backgroundColor:j4}),e.redirect&&i.push({label:typeof e.redirect=="string"?`redirect: ${e.redirect}`:"redirects",textColor:16777215,backgroundColor:i5});let a=e.__vd_id;return a==null&&(a=String(n5++),e.__vd_id=a),{id:a,label:e.path,tags:i,children:s.children.map(W4)}}let n5=0;const t5=/^\/(.*)\/([a-z]*)$/;function K4(s,i){const e=i.matched.length&&Za(i.matched[i.matched.length-1],s.record);s.__vd_exactActive=s.__vd_active=e,e||(s.__vd_active=i.matched.some(a=>Za(a,s.record))),s.children.forEach(a=>K4(a,i))}function Y4(s){s.__vd_match=!1,s.children.forEach(Y4)}function io(s,i){const e=String(s.re).match(t5);if(s.__vd_match=!1,!e||e.length<3)return!1;if(new RegExp(e[1].replace(/\$$/,""),e[2]).test(i))return s.children.forEach(l=>io(l,i)),s.record.path!=="/"||i==="/"?(s.__vd_match=s.re.test(i),!0):!1;const n=s.record.path.toLowerCase(),t=dt(n);return!i.startsWith("/")&&(t.includes(i)||n.includes(i))||t.startsWith(i)||n.startsWith(i)||s.record.name&&String(s.record.name).includes(i)?!0:s.children.some(l=>io(l,i))}function l5(s,i){const e={};for(const a in s)i.includes(a)||(e[a]=s[a]);return e}function r5(s){const i=PE(s.routes,s),e=s.parseQuery||$E,a=s.stringifyQuery||Vg,n=s.history,t=Mt(),l=Mt(),r=Mt(),h=Ts(ta);let p=ta;pa&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const k=nk.bind(null,j=>""+j),d=nk.bind(null,pE),o=nk.bind(null,dt);function u(j,J){let Z,ks;return V4(j)?(Z=i.getRecordMatcher(j),ks=J):ks=j,i.addRoute(ks,Z)}function c(j){const J=i.getRecordMatcher(j);J&&i.removeRoute(J)}function A(){return i.getRoutes().map(j=>j.record)}function g(j){return!!i.getRecordMatcher(j)}function f(j,J){if(J=zs({},J||h.value),typeof j=="string"){const E=tk(e,j,J.path),D=i.resolve({path:E.path},J),P=n.createHref(E.fullPath);return zs(E,D,{params:o(D.params),hash:dt(E.hash),redirectedFrom:void 0,href:P})}let Z;if(j.path!=null)Z=zs({},j,{path:tk(e,j.path,J.path).path});else{const E=zs({},j.params);for(const D in E)E[D]==null&&delete E[D];Z=zs({},j,{params:d(E)}),J.params=d(J.params)}const ks=i.resolve(Z,J),cs=j.hash||"";ks.params=k(o(ks.params));const X=oE(a,zs({},j,{hash:lE(cs),path:ks.path})),x=n.createHref(X);return zs({fullPath:X,hash:cs,query:a===Vg?zE(j.query):j.query||{}},ks,{redirectedFrom:void 0,href:x})}function m(j){return typeof j=="string"?tk(e,j,h.value.path):zs({},j)}function y(j,J){if(p!==j)return ot(8,{from:J,to:j})}function v(j){return N(j)}function _(j){return v(zs(m(j),{replace:!0}))}function S(j){const J=j.matched[j.matched.length-1];if(J&&J.redirect){const{redirect:Z}=J;let ks=typeof Z=="function"?Z(j):Z;return typeof ks=="string"&&(ks=ks.includes("?")||ks.includes("#")?ks=m(ks):{path:ks},ks.params={}),zs({query:j.query,hash:j.hash,params:ks.path!=null?{}:j.params},ks)}}function N(j,J){const Z=p=f(j),ks=h.value,cs=j.state,X=j.force,x=j.replace===!0,E=S(Z);if(E)return N(zs(m(E),{state:typeof E=="object"?zs({},cs,E.state):cs,force:X,replace:x}),J||Z);const D=Z;D.redirectedFrom=J;let P;return!X&&uE(a,ks,Z)&&(P=ot(16,{to:D,from:ks}),ps(ks,ks,!0,!1)),(P?Promise.resolve(P):I(D,ks)).catch(L=>ia(L)?ia(L,2)?L:ls(L):W(L,D,ks)).then(L=>{if(L){if(ia(L,2))return N(zs({replace:x},m(L.to),{state:typeof L.to=="object"?zs({},cs,L.to.state):cs,force:X}),J||D)}else L=w(D,ks,!0,x,cs);return O(D,ks,L),L})}function T(j,J){const Z=y(j,J);return Z?Promise.reject(Z):Promise.resolve()}function C(j){const J=U.values().next().value;return J&&typeof J.runWithContext=="function"?J.runWithContext(j):j()}function I(j,J){let Z;const[ks,cs,X]=h5(j,J);Z=lk(ks.reverse(),"beforeRouteLeave",j,J);for(const E of ks)E.leaveGuards.forEach(D=>{Z.push(Na(D,j,J))});const x=T.bind(null,j,J);return Z.push(x),rs(Z).then(()=>{Z=[];for(const E of t.list())Z.push(Na(E,j,J));return Z.push(x),rs(Z)}).then(()=>{Z=lk(cs,"beforeRouteUpdate",j,J);for(const E of cs)E.updateGuards.forEach(D=>{Z.push(Na(D,j,J))});return Z.push(x),rs(Z)}).then(()=>{Z=[];for(const E of X)if(E.beforeEnter)if(ae(E.beforeEnter))for(const D of E.beforeEnter)Z.push(Na(D,j,J));else Z.push(Na(E.beforeEnter,j,J));return Z.push(x),rs(Z)}).then(()=>(j.matched.forEach(E=>E.enterCallbacks={}),Z=lk(X,"beforeRouteEnter",j,J,C),Z.push(x),rs(Z))).then(()=>{Z=[];for(const E of l.list())Z.push(Na(E,j,J));return Z.push(x),rs(Z)}).catch(E=>ia(E,8)?E:Promise.reject(E))}function O(j,J,Z){r.list().forEach(ks=>C(()=>ks(j,J,Z)))}function w(j,J,Z,ks,cs){const X=y(j,J);if(X)return X;const x=J===ta,E=pa?history.state:{};Z&&(ks||x?n.replace(j.fullPath,zs({scroll:x&&E&&E.scroll},cs)):n.push(j.fullPath,cs)),h.value=j,ps(j,J,Z,x),ls()}let z;function b(){z||(z=n.listen((j,J,Z)=>{if(!K.listening)return;const ks=f(j),cs=S(ks);if(cs){N(zs(cs,{replace:!0,force:!0}),ks).catch(rl);return}p=ks;const X=h.value;pa&&vE(Tg(X.fullPath,Z.delta),tp()),I(ks,X).catch(x=>ia(x,12)?x:ia(x,2)?(N(zs(m(x.to),{force:!0}),ks).then(E=>{ia(E,20)&&!Z.delta&&Z.type===vl.pop&&n.go(-1,!1)}).catch(rl),Promise.reject()):(Z.delta&&n.go(-Z.delta,!1),W(x,ks,X))).then(x=>{x=x||w(ks,X,!1),x&&(Z.delta&&!ia(x,8)?n.go(-Z.delta,!1):Z.type===vl.pop&&ia(x,20)&&n.go(-1,!1)),O(ks,X,x)}).catch(rl)}))}let $=Mt(),R=Mt(),M;function W(j,J,Z){ls(j);const ks=R.list();return ks.length?ks.forEach(cs=>cs(j,J,Z)):console.error(j),Promise.reject(j)}function Y(){return M&&h.value!==ta?Promise.resolve():new Promise((j,J)=>{$.add([j,J])})}function ls(j){return M||(M=!j,b(),$.list().forEach(([J,Z])=>j?Z(j):J()),$.reset()),j}function ps(j,J,Z,ks){const{scrollBehavior:cs}=s;if(!pa||!cs)return Promise.resolve();const X=!Z&&FE(Tg(j.fullPath,0))||(ks||!Z)&&history.state&&history.state.scroll||null;return qs().then(()=>cs(j,J,X)).then(x=>x&&mE(x)).catch(x=>W(x,j,J))}const es=j=>n.go(j);let q;const U=new Set,K={currentRoute:h,listening:!0,addRoute:u,removeRoute:c,clearRoutes:i.clearRoutes,hasRoute:g,getRoutes:A,resolve:f,options:s,push:v,replace:_,go:es,back:()=>es(-1),forward:()=>es(1),beforeEach:t.add,beforeResolve:l.add,afterEach:r.add,onError:R.add,isReady:Y,install(j){const J=this;j.component("RouterLink",UE),j.component("RouterView",YE),j.config.globalProperties.$router=J,Object.defineProperty(j.config.globalProperties,"$route",{enumerable:!0,get:()=>ms(h)}),pa&&!q&&h.value===ta&&(q=!0,v(n.location).catch(cs=>{}));const Z={};for(const cs in ta)Object.defineProperty(Z,cs,{get:()=>h.value[cs],enumerable:!0});j.provide(lp,J),j.provide(Eu,uy(Z)),j.provide(so,h);const ks=j.unmount;U.add(j),j.unmount=function(){U.delete(j),U.size<1&&(p=ta,z&&z(),z=null,h.value=ta,q=!1,M=!1),ks()},pa&&ZE(j,J,i)}};function rs(j){return j.reduce((J,Z)=>J.then(()=>C(Z)),Promise.resolve())}return K}function h5(s,i){const e=[],a=[],n=[],t=Math.max(i.matched.length,s.matched.length);for(let l=0;l<t;l++){const r=i.matched[l];r&&(s.matched.find(p=>Za(p,r))?a.push(r):e.push(r));const h=s.matched[l];h&&(i.matched.find(p=>Za(p,h))||n.push(h))}return[e,a,n]}function De(){return Ns(lp)}function We(s){return Ns(Eu)}var bu=Symbol(""),we=()=>{const s=Ns(bu);if(!s)throw new Error("useClientData() is called without provider.");return s},p5=()=>we().pageComponent,Bi=()=>we().pageData,js=()=>we().pageFrontmatter,k5=()=>we().pageHead,Cu=()=>we().pageLang,d5=()=>we().pageLayout,Be=()=>we().routeLocale,ar=()=>we().routePath,o5=()=>we().routes,_u=()=>we().siteData,wt=()=>we().siteLocaleData,ah=Ts([]),Ca=s=>{ah.value.push(s),_i(()=>{ah.value=ah.value.filter(i=>i!==s)})},u5=Symbol(""),eo=Ts($F),Jn=Ts(zF),X4=(s,i)=>{const e=SF(s,i);if(Jn.value[e])return e;const a=encodeURI(e);if(Jn.value[a])return a;const n=eo.value[e]||eo.value[a];return n||e},ne=(s,i)=>{const{pathname:e,hashAndQueries:a}=D4(s),n=X4(e,i),t=n+a;return Jn.value[n]?{...Jn.value[n],path:t,notFound:!1}:{...Jn.value["/404.html"],path:t,notFound:!0}},c5=(s,i)=>{const{pathname:e,hashAndQueries:a}=D4(s);return X4(e,i)+a},g5=s=>{if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget){const i=s.currentTarget.getAttribute("target");if(i!=null&&i.match(/\b_blank\b/i))return}return s.preventDefault(),!0}},mi=ts({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(s,{slots:i}){const e=De(),a=We(),n=V(()=>s.to.startsWith("#")||s.to.startsWith("?")?s.to:`/rust-course/${c5(s.to,a.path).substring(1)}`);return()=>B("a",{class:["route-link",{[s.activeClass]:s.active}],href:n.value,onClick:(t={})=>{g5(t)&&e.push(s.to).catch()}},i.default())}}),B5=ts({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:i}){const e=Ms(s,"config"),a=We(),n=_u(),t=V(()=>ir(e.value.link)),l=V(()=>e.value.target||(t.value?"_blank":void 0)),r=V(()=>l.value==="_blank"),h=V(()=>!t.value&&!r.value),p=V(()=>e.value.rel||(r.value?"noopener noreferrer":null)),k=V(()=>e.value.ariaLabel??e.value.text),d=V(()=>{if(e.value.exact)return!1;const u=Object.keys(n.value.locales);return u.length?u.every(c=>c!==e.value.link):e.value.link!=="/"}),o=V(()=>h.value?e.value.activeMatch?(e.value.activeMatch instanceof RegExp?e.value.activeMatch:new RegExp(e.value.activeMatch,"u")).test(a.path):d.value?a.path.startsWith(e.value.link):a.path===e.value.link:!1);return()=>{const{before:u,after:c,default:A}=i,g=(A==null?void 0:A(e.value))??[u==null?void 0:u(e.value),e.value.text,c==null?void 0:c(e.value)];return h.value?B(mi,{class:"auto-link",to:e.value.link,active:o.value,"aria-label":k.value},()=>g):B("a",{class:"auto-link external-link",href:e.value.link,"aria-label":k.value,rel:p.value,target:l.value},g)}}}),Du=ts({name:"ClientOnly",setup(s,i){const e=Q(!1);return ws(()=>{e.value=!0}),()=>{var a,n;return e.value?(n=(a=i.slots).default)==null?void 0:n.call(a):null}}}),Rr=s=>{ah.value.forEach(i=>i(s))},Z4=ts({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(s){const i=p5(),e=V(()=>{if(!s.path)return i.value;const n=ne(s.path);return Iy(async()=>n.loader().then(({comp:t})=>t))}),a=js();return bs(a,()=>{Rr("updated")},{deep:!0,flush:"post"}),()=>B(e.value,{onVnodeMounted:()=>{Rr("mounted")},onVnodeUpdated:()=>{Rr("updated")},onVnodeBeforeUnmount:()=>{Rr("beforeUnmount")}})}}),A5="Layout",y5="en-US",kn=Ya({resolveLayouts:s=>s.reduce((i,e)=>({...i,...e.layouts}),{}),resolvePageHead:(s,i,e)=>{const a=li(i.description)?i.description:e.description,n=[...Array.isArray(i.head)?i.head:[],...e.head,["title",{},s],["meta",{name:"description",content:a}]];return NF(n)},resolvePageHeadTitle:(s,i)=>[s.title,i.title].filter(e=>!!e).join(" | "),resolvePageLang:(s,i)=>s.lang||i.lang||y5,resolvePageLayout:(s,i)=>{const e=li(s.frontmatter.layout)?s.frontmatter.layout:A5;if(!i[e])throw new Error(`[vuepress] Cannot resolve layout: ${e}`);return i[e]},resolveRouteLocale:(s,i)=>IF(s,decodeURI(i)),resolveSiteLocaleData:({base:s,locales:i,...e},a)=>{var n;return{...e,...i[a],head:[...((n=i[a])==null?void 0:n.head)??[],...e.head]}}}),Ti=(s={})=>s,Gs=s=>nn(s)?s:`/rust-course/${w4(s)}`,f5=Object.defineProperty,m5=(s,i)=>{for(var e in i)f5(s,e,{get:i[e],enumerable:!0})};const v5=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),F5=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),E5=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));function Rn(s){return Zh()?(il(s),!0):!1}const rk=new WeakMap,b5=(...s)=>{var i;const e=s[0],a=(i=pe())==null?void 0:i.proxy;if(a==null&&!jy())throw new Error("injectLocal must be called in setup");return a&&rk.has(a)&&e in rk.get(a)?rk.get(a)[e]:Ns(...s)},nr=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const C5=s=>s!=null,_5=Object.prototype.toString,D5=s=>_5.call(s)==="[object Object]",Mi=()=>{},ao=w5();function w5(){var s,i;return nr&&((s=window==null?void 0:window.navigator)==null?void 0:s.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((i=window==null?void 0:window.navigator)==null?void 0:i.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function wu(s,i){function e(...a){return new Promise((n,t)=>{Promise.resolve(s(()=>i.apply(this,a),{fn:i,thisArg:this,args:a})).then(n).catch(t)})}return e}const J4=s=>s();function x5(s,i={}){let e,a,n=Mi;const t=h=>{clearTimeout(h),n(),n=Mi};let l;return h=>{const p=vs(s),k=vs(i.maxWait);return e&&t(e),p<=0||k!==void 0&&k<=0?(a&&(t(a),a=null),Promise.resolve(h())):new Promise((d,o)=>{n=i.rejectOnCancel?o:d,l=h,k&&!a&&(a=setTimeout(()=>{e&&t(e),a=null,d(l())},k)),e=setTimeout(()=>{a&&t(a),a=null,d(h())},p)})}}function T5(...s){let i=0,e,a=!0,n=Mi,t,l,r,h,p;!ti(s[0])&&typeof s[0]=="object"?{delay:l,trailing:r=!0,leading:h=!0,rejectOnCancel:p=!1}=s[0]:[l,r=!0,h=!0,p=!1]=s;const k=()=>{e&&(clearTimeout(e),e=void 0,n(),n=Mi)};return o=>{const u=vs(l),c=Date.now()-i,A=()=>t=o();return k(),u<=0?(i=Date.now(),A()):(c>u&&(h||!a)?(i=Date.now(),A()):r&&(t=new Promise((g,f)=>{n=p?f:g,e=setTimeout(()=>{i=Date.now(),a=!0,g(A()),k()},Math.max(0,u-c))})),!h&&!e&&(e=setTimeout(()=>a=!0,u)),a=!1,t)}}function S5(s=J4,i={}){const{initialState:e="active"}=i,a=s3(e==="active");function n(){a.value=!1}function t(){a.value=!0}const l=(...r)=>{a.value&&s(...r)};return{isActive:Ge(a),pause:n,resume:t,eventFilter:l}}function I5(s){let i;function e(){return i||(i=s()),i}return e.reset=async()=>{const a=i;i=void 0,a&&await a},e}function Ug(s){return s.endsWith("rem")?Number.parseFloat(s)*16:Number.parseFloat(s)}function Q4(s){return pe()}function pl(s){return Array.isArray(s)?s:[s]}function s3(...s){if(s.length!==1)return Ms(...s);const i=s[0];return typeof i=="function"?Ge(ku(()=>({get:i,set:Mi}))):Q(i)}function rp(s,i=200,e={}){return wu(x5(i,e),s)}function i3(s,i=200,e=!1,a=!0,n=!1){return wu(T5(i,e,a,n),s)}function R5(s,i,e={}){const{eventFilter:a=J4,...n}=e;return bs(s,wu(a,i),n)}function O5(s,i,e={}){const{eventFilter:a,initialState:n="active",...t}=e,{eventFilter:l,pause:r,resume:h,isActive:p}=S5(a,{initialState:n});return{stop:R5(s,i,{...t,eventFilter:l}),pause:r,resume:h,isActive:p}}function tr(s,i=!0,e){Q4()?ws(s,e):i?s():qs(s)}function P5(s,i){Q4()&&_i(s,i)}function L5(s,i,e={}){const{immediate:a=!0,immediateCallback:n=!1}=e,t=Ts(!1);let l=null;function r(){l&&(clearTimeout(l),l=null)}function h(){t.value=!1,r()}function p(...k){n&&s(),r(),t.value=!0,l=setTimeout(()=>{t.value=!1,l=null,s(...k)},vs(i))}return a&&(t.value=!0,nr&&p()),Rn(h),{isPending:Ge(t),start:p,stop:h}}function Fl(s=!1,i={}){const{truthyValue:e=!0,falsyValue:a=!1}=i,n=ti(s),t=Q(s);function l(r){if(arguments.length)return t.value=r,t.value;{const h=vs(e);return t.value=t.value===h?vs(a):h,t.value}}return n?l:[t,l]}function te(s,i,e){return bs(s,i,{...e,immediate:!0})}const Oi=nr?window:void 0,e3=nr?window.document:void 0,a3=nr?window.navigator:void 0;function xi(s){var i;const e=vs(s);return(i=e==null?void 0:e.$el)!=null?i:e}function Is(...s){const i=[],e=()=>{i.forEach(r=>r()),i.length=0},a=(r,h,p,k)=>(r.addEventListener(h,p,k),()=>r.removeEventListener(h,p,k)),n=V(()=>{const r=pl(vs(s[0])).filter(h=>h!=null);return r.every(h=>typeof h!="string")?r:void 0}),t=te(()=>{var r,h;return[(h=(r=n.value)==null?void 0:r.map(p=>xi(p)))!=null?h:[Oi].filter(p=>p!=null),pl(vs(n.value?s[1]:s[0])),pl(ms(n.value?s[2]:s[1])),vs(n.value?s[3]:s[2])]},([r,h,p,k])=>{if(e(),!(r!=null&&r.length)||!(h!=null&&h.length)||!(p!=null&&p.length))return;const d=D5(k)?{...k}:k;i.push(...r.flatMap(o=>h.flatMap(u=>p.map(c=>a(o,u,c,d)))))},{flush:"post"}),l=()=>{t(),e()};return Rn(e),l}let Gg=!1;function N5(s,i,e={}){const{window:a=Oi,ignore:n=[],capture:t=!0,detectIframe:l=!1,controls:r=!1}=e;if(!a)return r?{stop:Mi,cancel:Mi,trigger:Mi}:Mi;if(ao&&!Gg){Gg=!0;const g={passive:!0};Array.from(a.document.body.children).forEach(f=>Is(f,"click",Mi,g)),Is(a.document.documentElement,"click",Mi,g)}let h=!0;const p=g=>vs(n).some(f=>{if(typeof f=="string")return Array.from(a.document.querySelectorAll(f)).some(m=>m===g.target||g.composedPath().includes(m));{const m=xi(f);return m&&(g.target===m||g.composedPath().includes(m))}});function k(g){const f=vs(g);return f&&f.$.subTree.shapeFlag===16}function d(g,f){const m=vs(g),y=m.$.subTree&&m.$.subTree.children;return y==null||!Array.isArray(y)?!1:y.some(v=>v.el===f.target||f.composedPath().includes(v.el))}const o=g=>{const f=xi(s);if(g.target!=null&&!(!(f instanceof Element)&&k(s)&&d(s,g))&&!(!f||f===g.target||g.composedPath().includes(f))){if("detail"in g&&g.detail===0&&(h=!p(g)),!h){h=!0;return}i(g)}};let u=!1;const c=[Is(a,"click",g=>{u||(u=!0,setTimeout(()=>{u=!1},0),o(g))},{passive:!0,capture:t}),Is(a,"pointerdown",g=>{const f=xi(s);h=!p(g)&&!!(f&&!g.composedPath().includes(f))},{passive:!0}),l&&Is(a,"blur",g=>{setTimeout(()=>{var f;const m=xi(s);((f=a.document.activeElement)==null?void 0:f.tagName)==="IFRAME"&&!(m!=null&&m.contains(a.document.activeElement))&&i(g)},0)},{passive:!0})].filter(Boolean),A=()=>c.forEach(g=>g());return r?{stop:A,cancel:()=>{h=!1},trigger:g=>{h=!0,o(g),h=!1}}:A}function M5(){const s=Ts(!1),i=pe();return i&&ws(()=>{s.value=!0},i),s}function On(s){const i=M5();return V(()=>(i.value,!!s()))}function n3(s,i,e={}){const{window:a=Oi,...n}=e;let t;const l=On(()=>a&&"MutationObserver"in a),r=()=>{t&&(t.disconnect(),t=void 0)},h=V(()=>{const o=vs(s),u=pl(o).map(xi).filter(C5);return new Set(u)}),p=bs(()=>h.value,o=>{r(),l.value&&o.size&&(t=new MutationObserver(i),o.forEach(u=>t.observe(u,n)))},{immediate:!0,flush:"post"}),k=()=>t==null?void 0:t.takeRecords(),d=()=>{p(),r()};return Rn(d),{isSupported:l,stop:d,takeRecords:k}}function V5(s,i,e={}){const{window:a=Oi,document:n=a==null?void 0:a.document,flush:t="sync"}=e;if(!a||!n)return Mi;let l;const r=k=>{l==null||l(),l=k},h=ep(()=>{const k=xi(s);if(k){const{stop:d}=n3(n,o=>{o.map(c=>[...c.removedNodes]).flat().some(c=>c===k||c.contains(k))&&i(o)},{window:a,childList:!0,subtree:!0});r(d)}},{flush:t}),p=()=>{h(),r()};return Rn(p),p}const $5=Symbol("vueuse-ssr-width");function z5(){const s=jy()?b5($5,null):null;return typeof s=="number"?s:void 0}function xu(s,i={}){const{window:e=Oi,ssrWidth:a=z5()}=i,n=On(()=>e&&"matchMedia"in e&&typeof e.matchMedia=="function"),t=Q(typeof a=="number"),l=Ts(),r=Ts(!1),h=p=>{r.value=p.matches};return ep(()=>{if(t.value){t.value=!n.value;const p=vs(s).split(",");r.value=p.some(k=>{const d=k.includes("not all"),o=k.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),u=k.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let c=!!(o||u);return o&&c&&(c=a>=Ug(o[1])),u&&c&&(c=a<=Ug(u[1])),d?!c:c});return}n.value&&(l.value=e.matchMedia(vs(s)),r.value=l.value.matches)}),Is(l,"change",h,{passive:!0}),V(()=>r.value)}function Wg(s,i={}){const{controls:e=!1,navigator:a=a3}=i,n=On(()=>a&&"permissions"in a),t=Ts(),l=typeof s=="string"?{name:s}:s,r=Ts(),h=()=>{var k,d;r.value=(d=(k=t.value)==null?void 0:k.state)!=null?d:"prompt"};Is(t,"change",h,{passive:!0});const p=I5(async()=>{if(n.value){if(!t.value)try{t.value=await a.permissions.query(l)}catch{t.value=void 0}finally{h()}if(e)return Os(t.value)}});return p(),e?{state:r,isSupported:n,query:p}:r}function q5(s={}){const{navigator:i=a3,read:e=!1,source:a,copiedDuring:n=1500,legacy:t=!1}=s,l=On(()=>i&&"clipboard"in i),r=Wg("clipboard-read"),h=Wg("clipboard-write"),p=V(()=>l.value||t),k=Ts(""),d=Ts(!1),o=L5(()=>d.value=!1,n,{immediate:!1});function u(){let m=!(l.value&&f(r.value));if(!m)try{i.clipboard.readText().then(y=>{k.value=y})}catch{m=!0}m&&(k.value=g())}p.value&&e&&Is(["copy","cut"],u,{passive:!0});async function c(m=vs(a)){if(p.value&&m!=null){let y=!(l.value&&f(h.value));if(!y)try{await i.clipboard.writeText(m)}catch{y=!0}y&&A(m),k.value=m,d.value=!0,o.start()}}function A(m){const y=document.createElement("textarea");y.value=m??"",y.style.position="absolute",y.style.opacity="0",document.body.appendChild(y),y.select(),document.execCommand("copy"),y.remove()}function g(){var m,y,v;return(v=(y=(m=document==null?void 0:document.getSelection)==null?void 0:m.call(document))==null?void 0:y.toString())!=null?v:""}function f(m){return m==="granted"||m==="prompt"}return{isSupported:p,text:k,copied:d,copy:c}}const Or=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Pr="__vueuse_ssr_handlers__",H5=j5();function j5(){return Pr in Or||(Or[Pr]=Or[Pr]||{}),Or[Pr]}function U5(s,i){return H5[s]||i}function G5(s){return xu("(prefers-color-scheme: dark)",s)}function W5(s){return s==null?"any":s instanceof Set?"set":s instanceof Map?"map":s instanceof Date?"date":typeof s=="boolean"?"boolean":typeof s=="string"?"string":typeof s=="object"?"object":Number.isNaN(s)?"any":"number"}const K5={boolean:{read:s=>s==="true",write:s=>String(s)},object:{read:s=>JSON.parse(s),write:s=>JSON.stringify(s)},number:{read:s=>Number.parseFloat(s),write:s=>String(s)},any:{read:s=>s,write:s=>String(s)},string:{read:s=>s,write:s=>String(s)},map:{read:s=>new Map(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s.entries()))},set:{read:s=>new Set(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s))},date:{read:s=>new Date(s),write:s=>s.toISOString()}},Kg="vueuse-storage";function lr(s,i,e,a={}){var n;const{flush:t="pre",deep:l=!0,listenToStorageChanges:r=!0,writeDefaults:h=!0,mergeDefaults:p=!1,shallow:k,window:d=Oi,eventFilter:o,onError:u=O=>{console.error(O)},initOnMounted:c}=a,A=(k?Ts:Q)(typeof i=="function"?i():i),g=V(()=>vs(s));if(!e)try{e=U5("getDefaultStorage",()=>{var O;return(O=Oi)==null?void 0:O.localStorage})()}catch(O){u(O)}if(!e)return A;const f=vs(i),m=W5(f),y=(n=a.serializer)!=null?n:K5[m],{pause:v,resume:_}=O5(A,()=>N(A.value),{flush:t,deep:l,eventFilter:o});bs(g,()=>C(),{flush:t}),d&&r&&tr(()=>{e instanceof Storage?Is(d,"storage",C,{passive:!0}):Is(d,Kg,I),c&&C()}),c||C();function S(O,w){if(d){const z={key:g.value,oldValue:O,newValue:w,storageArea:e};d.dispatchEvent(e instanceof Storage?new StorageEvent("storage",z):new CustomEvent(Kg,{detail:z}))}}function N(O){try{const w=e.getItem(g.value);if(O==null)S(w,null),e.removeItem(g.value);else{const z=y.write(O);w!==z&&(e.setItem(g.value,z),S(w,z))}}catch(w){u(w)}}function T(O){const w=O?O.newValue:e.getItem(g.value);if(w==null)return h&&f!=null&&e.setItem(g.value,y.write(f)),f;if(!O&&p){const z=y.read(w);return typeof p=="function"?p(z,f):m==="object"&&!Array.isArray(z)?{...f,...z}:z}else return typeof w!="string"?w:y.read(w)}function C(O){if(!(O&&O.storageArea!==e)){if(O&&O.key==null){A.value=f;return}if(!(O&&O.key!==g.value)){v();try{(O==null?void 0:O.newValue)!==y.write(A.value)&&(A.value=T(O))}catch(w){u(w)}finally{O?qs(_):_()}}}}function I(O){C(O.detail)}return A}function Y5(s,i,e={}){const{window:a=Oi,...n}=e;let t;const l=On(()=>a&&"ResizeObserver"in a),r=()=>{t&&(t.disconnect(),t=void 0)},h=V(()=>{const d=vs(s);return Array.isArray(d)?d.map(o=>xi(o)):[xi(d)]}),p=bs(h,d=>{if(r(),l.value&&a){t=new ResizeObserver(i);for(const o of d)o&&t.observe(o,n)}},{immediate:!0,flush:"post"}),k=()=>{r(),p()};return Rn(k),{isSupported:l,stop:k}}function X5(s,i={}){const{delayEnter:e=0,delayLeave:a=0,triggerOnRemoval:n=!1,window:t=Oi}=i,l=Ts(!1);let r;const h=p=>{const k=p?e:a;r&&(clearTimeout(r),r=void 0),k?r=setTimeout(()=>l.value=p,k):l.value=p};return t&&(Is(s,"mouseenter",()=>h(!0),{passive:!0}),Is(s,"mouseleave",()=>h(!1),{passive:!0}),n&&V5(V(()=>xi(s)),()=>h(!1))),l}function Z5(s,i={width:0,height:0},e={}){const{window:a=Oi,box:n="content-box"}=e,t=V(()=>{var d,o;return(o=(d=xi(s))==null?void 0:d.namespaceURI)==null?void 0:o.includes("svg")}),l=Q(i.width),r=Q(i.height),{stop:h}=Y5(s,([d])=>{const o=n==="border-box"?d.borderBoxSize:n==="content-box"?d.contentBoxSize:d.devicePixelContentBoxSize;if(a&&t.value){const u=xi(s);if(u){const c=u.getBoundingClientRect();l.value=c.width,r.value=c.height}}else if(o){const u=pl(o);l.value=u.reduce((c,{inlineSize:A})=>c+A,0),r.value=u.reduce((c,{blockSize:A})=>c+A,0)}else l.value=d.contentRect.width,r.value=d.contentRect.height},e);tr(()=>{const d=xi(s);d&&(l.value="offsetWidth"in d?d.offsetWidth:i.width,r.value="offsetHeight"in d?d.offsetHeight:i.height)});const p=bs(()=>xi(s),d=>{l.value=d?i.width:0,r.value=d?i.height:0});function k(){h(),p()}return{width:l,height:r,stop:k}}const Yg=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function hp(s,i={}){const{document:e=e3,autoExit:a=!1}=i,n=V(()=>{var m;return(m=xi(s))!=null?m:e==null?void 0:e.documentElement}),t=Ts(!1),l=V(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(m=>e&&m in e||n.value&&m in n.value)),r=V(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(m=>e&&m in e||n.value&&m in n.value)),h=V(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(m=>e&&m in e||n.value&&m in n.value)),p=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(m=>e&&m in e),k=On(()=>n.value&&e&&l.value!==void 0&&r.value!==void 0&&h.value!==void 0),d=()=>p?(e==null?void 0:e[p])===n.value:!1,o=()=>{if(h.value){if(e&&e[h.value]!=null)return e[h.value];{const m=n.value;if((m==null?void 0:m[h.value])!=null)return!!m[h.value]}}return!1};async function u(){if(!(!k.value||!t.value)){if(r.value)if((e==null?void 0:e[r.value])!=null)await e[r.value]();else{const m=n.value;(m==null?void 0:m[r.value])!=null&&await m[r.value]()}t.value=!1}}async function c(){if(!k.value||t.value)return;o()&&await u();const m=n.value;l.value&&(m==null?void 0:m[l.value])!=null&&(await m[l.value](),t.value=!0)}async function A(){await(t.value?u():c())}const g=()=>{const m=o();(!m||m&&d())&&(t.value=m)},f={capture:!1,passive:!0};return Is(e,Yg,g,f),Is(()=>xi(n),Yg,g,f),a&&Rn(u),{isSupported:k,isFullscreen:t,enter:c,exit:u,toggle:A}}function hk(s){return typeof Window<"u"&&s instanceof Window?s.document.documentElement:typeof Document<"u"&&s instanceof Document?s.documentElement:s}const Xg=1;function J5(s,i={}){const{throttle:e=0,idle:a=200,onStop:n=Mi,onScroll:t=Mi,offset:l={left:0,right:0,top:0,bottom:0},eventListenerOptions:r={capture:!1,passive:!0},behavior:h="auto",window:p=Oi,onError:k=N=>{console.error(N)}}=i,d=Ts(0),o=Ts(0),u=V({get(){return d.value},set(N){A(N,void 0)}}),c=V({get(){return o.value},set(N){A(void 0,N)}});function A(N,T){var C,I,O,w;if(!p)return;const z=vs(s);if(!z)return;(O=z instanceof Document?p.document.body:z)==null||O.scrollTo({top:(C=vs(T))!=null?C:c.value,left:(I=vs(N))!=null?I:u.value,behavior:vs(h)});const b=((w=z==null?void 0:z.document)==null?void 0:w.documentElement)||(z==null?void 0:z.documentElement)||z;u!=null&&(d.value=b.scrollLeft),c!=null&&(o.value=b.scrollTop)}const g=Ts(!1),f=Ya({left:!0,right:!1,top:!0,bottom:!1}),m=Ya({left:!1,right:!1,top:!1,bottom:!1}),y=N=>{g.value&&(g.value=!1,m.left=!1,m.right=!1,m.top=!1,m.bottom=!1,n(N))},v=rp(y,e+a),_=N=>{var T;if(!p)return;const C=((T=N==null?void 0:N.document)==null?void 0:T.documentElement)||(N==null?void 0:N.documentElement)||xi(N),{display:I,flexDirection:O,direction:w}=getComputedStyle(C),z=w==="rtl"?-1:1,b=C.scrollLeft;m.left=b<d.value,m.right=b>d.value;const $=b*z<=(l.left||0),R=b*z+C.clientWidth>=C.scrollWidth-(l.right||0)-Xg;I==="flex"&&O==="row-reverse"?(f.left=R,f.right=$):(f.left=$,f.right=R),d.value=b;let M=C.scrollTop;N===p.document&&!M&&(M=p.document.body.scrollTop),m.top=M<o.value,m.bottom=M>o.value;const W=M<=(l.top||0),Y=M+C.clientHeight>=C.scrollHeight-(l.bottom||0)-Xg;I==="flex"&&O==="column-reverse"?(f.top=Y,f.bottom=W):(f.top=W,f.bottom=Y),o.value=M},S=N=>{var T;if(!p)return;const C=(T=N.target.documentElement)!=null?T:N.target;_(C),g.value=!0,v(N),t(N)};return Is(s,"scroll",e?i3(S,e,!0,!1):S,r),tr(()=>{try{const N=vs(s);if(!N)return;_(N)}catch(N){k(N)}}),Is(s,"scrollend",y,r),{x:u,y:c,isScrolling:g,arrivedState:f,directions:m,measure(){const N=vs(s);p&&N&&_(N)}}}function Q5(s,i,e={}){const{window:a=Oi}=e;return lr(s,i,a==null?void 0:a.localStorage,e)}function s7(s={}){const{window:i=Oi}=s;if(!i)return Q(["en"]);const e=i.navigator,a=Q(e.languages);return Is(i,"languagechange",()=>{a.value=e.languages},{passive:!0}),a}function i7(s,i=Mi,e={}){const{immediate:a=!0,manual:n=!1,type:t="text/javascript",async:l=!0,crossOrigin:r,referrerPolicy:h,noModule:p,defer:k,document:d=e3,attrs:o={}}=e,u=Q(null);let c=null;const A=m=>new Promise((y,v)=>{const _=C=>(u.value=C,y(C),C);if(!d){y(!1);return}let S=!1,N=d.querySelector(`script[src="${vs(s)}"]`);N?N.hasAttribute("data-loaded")&&_(N):(N=d.createElement("script"),N.type=t,N.async=l,N.src=vs(s),k&&(N.defer=k),r&&(N.crossOrigin=r),p&&(N.noModule=p),h&&(N.referrerPolicy=h),Object.entries(o).forEach(([C,I])=>N==null?void 0:N.setAttribute(C,I)),S=!0);const T={passive:!0};Is(N,"error",C=>v(C),T),Is(N,"abort",C=>v(C),T),Is(N,"load",()=>{N.setAttribute("data-loaded","true"),i(N),_(N)},T),S&&(N=d.head.appendChild(N)),m||_(N)}),g=(m=!0)=>(c||(c=A(m)),c),f=()=>{if(!d)return;c=null,u.value&&(u.value=null);const m=d.querySelector(`script[src="${vs(s)}"]`);m&&d.head.removeChild(m)};return a&&!n&&tr(g),n||P5(f),{scriptTag:u,load:g,unload:f}}function t3(s){const i=window.getComputedStyle(s);if(i.overflowX==="scroll"||i.overflowY==="scroll"||i.overflowX==="auto"&&s.clientWidth<s.scrollWidth||i.overflowY==="auto"&&s.clientHeight<s.scrollHeight)return!0;{const e=s.parentNode;return!e||e.tagName==="BODY"?!1:t3(e)}}function e7(s){const i=s||window.event,e=i.target;return t3(e)?!1:i.touches.length>1?!0:(i.preventDefault&&i.preventDefault(),!1)}const pk=new WeakMap;function rr(s,i=!1){const e=Q(i);let a=null,n="";bs(s3(s),r=>{const h=hk(vs(r));if(h){const p=h;if(pk.get(p)||pk.set(p,p.style.overflow),p.style.overflow!=="hidden"&&(n=p.style.overflow),p.style.overflow==="hidden")return e.value=!0;if(e.value)return p.style.overflow="hidden"}},{immediate:!0});const t=()=>{const r=hk(vs(s));!r||e.value||(ao&&(a=Is(r,"touchmove",h=>{e7(h)},{passive:!1})),r.style.overflow="hidden",e.value=!0)},l=()=>{const r=hk(vs(s));!r||!e.value||(ao&&(a==null||a()),r.style.overflow=n,pk.delete(r),e.value=!1)};return Rn(l),V({get(){return e.value},set(r){r?t():l()}})}function a7(s,i,e={}){const{window:a=Oi}=e;return lr(s,i,a==null?void 0:a.sessionStorage,e)}function n7(s={}){const{window:i=Oi,...e}=s;return J5(i,e)}function t7(s={}){const{window:i=Oi,initialWidth:e=Number.POSITIVE_INFINITY,initialHeight:a=Number.POSITIVE_INFINITY,listenOrientation:n=!0,includeScrollbar:t=!0,type:l="inner"}=s,r=Q(e),h=Q(a),p=()=>{if(i)if(l==="outer")r.value=i.outerWidth,h.value=i.outerHeight;else if(l==="visual"&&i.visualViewport){const{width:d,height:o,scale:u}=i.visualViewport;r.value=Math.round(d*u),h.value=Math.round(o*u)}else t?(r.value=i.innerWidth,h.value=i.innerHeight):(r.value=i.document.documentElement.clientWidth,h.value=i.document.documentElement.clientHeight)};p(),tr(p);const k={passive:!0};if(Is("resize",p,k),i&&l==="visual"&&i.visualViewport&&Is(i.visualViewport,"resize",p,k),n){const d=xu("(orientation: portrait)");bs(d,()=>p())}return{width:r,height:h}}var Ia={};m5(Ia,{COMPONENT_STATE_TYPE:()=>l7,INSPECTOR_ID:()=>r7,INSPECTOR_LABEL:()=>h7,INSPECTOR_NODES:()=>p7,INSPECTOR_STATE_SECTION_NAME:()=>k7,PLUGIN_ID:()=>l3,PLUGIN_LABEL:()=>Tu});var l3="org.vuejs.vuepress",Tu="VuePress",l7=Tu,r7=l3,h7=Tu,Zg={id:"INTERNAL",label:"Internal",keys:["layouts","routes","redirects"]},Jg={id:"SITE",label:"Site",keys:["siteData","siteLocaleData"]},Qg={id:"ROUTE",label:"Route",keys:["routePath","routeLocale"]},s2={id:"PAGE",label:"Page",keys:["pageData","pageFrontmatter","pageLang","pageHead","pageHeadTitle","pageLayout","pageComponent"]},p7={[Zg.id]:Zg,[Jg.id]:Jg,[Qg.id]:Qg,[s2.id]:s2},k7="State";const d7=Ti({setup(){Is("beforeprint",()=>{document.querySelectorAll("details").forEach(s=>{s.open=!0})})}}),o7=Object.freeze(Object.defineProperty({__proto__:null,default:d7},Symbol.toStringTag,{value:"Module"})),u7=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),c7="VUEPRESS_CODE_TAB_STORE",Lr=lr(c7,{}),g7=ts({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:String},slots:Object,setup(s,{slots:i}){const e=Q(s.active),a=Ts([]),n=()=>{s.tabId&&(Lr.value[s.tabId]=s.data[e.value].id)},t=(p=e.value)=>{e.value=p<a.value.length-1?p+1:0,a.value[e.value].focus()},l=(p=e.value)=>{e.value=p>0?p-1:a.value.length-1,a.value[e.value].focus()},r=(p,k)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),e.value=k):p.key==="ArrowRight"?(p.preventDefault(),t()):p.key==="ArrowLeft"&&(p.preventDefault(),l()),s.tabId&&(Lr.value[s.tabId]=s.data[e.value].id)},h=()=>{if(s.tabId){const p=s.data.findIndex(({id:k})=>Lr.value[s.tabId]===k);if(p!==-1)return p}return s.active};return ws(()=>{e.value=h(),bs(()=>s.tabId&&Lr.value[s.tabId],(p,k)=>{if(s.tabId&&p!==k){const d=s.data.findIndex(({id:o})=>o===p);d!==-1&&(e.value=d)}})}),()=>s.data.length?B("div",{class:"vp-code-tabs"},[B("div",{class:"vp-code-tabs-nav",role:"tablist"},s.data.map(({id:p},k)=>{const d=k===e.value;return B("button",{type:"button",ref:o=>{o&&(a.value[k]=o)},class:["vp-code-tab-nav",{active:d}],role:"tab","aria-controls":`codetab-${s.id}-${k}`,"aria-selected":d,onClick:()=>{e.value=k,n()},onKeydown:o=>{r(o,k)}},i[`title${k}`]({value:p,isActive:d}))})),s.data.map(({id:p},k)=>{const d=k===e.value;return B("div",{class:["vp-code-tab",{active:d}],id:`codetab-${s.id}-${k}`,role:"tabpanel","aria-expanded":d},[B("div",{class:"vp-code-tab-title"},i[`title${k}`]({value:p,isActive:d})),i[`tab${k}`]({value:p,isActive:d})])})]):null}}),B7="VUEPRESS_TAB_STORE",kk=lr(B7,{}),A7=ts({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:String},slots:Object,setup(s,{slots:i}){const e=Q(s.active),a=Ts([]),n=()=>{s.tabId&&(kk.value[s.tabId]=s.data[e.value].id)},t=(p=e.value)=>{e.value=p<a.value.length-1?p+1:0,a.value[e.value].focus()},l=(p=e.value)=>{e.value=p>0?p-1:a.value.length-1,a.value[e.value].focus()},r=(p,k)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),e.value=k):p.key==="ArrowRight"?(p.preventDefault(),t()):p.key==="ArrowLeft"&&(p.preventDefault(),l()),n()},h=()=>{if(s.tabId){const p=s.data.findIndex(({id:k})=>kk.value[s.tabId]===k);if(p!==-1)return p}return s.active};return ws(()=>{e.value=h(),bs(()=>s.tabId&&kk.value[s.tabId],(p,k)=>{if(s.tabId&&p!==k){const d=s.data.findIndex(({id:o})=>o===p);d!==-1&&(e.value=d)}})}),()=>s.data.length?B("div",{class:"vp-tabs"},[B("div",{class:"vp-tabs-nav",role:"tablist"},s.data.map(({id:p},k)=>{const d=k===e.value;return B("button",{type:"button",ref:o=>{o&&(a.value[k]=o)},class:["vp-tab-nav",{active:d}],role:"tab","aria-controls":`tab-${s.id}-${k}`,"aria-selected":d,onClick:()=>{e.value=k,n()},onKeydown:o=>{r(o,k)}},i[`title${k}`]({value:p,isActive:d}))})),s.data.map(({id:p},k)=>{const d=k===e.value;return B("div",{class:["vp-tab",{active:d}],id:`tab-${s.id}-${k}`,role:"tabpanel","aria-expanded":d},[B("div",{class:"vp-tab-title"},i[`title${k}`]({value:p,isActive:d})),i[`tab${k}`]({value:p,isActive:d})])})]):null}}),y7={enhance:({app:s})=>{s.component("CodeTabs",g7),s.component("Tabs",A7)}},f7=Object.freeze(Object.defineProperty({__proto__:null,default:y7},Symbol.toStringTag,{value:"Module"})),i2=s=>typeof s=="number"?`${s}px`:s,pp=({size:s=48,stroke:i=4,wrapper:e=!0,height:a=2*s})=>{const n=B("span",{style:`--loading-icon: url("data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' preserveAspectRatio='xMidYMid' viewBox='25 25 50 50'%3E%3CanimateTransform attributeName='transform' type='rotate' dur='2s' keyTimes='0;1' repeatCount='indefinite' values='0;360'%3E%3C/animateTransform%3E%3Ccircle cx='50' cy='50' r='20' fill='none' stroke='currentColor' stroke-width='${i}' stroke-linecap='round'%3E%3Canimate attributeName='stroke-dasharray' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='1,200;90,200;1,200'%3E%3C/animate%3E%3Canimate attributeName='stroke-dashoffset' dur='1.5s' keyTimes='0;0.5;1' repeatCount='indefinite' values='0;-35px;-125px'%3E%3C/animate%3E%3C/circle%3E%3C/svg%3E");
--icon-size: ${i2(s)};
display: inline-block;
width: var(--icon-size);
height: var(--icon-size);
background-color: currentcolor;
-webkit-mask-image: var(--loading-icon);
mask-image: var(--loading-icon);
`});return e?B("div",{style:`display: flex;
align-items: center;
justify-content: center;
height: ${i2(a)}`},n):n};pp.displayName="LoadingIcon";var ie=Uint8Array,Hn=Uint16Array,m7=Int32Array,r3=new ie([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),h3=new ie([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),v7=new ie([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),p3=function(s,i){for(var e=new Hn(31),a=0;a<31;++a)e[a]=i+=1<<s[a-1];for(var n=new m7(e[30]),a=1;a<30;++a)for(var t=e[a];t<e[a+1];++t)n[t]=t-e[a]<<5|a;return{b:e,r:n}},k3=p3(r3,2),d3=k3.b,F7=k3.r;d3[28]=258,F7[258]=28;var E7=p3(h3,0),b7=E7.b,no=new Hn(32768);for(var ni=0;ni<32768;++ni){var wa=(ni&43690)>>1|(ni&21845)<<1;wa=(wa&52428)>>2|(wa&13107)<<2,wa=(wa&61680)>>4|(wa&3855)<<4,no[ni]=((wa&65280)>>8|(wa&255)<<8)>>1}var kl=function(s,i,e){for(var a=s.length,n=0,t=new Hn(i);n<a;++n)s[n]&&++t[s[n]-1];var l=new Hn(i);for(n=1;n<i;++n)l[n]=l[n-1]+t[n-1]<<1;var r;if(e){r=new Hn(1<<i);var h=15-i;for(n=0;n<a;++n)if(s[n])for(var p=n<<4|s[n],k=i-s[n],d=l[s[n]-1]++<<k,o=d|(1<<k)-1;d<=o;++d)r[no[d]>>h]=p}else for(r=new Hn(a),n=0;n<a;++n)s[n]&&(r[n]=no[l[s[n]-1]++]>>15-s[n]);return r},hr=new ie(288);for(var ni=0;ni<144;++ni)hr[ni]=8;for(var ni=144;ni<256;++ni)hr[ni]=9;for(var ni=256;ni<280;++ni)hr[ni]=7;for(var ni=280;ni<288;++ni)hr[ni]=8;var o3=new ie(32);for(var ni=0;ni<32;++ni)o3[ni]=5;var C7=kl(hr,9,1),_7=kl(o3,5,1),dk=function(s){for(var i=s[0],e=1;e<s.length;++e)s[e]>i&&(i=s[e]);return i},ye=function(s,i,e){var a=i/8|0;return(s[a]|s[a+1]<<8)>>(i&7)&e},ok=function(s,i){var e=i/8|0;return(s[e]|s[e+1]<<8|s[e+2]<<16)>>(i&7)},D7=function(s){return(s+7)/8|0},u3=function(s,i,e){return(i==null||i<0)&&(i=0),(e==null||e>s.length)&&(e=s.length),new ie(s.subarray(i,e))},w7=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],oe=function(s,i,e){var a=new Error(i||w7[s]);if(a.code=s,Error.captureStackTrace&&Error.captureStackTrace(a,oe),!e)throw a;return a},x7=function(s,i,e,a){var n=s.length,t=0;if(!n||i.f&&!i.l)return e||new ie(0);var l=!e,r=l||i.i!=2,h=i.i;l&&(e=new ie(n*3));var p=function(cs){var X=e.length;if(cs>X){var x=new ie(Math.max(X*2,cs));x.set(e),e=x}},k=i.f||0,d=i.p||0,o=i.b||0,u=i.l,c=i.d,A=i.m,g=i.n,f=n*8;do{if(!u){k=ye(s,d,1);var m=ye(s,d+1,3);if(d+=3,m)if(m==1)u=C7,c=_7,A=9,g=5;else if(m==2){var S=ye(s,d,31)+257,N=ye(s,d+10,15)+4,T=S+ye(s,d+5,31)+1;d+=14;for(var C=new ie(T),I=new ie(19),O=0;O<N;++O)I[v7[O]]=ye(s,d+O*3,7);d+=N*3;for(var w=dk(I),z=(1<<w)-1,b=kl(I,w,1),O=0;O<T;){var $=b[ye(s,d,z)];d+=$&15;var y=$>>4;if(y<16)C[O++]=y;else{var R=0,M=0;for(y==16?(M=3+ye(s,d,3),d+=2,R=C[O-1]):y==17?(M=3+ye(s,d,7),d+=3):y==18&&(M=11+ye(s,d,127),d+=7);M--;)C[O++]=R}}var W=C.subarray(0,S),Y=C.subarray(S);A=dk(W),g=dk(Y),u=kl(W,A,1),c=kl(Y,g,1)}else oe(1);else{var y=D7(d)+4,v=s[y-4]|s[y-3]<<8,_=y+v;if(_>n){h&&oe(0);break}r&&p(o+v),e.set(s.subarray(y,_),o),i.b=o+=v,i.p=d=_*8,i.f=k;continue}if(d>f){h&&oe(0);break}}r&&p(o+131072);for(var ls=(1<<A)-1,ps=(1<<g)-1,es=d;;es=d){var R=u[ok(s,d)&ls],q=R>>4;if(d+=R&15,d>f){h&&oe(0);break}if(R||oe(2),q<256)e[o++]=q;else if(q==256){es=d,u=null;break}else{var U=q-254;if(q>264){var O=q-257,K=r3[O];U=ye(s,d,(1<<K)-1)+d3[O],d+=K}var rs=c[ok(s,d)&ps],j=rs>>4;rs||oe(3),d+=rs&15;var Y=b7[j];if(j>3){var K=h3[j];Y+=ok(s,d)&(1<<K)-1,d+=K}if(d>f){h&&oe(0);break}r&&p(o+131072);var J=o+U;if(o<Y){var Z=t-Y,ks=Math.min(Y,J);for(Z+o<0&&oe(3);o<ks;++o)e[o]=a[Z+o]}for(;o<J;++o)e[o]=e[o-Y]}}i.l=u,i.p=es,i.b=o,i.f=k,u&&(k=1,i.m=A,i.d=c,i.n=g)}while(!k);return o!=e.length&&l?u3(e,0,o):e.subarray(0,o)},T7=new ie(0),S7=function(s,i){return((s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31)&&oe(6,"invalid zlib data"),(s[1]>>5&1)==1&&oe(6,"invalid zlib data: "+(s[1]&32?"need":"unexpected")+" dictionary"),(s[1]>>3&4)+2};function I7(s,i){return x7(s.subarray(S7(s),-4),{i:2},i,i)}var to=typeof TextDecoder<"u"&&new TextDecoder,R7=0;try{to.decode(T7,{stream:!0}),R7=1}catch{}var O7=function(s){for(var i="",e=0;;){var a=s[e++],n=(a>127)+(a>223)+(a>239);if(e+n>s.length)return{s:i,r:u3(s,e-1)};n?n==3?(a=((a&15)<<18|(s[e++]&63)<<12|(s[e++]&63)<<6|s[e++]&63)-65536,i+=String.fromCharCode(55296|a>>10,56320|a&1023)):n&1?i+=String.fromCharCode((a&31)<<6|s[e++]&63):i+=String.fromCharCode((a&15)<<12|(s[e++]&63)<<6|s[e++]&63):i+=String.fromCharCode(a)}};function P7(s,i){{for(var e=new ie(s.length),a=0;a<s.length;++a)e[a]=s.charCodeAt(a);return e}for(var n=s.length,a=0;a<n;++a);}function L7(s,i){var e;if(to)return to.decode(s);var a=O7(s),n=a.s,e=a.r;return e.length&&oe(8),n}const El=s=>{const i=atob(s);return L7(I7(P7(i)))},N7=s=>/\b(?:Android|iPhone)/i.test(s),M7=s=>/version\/([\w.]+) .*(mobile ?safari|safari)/i.test(s),c3=s=>[/\((ipad);[-\w),; ]+apple/i,/applecoremedia\/[\w.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i].some(i=>i.test(s)),V7=s=>[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/cfnetwork\/.+darwin/i].some(i=>i.test(s)),$7=s=>[/(mac os x) ?([\w. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i].some(i=>i.test(s)),e2=()=>document.documentElement.getAttribute("data-theme")==="dark",g3=[...new Array(6)].map((s,i)=>`[vp-content] h${i+1}`).join(","),z7=(s,i=2)=>{if(i===!1)return[];const[e,a]=typeof i=="number"?[i,i]:i==="deep"?[2,6]:i,n=s.filter(l=>l.level>=e&&l.level<=a),t=[];s:for(let l=0;l<n.length;l++){const r=n[l];if(l===0)t.push(r);else{for(let h=l-1;h>=0;h--){const p=n[h];if(p.level<r.level){p.children.push(r);continue s}}t.push(r)}}return t},q7=(s,i=[])=>{let e;if(i.length){const a=s.cloneNode(!0);a.querySelectorAll(i.join(",")).forEach(n=>{n.remove()}),e=a.textContent||""}else e=s.textContent||"";return e.trim()},H7=(s=g3,i=[])=>Array.from(document.querySelectorAll(s)).filter(e=>e.id&&e.hasChildNodes()).map(e=>({element:e,title:q7(e,i),link:`#${e.id}`,slug:e.id,level:Number(e.tagName[1]),children:[]})),j7=({selector:s=g3,levels:i=2,ignore:e=[]}={})=>z7(H7(s,e),i),U7=s=>s instanceof Element?document.activeElement===s&&(["TEXTAREA","SELECT","INPUT"].includes(s.tagName)||s.hasAttribute("contenteditable")):!1,G7=(s,i)=>i.some(e=>{if(li(e))return e===s.key;const{key:a,ctrl:n=!1,shift:t=!1,alt:l=!1}=e;return a===s.key&&n===s.ctrlKey&&t===s.shiftKey&&l===s.altKey}),Ce=(s,i)=>{var a;const e=(a=(i==null?void 0:i._instance)??pe())==null?void 0:a.appContext.components;return e?s in e||Wi(s)in e||Xl(Wi(s))in e:!1};let W7=null;const K7=()=>{const s=Q(!1);return ws(()=>{s.value=e2(),n3(document.documentElement,()=>{s.value=e2()},{attributeFilter:["data-theme"],attributes:!0})}),Ge(s)},Y7=()=>W7??(W7=K7()),X7=(s={})=>{const i=Q([]);return Ca(e=>{i.value=e==="beforeUnmount"?[]:j7(vs(s))}),i},Ke=s=>{const i=Be();return V(()=>vs(s)[i.value]??{})},Z7=(s,i)=>{Is("keydown",a=>{const n=vs(s);n!=null&&n.length&&G7(a,n)&&!U7(a.target)&&(a.preventDefault(),i())})},kp=s=>typeof s<"u",nh=s=>typeof s=="number",{isArray:Dh}=Array,bl=(s,i)=>li(s)&&s.startsWith(i),J7=(s,i)=>li(s)&&s.endsWith(i),{entries:Pn}=Object,{keys:Ue}=Object,{values:Q7}=Object,Su=s=>{if(s){if(typeof s=="number")return new Date(s);const i=Date.parse(s.toString());if(!Number.isNaN(i))return new Date(i)}return null},dp=s=>bl(s,"/")&&s[1]!=="/",sb='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',ib='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var eb={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const uk=eb,a2={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},ab=(s,i,e)=>{const a=document.createElement(s);return er(i)&&Ue(i).forEach(n=>{if(n.indexOf("data"))a[n]=i[n];else{const t=n.replace("data","");a.dataset[t]=i[n]}}),a},Iu=s=>({...uk,...s,jsLib:Array.from(new Set([uk.jsLib,s.jsLib??[]].flat())),cssLib:Array.from(new Set([uk.cssLib,s.cssLib??[]].flat()))}),Qn=(s,i)=>{if(kp(s[i]))return s[i];const e=new Promise(a=>{var t;const n=document.createElement("script");n.src=i,(t=document.querySelector("body"))==null||t.appendChild(n),n.onload=()=>{a()}});return s[i]=e,e},nb=(s,i)=>{if(i.css&&Array.from(s.childNodes).every(e=>e.nodeName!=="STYLE")){const e=ab("style",{innerHTML:i.css});s.appendChild(e)}},tb=(s,i,e)=>{const a=e.getScript();if(a&&Array.from(i.childNodes).every(n=>n.nodeName!=="SCRIPT")){const n=document.createElement("script");n.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${s} .vp-code-demo-display').shadowRoot;
${a}}`)),i.appendChild(n)}},lb=["html","js","css"],rb=s=>{const i=Ue(s),e={html:[],js:[],css:[],isLegal:!1};return lb.forEach(a=>{const n=i.filter(t=>a2[a].types.includes(t));if(n.length){const t=n[0];e[a]=[s[t].replace(/^\n|\n$/g,""),a2[a].map[t]??t]}}),e.isLegal=(!e.html.length||e.html[1]==="none")&&(!e.js.length||e.js[1]==="none")&&(!e.css.length||e.css[1]==="none"),e},B3=s=>s.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),A3=s=>`<div id="app">
${B3(s)}
</div>`,hb=s=>`${s.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,pb=s=>s.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),y3=s=>`(function(exports){var module={};module.exports=exports;${s};return module.exports.__esModule?exports.default:module.exports;})({})`,kb=(s,i)=>{const e=Iu(i),a=s.js[0]??"";return{...e,html:B3(s.html[0]??""),js:a,css:s.css[0]??"",isLegal:s.isLegal,getScript:()=>{var n,t;return e.useBabel?((t=(n=window.Babel)==null?void 0:n.transform(a,{presets:["es2015"]}))==null?void 0:t.code)??"":a}}},db=/<template>([\s\S]+)<\/template>/u,ob=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,ub=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,cb=(s,i)=>{const e=Iu(i),a=s.html[0]??"",n=db.exec(a),t=ob.exec(a),l=ub.exec(a),r=(n==null?void 0:n[1].replace(/^\n|\n$/g,""))??"",[h="",p=""]=t?[t[4].replace(/^\n|\n$/g,""),t[3]]:[],[k="",d=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],o=p===""&&(d===""||d==="css");return{...e,html:A3(r),js:pb(h),css:k,isLegal:o,jsLib:[e.vue,...e.jsLib],getScript:()=>{var c,A;const u=i.useBabel?((A=(c=window.Babel)==null?void 0:c.transform(h,{presets:["es2015"]}))==null?void 0:A.code)??"":h.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${y3(u)};appOptions.template=\`${r.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},gb=(s,i)=>{var n;const e=Iu(i),a=s.js[0]??"";return{...e,html:A3(""),js:hb(a),css:s.css[0]??((n=s.js[0])==null?void 0:n.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:s.isLegal,jsLib:[e.react,e.reactDOM,...e.jsLib],jsx:!0,getScript:()=>{var l,r;const t=((r=(l=window.Babel)==null?void 0:l.transform(a,{presets:["es2015","react"]}))==null?void 0:r.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${y3(t)}))`}}},st={},Bb=s=>Promise.all([Qn(st,s.babel),Qn(st,s.react),Qn(st,s.reactDOM)]),Ab=s=>{const i=[Qn(st,s.vue)];return s.useBabel&&i.push(Qn(st,s.babel)),Promise.all(i)},yb=s=>s.useBabel?Qn(st,s.babel):Promise.resolve();var fb=ts({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:String,config:String,code:{type:String,required:!0}},slots:Object,setup(s,{slots:i}){const[e,a]=Fl(!1),n=Ts(),t=Ts(),l=Q("0"),r=Q(!1),h=V(()=>JSON.parse(s.config?El(s.config):"{}")),p=V(()=>{const c=JSON.parse(El(s.code));return rb(c)}),k=V(()=>s.type==="react"?gb(p.value,h.value):s.type==="vue"?cb(p.value,h.value):kb(p.value,h.value)),d=V(()=>k.value.isLegal),o=(c=!1)=>{const A=n.value.attachShadow({mode:"open"}),g=document.createElement("div");g.classList.add("code-demo-app"),A.appendChild(g),d.value?(c&&(g.innerHTML=k.value.html),nb(A,k.value),tb(s.id,A,k.value),l.value="0"):l.value="auto",r.value=!0},u=()=>{switch(s.type){case"react":return Bb(k.value).then(()=>{o()});case"vue":return Ab(k.value).then(()=>{o()});default:return yb(k.value).then(()=>{o(!0)})}};return Is("beforeprint",()=>{a(!0)}),ws(async()=>{await u()}),()=>B("div",{class:"vp-container vp-code-demo",id:s.id},[B("div",{class:"vp-container-header"},[k.value.isLegal?B("button",{type:"button",title:"toggle",class:["vp-code-demo-toggle-button",e.value?"down":"end"],onClick:()=>{l.value=e.value?"0":`${t.value.clientHeight+13.8}px`,a()}}):null,s.title?B("span",{class:"vp-container-title"},decodeURIComponent(s.title)):null,k.value.isLegal&&k.value.jsfiddle!==!1?B("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[B("input",{type:"hidden",name:"html",value:k.value.html}),B("input",{type:"hidden",name:"js",value:k.value.js}),B("input",{type:"hidden",name:"css",value:k.value.css}),B("input",{type:"hidden",name:"wrap",value:"1"}),B("input",{type:"hidden",name:"panel_js",value:"3"}),B("input",{type:"hidden",name:"resources",value:[...k.value.cssLib,...k.value.jsLib].join(",")}),B("button",{type:"submit",class:"jsfiddle-button",innerHTML:ib,"aria-label":"JSFiddle","data-balloon-pos":"down"})]):null,!k.value.isLegal||k.value.codepen!==!1?B("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[B("input",{type:"hidden",name:"data",value:JSON.stringify({html:k.value.html,js:k.value.js,css:k.value.css,js_external:k.value.jsLib.join(";"),css_external:k.value.cssLib.join(";"),layout:k.value.codepenLayout,html_pre_processor:p.value.html[1]??"none",js_pre_processor:p.value.js[1]??(k.value.jsx?"babel":"none"),css_pre_processor:p.value.css[1]??"none",editors:k.value.codepenEditors})}),B("button",{type:"submit",innerHTML:sb,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"down"})]):null]),r.value?null:B(pp,{class:"vp-code-demo-loading"}),B("div",{ref:n,class:"vp-code-demo-display",style:{display:d.value&&r.value?"block":"none"}}),B("div",{class:"vp-code-demo-code-wrapper",style:{height:l.value}},B("div",{ref:t,class:"vp-code-demo-codes"},i.default()))])}}),mb=ts({name:"MdDemo",props:{id:{type:String,required:!0},title:String},slots:Object,setup(s,{slots:i}){const[e,a]=Fl(!1),n=Ts(),t=Q("0");return Is("beforeprint",()=>{a(!0)}),()=>B("div",{class:"vp-container vp-md-demo",id:s.id},[B("div",{class:"vp-container-header"},[B("button",{type:"button",title:"toggle",class:["vp-md-demo-toggle-button",e.value?"down":"end"],onClick:()=>{t.value=e.value?"0":`${n.value.clientHeight+13.8}px`,a()}}),s.title?B("div",{class:"vp-container-title"},decodeURIComponent(s.title)):null]),B("div",{class:"vp-md-demo-display"},i.default()),B("div",{class:"vp-md-demo-code-wrapper",style:{height:t.value}},B("div",{ref:n,class:"vp-md-demo-codes"},i.code()))])}}),vb=ts({name:"MarkMap",props:{id:{type:String,required:!0},content:{type:String,required:!0}},setup(s){const i=Q(!0),e=Ts(),a=Ts();let n=null;return Is("resize",rp(()=>{n==null||n.fit()},100)),ws(async()=>{const[{Transformer:t},{Markmap:l,deriveOptions:r},{Toolbar:h}]=await Promise.all([F(()=>import("./index-DYMXFzNW.js"),__vite__mapDeps([0,1])),F(()=>import("./index-C84KBwXb.js"),__vite__mapDeps([2,1])),F(()=>import("./index-DRWmbcXV.js"),[])]),p=new t,{frontmatter:k,root:d}=p.transform(El(s.content));n=l.create(a.value,r({maxWidth:240,...k==null?void 0:k.markmap}));const{el:o}=h.create(n);await n.setData(d),await n.fit(),o.style.position="absolute",o.style.bottom="0.5rem",o.style.right="0.5rem",e.value.append(o),i.value=!1}),_i(()=>{n==null||n.destroy(),n=null}),()=>B("div",{class:"markmap-wrapper",ref:e},[B("svg",{ref:a,class:"markmap-svg",id:s.id}),i.value?B(pp,{class:"markmap-loading",height:360}):null])}});let Fb={};const Eb=()=>Fb,Mn={useMaxWidth:!1},bb=s=>({dark:s,background:s?"#1e1e1e":"#fff",primaryColor:s?"#389d70":"#4abf8a",primaryBorderColor:s?"#389d70":"#4abf8a",primaryTextColor:s?"#fff":"#000",secondaryColor:"#ffb500",secondaryBorderColor:s?"#fff":"#000",secondaryTextColor:s?"#ddd":"#333",tertiaryColor:s?"#282828":"#efeef4",tertiaryBorderColor:s?"#bbb":"#242424",tertiaryTextColor:s?"#ddd":"#333",noteBkgColor:s?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:s?"#f6d365":"#333",lineColor:s?"#d3d3d3":"#333",textColor:s?"#fff":"#242424",mainBkg:s?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:s?"#389d70":"#4abf8a",nodeTextColor:s?"#fff":"#242424",signalTextColor:s?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",attributeBackgroundColorEven:s?"#0d1117":"#fff",attributeBackgroundColorOdd:s?"#161b22":"#f8f8f8",fillType0:s?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var Cb=ts({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0},title:String},setup(s){const i=Y7(),{themeVariables:e,...a}=Eb(),n=Ts(),t=V(()=>El(s.code)),l=Q(""),r=async()=>{const{default:k}=await F(()=>import("./mermaid.esm.min-Codfz7cX.js").then(d=>d.bz),[]);k.initialize({theme:"base",themeVariables:{...bb(i.value),...VF(e)?e(i.value):e},flowchart:Mn,sequence:Mn,journey:Mn,gantt:Mn,er:Mn,pie:Mn,...a,startOnLoad:!1}),l.value=(await k.render(s.id,t.value)).svg},h=()=>{const{body:k}=document,d=document.createElement("div");d.classList.add("mermaid-preview"),d.innerHTML=l.value,k.appendChild(d),d.addEventListener("click",()=>{k.removeChild(d)})},p=()=>{const k=`data:image/svg+xml;charset=utf8,${l.value.replace(/<br>/g,"<br />").replace(/%/g,"%25").replace(/"/g,"%22").replace(/'/g,"%27").replace(/&/g,"%26").replace(/#/g,"%23").replace(/{/g,"%7B").replace(/}/g,"%7D").replace(/</g,"%3C").replace(/>/g,"%3E")}`,d=document.createElement("a");d.setAttribute("href",k),d.setAttribute("download",`${s.title?El(s.title):s.id}.svg`),d.click()};return ws(()=>{te(i,()=>r(),{flush:"post"})}),()=>[B("div",{class:"mermaid-actions"},[B("button",{class:"preview-button",onClick:()=>{h()},title:"preview",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1316 1024" fill="currentColor"><path d="M658.286 0C415.89 0 0 297.106 0 512c0 214.82 415.89 512 658.286 512 242.322 0 658.285-294.839 658.285-512S900.608 0 658.286 0zm0 877.714c-161.573 0-512-221.769-512-365.714 0-144.018 350.427-365.714 512-365.714 161.572 0 512 217.16 512 365.714s-350.428 365.714-512 365.714z"/><path d="M658.286 292.571a219.429 219.429 0 1 0 0 438.858 219.429 219.429 0 0 0 0-438.858zm0 292.572a73.143 73.143 0 1 1 0-146.286 73.143 73.143 0 0 1 0 146.286z"/></svg>'}),B("button",{class:"download-button",onClick:()=>{p()},title:"download",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor"><path d="M828.976 894.125H190.189c-70.55 0-127.754-57.185-127.754-127.753V606.674c0-17.634 14.31-31.933 31.933-31.933h63.889c17.634 0 31.932 14.299 31.932 31.933v95.822c0 35.282 28.596 63.877 63.877 63.877h511.033c35.281 0 63.877-28.595 63.877-63.877v-95.822c0-17.634 14.298-31.933 31.943-31.933h63.878c17.635 0 31.933 14.299 31.933 31.933v159.7c0 70.566-57.191 127.751-127.754 127.751zM249.939 267.51c12.921-12.92 33.885-12.92 46.807 0l148.97 148.972V94.893c0-17.634 14.302-31.947 31.934-31.947h63.876c17.638 0 31.946 14.313 31.946 31.947v321.589l148.97-148.972c12.922-12.92 33.876-12.92 46.797 0l46.814 46.818c12.922 12.922 12.922 33.874 0 46.807L552.261 624.93c-1.14 1.138-21.664 13.684-42.315 13.693-20.877.01-41.88-12.542-43.021-13.693L203.122 361.135c-12.923-12.934-12.923-33.885 0-46.807l46.817-46.818z"/></svg>'})]),B("div",{ref:n,class:"mermaid-wrapper"},l.value?B("div",{class:"mermaid-content",innerHTML:l.value}):B(pp,{class:"mermaid-loading",height:96}))]}});const _b={enhance:({app:s})=>{s.component("CodeDemo",fb),s.component("MdDemo",mb),s.component("MarkMap",vb),s.component("Mermaid",Cb)}},Db=Object.freeze(Object.defineProperty({__proto__:null,default:_b},Symbol.toStringTag,{value:"Module"})),wb=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),xb=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));var Tb=Object.create,f3=Object.defineProperty,Sb=Object.getOwnPropertyDescriptor,Ru=Object.getOwnPropertyNames,Ib=Object.getPrototypeOf,Rb=Object.prototype.hasOwnProperty,Ob=(s,i)=>function(){return s&&(i=(0,s[Ru(s)[0]])(s=0)),i},Pb=(s,i)=>function(){return i||(0,s[Ru(s)[0]])((i={exports:{}}).exports,i),i.exports},Lb=(s,i,e,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of Ru(i))!Rb.call(s,n)&&n!==e&&f3(s,n,{get:()=>i[n],enumerable:!(a=Sb(i,n))||a.enumerable});return s},Nb=(s,i,e)=>(e=s!=null?Tb(Ib(s)):{},Lb(f3(e,"default",{value:s,enumerable:!0}),s)),pr=Ob({"../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.48.1_@types+node@22.10.5__jiti@2.4.2_postcss@8.4.49_tsx_s7k37zks4wtn7x2grzma6lrsfa/node_modules/tsup/assets/esm_shims.js"(){}}),Mb=Pb({"../../node_modules/.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js"(s,i){pr(),i.exports=a;function e(t){return t instanceof Buffer?Buffer.from(t):new t.constructor(t.buffer.slice(),t.byteOffset,t.length)}function a(t){if(t=t||{},t.circles)return n(t);const l=new Map;if(l.set(Date,d=>new Date(d)),l.set(Map,(d,o)=>new Map(h(Array.from(d),o))),l.set(Set,(d,o)=>new Set(h(Array.from(d),o))),t.constructorHandlers)for(const d of t.constructorHandlers)l.set(d[0],d[1]);let r=null;return t.proto?k:p;function h(d,o){const u=Object.keys(d),c=new Array(u.length);for(let A=0;A<u.length;A++){const g=u[A],f=d[g];typeof f!="object"||f===null?c[g]=f:f.constructor!==Object&&(r=l.get(f.constructor))?c[g]=r(f,o):ArrayBuffer.isView(f)?c[g]=e(f):c[g]=o(f)}return c}function p(d){if(typeof d!="object"||d===null)return d;if(Array.isArray(d))return h(d,p);if(d.constructor!==Object&&(r=l.get(d.constructor)))return r(d,p);const o={};for(const u in d){if(Object.hasOwnProperty.call(d,u)===!1)continue;const c=d[u];typeof c!="object"||c===null?o[u]=c:c.constructor!==Object&&(r=l.get(c.constructor))?o[u]=r(c,p):ArrayBuffer.isView(c)?o[u]=e(c):o[u]=p(c)}return o}function k(d){if(typeof d!="object"||d===null)return d;if(Array.isArray(d))return h(d,k);if(d.constructor!==Object&&(r=l.get(d.constructor)))return r(d,k);const o={};for(const u in d){const c=d[u];typeof c!="object"||c===null?o[u]=c:c.constructor!==Object&&(r=l.get(c.constructor))?o[u]=r(c,k):ArrayBuffer.isView(c)?o[u]=e(c):o[u]=k(c)}return o}}function n(t){const l=[],r=[],h=new Map;if(h.set(Date,u=>new Date(u)),h.set(Map,(u,c)=>new Map(k(Array.from(u),c))),h.set(Set,(u,c)=>new Set(k(Array.from(u),c))),t.constructorHandlers)for(const u of t.constructorHandlers)h.set(u[0],u[1]);let p=null;return t.proto?o:d;function k(u,c){const A=Object.keys(u),g=new Array(A.length);for(let f=0;f<A.length;f++){const m=A[f],y=u[m];if(typeof y!="object"||y===null)g[m]=y;else if(y.constructor!==Object&&(p=h.get(y.constructor)))g[m]=p(y,c);else if(ArrayBuffer.isView(y))g[m]=e(y);else{const v=l.indexOf(y);v!==-1?g[m]=r[v]:g[m]=c(y)}}return g}function d(u){if(typeof u!="object"||u===null)return u;if(Array.isArray(u))return k(u,d);if(u.constructor!==Object&&(p=h.get(u.constructor)))return p(u,d);const c={};l.push(u),r.push(c);for(const A in u){if(Object.hasOwnProperty.call(u,A)===!1)continue;const g=u[A];if(typeof g!="object"||g===null)c[A]=g;else if(g.constructor!==Object&&(p=h.get(g.constructor)))c[A]=p(g,d);else if(ArrayBuffer.isView(g))c[A]=e(g);else{const f=l.indexOf(g);f!==-1?c[A]=r[f]:c[A]=d(g)}}return l.pop(),r.pop(),c}function o(u){if(typeof u!="object"||u===null)return u;if(Array.isArray(u))return k(u,o);if(u.constructor!==Object&&(p=h.get(u.constructor)))return p(u,o);const c={};l.push(u),r.push(c);for(const A in u){const g=u[A];if(typeof g!="object"||g===null)c[A]=g;else if(g.constructor!==Object&&(p=h.get(g.constructor)))c[A]=p(g,o);else if(ArrayBuffer.isView(g))c[A]=e(g);else{const f=l.indexOf(g);f!==-1?c[A]=r[f]:c[A]=o(g)}}return l.pop(),r.pop(),c}}}});pr();pr();pr();var m3=typeof navigator<"u",Es=typeof window<"u"?window:typeof globalThis<"u"?globalThis:typeof global<"u"?global:{};typeof Es.chrome<"u"&&Es.chrome.devtools;m3&&(Es.self,Es.top);var n2;typeof navigator<"u"&&((n2=navigator.userAgent)==null||n2.toLowerCase().includes("electron"));pr();var Vb=Nb(Mb()),$b=/(?:^|[-_/])(\w)/g;function zb(s,i){return i?i.toUpperCase():""}function qb(s){return s&&`${s}`.replace($b,zb)}function Hb(s,i){let e=s.replace(/^[a-z]:/i,"").replace(/\\/g,"/");e.endsWith(`index${i}`)&&(e=e.replace(`/index${i}`,i));const a=e.lastIndexOf("/"),n=e.substring(a+1);{const t=n.lastIndexOf(i);return n.substring(0,t)}}var t2=(0,Vb.default)({circles:!0});const jb={trailing:!0};function ut(s,i=25,e={}){if(e={...jb,...e},!Number.isFinite(i))throw new TypeError("Expected `wait` to be a finite number");let a,n,t=[],l,r;const h=(p,k)=>(l=Ub(s,p,k),l.finally(()=>{if(l=null,e.trailing&&r&&!n){const d=h(p,r);return r=null,d}}),l);return function(...p){return l?(e.trailing&&(r=p),l):new Promise(k=>{const d=!n&&e.leading;clearTimeout(n),n=setTimeout(()=>{n=null;const o=e.leading?a:h(this,p);for(const u of t)u(o);t=[]},i),d?(a=h(this,p),k(a)):t.push(k)})}}async function Ub(s,i,e){return await s.apply(i,e)}function lo(s,i={},e){for(const a in s){const n=s[a],t=e?`${e}:${a}`:a;typeof n=="object"&&n!==null?lo(n,i,t):typeof n=="function"&&(i[t]=n)}return i}const Gb={run:s=>s()},Wb=()=>Gb,v3=typeof console.createTask<"u"?console.createTask:Wb;function Kb(s,i){const e=i.shift(),a=v3(e);return s.reduce((n,t)=>n.then(()=>a.run(()=>t(...i))),Promise.resolve())}function Yb(s,i){const e=i.shift(),a=v3(e);return Promise.all(s.map(n=>a.run(()=>n(...i))))}function ck(s,i){for(const e of[...s])e(i)}class Xb{constructor(){this._hooks={},this._before=void 0,this._after=void 0,this._deprecatedMessages=void 0,this._deprecatedHooks={},this.hook=this.hook.bind(this),this.callHook=this.callHook.bind(this),this.callHookWith=this.callHookWith.bind(this)}hook(i,e,a={}){if(!i||typeof e!="function")return()=>{};const n=i;let t;for(;this._deprecatedHooks[i];)t=this._deprecatedHooks[i],i=t.to;if(t&&!a.allowDeprecated){let l=t.message;l||(l=`${n} hook has been deprecated`+(t.to?`, please use ${t.to}`:"")),this._deprecatedMessages||(this._deprecatedMessages=new Set),this._deprecatedMessages.has(l)||(console.warn(l),this._deprecatedMessages.add(l))}if(!e.name)try{Object.defineProperty(e,"name",{get:()=>"_"+i.replace(/\W+/g,"_")+"_hook_cb",configurable:!0})}catch{}return this._hooks[i]=this._hooks[i]||[],this._hooks[i].push(e),()=>{e&&(this.removeHook(i,e),e=void 0)}}hookOnce(i,e){let a,n=(...t)=>(typeof a=="function"&&a(),a=void 0,n=void 0,e(...t));return a=this.hook(i,n),a}removeHook(i,e){if(this._hooks[i]){const a=this._hooks[i].indexOf(e);a!==-1&&this._hooks[i].splice(a,1),this._hooks[i].length===0&&delete this._hooks[i]}}deprecateHook(i,e){this._deprecatedHooks[i]=typeof e=="string"?{to:e}:e;const a=this._hooks[i]||[];delete this._hooks[i];for(const n of a)this.hook(i,n)}deprecateHooks(i){Object.assign(this._deprecatedHooks,i);for(const e in i)this.deprecateHook(e,i[e])}addHooks(i){const e=lo(i),a=Object.keys(e).map(n=>this.hook(n,e[n]));return()=>{for(const n of a.splice(0,a.length))n()}}removeHooks(i){const e=lo(i);for(const a in e)this.removeHook(a,e[a])}removeAllHooks(){for(const i in this._hooks)delete this._hooks[i]}callHook(i,...e){return e.unshift(i),this.callHookWith(Kb,i,...e)}callHookParallel(i,...e){return e.unshift(i),this.callHookWith(Yb,i,...e)}callHookWith(i,e,...a){const n=this._before||this._after?{name:e,args:a,context:{}}:void 0;this._before&&ck(this._before,n);const t=i(e in this._hooks?[...this._hooks[e]]:[],a);return t instanceof Promise?t.finally(()=>{this._after&&n&&ck(this._after,n)}):(this._after&&n&&ck(this._after,n),t)}beforeEach(i){return this._before=this._before||[],this._before.push(i),()=>{if(this._before!==void 0){const e=this._before.indexOf(i);e!==-1&&this._before.splice(e,1)}}}afterEach(i){return this._after=this._after||[],this._after.push(i),()=>{if(this._after!==void 0){const e=this._after.indexOf(i);e!==-1&&this._after.splice(e,1)}}}}function F3(){return new Xb}var Zb=Object.create,E3=Object.defineProperty,Jb=Object.getOwnPropertyDescriptor,Ou=Object.getOwnPropertyNames,Qb=Object.getPrototypeOf,sC=Object.prototype.hasOwnProperty,iC=(s,i)=>function(){return s&&(i=(0,s[Ou(s)[0]])(s=0)),i},b3=(s,i)=>function(){return i||(0,s[Ou(s)[0]])((i={exports:{}}).exports,i),i.exports},eC=(s,i,e,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of Ou(i))!sC.call(s,n)&&n!==e&&E3(s,n,{get:()=>i[n],enumerable:!(a=Jb(i,n))||a.enumerable});return s},aC=(s,i,e)=>(e=s!=null?Zb(Qb(s)):{},eC(E3(e,"default",{value:s,enumerable:!0}),s)),os=iC({"../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.48.1_@types+node@22.10.5__jiti@2.4.2_postcss@8.4.49_tsx_s7k37zks4wtn7x2grzma6lrsfa/node_modules/tsup/assets/esm_shims.js"(){}}),nC=b3({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/lib/speakingurl.js"(s,i){os(),function(e){var a={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"Ae",Å:"A",Æ:"AE",Ç:"C",È:"E",É:"E",Ê:"E",Ë:"E",Ì:"I",Í:"I",Î:"I",Ï:"I",Ð:"D",Ñ:"N",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"Oe",Ő:"O",Ø:"O",Ù:"U",Ú:"U",Û:"U",Ü:"Ue",Ű:"U",Ý:"Y",Þ:"TH",ß:"ss",à:"a",á:"a",â:"a",ã:"a",ä:"ae",å:"a",æ:"ae",ç:"c",è:"e",é:"e",ê:"e",ë:"e",ì:"i",í:"i",î:"i",ï:"i",ð:"d",ñ:"n",ò:"o",ó:"o",ô:"o",õ:"o",ö:"oe",ő:"o",ø:"o",ù:"u",ú:"u",û:"u",ü:"ue",ű:"u",ý:"y",þ:"th",ÿ:"y","ẞ":"SS",ا:"a",أ:"a",إ:"i",آ:"aa",ؤ:"u",ئ:"e",ء:"a",ب:"b",ت:"t",ث:"th",ج:"j",ح:"h",خ:"kh",د:"d",ذ:"th",ر:"r",ز:"z",س:"s",ش:"sh",ص:"s",ض:"dh",ط:"t",ظ:"z",ع:"a",غ:"gh",ف:"f",ق:"q",ك:"k",ل:"l",م:"m",ن:"n",ه:"h",و:"w",ي:"y",ى:"a",ة:"h",ﻻ:"la",ﻷ:"laa",ﻹ:"lai",ﻵ:"laa",گ:"g",چ:"ch",پ:"p",ژ:"zh",ک:"k",ی:"y","َ":"a","ً":"an","ِ":"e","ٍ":"en","ُ":"u","ٌ":"on","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9",က:"k",ခ:"kh",ဂ:"g",ဃ:"ga",င:"ng",စ:"s",ဆ:"sa",ဇ:"z","စျ":"za",ည:"ny",ဋ:"t",ဌ:"ta",ဍ:"d",ဎ:"da",ဏ:"na",တ:"t",ထ:"ta",ဒ:"d",ဓ:"da",န:"n",ပ:"p",ဖ:"pa",ဗ:"b",ဘ:"ba",မ:"m",ယ:"y",ရ:"ya",လ:"l",ဝ:"w",သ:"th",ဟ:"h",ဠ:"la",အ:"a","ြ":"y","ျ":"ya","ွ":"w","ြွ":"yw","ျွ":"ywa","ှ":"h",ဧ:"e","၏":"-e",ဣ:"i",ဤ:"-i",ဉ:"u",ဦ:"-u",ဩ:"aw","သြော":"aw",ဪ:"aw","၀":"0","၁":"1","၂":"2","၃":"3","၄":"4","၅":"5","၆":"6","၇":"7","၈":"8","၉":"9","္":"","့":"","း":"",č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z",ހ:"h",ށ:"sh",ނ:"n",ރ:"r",ބ:"b",ޅ:"lh",ކ:"k",އ:"a",ވ:"v",މ:"m",ފ:"f",ދ:"dh",ތ:"th",ލ:"l",ގ:"g",ޏ:"gn",ސ:"s",ޑ:"d",ޒ:"z",ޓ:"t",ޔ:"y",ޕ:"p",ޖ:"j",ޗ:"ch",ޘ:"tt",ޙ:"hh",ޚ:"kh",ޛ:"th",ޜ:"z",ޝ:"sh",ޞ:"s",ޟ:"d",ޠ:"t",ޡ:"z",ޢ:"a",ޣ:"gh",ޤ:"q",ޥ:"w","ަ":"a","ާ":"aa","ި":"i","ީ":"ee","ު":"u","ޫ":"oo","ެ":"e","ޭ":"ey","ޮ":"o","ޯ":"oa","ް":"",ა:"a",ბ:"b",გ:"g",დ:"d",ე:"e",ვ:"v",ზ:"z",თ:"t",ი:"i",კ:"k",ლ:"l",მ:"m",ნ:"n",ო:"o",პ:"p",ჟ:"zh",რ:"r",ს:"s",ტ:"t",უ:"u",ფ:"p",ქ:"k",ღ:"gh",ყ:"q",შ:"sh",ჩ:"ch",ც:"ts",ძ:"dz",წ:"ts",ჭ:"ch",ხ:"kh",ჯ:"j",ჰ:"h",α:"a",β:"v",γ:"g",δ:"d",ε:"e",ζ:"z",η:"i",θ:"th",ι:"i",κ:"k",λ:"l",μ:"m",ν:"n",ξ:"ks",ο:"o",π:"p",ρ:"r",σ:"s",τ:"t",υ:"y",φ:"f",χ:"x",ψ:"ps",ω:"o",ά:"a",έ:"e",ί:"i",ό:"o",ύ:"y",ή:"i",ώ:"o",ς:"s",ϊ:"i",ΰ:"y",ϋ:"y",ΐ:"i",Α:"A",Β:"B",Γ:"G",Δ:"D",Ε:"E",Ζ:"Z",Η:"I",Θ:"TH",Ι:"I",Κ:"K",Λ:"L",Μ:"M",Ν:"N",Ξ:"KS",Ο:"O",Π:"P",Ρ:"R",Σ:"S",Τ:"T",Υ:"Y",Φ:"F",Χ:"X",Ψ:"PS",Ω:"O",Ά:"A",Έ:"E",Ί:"I",Ό:"O",Ύ:"Y",Ή:"I",Ώ:"O",Ϊ:"I",Ϋ:"Y",ā:"a",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",ū:"u",Ā:"A",Ē:"E",Ģ:"G",Ī:"I",Ķ:"k",Ļ:"L",Ņ:"N",Ū:"U",Ќ:"Kj",ќ:"kj",Љ:"Lj",љ:"lj",Њ:"Nj",њ:"nj",Тс:"Ts",тс:"ts",ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"E",Ł:"L",Ń:"N",Ś:"S",Ź:"Z",Ż:"Z",Є:"Ye",І:"I",Ї:"Yi",Ґ:"G",є:"ye",і:"i",ї:"yi",ґ:"g",ă:"a",Ă:"A",ș:"s",Ș:"S",ț:"t",Ț:"T",ţ:"t",Ţ:"T",а:"a",б:"b",в:"v",г:"g",д:"d",е:"e",ё:"yo",ж:"zh",з:"z",и:"i",й:"i",к:"k",л:"l",м:"m",н:"n",о:"o",п:"p",р:"r",с:"s",т:"t",у:"u",ф:"f",х:"kh",ц:"c",ч:"ch",ш:"sh",щ:"sh",ъ:"",ы:"y",ь:"",э:"e",ю:"yu",я:"ya",А:"A",Б:"B",В:"V",Г:"G",Д:"D",Е:"E",Ё:"Yo",Ж:"Zh",З:"Z",И:"I",Й:"I",К:"K",Л:"L",М:"M",Н:"N",О:"O",П:"P",Р:"R",С:"S",Т:"T",У:"U",Ф:"F",Х:"Kh",Ц:"C",Ч:"Ch",Ш:"Sh",Щ:"Sh",Ъ:"",Ы:"Y",Ь:"",Э:"E",Ю:"Yu",Я:"Ya",ђ:"dj",ј:"j",ћ:"c",џ:"dz",Ђ:"Dj",Ј:"j",Ћ:"C",Џ:"Dz",ľ:"l",ĺ:"l",ŕ:"r",Ľ:"L",Ĺ:"L",Ŕ:"R",ş:"s",Ş:"S",ı:"i",İ:"I",ğ:"g",Ğ:"G",ả:"a",Ả:"A",ẳ:"a",Ẳ:"A",ẩ:"a",Ẩ:"A",đ:"d",Đ:"D",ẹ:"e",Ẹ:"E",ẽ:"e",Ẽ:"E",ẻ:"e",Ẻ:"E",ế:"e",Ế:"E",ề:"e",Ề:"E",ệ:"e",Ệ:"E",ễ:"e",Ễ:"E",ể:"e",Ể:"E",ỏ:"o",ọ:"o",Ọ:"o",ố:"o",Ố:"O",ồ:"o",Ồ:"O",ổ:"o",Ổ:"O",ộ:"o",Ộ:"O",ỗ:"o",Ỗ:"O",ơ:"o",Ơ:"O",ớ:"o",Ớ:"O",ờ:"o",Ờ:"O",ợ:"o",Ợ:"O",ỡ:"o",Ỡ:"O",Ở:"o",ở:"o",ị:"i",Ị:"I",ĩ:"i",Ĩ:"I",ỉ:"i",Ỉ:"i",ủ:"u",Ủ:"U",ụ:"u",Ụ:"U",ũ:"u",Ũ:"U",ư:"u",Ư:"U",ứ:"u",Ứ:"U",ừ:"u",Ừ:"U",ự:"u",Ự:"U",ữ:"u",Ữ:"U",ử:"u",Ử:"ư",ỷ:"y",Ỷ:"y",ỳ:"y",Ỳ:"Y",ỵ:"y",Ỵ:"Y",ỹ:"y",Ỹ:"Y",ạ:"a",Ạ:"A",ấ:"a",Ấ:"A",ầ:"a",Ầ:"A",ậ:"a",Ậ:"A",ẫ:"a",Ẫ:"A",ắ:"a",Ắ:"A",ằ:"a",Ằ:"A",ặ:"a",Ặ:"A",ẵ:"a",Ẵ:"A","⓪":"0","①":"1","②":"2","③":"3","④":"4","⑤":"5","⑥":"6","⑦":"7","⑧":"8","⑨":"9","⑩":"10","⑪":"11","⑫":"12","⑬":"13","⑭":"14","⑮":"15","⑯":"16","⑰":"17","⑱":"18","⑲":"18","⑳":"18","⓵":"1","⓶":"2","⓷":"3","⓸":"4","⓹":"5","⓺":"6","⓻":"7","⓼":"8","⓽":"9","⓾":"10","⓿":"0","⓫":"11","⓬":"12","⓭":"13","⓮":"14","⓯":"15","⓰":"16","⓱":"17","⓲":"18","⓳":"19","⓴":"20","Ⓐ":"A","Ⓑ":"B","Ⓒ":"C","Ⓓ":"D","Ⓔ":"E","Ⓕ":"F","Ⓖ":"G","Ⓗ":"H","Ⓘ":"I","Ⓙ":"J","Ⓚ":"K","Ⓛ":"L","Ⓜ":"M","Ⓝ":"N","Ⓞ":"O","Ⓟ":"P","Ⓠ":"Q","Ⓡ":"R","Ⓢ":"S","Ⓣ":"T","Ⓤ":"U","Ⓥ":"V","Ⓦ":"W","Ⓧ":"X","Ⓨ":"Y","Ⓩ":"Z","ⓐ":"a","ⓑ":"b","ⓒ":"c","ⓓ":"d","ⓔ":"e","ⓕ":"f","ⓖ":"g","ⓗ":"h","ⓘ":"i","ⓙ":"j","ⓚ":"k","ⓛ":"l","ⓜ":"m","ⓝ":"n","ⓞ":"o","ⓟ":"p","ⓠ":"q","ⓡ":"r","ⓢ":"s","ⓣ":"t","ⓤ":"u","ⓦ":"v","ⓥ":"w","ⓧ":"x","ⓨ":"y","ⓩ":"z","“":'"',"”":'"',"‘":"'","’":"'","∂":"d",ƒ:"f","™":"(TM)","©":"(C)",œ:"oe",Œ:"OE","®":"(R)","†":"+","℠":"(SM)","…":"...","˚":"o",º:"o",ª:"a","•":"*","၊":",","။":".",$:"USD","€":"EUR","₢":"BRN","₣":"FRF","£":"GBP","₤":"ITL","₦":"NGN","₧":"ESP","₩":"KRW","₪":"ILS","₫":"VND","₭":"LAK","₮":"MNT","₯":"GRD","₱":"ARS","₲":"PYG","₳":"ARA","₴":"UAH","₵":"GHS","¢":"cent","¥":"CNY",元:"CNY",円:"YEN","﷼":"IRR","₠":"EWE","฿":"THB","₨":"INR","₹":"INR","₰":"PF","₺":"TRY","؋":"AFN","₼":"AZN",лв:"BGN","៛":"KHR","₡":"CRC","₸":"KZT",ден:"MKD",zł:"PLN","₽":"RUB","₾":"GEL"},n=["်","ް"],t={"ာ":"a","ါ":"a","ေ":"e","ဲ":"e","ိ":"i","ီ":"i","ို":"o","ု":"u","ူ":"u","ေါင်":"aung","ော":"aw","ော်":"aw","ေါ":"aw","ေါ်":"aw","်":"်","က်":"et","ိုက်":"aik","ောက်":"auk","င်":"in","ိုင်":"aing","ောင်":"aung","စ်":"it","ည်":"i","တ်":"at","ိတ်":"eik","ုတ်":"ok","ွတ်":"ut","ေတ်":"it","ဒ်":"d","ိုဒ်":"ok","ုဒ်":"ait","န်":"an","ာန်":"an","ိန်":"ein","ုန်":"on","ွန်":"un","ပ်":"at","ိပ်":"eik","ုပ်":"ok","ွပ်":"ut","န်ုပ်":"nub","မ်":"an","ိမ်":"ein","ုမ်":"on","ွမ်":"un","ယ်":"e","ိုလ်":"ol","ဉ်":"in","ံ":"an","ိံ":"ein","ုံ":"on","ައް":"ah","ަށް":"ah"},l={en:{},az:{ç:"c",ə:"e",ğ:"g",ı:"i",ö:"o",ş:"s",ü:"u",Ç:"C",Ə:"E",Ğ:"G",İ:"I",Ö:"O",Ş:"S",Ü:"U"},cs:{č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z"},fi:{ä:"a",Ä:"A",ö:"o",Ö:"O"},hu:{ä:"a",Ä:"A",ö:"o",Ö:"O",ü:"u",Ü:"U",ű:"u",Ű:"U"},lt:{ą:"a",č:"c",ę:"e",ė:"e",į:"i",š:"s",ų:"u",ū:"u",ž:"z",Ą:"A",Č:"C",Ę:"E",Ė:"E",Į:"I",Š:"S",Ų:"U",Ū:"U"},lv:{ā:"a",č:"c",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",š:"s",ū:"u",ž:"z",Ā:"A",Č:"C",Ē:"E",Ģ:"G",Ī:"i",Ķ:"k",Ļ:"L",Ņ:"N",Š:"S",Ū:"u",Ž:"Z"},pl:{ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ó:"o",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"e",Ł:"L",Ń:"N",Ó:"O",Ś:"S",Ź:"Z",Ż:"Z"},sv:{ä:"a",Ä:"A",ö:"o",Ö:"O"},sk:{ä:"a",Ä:"A"},sr:{љ:"lj",њ:"nj",Љ:"Lj",Њ:"Nj",đ:"dj",Đ:"Dj"},tr:{Ü:"U",Ö:"O",ü:"u",ö:"o"}},r={ar:{"∆":"delta","∞":"la-nihaya","♥":"hob","&":"wa","|":"aw","<":"aqal-men",">":"akbar-men","∑":"majmou","¤":"omla"},az:{},ca:{"∆":"delta","∞":"infinit","♥":"amor","&":"i","|":"o","<":"menys que",">":"mes que","∑":"suma dels","¤":"moneda"},cs:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"nebo","<":"mensi nez",">":"vetsi nez","∑":"soucet","¤":"mena"},de:{"∆":"delta","∞":"unendlich","♥":"Liebe","&":"und","|":"oder","<":"kleiner als",">":"groesser als","∑":"Summe von","¤":"Waehrung"},dv:{"∆":"delta","∞":"kolunulaa","♥":"loabi","&":"aai","|":"noonee","<":"ah vure kuda",">":"ah vure bodu","∑":"jumula","¤":"faisaa"},en:{"∆":"delta","∞":"infinity","♥":"love","&":"and","|":"or","<":"less than",">":"greater than","∑":"sum","¤":"currency"},es:{"∆":"delta","∞":"infinito","♥":"amor","&":"y","|":"u","<":"menos que",">":"mas que","∑":"suma de los","¤":"moneda"},fa:{"∆":"delta","∞":"bi-nahayat","♥":"eshgh","&":"va","|":"ya","<":"kamtar-az",">":"bishtar-az","∑":"majmooe","¤":"vahed"},fi:{"∆":"delta","∞":"aarettomyys","♥":"rakkaus","&":"ja","|":"tai","<":"pienempi kuin",">":"suurempi kuin","∑":"summa","¤":"valuutta"},fr:{"∆":"delta","∞":"infiniment","♥":"Amour","&":"et","|":"ou","<":"moins que",">":"superieure a","∑":"somme des","¤":"monnaie"},ge:{"∆":"delta","∞":"usasruloba","♥":"siqvaruli","&":"da","|":"an","<":"naklebi",">":"meti","∑":"jami","¤":"valuta"},gr:{},hu:{"∆":"delta","∞":"vegtelen","♥":"szerelem","&":"es","|":"vagy","<":"kisebb mint",">":"nagyobb mint","∑":"szumma","¤":"penznem"},it:{"∆":"delta","∞":"infinito","♥":"amore","&":"e","|":"o","<":"minore di",">":"maggiore di","∑":"somma","¤":"moneta"},lt:{"∆":"delta","∞":"begalybe","♥":"meile","&":"ir","|":"ar","<":"maziau nei",">":"daugiau nei","∑":"suma","¤":"valiuta"},lv:{"∆":"delta","∞":"bezgaliba","♥":"milestiba","&":"un","|":"vai","<":"mazak neka",">":"lielaks neka","∑":"summa","¤":"valuta"},my:{"∆":"kwahkhyaet","∞":"asaonasme","♥":"akhyait","&":"nhin","|":"tho","<":"ngethaw",">":"kyithaw","∑":"paungld","¤":"ngwekye"},mk:{},nl:{"∆":"delta","∞":"oneindig","♥":"liefde","&":"en","|":"of","<":"kleiner dan",">":"groter dan","∑":"som","¤":"valuta"},pl:{"∆":"delta","∞":"nieskonczonosc","♥":"milosc","&":"i","|":"lub","<":"mniejsze niz",">":"wieksze niz","∑":"suma","¤":"waluta"},pt:{"∆":"delta","∞":"infinito","♥":"amor","&":"e","|":"ou","<":"menor que",">":"maior que","∑":"soma","¤":"moeda"},ro:{"∆":"delta","∞":"infinit","♥":"dragoste","&":"si","|":"sau","<":"mai mic ca",">":"mai mare ca","∑":"suma","¤":"valuta"},ru:{"∆":"delta","∞":"beskonechno","♥":"lubov","&":"i","|":"ili","<":"menshe",">":"bolshe","∑":"summa","¤":"valjuta"},sk:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"alebo","<":"menej ako",">":"viac ako","∑":"sucet","¤":"mena"},sr:{},tr:{"∆":"delta","∞":"sonsuzluk","♥":"ask","&":"ve","|":"veya","<":"kucuktur",">":"buyuktur","∑":"toplam","¤":"para birimi"},uk:{"∆":"delta","∞":"bezkinechnist","♥":"lubov","&":"i","|":"abo","<":"menshe",">":"bilshe","∑":"suma","¤":"valjuta"},vn:{"∆":"delta","∞":"vo cuc","♥":"yeu","&":"va","|":"hoac","<":"nho hon",">":"lon hon","∑":"tong","¤":"tien te"}},h=[";","?",":","@","&","=","+","$",",","/"].join(""),p=[";","?",":","@","&","=","+","$",","].join(""),k=[".","!","~","*","'","(",")"].join(""),d=function(g,f){var m="-",y="",v="",_=!0,S={},N,T,C,I,O,w,z,b,$,R,M,W,Y,ls,ps="";if(typeof g!="string")return"";if(typeof f=="string"&&(m=f),z=r.en,b=l.en,typeof f=="object"){N=f.maintainCase||!1,S=f.custom&&typeof f.custom=="object"?f.custom:S,C=+f.truncate>1&&f.truncate||!1,I=f.uric||!1,O=f.uricNoSlash||!1,w=f.mark||!1,_=!(f.symbols===!1||f.lang===!1),m=f.separator||m,I&&(ps+=h),O&&(ps+=p),w&&(ps+=k),z=f.lang&&r[f.lang]&&_?r[f.lang]:_?r.en:{},b=f.lang&&l[f.lang]?l[f.lang]:f.lang===!1||f.lang===!0?{}:l.en,f.titleCase&&typeof f.titleCase.length=="number"&&Array.prototype.toString.call(f.titleCase)?(f.titleCase.forEach(function(es){S[es+""]=es+""}),T=!0):T=!!f.titleCase,f.custom&&typeof f.custom.length=="number"&&Array.prototype.toString.call(f.custom)&&f.custom.forEach(function(es){S[es+""]=es+""}),Object.keys(S).forEach(function(es){var q;es.length>1?q=new RegExp("\\b"+u(es)+"\\b","gi"):q=new RegExp(u(es),"gi"),g=g.replace(q,S[es])});for(M in S)ps+=M}for(ps+=m,ps=u(ps),g=g.replace(/(^\s+|\s+$)/g,""),Y=!1,ls=!1,R=0,W=g.length;R<W;R++)M=g[R],c(M,S)?Y=!1:b[M]?(M=Y&&b[M].match(/[A-Za-z0-9]/)?" "+b[M]:b[M],Y=!1):M in a?(R+1<W&&n.indexOf(g[R+1])>=0?(v+=M,M=""):ls===!0?(M=t[v]+a[M],v=""):M=Y&&a[M].match(/[A-Za-z0-9]/)?" "+a[M]:a[M],Y=!1,ls=!1):M in t?(v+=M,M="",R===W-1&&(M=t[v]),ls=!0):z[M]&&!(I&&h.indexOf(M)!==-1)&&!(O&&p.indexOf(M)!==-1)?(M=Y||y.substr(-1).match(/[A-Za-z0-9]/)?m+z[M]:z[M],M+=g[R+1]!==void 0&&g[R+1].match(/[A-Za-z0-9]/)?m:"",Y=!0):(ls===!0?(M=t[v]+M,v="",ls=!1):Y&&(/[A-Za-z0-9]/.test(M)||y.substr(-1).match(/A-Za-z0-9]/))&&(M=" "+M),Y=!1),y+=M.replace(new RegExp("[^\\w\\s"+ps+"_-]","g"),m);return T&&(y=y.replace(/(\w)(\S*)/g,function(es,q,U){var K=q.toUpperCase()+(U!==null?U:"");return Object.keys(S).indexOf(K.toLowerCase())<0?K:K.toLowerCase()})),y=y.replace(/\s+/g,m).replace(new RegExp("\\"+m+"+","g"),m).replace(new RegExp("(^\\"+m+"+|\\"+m+"+$)","g"),""),C&&y.length>C&&($=y.charAt(C)===m,y=y.slice(0,C),$||(y=y.slice(0,y.lastIndexOf(m)))),!N&&!T&&(y=y.toLowerCase()),y},o=function(g){return function(m){return d(m,g)}},u=function(g){return g.replace(/[-\\^$*+?.()|[\]{}\/]/g,"\\$&")},c=function(A,g){for(var f in g)if(g[f]===A)return!0};if(typeof i<"u"&&i.exports)i.exports=d,i.exports.createSlug=o;else if(typeof define<"u"&&define.amd)define([],function(){return d});else try{if(e.getSlug||e.createSlug)throw"speakingurl: globals exists /(getSlug|createSlug)/";e.getSlug=d,e.createSlug=o}catch{}}(s)}}),tC=b3({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/index.js"(s,i){os(),i.exports=nC()}});os();os();os();os();os();os();os();os();function lC(s){var i;const e=s.name||s._componentTag||s.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__||s.__name;return e==="index"&&((i=s.__file)!=null&&i.endsWith("index.vue"))?"":e}function rC(s){const i=s.__file;if(i)return qb(Hb(i,".vue"))}function l2(s,i){return s.type.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__=i,i}function Pu(s){if(s.__VUE_DEVTOOLS_NEXT_APP_RECORD__)return s.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(s.root)return s.appContext.app.__VUE_DEVTOOLS_NEXT_APP_RECORD__}function C3(s){var i,e;const a=(i=s.subTree)==null?void 0:i.type,n=Pu(s);return n?((e=n==null?void 0:n.types)==null?void 0:e.Fragment)===a:!1}function op(s){var i,e,a;const n=lC((s==null?void 0:s.type)||{});if(n)return n;if((s==null?void 0:s.root)===s)return"Root";for(const l in(e=(i=s.parent)==null?void 0:i.type)==null?void 0:e.components)if(s.parent.type.components[l]===(s==null?void 0:s.type))return l2(s,l);for(const l in(a=s.appContext)==null?void 0:a.components)if(s.appContext.components[l]===(s==null?void 0:s.type))return l2(s,l);const t=rC((s==null?void 0:s.type)||{});return t||"Anonymous Component"}function hC(s){var i,e,a;const n=(a=(e=(i=s==null?void 0:s.appContext)==null?void 0:i.app)==null?void 0:e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__)!=null?a:0,t=s===(s==null?void 0:s.root)?"root":s.uid;return`${n}:${t}`}function ro(s,i){return i=i||`${s.id}:root`,s.instanceMap.get(i)||s.instanceMap.get(":root")}function pC(){const s={top:0,bottom:0,left:0,right:0,get width(){return s.right-s.left},get height(){return s.bottom-s.top}};return s}var Nr;function kC(s){return Nr||(Nr=document.createRange()),Nr.selectNode(s),Nr.getBoundingClientRect()}function dC(s){const i=pC();if(!s.children)return i;for(let e=0,a=s.children.length;e<a;e++){const n=s.children[e];let t;if(n.component)t=xn(n.component);else if(n.el){const l=n.el;l.nodeType===1||l.getBoundingClientRect?t=l.getBoundingClientRect():l.nodeType===3&&l.data.trim()&&(t=kC(l))}t&&oC(i,t)}return i}function oC(s,i){return(!s.top||i.top<s.top)&&(s.top=i.top),(!s.bottom||i.bottom>s.bottom)&&(s.bottom=i.bottom),(!s.left||i.left<s.left)&&(s.left=i.left),(!s.right||i.right>s.right)&&(s.right=i.right),s}var r2={top:0,left:0,right:0,bottom:0,width:0,height:0};function xn(s){const i=s.subTree.el;return typeof window>"u"?r2:C3(s)?dC(s.subTree):(i==null?void 0:i.nodeType)===1?i==null?void 0:i.getBoundingClientRect():s.subTree.component?xn(s.subTree.component):r2}os();function Lu(s){return C3(s)?uC(s.subTree):s.subTree?[s.subTree.el]:[]}function uC(s){if(!s.children)return[];const i=[];return s.children.forEach(e=>{e.component?i.push(...Lu(e.component)):e!=null&&e.el&&i.push(e.el)}),i}var _3="__vue-devtools-component-inspector__",D3="__vue-devtools-component-inspector__card__",w3="__vue-devtools-component-inspector__name__",x3="__vue-devtools-component-inspector__indicator__",T3={display:"block",zIndex:2147483640,position:"fixed",backgroundColor:"#42b88325",border:"1px solid #42b88350",borderRadius:"5px",transition:"all 0.1s ease-in",pointerEvents:"none"},cC={fontFamily:"Arial, Helvetica, sans-serif",padding:"5px 8px",borderRadius:"4px",textAlign:"left",position:"absolute",left:0,color:"#e9e9e9",fontSize:"14px",fontWeight:600,lineHeight:"24px",backgroundColor:"#42b883",boxShadow:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)"},gC={display:"inline-block",fontWeight:400,fontStyle:"normal",fontSize:"12px",opacity:.7};function xt(){return document.getElementById(_3)}function BC(){return document.getElementById(D3)}function AC(){return document.getElementById(x3)}function yC(){return document.getElementById(w3)}function Nu(s){return{left:`${Math.round(s.left*100)/100}px`,top:`${Math.round(s.top*100)/100}px`,width:`${Math.round(s.width*100)/100}px`,height:`${Math.round(s.height*100)/100}px`}}function Mu(s){var i;const e=document.createElement("div");e.id=(i=s.elementId)!=null?i:_3,Object.assign(e.style,{...T3,...Nu(s.bounds),...s.style});const a=document.createElement("span");a.id=D3,Object.assign(a.style,{...cC,top:s.bounds.top<35?0:"-35px"});const n=document.createElement("span");n.id=w3,n.innerHTML=`&lt;${s.name}&gt;&nbsp;&nbsp;`;const t=document.createElement("i");return t.id=x3,t.innerHTML=`${Math.round(s.bounds.width*100)/100} x ${Math.round(s.bounds.height*100)/100}`,Object.assign(t.style,gC),a.appendChild(n),a.appendChild(t),e.appendChild(a),document.body.appendChild(e),e}function Vu(s){const i=xt(),e=BC(),a=yC(),n=AC();i&&(Object.assign(i.style,{...T3,...Nu(s.bounds)}),Object.assign(e.style,{top:s.bounds.top<35?0:"-35px"}),a.innerHTML=`&lt;${s.name}&gt;&nbsp;&nbsp;`,n.innerHTML=`${Math.round(s.bounds.width*100)/100} x ${Math.round(s.bounds.height*100)/100}`)}function fC(s){const i=xn(s);if(!i.width&&!i.height)return;const e=op(s);xt()?Vu({bounds:i,name:e}):Mu({bounds:i,name:e})}function S3(){const s=xt();s&&(s.style.display="none")}var ho=null;function po(s){const i=s.target;if(i){const e=i.__vueParentComponent;if(e&&(ho=e,e.vnode.el)){const n=xn(e),t=op(e);xt()?Vu({bounds:n,name:t}):Mu({bounds:n,name:t})}}}function mC(s,i){if(s.preventDefault(),s.stopPropagation(),ho){const e=hC(ho);i(e)}}var wh=null;function vC(){S3(),window.removeEventListener("mouseover",po),window.removeEventListener("click",wh,!0),wh=null}function FC(){return window.addEventListener("mouseover",po),new Promise(s=>{function i(e){e.preventDefault(),e.stopPropagation(),mC(e,a=>{window.removeEventListener("click",i,!0),wh=null,window.removeEventListener("mouseover",po);const n=xt();n&&(n.style.display="none"),s(JSON.stringify({id:a}))})}wh=i,window.addEventListener("click",i,!0)})}function EC(s){const i=ro(Vi.value,s.id);if(i){const[e]=Lu(i);if(typeof e.scrollIntoView=="function")e.scrollIntoView({behavior:"smooth"});else{const a=xn(i),n=document.createElement("div"),t={...Nu(a),position:"absolute"};Object.assign(n.style,t),document.body.appendChild(n),n.scrollIntoView({behavior:"smooth"}),setTimeout(()=>{document.body.removeChild(n)},2e3)}setTimeout(()=>{const a=xn(i);if(a.width||a.height){const n=op(i),t=xt();t?Vu({...s,name:n,bounds:a}):Mu({...s,name:n,bounds:a}),setTimeout(()=>{t&&(t.style.display="none")},1500)}},1200)}}os();var h2,p2;(p2=(h2=Es).__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__)!=null||(h2.__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__=!0);function bC(s){let i=0;const e=setInterval(()=>{Es.__VUE_INSPECTOR__&&(clearInterval(e),i+=30,s()),i>=5e3&&clearInterval(e)},30)}function CC(){const s=Es.__VUE_INSPECTOR__,i=s.openInEditor;s.openInEditor=async(...e)=>{s.disable(),i(...e)}}function _C(){return new Promise(s=>{function i(){CC(),s(Es.__VUE_INSPECTOR__)}Es.__VUE_INSPECTOR__?i():bC(()=>{i()})})}os();os();function DC(s){return!!(s&&s.__v_isReadonly)}function I3(s){return DC(s)?I3(s.__v_raw):!!(s&&s.__v_isReactive)}function gk(s){return!!(s&&s.__v_isRef===!0)}function Kt(s){const i=s&&s.__v_raw;return i?Kt(i):s}var wC=class{constructor(){this.refEditor=new xC}set(s,i,e,a){const n=Array.isArray(i)?i:i.split(".");for(;n.length>1;){const r=n.shift();s instanceof Map&&(s=s.get(r)),s instanceof Set?s=Array.from(s.values())[r]:s=s[r],this.refEditor.isRef(s)&&(s=this.refEditor.get(s))}const t=n[0],l=this.refEditor.get(s)[t];a?a(s,t,e):this.refEditor.isRef(l)?this.refEditor.set(l,e):s[t]=e}get(s,i){const e=Array.isArray(i)?i:i.split(".");for(let a=0;a<e.length;a++)if(s instanceof Map?s=s.get(e[a]):s=s[e[a]],this.refEditor.isRef(s)&&(s=this.refEditor.get(s)),!s)return;return s}has(s,i,e=!1){if(typeof s>"u")return!1;const a=Array.isArray(i)?i.slice():i.split("."),n=e?2:1;for(;s&&a.length>n;){const t=a.shift();s=s[t],this.refEditor.isRef(s)&&(s=this.refEditor.get(s))}return s!=null&&Object.prototype.hasOwnProperty.call(s,a[0])}createDefaultSetCallback(s){return(i,e,a)=>{if((s.remove||s.newKey)&&(Array.isArray(i)?i.splice(e,1):Kt(i)instanceof Map?i.delete(e):Kt(i)instanceof Set?i.delete(Array.from(i.values())[e]):Reflect.deleteProperty(i,e)),!s.remove){const n=i[s.newKey||e];this.refEditor.isRef(n)?this.refEditor.set(n,a):Kt(i)instanceof Map?i.set(s.newKey||e,a):Kt(i)instanceof Set?i.add(a):i[s.newKey||e]=a}}}},xC=class{set(s,i){if(gk(s))s.value=i;else{if(s instanceof Set&&Array.isArray(i)){s.clear(),i.forEach(n=>s.add(n));return}const e=Object.keys(i);if(s instanceof Map){const n=new Set(s.keys());e.forEach(t=>{s.set(t,Reflect.get(i,t)),n.delete(t)}),n.forEach(t=>s.delete(t));return}const a=new Set(Object.keys(s));e.forEach(n=>{Reflect.set(s,n,Reflect.get(i,n)),a.delete(n)}),a.forEach(n=>Reflect.deleteProperty(s,n))}}get(s){return gk(s)?s.value:s}isRef(s){return gk(s)||I3(s)}};os();os();os();var TC="__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS_STATE__";function SC(){if(!m3||typeof localStorage>"u"||localStorage===null)return{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""};const s=localStorage.getItem(TC);return s?JSON.parse(s):{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""}}os();os();os();var k2,d2;(d2=(k2=Es).__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS)!=null||(k2.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS=[]);var IC=new Proxy(Es.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS,{get(s,i,e){return Reflect.get(s,i,e)}});function RC(s,i){yi.timelineLayersState[i.id]=!1,IC.push({...s,descriptorId:i.id,appRecord:Pu(i.app)})}var o2,u2;(u2=(o2=Es).__VUE_DEVTOOLS_KIT_INSPECTOR__)!=null||(o2.__VUE_DEVTOOLS_KIT_INSPECTOR__=[]);var $u=new Proxy(Es.__VUE_DEVTOOLS_KIT_INSPECTOR__,{get(s,i,e){return Reflect.get(s,i,e)}}),R3=ut(()=>{Tt.hooks.callHook("sendInspectorToClient",O3())});function OC(s,i){var e,a;$u.push({options:s,descriptor:i,treeFilterPlaceholder:(e=s.treeFilterPlaceholder)!=null?e:"Search tree...",stateFilterPlaceholder:(a=s.stateFilterPlaceholder)!=null?a:"Search state...",treeFilter:"",selectedNodeId:"",appRecord:Pu(i.app)}),R3()}function O3(){return $u.filter(s=>s.descriptor.app===Vi.value.app).filter(s=>s.descriptor.id!=="components").map(s=>{var i;const e=s.descriptor,a=s.options;return{id:a.id,label:a.label,logo:e.logo,icon:`custom-ic-baseline-${(i=a==null?void 0:a.icon)==null?void 0:i.replace(/_/g,"-")}`,packageName:e.packageName,homepage:e.homepage,pluginId:e.id}})}function th(s,i){return $u.find(e=>e.options.id===s&&(i?e.descriptor.app===i:!0))}function PC(){const s=F3();s.hook("addInspector",({inspector:a,plugin:n})=>{OC(a,n.descriptor)});const i=ut(async({inspectorId:a,plugin:n})=>{var t;if(!a||!((t=n==null?void 0:n.descriptor)!=null&&t.app)||yi.highPerfModeEnabled)return;const l=th(a,n.descriptor.app),r={app:n.descriptor.app,inspectorId:a,filter:(l==null?void 0:l.treeFilter)||"",rootNodes:[]};await new Promise(h=>{s.callHookWith(async p=>{await Promise.all(p.map(k=>k(r))),h()},"getInspectorTree")}),s.callHookWith(async h=>{await Promise.all(h.map(p=>p({inspectorId:a,rootNodes:r.rootNodes})))},"sendInspectorTreeToClient")},120);s.hook("sendInspectorTree",i);const e=ut(async({inspectorId:a,plugin:n})=>{var t;if(!a||!((t=n==null?void 0:n.descriptor)!=null&&t.app)||yi.highPerfModeEnabled)return;const l=th(a,n.descriptor.app),r={app:n.descriptor.app,inspectorId:a,nodeId:(l==null?void 0:l.selectedNodeId)||"",state:null},h={currentTab:`custom-inspector:${a}`};r.nodeId&&await new Promise(p=>{s.callHookWith(async k=>{await Promise.all(k.map(d=>d(r,h))),p()},"getInspectorState")}),s.callHookWith(async p=>{await Promise.all(p.map(k=>k({inspectorId:a,nodeId:r.nodeId,state:r.state})))},"sendInspectorStateToClient")},120);return s.hook("sendInspectorState",e),s.hook("customInspectorSelectNode",({inspectorId:a,nodeId:n,plugin:t})=>{const l=th(a,t.descriptor.app);l&&(l.selectedNodeId=n)}),s.hook("timelineLayerAdded",({options:a,plugin:n})=>{RC(a,n.descriptor)}),s.hook("timelineEventAdded",({options:a,plugin:n})=>{var t;const l=["performance","component-event","keyboard","mouse"];yi.highPerfModeEnabled||!((t=yi.timelineLayersState)!=null&&t[n.descriptor.id])&&!l.includes(a.layerId)||s.callHookWith(async r=>{await Promise.all(r.map(h=>h(a)))},"sendTimelineEventToClient")}),s.hook("getComponentInstances",async({app:a})=>{const n=a.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(!n)return null;const t=n.id.toString();return[...n.instanceMap].filter(([r])=>r.split(":")[0]===t).map(([,r])=>r)}),s.hook("getComponentBounds",async({instance:a})=>xn(a)),s.hook("getComponentName",({instance:a})=>op(a)),s.hook("componentHighlight",({uid:a})=>{const n=Vi.value.instanceMap.get(a);n&&fC(n)}),s.hook("componentUnhighlight",()=>{S3()}),s}var c2,g2;(g2=(c2=Es).__VUE_DEVTOOLS_KIT_APP_RECORDS__)!=null||(c2.__VUE_DEVTOOLS_KIT_APP_RECORDS__=[]);var B2,A2;(A2=(B2=Es).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__)!=null||(B2.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__={});var y2,f2;(f2=(y2=Es).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__)!=null||(y2.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__="");var m2,v2;(v2=(m2=Es).__VUE_DEVTOOLS_KIT_CUSTOM_TABS__)!=null||(m2.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__=[]);var F2,E2;(E2=(F2=Es).__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__)!=null||(F2.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__=[]);var Bn="__VUE_DEVTOOLS_KIT_GLOBAL_STATE__";function LC(){return{connected:!1,clientConnected:!1,vitePluginDetected:!0,appRecords:[],activeAppRecordId:"",tabs:[],commands:[],highPerfModeEnabled:!0,devtoolsClientDetected:{},perfUniqueGroupId:0,timelineLayersState:SC()}}var b2,C2;(C2=(b2=Es)[Bn])!=null||(b2[Bn]=LC());var NC=ut(s=>{Tt.hooks.callHook("devtoolsStateUpdated",{state:s})});ut((s,i)=>{Tt.hooks.callHook("devtoolsConnectedUpdated",{state:s,oldState:i})});var up=new Proxy(Es.__VUE_DEVTOOLS_KIT_APP_RECORDS__,{get(s,i,e){return i==="value"?Es.__VUE_DEVTOOLS_KIT_APP_RECORDS__:Es.__VUE_DEVTOOLS_KIT_APP_RECORDS__[i]}}),Vi=new Proxy(Es.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__,{get(s,i,e){return i==="value"?Es.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__:i==="id"?Es.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__:Es.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__[i]}});function P3(){NC({...Es[Bn],appRecords:up.value,activeAppRecordId:Vi.id,tabs:Es.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__,commands:Es.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__})}function MC(s){Es.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__=s,P3()}function VC(s){Es.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__=s,P3()}var yi=new Proxy(Es[Bn],{get(s,i){return i==="appRecords"?up:i==="activeAppRecordId"?Vi.id:i==="tabs"?Es.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__:i==="commands"?Es.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__:Es[Bn][i]},deleteProperty(s,i){return delete s[i],!0},set(s,i,e){return{...Es[Bn]},s[i]=e,Es[Bn][i]=e,!0}});function $C(s={}){var i,e,a;const{file:n,host:t,baseUrl:l=window.location.origin,line:r=0,column:h=0}=s;if(n){if(t==="chrome-extension"){const p=n.replace(/\\/g,"\\\\"),k=(e=(i=window.VUE_DEVTOOLS_CONFIG)==null?void 0:i.openInEditorHost)!=null?e:"/";fetch(`${k}__open-in-editor?file=${encodeURI(n)}`).then(d=>{if(!d.ok){const o=`Opening component ${p} failed`;console.log(`%c${o}`,"color:red")}})}else if(yi.vitePluginDetected){const p=(a=Es.__VUE_DEVTOOLS_OPEN_IN_EDITOR_BASE_URL__)!=null?a:l;Es.__VUE_INSPECTOR__.openInEditor(p,n,r,h)}}}os();os();os();os();os();var _2,D2;(D2=(_2=Es).__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__)!=null||(_2.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__=[]);var zu=new Proxy(Es.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__,{get(s,i,e){return Reflect.get(s,i,e)}});function ko(s){const i={};return Object.keys(s).forEach(e=>{i[e]=s[e].defaultValue}),i}function qu(s){return`__VUE_DEVTOOLS_NEXT_PLUGIN_SETTINGS__${s}__`}function zC(s){var i,e,a;const n=(e=(i=zu.find(t=>{var l;return t[0].id===s&&!!((l=t[0])!=null&&l.settings)}))==null?void 0:i[0])!=null?e:null;return(a=n==null?void 0:n.settings)!=null?a:null}function L3(s,i){var e,a,n;const t=qu(s);if(t){const l=localStorage.getItem(t);if(l)return JSON.parse(l)}if(s){const l=(a=(e=zu.find(r=>r[0].id===s))==null?void 0:e[0])!=null?a:null;return ko((n=l==null?void 0:l.settings)!=null?n:{})}return ko(i)}function qC(s,i){const e=qu(s);localStorage.getItem(e)||localStorage.setItem(e,JSON.stringify(ko(i)))}function HC(s,i,e){const a=qu(s),n=localStorage.getItem(a),t=JSON.parse(n||"{}"),l={...t,[i]:e};localStorage.setItem(a,JSON.stringify(l)),Tt.hooks.callHookWith(r=>{r.forEach(h=>h({pluginId:s,key:i,oldValue:t[i],newValue:e,settings:l}))},"setPluginSettings")}os();os();os();os();os();os();os();os();os();os();os();var w2,x2,se=(x2=(w2=Es).__VUE_DEVTOOLS_HOOK)!=null?x2:w2.__VUE_DEVTOOLS_HOOK=F3(),jC={vueAppInit(s){se.hook("app:init",s)},vueAppUnmount(s){se.hook("app:unmount",s)},vueAppConnected(s){se.hook("app:connected",s)},componentAdded(s){return se.hook("component:added",s)},componentEmit(s){return se.hook("component:emit",s)},componentUpdated(s){return se.hook("component:updated",s)},componentRemoved(s){return se.hook("component:removed",s)},setupDevtoolsPlugin(s){se.hook("devtools-plugin:setup",s)},perfStart(s){return se.hook("perf:start",s)},perfEnd(s){return se.hook("perf:end",s)}},N3={on:jC,setupDevToolsPlugin(s,i){return se.callHook("devtools-plugin:setup",s,i)}},UC=class{constructor({plugin:s,ctx:i}){this.hooks=i.hooks,this.plugin=s}get on(){return{visitComponentTree:s=>{this.hooks.hook("visitComponentTree",s)},inspectComponent:s=>{this.hooks.hook("inspectComponent",s)},editComponentState:s=>{this.hooks.hook("editComponentState",s)},getInspectorTree:s=>{this.hooks.hook("getInspectorTree",s)},getInspectorState:s=>{this.hooks.hook("getInspectorState",s)},editInspectorState:s=>{this.hooks.hook("editInspectorState",s)},inspectTimelineEvent:s=>{this.hooks.hook("inspectTimelineEvent",s)},timelineCleared:s=>{this.hooks.hook("timelineCleared",s)},setPluginSettings:s=>{this.hooks.hook("setPluginSettings",s)}}}notifyComponentUpdate(s){var i;if(yi.highPerfModeEnabled)return;const e=O3().find(a=>a.packageName===this.plugin.descriptor.packageName);if(e!=null&&e.id){if(s){const a=[s.appContext.app,s.uid,(i=s.parent)==null?void 0:i.uid,s];se.callHook("component:updated",...a)}else se.callHook("component:updated");this.hooks.callHook("sendInspectorState",{inspectorId:e.id,plugin:this.plugin})}}addInspector(s){this.hooks.callHook("addInspector",{inspector:s,plugin:this.plugin}),this.plugin.descriptor.settings&&qC(s.id,this.plugin.descriptor.settings)}sendInspectorTree(s){yi.highPerfModeEnabled||this.hooks.callHook("sendInspectorTree",{inspectorId:s,plugin:this.plugin})}sendInspectorState(s){yi.highPerfModeEnabled||this.hooks.callHook("sendInspectorState",{inspectorId:s,plugin:this.plugin})}selectInspectorNode(s,i){this.hooks.callHook("customInspectorSelectNode",{inspectorId:s,nodeId:i,plugin:this.plugin})}visitComponentTree(s){return this.hooks.callHook("visitComponentTree",s)}now(){return yi.highPerfModeEnabled?0:Date.now()}addTimelineLayer(s){this.hooks.callHook("timelineLayerAdded",{options:s,plugin:this.plugin})}addTimelineEvent(s){yi.highPerfModeEnabled||this.hooks.callHook("timelineEventAdded",{options:s,plugin:this.plugin})}getSettings(s){return L3(s??this.plugin.descriptor.id,this.plugin.descriptor.settings)}getComponentInstances(s){return this.hooks.callHook("getComponentInstances",{app:s})}getComponentBounds(s){return this.hooks.callHook("getComponentBounds",{instance:s})}getComponentName(s){return this.hooks.callHook("getComponentName",{instance:s})}highlightElement(s){const i=s.__VUE_DEVTOOLS_NEXT_UID__;return this.hooks.callHook("componentHighlight",{uid:i})}unhighlightElement(){return this.hooks.callHook("componentUnhighlight")}},GC=UC;os();os();os();os();var WC="__vue_devtool_undefined__",KC="__vue_devtool_infinity__",YC="__vue_devtool_negative_infinity__",XC="__vue_devtool_nan__";os();os();var ZC={[WC]:"undefined",[XC]:"NaN",[KC]:"Infinity",[YC]:"-Infinity"};Object.entries(ZC).reduce((s,[i,e])=>(s[e]=i,s),{});os();os();os();os();os();var T2,S2;(S2=(T2=Es).__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__)!=null||(T2.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__=new Set);function JC(s,i){return N3.setupDevToolsPlugin(s,i)}function QC(s,i){const[e,a]=s;if(e.app!==i)return;const n=new GC({plugin:{setupFn:a,descriptor:e},ctx:Tt});e.packageName==="vuex"&&n.on.editInspectorState(t=>{n.sendInspectorState(t.inspectorId)}),a(n)}function M3(s,i){Es.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.has(s)||yi.highPerfModeEnabled&&!(i!=null&&i.inspectingComponent)||(Es.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.add(s),zu.forEach(e=>{QC(e,s)}))}os();os();var Cl="__VUE_DEVTOOLS_ROUTER__",ct="__VUE_DEVTOOLS_ROUTER_INFO__",I2,R2;(R2=(I2=Es)[ct])!=null||(I2[ct]={currentRoute:null,routes:[]});var O2,P2;(P2=(O2=Es)[Cl])!=null||(O2[Cl]={});new Proxy(Es[ct],{get(s,i){return Es[ct][i]}});new Proxy(Es[Cl],{get(s,i){if(i==="value")return Es[Cl]}});function s_(s){const i=new Map;return((s==null?void 0:s.getRoutes())||[]).filter(e=>!i.has(e.path)&&i.set(e.path,1))}function Hu(s){return s.map(i=>{let{path:e,name:a,children:n,meta:t}=i;return n!=null&&n.length&&(n=Hu(n)),{path:e,name:a,children:n,meta:t}})}function i_(s){if(s){const{fullPath:i,hash:e,href:a,path:n,name:t,matched:l,params:r,query:h}=s;return{fullPath:i,hash:e,href:a,path:n,name:t,params:r,query:h,matched:Hu(l)}}return s}function e_(s,i){function e(){var a;const n=(a=s.app)==null?void 0:a.config.globalProperties.$router,t=i_(n==null?void 0:n.currentRoute.value),l=Hu(s_(n)),r=console.warn;console.warn=()=>{},Es[ct]={currentRoute:t?t2(t):{},routes:t2(l)},Es[Cl]=n,console.warn=r}e(),N3.on.componentUpdated(ut(()=>{var a;((a=i.value)==null?void 0:a.app)===s.app&&(e(),!yi.highPerfModeEnabled&&Tt.hooks.callHook("routerInfoUpdated",{state:Es[ct]}))},200))}function a_(s){return{async getInspectorTree(i){const e={...i,app:Vi.value.app,rootNodes:[]};return await new Promise(a=>{s.callHookWith(async n=>{await Promise.all(n.map(t=>t(e))),a()},"getInspectorTree")}),e.rootNodes},async getInspectorState(i){const e={...i,app:Vi.value.app,state:null},a={currentTab:`custom-inspector:${i.inspectorId}`};return await new Promise(n=>{s.callHookWith(async t=>{await Promise.all(t.map(l=>l(e,a))),n()},"getInspectorState")}),e.state},editInspectorState(i){const e=new wC,a={...i,app:Vi.value.app,set:(n,t=i.path,l=i.state.value,r)=>{e.set(n,t,l,r||e.createDefaultSetCallback(i.state))}};s.callHookWith(n=>{n.forEach(t=>t(a))},"editInspectorState")},sendInspectorState(i){const e=th(i);s.callHook("sendInspectorState",{inspectorId:i,plugin:{descriptor:e.descriptor,setupFn:()=>({})}})},inspectComponentInspector(){return FC()},cancelInspectComponentInspector(){return vC()},getComponentRenderCode(i){const e=ro(Vi.value,i);if(e)return(e==null?void 0:e.type)instanceof Function?e.type.toString():e.render.toString()},scrollToComponent(i){return EC({id:i})},openInEditor:$C,getVueInspector:_C,toggleApp(i,e){const a=up.value.find(n=>n.id===i);a&&(VC(i),MC(a),e_(a,Vi),R3(),M3(a.app,e))},inspectDOM(i){const e=ro(Vi.value,i);if(e){const[a]=Lu(e);a&&(Es.__VUE_DEVTOOLS_INSPECT_DOM_TARGET__=a)}},updatePluginSettings(i,e,a){HC(i,e,a)},getPluginSettings(i){return{options:zC(i),values:L3(i)}}}}os();var L2,N2;(N2=(L2=Es).__VUE_DEVTOOLS_ENV__)!=null||(L2.__VUE_DEVTOOLS_ENV__={vitePluginDetected:!1});var M2=PC(),V2,$2;($2=(V2=Es).__VUE_DEVTOOLS_KIT_CONTEXT__)!=null||(V2.__VUE_DEVTOOLS_KIT_CONTEXT__={hooks:M2,get state(){return{...yi,activeAppRecordId:Vi.id,activeAppRecord:Vi.value,appRecords:up.value}},api:a_(M2)});var Tt=Es.__VUE_DEVTOOLS_KIT_CONTEXT__;os();aC(tC());var z2,q2;(q2=(z2=Es).__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__)!=null||(z2.__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__={id:0,appIds:new Set});os();function n_(s){yi.highPerfModeEnabled=s??!yi.highPerfModeEnabled,!s&&Vi.value&&M3(Vi.value.app)}os();os();os();function t_(s){yi.devtoolsClientDetected={...yi.devtoolsClientDetected,...s};const i=Object.values(yi.devtoolsClientDetected).some(Boolean);n_(!i)}var H2,j2;(j2=(H2=Es).__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__)!=null||(H2.__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__=t_);os();os();os();os();os();os();os();var l_=class{constructor(){this.keyToValue=new Map,this.valueToKey=new Map}set(s,i){this.keyToValue.set(s,i),this.valueToKey.set(i,s)}getByKey(s){return this.keyToValue.get(s)}getByValue(s){return this.valueToKey.get(s)}clear(){this.keyToValue.clear(),this.valueToKey.clear()}},V3=class{constructor(s){this.generateIdentifier=s,this.kv=new l_}register(s,i){this.kv.getByValue(s)||(i||(i=this.generateIdentifier(s)),this.kv.set(i,s))}clear(){this.kv.clear()}getIdentifier(s){return this.kv.getByValue(s)}getValue(s){return this.kv.getByKey(s)}},r_=class extends V3{constructor(){super(s=>s.name),this.classToAllowedProps=new Map}register(s,i){typeof i=="object"?(i.allowProps&&this.classToAllowedProps.set(s,i.allowProps),super.register(s,i.identifier)):super.register(s,i)}getAllowedProps(s){return this.classToAllowedProps.get(s)}};os();os();function h_(s){if("values"in Object)return Object.values(s);const i=[];for(const e in s)s.hasOwnProperty(e)&&i.push(s[e]);return i}function p_(s,i){const e=h_(s);if("find"in e)return e.find(i);const a=e;for(let n=0;n<a.length;n++){const t=a[n];if(i(t))return t}}function gt(s,i){Object.entries(s).forEach(([e,a])=>i(a,e))}function lh(s,i){return s.indexOf(i)!==-1}function U2(s,i){for(let e=0;e<s.length;e++){const a=s[e];if(i(a))return a}}var k_=class{constructor(){this.transfomers={}}register(s){this.transfomers[s.name]=s}findApplicable(s){return p_(this.transfomers,i=>i.isApplicable(s))}findByName(s){return this.transfomers[s]}};os();os();var d_=s=>Object.prototype.toString.call(s).slice(8,-1),$3=s=>typeof s>"u",o_=s=>s===null,_l=s=>typeof s!="object"||s===null||s===Object.prototype?!1:Object.getPrototypeOf(s)===null?!0:Object.getPrototypeOf(s)===Object.prototype,oo=s=>_l(s)&&Object.keys(s).length===0,Ja=s=>Array.isArray(s),u_=s=>typeof s=="string",c_=s=>typeof s=="number"&&!isNaN(s),g_=s=>typeof s=="boolean",B_=s=>s instanceof RegExp,Dl=s=>s instanceof Map,wl=s=>s instanceof Set,z3=s=>d_(s)==="Symbol",A_=s=>s instanceof Date&&!isNaN(s.valueOf()),y_=s=>s instanceof Error,G2=s=>typeof s=="number"&&isNaN(s),f_=s=>g_(s)||o_(s)||$3(s)||c_(s)||u_(s)||z3(s),m_=s=>typeof s=="bigint",v_=s=>s===1/0||s===-1/0,F_=s=>ArrayBuffer.isView(s)&&!(s instanceof DataView),E_=s=>s instanceof URL;os();var q3=s=>s.replace(/\./g,"\\."),Bk=s=>s.map(String).map(q3).join("."),dl=s=>{const i=[];let e="";for(let n=0;n<s.length;n++){let t=s.charAt(n);if(t==="\\"&&s.charAt(n+1)==="."){e+=".",n++;continue}if(t==="."){i.push(e),e="";continue}e+=t}const a=e;return i.push(a),i};os();function Oe(s,i,e,a){return{isApplicable:s,annotation:i,transform:e,untransform:a}}var H3=[Oe($3,"undefined",()=>null,()=>{}),Oe(m_,"bigint",s=>s.toString(),s=>typeof BigInt<"u"?BigInt(s):(console.error("Please add a BigInt polyfill."),s)),Oe(A_,"Date",s=>s.toISOString(),s=>new Date(s)),Oe(y_,"Error",(s,i)=>{const e={name:s.name,message:s.message};return i.allowedErrorProps.forEach(a=>{e[a]=s[a]}),e},(s,i)=>{const e=new Error(s.message);return e.name=s.name,e.stack=s.stack,i.allowedErrorProps.forEach(a=>{e[a]=s[a]}),e}),Oe(B_,"regexp",s=>""+s,s=>{const i=s.slice(1,s.lastIndexOf("/")),e=s.slice(s.lastIndexOf("/")+1);return new RegExp(i,e)}),Oe(wl,"set",s=>[...s.values()],s=>new Set(s)),Oe(Dl,"map",s=>[...s.entries()],s=>new Map(s)),Oe(s=>G2(s)||v_(s),"number",s=>G2(s)?"NaN":s>0?"Infinity":"-Infinity",Number),Oe(s=>s===0&&1/s===-1/0,"number",()=>"-0",Number),Oe(E_,"URL",s=>s.toString(),s=>new URL(s))];function cp(s,i,e,a){return{isApplicable:s,annotation:i,transform:e,untransform:a}}var j3=cp((s,i)=>z3(s)?!!i.symbolRegistry.getIdentifier(s):!1,(s,i)=>["symbol",i.symbolRegistry.getIdentifier(s)],s=>s.description,(s,i,e)=>{const a=e.symbolRegistry.getValue(i[1]);if(!a)throw new Error("Trying to deserialize unknown symbol");return a}),b_=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,Uint8ClampedArray].reduce((s,i)=>(s[i.name]=i,s),{}),U3=cp(F_,s=>["typed-array",s.constructor.name],s=>[...s],(s,i)=>{const e=b_[i[1]];if(!e)throw new Error("Trying to deserialize unknown typed array");return new e(s)});function G3(s,i){return s!=null&&s.constructor?!!i.classRegistry.getIdentifier(s.constructor):!1}var W3=cp(G3,(s,i)=>["class",i.classRegistry.getIdentifier(s.constructor)],(s,i)=>{const e=i.classRegistry.getAllowedProps(s.constructor);if(!e)return{...s};const a={};return e.forEach(n=>{a[n]=s[n]}),a},(s,i,e)=>{const a=e.classRegistry.getValue(i[1]);if(!a)throw new Error(`Trying to deserialize unknown class '${i[1]}' - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564`);return Object.assign(Object.create(a.prototype),s)}),K3=cp((s,i)=>!!i.customTransformerRegistry.findApplicable(s),(s,i)=>["custom",i.customTransformerRegistry.findApplicable(s).name],(s,i)=>i.customTransformerRegistry.findApplicable(s).serialize(s),(s,i,e)=>{const a=e.customTransformerRegistry.findByName(i[1]);if(!a)throw new Error("Trying to deserialize unknown custom value");return a.deserialize(s)}),C_=[W3,j3,K3,U3],W2=(s,i)=>{const e=U2(C_,n=>n.isApplicable(s,i));if(e)return{value:e.transform(s,i),type:e.annotation(s,i)};const a=U2(H3,n=>n.isApplicable(s,i));if(a)return{value:a.transform(s,i),type:a.annotation}},Y3={};H3.forEach(s=>{Y3[s.annotation]=s});var __=(s,i,e)=>{if(Ja(i))switch(i[0]){case"symbol":return j3.untransform(s,i,e);case"class":return W3.untransform(s,i,e);case"custom":return K3.untransform(s,i,e);case"typed-array":return U3.untransform(s,i,e);default:throw new Error("Unknown transformation: "+i)}else{const a=Y3[i];if(!a)throw new Error("Unknown transformation: "+i);return a.untransform(s,e)}};os();var jn=(s,i)=>{if(i>s.size)throw new Error("index out of bounds");const e=s.keys();for(;i>0;)e.next(),i--;return e.next().value};function X3(s){if(lh(s,"__proto__"))throw new Error("__proto__ is not allowed as a property");if(lh(s,"prototype"))throw new Error("prototype is not allowed as a property");if(lh(s,"constructor"))throw new Error("constructor is not allowed as a property")}var D_=(s,i)=>{X3(i);for(let e=0;e<i.length;e++){const a=i[e];if(wl(s))s=jn(s,+a);else if(Dl(s)){const n=+a,t=+i[++e]==0?"key":"value",l=jn(s,n);switch(t){case"key":s=l;break;case"value":s=s.get(l);break}}else s=s[a]}return s},uo=(s,i,e)=>{if(X3(i),i.length===0)return e(s);let a=s;for(let t=0;t<i.length-1;t++){const l=i[t];if(Ja(a)){const r=+l;a=a[r]}else if(_l(a))a=a[l];else if(wl(a)){const r=+l;a=jn(a,r)}else if(Dl(a)){if(t===i.length-2)break;const h=+l,p=+i[++t]==0?"key":"value",k=jn(a,h);switch(p){case"key":a=k;break;case"value":a=a.get(k);break}}}const n=i[i.length-1];if(Ja(a)?a[+n]=e(a[+n]):_l(a)&&(a[n]=e(a[n])),wl(a)){const t=jn(a,+n),l=e(t);t!==l&&(a.delete(t),a.add(l))}if(Dl(a)){const t=+i[i.length-2],l=jn(a,t);switch(+n==0?"key":"value"){case"key":{const h=e(l);a.set(h,a.get(l)),h!==l&&a.delete(l);break}case"value":{a.set(l,e(a.get(l)));break}}}return s};function co(s,i,e=[]){if(!s)return;if(!Ja(s)){gt(s,(t,l)=>co(t,i,[...e,...dl(l)]));return}const[a,n]=s;n&&gt(n,(t,l)=>{co(t,i,[...e,...dl(l)])}),i(a,e)}function w_(s,i,e){return co(i,(a,n)=>{s=uo(s,n,t=>__(t,a,e))}),s}function x_(s,i){function e(a,n){const t=D_(s,dl(n));a.map(dl).forEach(l=>{s=uo(s,l,()=>t)})}if(Ja(i)){const[a,n]=i;a.forEach(t=>{s=uo(s,dl(t),()=>s)}),n&&gt(n,e)}else gt(i,e);return s}var T_=(s,i)=>_l(s)||Ja(s)||Dl(s)||wl(s)||G3(s,i);function S_(s,i,e){const a=e.get(s);a?a.push(i):e.set(s,[i])}function I_(s,i){const e={};let a;return s.forEach(n=>{if(n.length<=1)return;i||(n=n.map(r=>r.map(String)).sort((r,h)=>r.length-h.length));const[t,...l]=n;t.length===0?a=l.map(Bk):e[Bk(t)]=l.map(Bk)}),a?oo(e)?[a]:[a,e]:oo(e)?void 0:e}var Z3=(s,i,e,a,n=[],t=[],l=new Map)=>{var r;const h=f_(s);if(!h){S_(s,n,i);const c=l.get(s);if(c)return a?{transformedValue:null}:c}if(!T_(s,e)){const c=W2(s,e),A=c?{transformedValue:c.value,annotations:[c.type]}:{transformedValue:s};return h||l.set(s,A),A}if(lh(t,s))return{transformedValue:null};const p=W2(s,e),k=(r=p==null?void 0:p.value)!=null?r:s,d=Ja(k)?[]:{},o={};gt(k,(c,A)=>{if(A==="__proto__"||A==="constructor"||A==="prototype")throw new Error(`Detected property ${A}. This is a prototype pollution risk, please remove it from your object.`);const g=Z3(c,i,e,a,[...n,A],[...t,s],l);d[A]=g.transformedValue,Ja(g.annotations)?o[A]=g.annotations:_l(g.annotations)&&gt(g.annotations,(f,m)=>{o[q3(A)+"."+m]=f})});const u=oo(o)?{transformedValue:d,annotations:p?[p.type]:void 0}:{transformedValue:d,annotations:p?[p.type,o]:o};return h||l.set(s,u),u};os();os();function J3(s){return Object.prototype.toString.call(s).slice(8,-1)}function K2(s){return J3(s)==="Array"}function R_(s){if(J3(s)!=="Object")return!1;const i=Object.getPrototypeOf(s);return!!i&&i.constructor===Object&&i===Object.prototype}function O_(s,i,e,a,n){const t={}.propertyIsEnumerable.call(a,i)?"enumerable":"nonenumerable";t==="enumerable"&&(s[i]=e),n&&t==="nonenumerable"&&Object.defineProperty(s,i,{value:e,enumerable:!1,writable:!0,configurable:!0})}function go(s,i={}){if(K2(s))return s.map(n=>go(n,i));if(!R_(s))return s;const e=Object.getOwnPropertyNames(s),a=Object.getOwnPropertySymbols(s);return[...e,...a].reduce((n,t)=>{if(K2(i.props)&&!i.props.includes(t))return n;const l=s[t],r=go(l,i);return O_(n,t,r,s,i.nonenumerable),n},{})}var ii=class{constructor({dedupe:s=!1}={}){this.classRegistry=new r_,this.symbolRegistry=new V3(i=>{var e;return(e=i.description)!=null?e:""}),this.customTransformerRegistry=new k_,this.allowedErrorProps=[],this.dedupe=s}serialize(s){const i=new Map,e=Z3(s,i,this,this.dedupe),a={json:e.transformedValue};e.annotations&&(a.meta={...a.meta,values:e.annotations});const n=I_(i,this.dedupe);return n&&(a.meta={...a.meta,referentialEqualities:n}),a}deserialize(s){const{json:i,meta:e}=s;let a=go(i);return e!=null&&e.values&&(a=w_(a,e.values,this)),e!=null&&e.referentialEqualities&&(a=x_(a,e.referentialEqualities)),a}stringify(s){return JSON.stringify(this.serialize(s))}parse(s){return this.deserialize(JSON.parse(s))}registerClass(s,i){this.classRegistry.register(s,i)}registerSymbol(s,i){this.symbolRegistry.register(s,i)}registerCustom(s,i){this.customTransformerRegistry.register({name:i,...s})}allowErrorProps(...s){this.allowedErrorProps.push(...s)}};ii.defaultInstance=new ii;ii.serialize=ii.defaultInstance.serialize.bind(ii.defaultInstance);ii.deserialize=ii.defaultInstance.deserialize.bind(ii.defaultInstance);ii.stringify=ii.defaultInstance.stringify.bind(ii.defaultInstance);ii.parse=ii.defaultInstance.parse.bind(ii.defaultInstance);ii.registerClass=ii.defaultInstance.registerClass.bind(ii.defaultInstance);ii.registerSymbol=ii.defaultInstance.registerSymbol.bind(ii.defaultInstance);ii.registerCustom=ii.defaultInstance.registerCustom.bind(ii.defaultInstance);ii.allowErrorProps=ii.defaultInstance.allowErrorProps.bind(ii.defaultInstance);os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();os();var Y2,X2;(X2=(Y2=Es).__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__)!=null||(Y2.__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__=[]);var Z2,J2;(J2=(Z2=Es).__VUE_DEVTOOLS_KIT_RPC_CLIENT__)!=null||(Z2.__VUE_DEVTOOLS_KIT_RPC_CLIENT__=null);var Q2,s0;(s0=(Q2=Es).__VUE_DEVTOOLS_KIT_RPC_SERVER__)!=null||(Q2.__VUE_DEVTOOLS_KIT_RPC_SERVER__=null);var i0,e0;(e0=(i0=Es).__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__)!=null||(i0.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__=null);var a0,n0;(n0=(a0=Es).__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__)!=null||(a0.__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__=null);var t0,l0;(l0=(t0=Es).__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__)!=null||(t0.__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__=null);os();os();os();os();os();os();os();const P_="org.vuejs.vuepress.plugin-theme-data",L_="VuePress Theme Data",r0="THEME_DATA",h0="Theme Data",N_=(s,i,e)=>{JC({app:s,id:P_,label:L_,packageName:"@vuepress/plugin-theme-data",homepage:"https://vuepress.vuejs.org",logo:"https://vuepress.vuejs.org/images/hero.png",componentStateTypes:[Ia.COMPONENT_STATE_TYPE]},a=>{a.on.inspectComponent(n=>{n.instanceData.state.push({type:"VuePress",key:"themeData",editable:!1,value:i.value},{type:"VuePress",key:"themeLocaleData",editable:!1,value:e.value})}),a.addInspector({id:Ia.INSPECTOR_ID,label:Ia.INSPECTOR_LABEL,icon:"article"}),a.on.getInspectorTree(n=>{n.inspectorId===Ia.INSPECTOR_ID&&n.rootNodes.push({id:r0,label:h0,children:[{id:"themeData",label:"themeData"},{id:"themeLocaleData",label:"themeLocaleData"}]})}),a.on.getInspectorState(n=>{n.inspectorId===Ia.INSPECTOR_ID&&(n.nodeId===r0&&n.state[h0].push({key:"themeData",value:i.value},{key:"themeLocaleData",value:e.value}),["themeData","themeLocaleData"].includes(n.nodeId)&&(n.state={[Ia.INSPECTOR_STATE_SECTION_NAME]:[{key:n.nodeId,value:n.nodeId==="themeData"?i.value:e.value}]}))}),bs([i,e],()=>{a.notifyComponentUpdate(),a.sendInspectorState(Ia.INSPECTOR_ID)})})},M_=JSON.parse('{"encrypt":{},"author":{"name":"LincDocs","url":"https://github.com/LincDocs/rust-course/"},"repo":"LincDocs/rust-course","logo":"/logo.svg","docsDir":"src","locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":[{"text":"/","link":"/"}],"sidebar":{"/":"structure"}}},"displayFooter":true,"copyright":false,"footer":"Powered by <a href=\\"https://github.com/LincDocs/Workflow\\">LincZero.github.io Workflow</a>","toc":true,"headerDepth":6,"navbarLayout":{"start":["Brand"],"center":[],"end":["Links","Language","Repo","Outlook","Search","ReadEnhance"]}}'),V_=Q(M_),Q3=()=>V_,s8=Symbol(""),$_=()=>{const s=Ns(s8);if(!s)throw new Error("useThemeLocaleData() is called without provider.");return s},z_=(s,i)=>{const{locales:e,...a}=s;return{...a,...e==null?void 0:e[i]}},q_=Ti({enhance({app:s}){const i=Q3(),e=s._context.provides[bu],a=V(()=>z_(i.value,e.routeLocale.value));s.provide(s8,a),Object.defineProperties(s.config.globalProperties,{$theme:{get(){return i.value}},$themeLocale:{get(){return a.value}}}),N_(s,i,a)}}),H_=Object.freeze(Object.defineProperty({__proto__:null,default:q_},Symbol.toStringTag,{value:"Module"}));var j_={"/":{backToTop:"返回顶部"}};const U_=ts({name:"BackToTop",setup(){const s=js(),i=Ke(j_),e=Ts(),{height:a}=Z5(e),{height:n}=t7(),{y:t}=n7(),l=V(()=>s.value.backToTop!==!1&&t.value>100),r=V(()=>t.value/(a.value-n.value)*100);return ws(()=>{e.value=document.body}),()=>B(wn,{name:"back-to-top"},()=>l.value?B("button",{type:"button",class:"vp-back-to-top-button","aria-label":i.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[B("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":r.value},B("svg",B("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*r.value*.48} ${Math.PI*(100-r.value)*.48}`}))),B("div",{class:"back-to-top-icon"})]):null)}}),G_=Ti({rootComponents:[U_]}),W_=Object.freeze(Object.defineProperty({__proto__:null,default:G_},Symbol.toStringTag,{value:"Module"})),K_=/language-(shellscript|shell|bash|sh|zsh)/,Y_=({duration:s=2e3,locales:i,selector:e,showInMobile:a,ignoreSelector:n=[],transform:t})=>{const l=xu("(max-width: 419px)"),r=V(()=>!l.value||a),h=Ke(i),p=c=>{var g;if(c.hasAttribute("copy-code"))return;const A=document.createElement("button");A.type="button",A.classList.add("vp-copy-code-button"),A.setAttribute("aria-label",h.value.copy),A.setAttribute("data-copied",h.value.copied),(g=c.parentElement)==null||g.insertBefore(A,c),c.setAttribute("copy-code","")},k=()=>{document.body.classList.toggle("no-copy-code",!r.value),r.value&&document.querySelectorAll(e.join(",")).forEach(p)};te(r,k,{flush:"post"}),Ca(c=>{c!=="beforeUnmount"&&k()});const{copy:d}=q5({legacy:!0}),o=new WeakMap,u=async(c,A,g)=>{const f=A.cloneNode(!0);n.length&&f.querySelectorAll(n.join(",")).forEach(v=>{v.remove()}),t&&t(f);let m=f.textContent||"";if(K_.test(c.className)&&(m=m.replace(/^ *(\$|>) /gm,"")),await d(m),s<=0)return;g.classList.add("copied"),clearTimeout(o.get(g));const y=setTimeout(()=>{g.classList.remove("copied"),g.blur(),o.delete(g)},s);o.set(g,y)};Is("click",c=>{const A=c.target;if(r.value&&A.matches('div[class*="language-"] > button.vp-copy-code-button')){const g=A.parentElement,f=A.nextElementSibling;if(!g||!f)return;u(g,f,A)}})};var X_=[],Z_={"/":{copy:"复制代码",copied:"已复制"}},J_=['[vp-content] div[class*="language-"] pre'];const Q_=Ti({setup:()=>{Y_({selector:J_,ignoreSelector:X_,locales:Z_,duration:2e3,showInMobile:!1})}}),s9=Object.freeze(Object.defineProperty({__proto__:null,default:Q_},Symbol.toStringTag,{value:"Module"})),i9=ts({name:"VPIcon",props:{type:{type:String,default:"unknown"},prefix:String,icon:String,color:String,size:[String,Number],verticalAlign:String,sizing:{type:String,default:"height"}},setup(s){const i=V(()=>s.icon?nn(s.icon)?s.icon:dp(s.icon)?Gs(s.icon):null:null),e=V(()=>{const n={},t={},{type:l,verticalAlign:r,size:h,sizing:p}=s;return s.color&&(t.color=s.color),h&&(t["--icon-size"]=Number.isNaN(Number(h))?h:`${h}px`),r&&(t["--icon-vertical-align"]=r),l==="iconify"&&(p!=="height"&&(n.width=s.size||"1em"),p!=="width"&&(n.height=s.size||"1em")),s.sizing&&(n.sizing=s.sizing),Ue(t).length&&(n.style=t),n}),a=n=>n.includes("fa-")||/^fa.$/.test(n)?n:`fa-${n}`;return()=>{const{type:n,icon:t,prefix:l="",sizing:r}=s;if(!t)return null;if(i.value)return B("img",{class:"vp-icon",src:i.value,alt:"","aria-hidden":"","no-view":"",...e.value});if(n==="iconify")return B("iconify-icon",{key:t,class:"vp-icon",icon:t.includes(":")?t:`${l}${t}`,...e.value});if(n==="fontawesome"){const[h,p]=t.includes(":")?t.split(":",2):["fas",t];return B("i",{key:t,class:["vp-icon",h.length===1?`fa${h}`:a(h),...p.split(" ").map(a),r==="height"?"":"fa-fw"],...e.value})}return B("i",{key:t,class:["vp-icon",t.includes(" ")?t:`${l}${t}`],...e.value})}}}),e9={enhance:({app:s})=>{Ce("VPIcon")||s.component("VPIcon",i=>B(i9,{type:"iconify",prefix:"fa6-solid:",...i}))},setup:()=>{i7("https://cdn.jsdelivr.net/npm/iconify-icon@2")}},a9=Object.freeze(Object.defineProperty({__proto__:null,default:e9},Symbol.toStringTag,{value:"Module"})),n9=Q({}),i8=Symbol(""),t9=()=>Ns(i8),l9=s=>{s.provide(i8,n9)},e8=s=>new Promise((i,e)=>{s.complete?i({type:"image",element:s,src:s.src,width:s.naturalWidth,height:s.naturalHeight,alt:s.alt,msrc:s.src}):(s.onload=()=>{i(e8(s))},s.onerror=()=>{e()})}),r9='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',h9=(s,{download:i=!0,fullscreen:e=!0}={})=>{s.on("uiRegister",()=>{if(s.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:a=>{const n=[];let t=-1;for(let l=0;l<s.getNumItems();l++){const r=document.createElement("div");r.className="photo-swipe-bullet",r.onclick=h=>{s.goTo(n.indexOf(h.target))},n.push(r),a.appendChild(r)}s.on("change",()=>{t>=0&&n[t].classList.remove("active"),n[s.currIndex].classList.add("active"),t=s.currIndex})}}),e){const{isSupported:a,toggle:n}=hp();a.value&&s.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{n()}})}i&&s.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:a=>{a.setAttribute("download",""),a.setAttribute("target","_blank"),a.setAttribute("rel","noopener"),s.on("change",()=>{a.setAttribute("href",s.currSlide.data.src)})}})})},p9=({selector:s,locales:i,download:e=!0,fullscreen:a=!0,scrollToClose:n=!0})=>{const t=t9(),l=Ke(i),r=js(),h=V(()=>{const{photoSwipe:c}=r.value;return c===!1?null:li(c)?c:Dh(s)?s.join(", "):s}),p=V(()=>({...t.value,...l.value,download:e,fullscreen:a,scrollToClose:n}));let k=null,d=0,o=null;const u=async c=>{const A=c.target;if(!h.value||!k||!A.matches(h.value))return;d!==0&&o.destroy();const g=Date.now(),f=await k,m=Array.from(document.querySelectorAll(h.value)),y=m.map(_=>({html:r9,element:_,msrc:_.src})),v=m.findIndex(_=>_===A);o=new f({preloaderDelay:0,showHideAnimationType:"zoom",...p,dataSource:y,index:v,...n?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),d=g,h9(o,{download:e,fullscreen:a}),o.init(),o.on("destroy",()=>{o=null,d=0}),m.map((_,S)=>e8(_).then(N=>{d===g&&(y.splice(S,1,N),o==null||o.refreshSlideContent(S))}))};ws(()=>{const c="requestIdleCallback"in window?window.requestIdleCallback:setTimeout;Is("click",u),Is("wheel",()=>{p.value.scrollToClose&&(o==null||o.close())}),c(()=>{k=F(async()=>{const{default:A}=await import("./photoswipe.esm-DXWKOczD.js");return{default:A}},[]).then(({default:A})=>A)})}),_i(()=>{o==null||o.destroy()})};var k9={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const d9="[vp-content] :not(a) > img:not([no-view])",o9=k9,u9=!0,c9=!0,g9=!0;var B9=Ti({enhance:({app:s})=>{l9(s)},setup:()=>{p9({selector:d9,locales:o9,download:u9,fullscreen:c9,scrollToClose:g9})}});const A9=Object.freeze(Object.defineProperty({__proto__:null,default:B9},Symbol.toStringTag,{value:"Module"})),Ys=({name:s="",color:i="currentColor",ariaLabel:e},{attrs:a,slots:n})=>B("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:i,"aria-label":e??`${s} icon`,...a},n.default());Ys.displayName="IconBase";const ju=(s,{slots:i})=>i.default(),a8=()=>B(Ys,{name:"enter-fullscreen"},()=>B("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));a8.displayName="EnterFullScreenIcon";const n8=()=>B(Ys,{name:"cancel-fullscreen"},()=>B("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));n8.displayName="CancelFullScreenIcon";const y9=s=>nn(s)?s:`https://github.com/${s}`,Uu=(s="")=>!nn(s)||s.includes("github.com")?"GitHub":s.includes("bitbucket.org")?"Bitbucket":s.includes("gitlab.com")?"GitLab":s.includes("gitee.com")?"Gitee":null,t8=()=>B(Ys,{name:"github"},()=>B("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));t8.displayName="GitHubIcon";const l8=()=>B(Ys,{name:"gitee"},()=>B("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));l8.displayName="GiteeIcon";const r8=()=>B(Ys,{name:"bitbucket"},()=>B("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));r8.displayName="BitbucketIcon";const h8=()=>B(Ys,{name:"source"},()=>B("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));h8.displayName="SourceIcon";const f9=({link:s,type:i=Uu(s??"")})=>{if(!i)return null;const e=i.toLowerCase();return B(e==="bitbucket"?r8:e==="github"?t8:e==="gitlab"?"GitLab":e==="gitee"?l8:h8)},m9=(s,i=0)=>{let e=3735928559^i,a=1103547991^i;for(let n=0,t;n<s.length;n++)t=s.charCodeAt(n),e=Math.imul(e^t,2654435761),a=Math.imul(a^t,1597334677);return e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(a^a>>>13,3266489909),a=Math.imul(a^a>>>16,2246822507),a^=Math.imul(e^e>>>13,3266489909),4294967296*(2097151&a)+(e>>>0)},kr=(s,i)=>m9(s)%i;class v9{constructor(){hi(this,"containerElement");hi(this,"messageElements",{});const i="message-container",e=document.getElementById(i);e?this.containerElement=e:(this.containerElement=document.createElement("div"),this.containerElement.id=i,document.body.appendChild(this.containerElement))}pop(i,e=2e3){const a=document.createElement("div"),n=Date.now();return a.className="message move-in",a.innerHTML=i,this.containerElement.appendChild(a),this.messageElements[n]=a,e>0&&setTimeout(()=>{this.close(n)},e),n}close(i){if(i){const e=this.messageElements[i];e.classList.remove("move-in"),e.classList.add("move-out"),e.addEventListener("animationend",()=>{e.remove(),delete this.messageElements[i]})}else Ue(this.messageElements).forEach(e=>{this.close(Number(e))})}destroy(){document.body.removeChild(this.containerElement)}}const p8=/#.*$/u,F9=s=>{const i=p8.exec(s);return i?i[0]:""},p0=s=>decodeURI(s).replace(p8,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),k8=(s,i)=>{if(!kp(i))return!1;const e=p0(s.path),a=p0(i),n=F9(i);return n?n===s.hash&&(!a||e===a):e===a};var E9=s=>Object.prototype.toString.call(s)==="[object Object]",xl=s=>typeof s=="string";const{isArray:d8}=Array,k0=s=>E9(s)&&xl(s.name),Tl=(s,i=!1)=>s?d8(s)?s.map(e=>xl(e)?{name:e}:k0(e)?e:null).filter(e=>e!==null):xl(s)?[{name:s}]:k0(s)?[s]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${i?"":"| false"} | undefined\`, but got`,s),[]):[],o8=(s,i)=>{if(s){if(d8(s)&&s.every(xl))return s;if(xl(s))return[s];console.error(`Expect ${i} to be \`string[] | string | undefined\`, but got`,s)}return[]},u8=s=>o8(s,"category"),c8=s=>o8(s,"tag"),d0=s=>li(s)?s:`${s}px`,b9=(s,i=0)=>{const e=Ts(),a=V(()=>d0(ms(s.width)??"100%")),n=Q("auto"),t=h=>{if(li(h)){const[p,k]=h.split(":"),d=Number(p)/Number(k);if(!Number.isNaN(d))return d}return typeof h=="number"?h:16/9},l=h=>{const p=ms(s.height),k=t(ms(s.ratio));return p?d0(p):`${Number(h)/k+ms(i)}px`},r=()=>{e.value&&(n.value=l(e.value.clientWidth))};return ws(()=>{r(),ti(i)&&bs(i,r),Is("orientationchange",r),Is("resize",r)}),{el:e,width:a,height:n,resize:r}},C9=s=>nn(s)?s:Gs(s);var _9={"/":{hint:"<p>此浏览器不支持嵌入式 PDF。请下载 PDF 查看：<a href='[url]' target='_blank'>下载 PDF</a></p>"}};const Ak=s=>{console.error(`[PDF]: ${s}`)},D9=s=>{for(;s.firstChild;)s.removeChild(s.firstChild)},w9=s=>s instanceof HTMLElement?s:s==="string"?document.querySelector(s):document.body,x9=s=>{let i=Pn(s).map(([e,a])=>e==="noToolbar"?`toolbar=${a?"0":"1"}`:`${encodeURIComponent(e)}=${encodeURIComponent(a)}`).join("&");return i&&(i=`#${i.slice(0,i.length-1)}`),i},yk=(s,i,e,a,n)=>{D9(i);const t=`${s==="pdfjs"?`${mu(Gs("https://theme-hope-assets.vuejs.press/pdfjs/"))}web/viewer.html?file=${encodeURIComponent(e)}`:e}${x9(a)}`,l=s==="pdfjs"||s==="iframe"?"iframe":"embed",r=document.createElement(l);return r.className="pdf-viewer",r.type="application/pdf",r.title=n,r.src=t,r instanceof HTMLIFrameElement&&(r.allow="fullscreen"),i.classList.add("pdf-viewer-container"),i.appendChild(r),i.getElementsByTagName(l)[0]},T9=(s,i,{title:e,hint:a,options:n={},force:t})=>{var g,f;if(typeof window>"u"||!((g=window==null?void 0:window.navigator)!=null&&g.userAgent))return null;const{navigator:l}=window,{userAgent:r}=l,h=kp(window.Promise),p=c3(r)||N7(r),k=!p&&M7(r),d=!p&&/firefox/iu.test(r)&&r.split("rv:").length>1?parseInt(r.split("rv:")[1].split(".")[0],10)>18:!1,o=!p&&(h||d),u=w9(i);if(!u)return Ak("Target element cannot be determined"),null;const c=nn(s)?s:`${window.origin}${s}`,A=e??((f=/\/([^/]+).pdf/.exec(s))==null?void 0:f[1])??"PDF Viewer";return t?c?yk("pdfjs",u,s,n,A):(Ak("PDF link is not accessible."),null):o||!p?yk(k?"iframe":"embed",u,s,n,A):c?yk("pdfjs",u,s,n,A):(u.innerHTML=a.replace(/\[url\]/g,s),Ak("This browser does not support embedded PDFs"),null)};var S9=ts({name:"PDF",props:{url:{type:String,required:!0},title:String,width:{type:[String,Number],default:"100%"},height:[String,Number],ratio:{type:[String,Number],default:16/9},page:{type:[String,Number],default:1},noToolbar:Boolean,noFullscreen:Boolean,zoom:[String,Number],viewer:Boolean},setup(s){const{el:i,width:e,height:a,resize:n}=b9(s),t=Ke(_9),l=Ts(),r=Ts(),h=rr(l),p=Q(!1);return bs(p,k=>{h.value=k}),ws(()=>{l.value=document.body,T9(C9(s.url),r.value,{title:s.title,hint:t.value.hint,options:{page:s.page,noToolbar:s.noToolbar,...s.zoom&&s.zoom.toString()!=="100"?{zoom:s.zoom}:{}},force:s.viewer}),n()}),_i(()=>{h.value=!1}),()=>B("div",{class:["pdf-viewer-wrapper",{fullscreen:p.value}],ref:i,style:p.value?{}:{width:e.value,height:a.value}},[B("div",{ref:r}),s.noFullscreen?null:B("button",{class:"pdf-fullscreen-button",onClick:()=>{p.value=!p.value}},B(p.value?n8:a8,{class:"pdf-fullscreen-icon"}))])}});const I9={enhance:({app:s})=>{Ce("PDF")||s.component("PDF",S9)},setup:()=>{},rootComponents:[]},R9=Object.freeze(Object.defineProperty({__proto__:null,default:I9},Symbol.toStringTag,{value:"Module"})),o0=async(s,i)=>{const{path:e,query:a}=s.currentRoute.value,{scrollBehavior:n}=s.options;s.options.scrollBehavior=void 0,await s.replace({path:e,query:a,hash:i}),s.options.scrollBehavior=n},O9=({headerLinkSelector:s,headerAnchorSelector:i,delay:e,offset:a=5})=>{const n=De();Is("scroll",rp(()=>{var c,A;const l=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(l-0)<a){o0(n,"");return}const h=window.innerHeight+l,p=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),k=Math.abs(p-h)<a,d=Array.from(document.querySelectorAll(s)),u=Array.from(document.querySelectorAll(i)).filter(g=>d.some(f=>f.hash===g.hash));for(let g=0;g<u.length;g++){const f=u[g],m=u[g+1],y=l>=(((c=f.parentElement)==null?void 0:c.offsetTop)??0)-a,v=!m||l<(((A=m.parentElement)==null?void 0:A.offsetTop)??0)-a;if(!(y&&v))continue;const S=decodeURIComponent(n.currentRoute.value.hash),N=decodeURIComponent(f.hash);if(S===N)return;if(k){for(let T=g+1;T<u.length;T++)if(S===decodeURIComponent(u[T].hash))return}o0(n,N);return}},e))},P9=".vp-sidebar-link, .vp-toc-link",L9=".header-anchor",N9=200,M9=5,V9=Ti({setup(){O9({headerLinkSelector:P9,headerAnchorSelector:L9,delay:N9,offset:M9})}}),$9=Object.freeze(Object.defineProperty({__proto__:null,default:V9},Symbol.toStringTag,{value:"Module"}));let g8=s=>li(s.title)?{title:s.title}:null;const B8=Symbol(""),z9=s=>{g8=s},q9=()=>Ns(B8),H9=s=>{s.provide(B8,g8)};var j9={"/":{title:"目录",empty:"暂无目录"}},U9=ts({name:"Catalog",props:{base:String,level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(s){const i=q9(),e=Ke(j9),a=Bi(),n=o5(),t=_u(),l=Ts(Pn(n.value).map(([h,{meta:p}])=>{const k=i(p);if(!k)return null;const d=h.split("/").length;return{level:J7(h,"/")?d-2:d-1,base:h.replace(/\/[^/]+\/?$/,"/"),path:h,...k}}).filter(h=>er(h)&&li(h.title))),r=V(()=>{const h=s.base?MF(mu(s.base)):a.value.path.replace(/\/[^/]+$/,"/"),p=h.split("/").length-2,k=[];return l.value.filter(({level:d,path:o})=>{if(!bl(o,h)||o===h)return!1;if(h==="/"){const u=Ue(t.value.locales).filter(c=>c!=="/");if(o==="/404.html"||u.some(c=>bl(o,c)))return!1}return d-p<=s.level}).sort(({title:d,level:o,order:u},{title:c,level:A,order:g})=>o-A||(nh(u)?nh(g)?u>0?g>0?u-g:-1:g<0?u-g:1:u:nh(g)?g:d.localeCompare(c))).forEach(d=>{var c;const{base:o,level:u}=d;switch(u-p){case 1:{k.push(d);break}case 2:{const A=k.find(g=>g.path===o);A&&(A.children??(A.children=[])).push(d);break}default:{const A=k.find(g=>g.path===o.replace(/\/[^/]+\/$/,"/"));if(A){const g=(c=A.children)==null?void 0:c.find(f=>f.path===o);g&&(g.children??(g.children=[])).push(d)}}}}),k});return()=>{const h=r.value.some(p=>p.children);return B("div",{class:["vp-catalog",{index:s.index}]},[s.hideHeading?null:B("h2",{class:"vp-catalog-main-title"},e.value.title),r.value.length?B(s.index?"ol":"ul",{class:["vp-catalog-list",{deep:h}]},r.value.map(({children:p=[],title:k,path:d,content:o})=>{const u=B(mi,{class:"vp-catalog-title",to:d},()=>o?B(o):k);return B("li",{class:"vp-catalog-item"},h?[B("h3",{id:k,class:["vp-catalog-child-title",{"has-children":p.length}]},[B("a",{href:`#${k}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),u]),p.length?B(s.index?"ol":"ul",{class:"vp-child-catalogs"},p.map(({children:c=[],content:A,path:g,title:f})=>B("li",{class:"vp-child-catalog"},[B("div",{class:["vp-catalog-sub-title",{"has-children":c.length}]},[B("a",{href:`#${f}`,class:"vp-catalog-header-anchor"},"#"),B(mi,{class:"vp-catalog-title",to:g},()=>A?B(A):f)]),c.length?B(s.index?"ol":"div",{class:s.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},c.map(({content:m,path:y,title:v})=>s.index?B("li",{class:"vp-sub-catalog"},B(mi,{to:y},()=>m?B(m):v)):B(mi,{class:"vp-sub-catalog-link",to:y},()=>m?B(m):v))):null]))):null]:B("div",{class:"vp-catalog-child-title"},u))})):B("p",{class:"vp-empty-catalog"},e.value.empty)])}}}),G9=Ti({enhance:({app:s})=>{H9(s),Ce("Catalog",s)||s.component("Catalog",U9)}});const W9=Object.freeze(Object.defineProperty({__proto__:null,default:G9},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const u0=(s,i)=>{s.classList.add(i)},c0=(s,i)=>{s.classList.remove(i)},K9=s=>{var i;(i=s==null?void 0:s.parentNode)==null||i.removeChild(s)},fk=(s,i,e)=>s<i?i:s>e?e:s,g0=s=>(-1+s)*100,Y9=(()=>{const s=[],i=()=>{const e=s.shift();e&&e(i)};return e=>{s.push(e),s.length===1&&i()}})(),X9=s=>s.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(i,e)=>e.toUpperCase()),Mr=(()=>{const s=["Webkit","O","Moz","ms"],i={},e=t=>{const{style:l}=document.body;if(t in l)return t;const r=t.charAt(0).toUpperCase()+t.slice(1);let h=s.length;for(;h--;){const p=`${s[h]}${r}`;if(p in l)return p}return t},a=t=>{const l=X9(t);return i[l]??(i[l]=e(l))},n=(t,l,r)=>{t.style[a(l)]=r};return(t,l)=>{for(const r in l){const h=l[r];Object.hasOwn(l,r)&&kp(h)&&n(t,r,h)}}})(),ea={minimum:.08,easing:"ease",speed:200,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},pi={percent:null,isRendered:()=>!!document.getElementById("nprogress"),set:s=>{const{speed:i,easing:e}=ea,a=pi.isStarted(),n=fk(s,ea.minimum,1);pi.percent=n===1?null:n;const t=pi.render(!a),l=t.querySelector(ea.barSelector);return t.offsetWidth,Y9(r=>{Mr(l,{transform:`translate3d(${g0(n)}%,0,0)`,transition:`all ${i}ms ${e}`}),n===1?(Mr(t,{transition:"none",opacity:"1"}),t.offsetWidth,setTimeout(()=>{Mr(t,{transition:`all ${i}ms linear`,opacity:"0"}),setTimeout(()=>{pi.remove(),r()},i)},i)):setTimeout(()=>{r()},i)}),pi},isStarted:()=>typeof pi.percent=="number",start:()=>{pi.percent||pi.set(0);const s=()=>{setTimeout(()=>{pi.percent&&(pi.trickle(),s())},ea.trickleSpeed)};return s(),pi},done:s=>!s&&!pi.percent?pi:pi.increase(.3+.5*Math.random()).set(1),increase:s=>{let{percent:i}=pi;return i?(i=fk(i+(typeof s=="number"?s:(1-i)*fk(Math.random()*i,.1,.95)),0,.994),pi.set(i)):pi.start()},trickle:()=>pi.increase(Math.random()*ea.trickleRate),render:s=>{if(pi.isRendered())return document.getElementById("nprogress");u0(document.documentElement,"nprogress-busy");const i=document.createElement("div");i.id="nprogress",i.innerHTML=ea.template;const e=i.querySelector(ea.barSelector),a=document.querySelector(ea.parent),n=s?"-100":g0(pi.percent??0);return Mr(e,{transition:"all 0 linear",transform:`translate3d(${n}%,0,0)`}),a&&(a!==document.body&&u0(a,"nprogress-custom-parent"),a.appendChild(i)),i},remove:()=>{c0(document.documentElement,"nprogress-busy"),c0(document.querySelector(ea.parent),"nprogress-custom-parent"),K9(document.getElementById("nprogress"))}},Z9=()=>{ws(()=>{const s=De(),i=new Set;i.add(s.currentRoute.value.path),s.beforeEach(e=>{i.has(e.path)||pi.start()}),s.afterEach(e=>{i.add(e.path),pi.done()})})},J9=Ti({setup(){Z9()}}),Q9=Object.freeze(Object.defineProperty({__proto__:null,default:J9},Symbol.toStringTag,{value:"Module"}));var sD={0:{"/":{0:"分",1:"类",2:":",3:" ",4:"$",5:"c",6:"o",7:"n",8:"t",9:"e",10:"n",11:"t"}},1:{"/":{0:"标",1:"签",2:":",3:" ",4:"$",5:"c",6:"o",7:"n",8:"t",9:"e",10:"n",11:"t"}}},iD={"/":{cancel:"取消",placeholder:"搜索",search:"搜索",searching:"搜索中",defaultTitle:"文档",select:"选择",navigate:"切换",autocomplete:"自动补全",exit:"关闭",queryHistory:"搜索历史",resultHistory:"历史结果",emptyHistory:"无搜索历史",emptyResult:"没有找到结果",loading:"正在加载搜索索引..."}},eD={searchDelay:150,suggestDelay:0,queryHistoryCount:5,resultHistoryCount:5,hotKeys:[{key:"k",ctrl:!0},{key:"/",ctrl:!0}],worker:"slimsearch.worker.js"};const cW=sD,Sl=eD,gp=iD,mk="Canceled because of new search request.",aD=()=>{const s=new Worker(`/rust-course/${Sl.worker}`,{}),i={suggest:null,search:null,all:null};return s.addEventListener("message",({data:e})=>{const[a,n,t]=e,l=i[a];(l==null?void 0:l.id)===n&&l.resolve(t)}),s.addEventListener("error",e=>{console.warn("Search Worker error:",e)}),{suggest:(e,a,n)=>new Promise((t,l)=>{var h;(h=i.suggest)==null||h.reject(new Error(mk));const r=Date.now();s.postMessage({type:"suggest",id:r,query:e,locale:a,options:n}),i.suggest={id:r,resolve:t,reject:l}}),search:(e,a,n)=>new Promise((t,l)=>{var h;(h=i.search)==null||h.reject(new Error(mk));const r=Date.now();s.postMessage({type:"search",id:r,query:e,locale:a,options:n}),i.search={id:r,resolve:t,reject:l}}),all:(e,a,n)=>new Promise((t,l)=>{var h;(h=i.all)==null||h.reject(new Error(mk));const r=Date.now();s.postMessage({type:"all",id:r,query:e,locale:a,options:n}),i.all={id:r,resolve:t,reject:l}}),terminate:()=>{s.terminate(),Q7(i).forEach(e=>{e==null||e.reject(new Error("Worker has been terminated."))})}}},nD=/[\u4e00-\u9fff\u3400-\u4dbf\u3040-\u309f\u30a0-\u30ff\uac00-\ud7af]/,tD=s=>s.split(/\s+/).map(i=>{if(i.length>3){const e=i.split("");if(e.every(a=>nD.test(a)))return e}return i}).flat(),lD=Q({querySplitter:s=>Promise.resolve(tD(s))}),A8=Symbol(""),y8=()=>{const s=Be(),i=Ns(A8);return V(()=>{const{locales:e={},...a}=i.value;return{...a,...e[s.value]}})},rD=s=>{s.provide(A8,Ge(lD))},hD='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg>',f8=({class:s,hint:i})=>B("div",{class:[s,"loading"]},[B("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[B("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},B("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),B("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},B("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),B("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},B("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]),i]);f8.displayName="SearchLoading";const St=({name:s="",color:i="currentColor"},{slots:e})=>B("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:i,"aria-label":`${s} icon`},e.default());St.displayName="SVGWrapper";const pD=()=>B(St,{name:"heading"},()=>B("path",{d:"M250.4 704.6H64V595.4h202.4l26.2-166.6H94V319.6h214.4L352 64h127.8l-43.6 255.4h211.2L691 64h126.2l-43.6 255.4H960v109.2H756.2l-24.6 166.6H930v109.2H717L672 960H545.8l43.6-255.4H376.6L333 960H206.8l43.6-255.4zm168.4-276L394 595.4h211.2l24.6-166.6h-211z"}));pD.displayName="HeadingIcon";const kD=()=>B(St,{name:"heart"},()=>B("path",{d:"M1024 358.156C1024 195.698 892.3 64 729.844 64c-86.362 0-164.03 37.218-217.844 96.49C458.186 101.218 380.518 64 294.156 64 131.698 64 0 195.698 0 358.156 0 444.518 37.218 522.186 96.49 576H96l320 320c32 32 64 64 96 64s64-32 96-64l320-320h-.49c59.272-53.814 96.49-131.482 96.49-217.844zM841.468 481.232 517.49 805.49a2981.962 2981.962 0 0 1-5.49 5.48c-1.96-1.95-3.814-3.802-5.49-5.48L182.532 481.234C147.366 449.306 128 405.596 128 358.156 128 266.538 202.538 192 294.156 192c47.44 0 91.15 19.366 123.076 54.532L512 350.912l94.768-104.378C638.696 211.366 682.404 192 729.844 192 821.462 192 896 266.538 896 358.156c0 47.44-19.368 91.15-54.532 123.076z"}));kD.displayName="HeartIcon";const dD=()=>B(St,{name:"history"},()=>B("path",{d:"M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zm0-896a384 384 0 1 0 384 384 384 384 0 0 0-384-384zm192 448H512a64 64 0 0 1-64-64V320a64 64 0 0 1 128 0v128h128a64 64 0 0 1 0 128z"}));dD.displayName="HistoryIcon";const oD=()=>B(St,{name:"title"},()=>B("path",{d:"M512 256c70.656 0 134.656 28.672 180.992 75.008A254.933 254.933 0 0 1 768 512c0 83.968-41.024 157.888-103.488 204.48C688.96 748.736 704 788.48 704 832c0 105.984-86.016 192-192 192-106.048 0-192-86.016-192-192h128a64 64 0 1 0 128 0 64 64 0 0 0-64-64 255.19 255.19 0 0 1-181.056-75.008A255.403 255.403 0 0 1 256 512c0-83.968 41.024-157.824 103.488-204.544C335.04 275.264 320 235.584 320 192A192 192 0 0 1 512 0c105.984 0 192 85.952 192 192H576a64.021 64.021 0 0 0-128 0c0 35.328 28.672 64 64 64zM384 512c0 70.656 57.344 128 128 128s128-57.344 128-128-57.344-128-128-128-128 57.344-128 128z"}));oD.displayName="TitleIcon";const Gu=()=>B(St,{name:"search"},()=>B("path",{d:"M192 480a256 256 0 1 1 512 0 256 256 0 0 1-512 0m631.776 362.496-143.2-143.168A318.464 318.464 0 0 0 768 480c0-176.736-143.264-320-320-320S128 303.264 128 480s143.264 320 320 320a318.016 318.016 0 0 0 184.16-58.592l146.336 146.368c12.512 12.48 32.768 12.48 45.28 0 12.48-12.512 12.48-32.768 0-45.28"}));Gu.displayName="SearchIcon";const Wu=Symbol(""),uD=()=>{const s=Q(!1);Di(Wu,s)},cD=(s,i=!1)=>{const e=Q(0),a=V(()=>s.value[e.value]),n=()=>{e.value=e.value>0?e.value-1:s.value.length-1},t=()=>{e.value=e.value<s.value.length-1?e.value+1:0};return bs(s,()=>{i||(e.value=0)}),{index:e,item:a,prev:n,next:t}},gD=()=>{const s=On(()=>typeof window<"u"&&"userAgent"in window.navigator);return V(()=>s.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},BD=s=>{const i=Q([]);{const e=y8(),a=Bi(),n=Be();ws(()=>{const{suggest:t,terminate:l}=aD(),r=h=>{const{resultsFilter:p,querySplitter:k,suggestionsFilter:d=u=>u,...o}=e.value;h?t(h,n.value,o).then(u=>d(u,h,n.value,a.value)).then(u=>{i.value=u.length?bl(u[0],h)&&!u[0].slice(h.length).includes(" ")?u:[h,...u]:[]}).catch(u=>{console.error(u)}):i.value=[]};te([s,n],([h])=>{r(h.join(" "))}),_i(()=>{l()})})}return{enabled:!0,suggestions:i}},AD='<svg width="15" height="15" aria-label="Enter key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M12 3.53088v3c0 1-1 2-2 2H4M7 11.53088l-3-3 3-3"></path></g></svg>',yD='<svg width="15" height="15" aria-label="Arrow down" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 3.5v8M10.5 8.5l-3 3-3-3"></path></g></svg>',fD='<svg width="15" height="15" aria-label="Arrow up" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 11.5v-8M10.5 6.5l-3-3-3 3"></path></g></svg>',mD='<svg width="15" height="15" aria-label="Escape key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M13.6167 8.936c-.1065.3583-.6883.962-1.4875.962-.7993 0-1.653-.9165-1.653-2.1258v-.5678c0-1.2548.7896-2.1016 1.653-2.1016.8634 0 1.3601.4778 1.4875 1.0724M9 6c-.1352-.4735-.7506-.9219-1.46-.8972-.7092.0246-1.344.57-1.344 1.2166s.4198.8812 1.3445.9805C8.465 7.3992 8.968 7.9337 9 8.5c.032.5663-.454 1.398-1.4595 1.398C6.6593 9.898 6 9 5.963 8.4851m-1.4748.5368c-.2635.5941-.8099.876-1.5443.876s-1.7073-.6248-1.7073-2.204v-.4603c0-1.0416.721-2.131 1.7073-2.131.9864 0 1.6425 1.031 1.5443 2.2492h-2.956"></path></g></svg>',vk=Sl.hotKeys[0];var vD=ts({name:"SearchBox",setup(){const s=Ke(gp),i=Ns(Wu),e=Q(!1);Z7(Sl.hotKeys,()=>{i.value||(i.value=!0)});const a=V(()=>vk?[...(e.value?["⌃","⇧","⌥","⌘"]:["Ctrl","Shift","Alt","Win"]).filter((n,t)=>vk[["ctrl","shift","alt","meta"][t]]),vk.key.toUpperCase()]:null);return ws(()=>{const{userAgent:n}=navigator;e.value=$7(n)||V7(n)||c3(n)}),()=>[B("button",{type:"button",class:"slimsearch-button","aria-label":s.value.search,onClick:()=>{i.value=!0}},[B(Gu),B("div",{class:"slimsearch-placeholder"},s.value.search),a.value?B("div",{class:"slimsearch-key-hints"},a.value.map(n=>B("kbd",{class:"slimsearch-key"},n))):null])]}}),FD=ts({name:"SearchKeyHints",setup(){const s=Ke(gp),i=gD();return()=>i.value?null:B("div",{class:"slimsearch-hints"},[B("span",{class:"slimsearch-hint"},[B("kbd",{innerHTML:AD}),s.value.select]),B("span",{class:"slimsearch-hint"},[B("kbd",{innerHTML:fD}),B("kbd",{innerHTML:yD}),s.value.navigate]),B("span",{class:"slimsearch-hint"},[B("kbd",{innerHTML:mD}),s.value.exit])])}});const ED=Iy({loader:()=>F(()=>import("./SearchResult-B452KN4a.js"),[]),loadingComponent:()=>{const s=Ke(gp);return B(f8,{class:"slimsearch-result-wrapper",hint:s.value.loading})}}),bD=["ArrowDown","ArrowUp","Escape","Tab","Enter"];var CD=ts({name:"SearchModal",setup(){const s=Ns(Wu),i=wt(),e=Ke(gp),a=y8(),n=Q(""),t=Q([]),{suggestions:l}=BD(t),r=Q(!1),{index:h,prev:p,next:k}=cD(l),d=Ts(),o=Ts(),u=V(()=>r.value&&l.value.length),c=(g=h.value)=>{n.value=l.value[g],r.value=!1};Is("keydown",g=>{u.value?g.key==="ArrowUp"?p():g.key==="ArrowDown"?k():g.key==="Tab"?c():(g.key==="Enter"||g.key==="Escape")&&(r.value=!1):g.key==="Escape"&&(s.value=!1)});const A=rp(()=>{var g,f;(((f=(g=a.value).querySplitter)==null?void 0:f.call(g,n.value))??Promise.resolve(n.value.split(" "))).then(m=>{t.value=m})},Math.min(Sl.searchDelay,Sl.suggestDelay));return te(n,A),ws(()=>{const g=rr(document.body);bs(s,async f=>{var m;g.value=f,f&&(await qs(),(m=d.value)==null||m.focus())}),N5(o,()=>{r.value=!1}),_i(()=>{g.value=!1})}),()=>s.value?B("div",{class:"slimsearch-modal-wrapper"},[B("div",{class:"slimsearch-mask",onClick:()=>{s.value=!1,n.value=""}}),B("div",{class:"slimsearch-modal"},[B("div",{class:"slimsearch-box"},[B("form",[B("label",{for:"search-pro","aria-label":e.value.search},B(Gu)),B("input",{ref:d,type:"search",class:"slimsearch-input",id:"search-pro",placeholder:e.value.placeholder,spellcheck:"false",autocapitalize:"off",autocomplete:"off",autocorrect:"off",name:`${i.value.title}-search`,value:n.value,"aria-controls":"slimsearch-results",onKeydown:g=>{u.value&&bD.includes(g.key)&&g.preventDefault()},onInput:({target:g})=>{n.value=g.value,r.value=!0,h.value=0}}),n.value?B("button",{type:"reset",class:"slimsearch-clear-button",innerHTML:hD,onClick:()=>{n.value=""}}):null,u.value?B("ul",{class:"slimsearch-suggestions",ref:o},l.value.map((g,f)=>B("li",{class:["slimsearch-suggestion",{active:f===h.value}],onClick:()=>{c(f)}},[B("kbd",{class:"slimsearch-auto-complete",title:`Tab ${e.value.autocomplete}`},"Tab"),g]))):null]),B("button",{type:"button",class:"slimsearch-close-button",onClick:()=>{s.value=!1,n.value=""}},e.value.cancel)]),B(ED,{queries:t.value,isFocusing:!u.value,onClose:()=>{s.value=!1},onUpdateQuery:g=>{n.value=g}}),B(FD)])]):null}}),_D=Ti({enhance({app:s}){rD(s),s.component("SearchBox",vD)},setup(){uD()},rootComponents:[CD]});const DD=Object.freeze(Object.defineProperty({__proto__:null,default:_D},Symbol.toStringTag,{value:"Module"})),m8="VUEPRESS_REDIRECT_STATUS",B0=Q5(m8,{}),A0=a7(m8,{}),wD=s=>{const i=s7(),e=Be(),a=Pn(s.config);return V(()=>{if(a.some(([n])=>e.value===n)){for(const n of i.value)for(const[t,l]of a)if(l.includes(n))return t===e.value?null:{lang:n,localePath:t}}return null})};var xD=ts({name:"RedirectModal",props:{config:{type:Object,required:!0},locales:{type:Object,required:!0}},setup(s){const i=De(),e=ar(),a=Be(),n=wD(s.config),t=Q(),l=rr(t),r=Q(!1),h=V(()=>{if(!n.value)return null;const{lang:k,localePath:d}=n.value,o=[s.locales[d],s.locales[a.value]];return{hint:o.map(({hint:u})=>u.replace("$1",k)),switch:o.map(({switch:u})=>u.replace("$1",k)).join(" / "),cancel:o.map(({cancel:u})=>u).join(" / "),remember:o.map(({remember:u})=>u).join(" / ")}}),p=()=>{A0.value[a.value]=!0,r.value&&(B0.value[a.value]=!0),l.value=!1};return bs(e,()=>{l.value=!1}),ws(async()=>{t.value=document.body,await qs(),n.value&&!A0.value[a.value]&&!B0.value[a.value]&&(l.value=!0)}),Dt(()=>{l.value=!1}),()=>B(E4,{name:"redirect-modal-fade"},()=>{var k,d,o,u;return l.value?B("div",{key:"mask",class:"redirect-modal-mask"},B("div",{key:"popup",class:"redirect-modal-wrapper"},[B("div",{class:"redirect-modal-content"},(k=h.value)==null?void 0:k.hint.map(c=>B("p",c))),B("div",{class:"redirect-modal-hint"},[B("input",{id:"remember-redirect",type:"checkbox",value:r.value,onChange:()=>{r.value=!r.value}}),B("label",{for:"remember-redirect"},(d=h.value)==null?void 0:d.remember)]),B("button",{type:"button",class:"redirect-modal-action primary",onClick:()=>{p(),i.replace(e.value.replace(a.value,n.value.localePath))}},(o=h.value)==null?void 0:o.switch),B("button",{type:"button",class:"redirect-modal-action",onClick:()=>{p()}},(u=h.value)==null?void 0:u.cancel)])):null})}}),TD={config:{"/":["zh-CN"]},autoLocale:!1,defaultLocale:"/",localeFallback:!0,defaultBehavior:"defaultLocale"},SD={"/":{name:"简体中文",hint:"您的首选语言是 $1，是否切换到该语言？",switch:"切换到 $1",cancel:"取消",remember:"记住我的选择"}};const v8=TD;var ID=Ti({setup(){},rootComponents:[()=>B(xD,{config:v8,locales:SD})]});const RD=Object.freeze(Object.defineProperty({__proto__:null,config:v8,default:ID},Symbol.toStringTag,{value:"Module"})),F8=()=>{const s=Vs();return V(()=>s.value.author)},OD="http://.",_a=()=>{const s=De(),i=We();return e=>{if(!e)return;if(ir(e))return window.open(e);if(dp(e))return i.fullPath===e?void 0:void s.push(e);const a=i.path.slice(0,i.path.lastIndexOf("/"));return void s.push(new URL(`${a}/${encodeURI(e)}`,OD).pathname)}};var y0={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const E8=()=>{const s=Bi();return V(()=>s.value.readingTime??null)},b8=(s,i)=>{const{minutes:e,words:a}=s,{less1Minute:n,word:t,time:l}=i;return{time:e<1?n:l.replace("$time",Math.round(e).toString()),words:t.replace("$word",a.toString())}},f0={words:"",time:""},Bo=typeof y0>"u"?null:y0,C8=()=>Bo?Ke(Bo):V(()=>null),PD=()=>{if(typeof Bo>"u")return V(()=>f0);const s=E8(),i=C8();return V(()=>s.value&&i.value?b8(s.value,i.value):f0)},Ye=()=>Q3(),Vs=()=>$_(),_8=()=>{const s=js(),i=F8();return V(()=>{const{author:e}=s.value;return e?Tl(e):e===!1?[]:Tl(i.value,!1)})},LD=()=>{const s=js(),i=Ns(Symbol.for("categoryMap"));return V(()=>u8(s.value.category??s.value.categories).map(e=>{var a;return{name:e,path:((a=i==null?void 0:i.value.map[e])==null?void 0:a.path)??""}}))},ND=()=>{const s=js(),i=Ns(Symbol.for("tagMap"));return V(()=>c8(s.value.tag??s.value.tags).map(e=>{var a;return{name:e,path:((a=i==null?void 0:i.value.map[e])==null?void 0:a.path)??""}}))},MD=()=>{const s=js(),i=Bi();return V(()=>{const e=Su(s.value.date);if(e)return e;const{createdTime:a}=i.value.git??{};return a?new Date(a):null})},VD=()=>{const s=Vs(),i=Bi(),e=js(),a=_8(),n=LD(),t=ND(),l=MD(),r=E8(),h=PD(),p=V(()=>({author:a.value,category:n.value,date:l.value,localizedDate:i.value.localizedDate,tag:t.value,isOriginal:e.value.isOriginal??!1,readingTime:r.value,readingTimeLocale:h.value,pageview:e.value.pageview??!0})),k=V(()=>e.value.pageInfo??s.value.pageInfo??null);return{info:p,items:k}},Yi=()=>{const s=Ye();return V(()=>!!s.value.pure)},Ku=(s,i)=>i.activeMatch?new RegExp(i.activeMatch,"u").test(s.path):k8(s,i.link),Yu=(s,i)=>"children"in i?!!i.prefix&&k8(s,i.prefix)||i.children.some(e=>Yu(s,e)):Ku(s,i),Il={"/":["",{text:"Assets",prefix:"assets/",collapsible:!0,children:[{text:"rustlings-zh 🦀❤️",prefix:"rustlings-zh/",collapsible:!0,children:["","CHANGELOG","CONTRIBUTING",{text:"Exercise to Book Chapter mapping",prefix:"exercises/",collapsible:!0,children:["",{text:"Clippy",prefix:"clippy/",collapsible:!0,children:[""]},{text:"集合（Collections）",prefix:"collections/",collapsible:!0,children:[""]},{text:"Type conversions",prefix:"conversions/",collapsible:!0,children:[""]},{text:"枚举（enums）",prefix:"enums/",collapsible:!0,children:[""]},{text:"错误处理",prefix:"error_handling/",collapsible:!0,children:[""]},{text:"函数（Functions）",prefix:"functions/",collapsible:!0,children:[""]},{text:"泛型",prefix:"generics/",collapsible:!0,children:[""]},{text:"If",prefix:"if/",collapsible:!0,children:[""]},{text:"Macros",prefix:"macros/",collapsible:!0,children:[""]},{text:"模块（Modules）",prefix:"modules/",collapsible:!0,children:[""]},{text:"移动语义（Move Semantics）",prefix:"move_semantics/",collapsible:!0,children:[""]},{text:"Option",prefix:"option/",collapsible:!0,children:[""]},{text:"基本类型（Primitive Types）",prefix:"primitive_types/",collapsible:!0,children:[""]},{text:"Standard library types",prefix:"standard_library_types/",collapsible:!0,children:[""]},{text:"字符串",prefix:"strings/",collapsible:!0,children:[""]},{text:"结构（Structs）",prefix:"structs/",collapsible:!0,children:[""]},{text:"测试",prefix:"tests/",collapsible:!0,children:[""]},{text:"Threads",prefix:"threads/",collapsible:!0,children:[""]},{text:"Traits",prefix:"traits/",collapsible:!0,children:[""]},{text:"变量（Variables）",prefix:"variables/",collapsible:!0,children:[""]}]}]},{text:"Writing Material",prefix:"writing-material/",collapsible:!0,children:["books","courses","demos_for_learning","good-sourcecode",{text:"Posts",prefix:"posts/",collapsible:!0,children:["atomic","attributes",{text:"Fight with Compiler Check",prefix:"fight-with-compiler-check/",collapsible:!0,children:["borrow","generic"]},"file","function_signature","generics","hashmap","identifier","images","interview","io","Iterator","lifetime","lifetime_elision_rules","non-lexical-lifetime","operators","package","performance","plugins","reference","rust-analyser","self-referential","SIMD","string","system_command",{text:"Tests",prefix:"tests/",collapsible:!0,children:["doc_test","integration_test","misc","unit_test"]},"threads","to_resolved","tokio","trivia","wasm"]},{text:"Style Guide",prefix:"style_guide/",collapsible:!0,children:["coding","naming"]},"读者疑惑的点记录"]}]},{text:"Src",prefix:"src/",collapsible:!0,children:["about-book",{text:"Advance",prefix:"advance/",collapsible:!0,children:[{text:"Async",prefix:"async/",collapsible:!0,children:["async-await","future-excuting","getting-started","intro","multi-futures-simultaneous","pain-points-and-workarounds","pin-unpin","web-server"]},{text:"Circle Self Ref",prefix:"circle-self-ref/",collapsible:!0,children:["circle-reference","intro","self-referential"]},{text:"Concurrency with Threads",prefix:"concurrency-with-threads/",collapsible:!0,children:["concurrency-parallelism","intro","message-passing","races","ref-counter-lock","send-sync","sync1","sync2","thread"]},{text:"Difficulties",prefix:"difficulties/",collapsible:!0,children:["pointer"]},"errors",{text:"Functional Programing",prefix:"functional-programing/",collapsible:!0,children:["closure","intro","iterator"]},"global-variable","hrtb",{text:"Into Types",prefix:"into-types/",collapsible:!0,children:["converse","custom-type","enum-int","intro","sized"]},"intro",{text:"Lifetime",prefix:"lifetime/",collapsible:!0,children:["advance","intro","misconceptions","static"]},"macro","simd",{text:"Smart Pointer",prefix:"smart-pointer/",collapsible:!0,children:["box","cell-refcell","deref","drop","intro","rc-arc"]},{text:"Unsafe",prefix:"unsafe/",collapsible:!0,children:["inline-asm","intro","superpowers","ub"]}]},{text:"Advance Practice",prefix:"advance-practice/",collapsible:!0,children:["async","bridging-with-sync","channels","design-pattern","frame","getting-startted","graceful-shutdown","intro","io","overview","select","shared-state","spawning","stream"]},{text:"Advance Practice1",prefix:"advance-practice1/",collapsible:!0,children:["graceful-shutdown","intro","multi-threads","web-server"]},{text:"Appendix",prefix:"appendix/",collapsible:!0,children:["derive","difficulties","expressions","intro","keywords","operators","prelude","rust-version",{text:"Rust Versions",prefix:"rust-versions/",collapsible:!0,children:["1.58","1.59","1.60","1.61","1.62","1.63","1.64","1.65","1.66","1.67","1.68","1.69","1.70","1.71","1.72","1.73","1.74","1.75","1.76","1.77","1.78","1.79","1.80","1.81","1.82","1.83","1.84","1.85","intro"]}]},{text:"Basic",prefix:"basic/",collapsible:!0,children:[{text:"Base Type",prefix:"base-type/",collapsible:!0,children:["char-bool","function","","numbers","statement-expression"]},{text:"Collections",prefix:"collections/",collapsible:!0,children:["hashmap","intro","vector"]},"comment",{text:"Compound Type",prefix:"compound-type/",collapsible:!0,children:["array","enum","intro","string-slice","struct","tuple"]},{text:"Crate Module",prefix:"crate-module/",collapsible:!0,children:["crate","intro","module","use"]},"flow-control","formatted-output","intro","lifetime",{text:"Match Pattern",prefix:"match-pattern/",collapsible:!0,children:["all-patterns","intro","match-if-let","option","pattern-match"]},"method",{text:"Ownership",prefix:"ownership/",collapsible:!0,children:["borrowing","","ownership"]},{text:"Result Error",prefix:"result-error/",collapsible:!0,children:["intro","panic","result"]},{text:"Trait",prefix:"trait/",collapsible:!0,children:["advance-trait","generic","intro","trait","trait-object"]},"variable"]},{text:"Basic Practice",prefix:"basic-practice/",collapsible:!0,children:["base-features","envs","intro","iterators","refactoring","stderr","tests"]},"beat-ai",{text:"Cargo",prefix:"cargo/",collapsible:!0,children:["getting-started","git-auth",{text:"Guide",prefix:"guide/",collapsible:!0,children:["build-cache","cargo-cache","cargo-toml-lock","dependencies","download-package","intro","package-layout","tests-ci","why-exist"]},"intro",{text:"Reference",prefix:"reference/",collapsible:!0,children:[{text:"Build Script",prefix:"build-script/",collapsible:!0,children:["examples","intro"]},"cargo-target","configuration","deps-overriding","env",{text:"Features",prefix:"features/",collapsible:!0,children:["examples","intro"]},"intro","manifest","package-id","profile","profiles","publishing-on-crates.io","specify-deps","workspaces"]}]},"community",{text:"Compiler",prefix:"compiler/",collapsible:!0,children:[{text:"Fight with Compiler",prefix:"fight-with-compiler/",collapsible:!0,children:[{text:"Borrowing",prefix:"borrowing/",collapsible:!0,children:["borrow-distinct-fields-of-struct","intro","ref-exist-in-out-fn"]},"intro",{text:"Lifetime",prefix:"lifetime/",collapsible:!0,children:["closure-with-static","intro","loop","too-long1","too-long2"]},"phantom-data","unconstrained"]},"intro",{text:"Pitfalls",prefix:"pitfalls/",collapsible:!0,children:["arithmetic-overflow","closure-with-lifetime","","iterator-everywhere","lazy-iterators","main-with-channel-blocked","multiple-mutable-references","stack-overflow","the-disabled-mutability","use-vec-in-for","utf8-performance","weird-ranges"]}]},{text:"Difficulties",prefix:"difficulties/",collapsible:!0,children:["cow","eq","intro","lifetime","move-copy","pointer","slice","string"]},{text:"First Try",prefix:"first-try/",collapsible:!0,children:["cargo","editor","hello-world","installation","intro","slowly-downloading","sth-you-should-not-do"]},"github","index-list","into-rust",{text:"Libraries",prefix:"libraries/",collapsible:!0,children:[{text:"Command",prefix:"command/",collapsible:!0,children:["intro","structopt"]},{text:"Http",prefix:"http/",collapsible:!0,children:["intro","reqwest"]},"intro",{text:"Json",prefix:"json/",collapsible:!0,children:["intro","serde"]}]},{text:"Logs",prefix:"logs/",collapsible:!0,children:["about-log","intro","log",{text:"Observe",prefix:"observe/",collapsible:!0,children:["about-observe","intro","trace"]},"tracing","tracing-logger"]},"practice",{text:"Practice",prefix:"practice/",collapsible:!0,children:["best-pratice","interview","intro","naming","third-party-libs"]},{text:"Profiling",prefix:"profiling/",collapsible:!0,children:[{text:"Compiler",prefix:"compiler/",collapsible:!0,children:["attributes","intro","llvm",{text:"Optimization",prefix:"optimization/",collapsible:!0,children:["intro","option"]},"phantom-data","speed-up"]},"intro",{text:"Memory",prefix:"memory/",collapsible:!0,children:["allocation","intro","layout","pointer-ref","uninit","virtual"]},{text:"Performance",prefix:"performance/",collapsible:!0,children:["allocator","calculate","clone-copy","cpu-cache","deep-into-move","early-optimise","enum","heap-stack","intro","runtime-check","string","tools"]},{text:"Profiling",prefix:"profiling/",collapsible:!0,children:[{text:"Performance",prefix:"performance/",collapsible:!0,children:["benchmark"]}]}]},"rust-weekly","rustt","rusty-book","some-thoughts",{text:"Std",prefix:"std/",collapsible:!0,children:["hashmap","intro","iterator","search","vector"]},"SUMMARY",{text:"Templates",prefix:"templates/",collapsible:!0,children:[{text:"Files",prefix:"files/",collapsible:!0,children:["dir","intro"]},{text:"Http",prefix:"http/",collapsible:!0,children:["intro"]},"intro"]},{text:"Test",prefix:"test/",collapsible:!0,children:["assertion","benchmark","ci","intro","unit-integration-test","write-tests"]},{text:"Too Many Lists",prefix:"too-many-lists/",collapsible:!0,children:[{text:"Advanced Lists",prefix:"advanced-lists/",collapsible:!0,children:["double-singly","intro","stack-allocated","unsafe-deque"]},{text:"Bad Stack",prefix:"bad-stack/",collapsible:!0,children:["basic-operations","final-code","intro","layout"]},{text:"Deque",prefix:"deque/",collapsible:!0,children:["final-code","intro","iterator","layout","peek","symmetric"]},"do-we-need-it","intro",{text:"Ok Stack",prefix:"ok-stack/",collapsible:!0,children:["intro","iter","itermut","peek","type-optimizing"]},{text:"Persistent Stack",prefix:"persistent-stack/",collapsible:!0,children:["drop-arc","intro","layout"]},{text:"Production Unsafe Deque",prefix:"production-unsafe-deque/",collapsible:!0,children:["basics","boring-combinatorics","drop-and-panic-safety","filling-in-random-bits","final-code","implementing-cursors","intro","layout","send-sync-and-compile-tests","testing","testing-cursors","variance-and-phantomData"]},{text:"Unsafe Queue",prefix:"unsafe-queue/",collapsible:!0,children:["basics","extra-junk","final-code","intro","layout","layout2","miri","stacked-borrow","testing-stacked-borrow"]}]},{text:"Usecases",prefix:"usecases/",collapsible:!0,children:["aws-rust","intro"]}]}]},$D=(s,i)=>{const e=s.replace(i,"/").split("/"),a=[];let n=vu(i);return e.forEach((t,l)=>{l!==e.length-1?(n+=`${t}/`,a.push({link:n,name:t||"Home"})):t!==""&&(n+=t,a.push({link:n,name:t}))}),a},Ao=s=>!ir(s)&&!fu(s);let Fk=null,$t=null;const yo={wait:()=>Fk,pending:()=>{Fk=new Promise(s=>{$t=s})},resolve:()=>{$t==null||$t(),Fk=null,$t=null}},xh=(s,i=!1,e)=>{const{meta:a,path:n,notFound:t}=ne(s,e);return t?{text:n,link:n}:{text:!i&&a.shortTitle?a.shortTitle:a.title||n,link:n,icon:a.icon}},An=(s="",i="")=>ir(i)||dp(i)?i:`${mu(s)}${i}`,D8=(s,i)=>{const e=li(s)?xh(An(i,s)):s.link?{...s,link:Ao(s.link)?ne(An(i,s.link)).path:s.link}:s;if("children"in e){const a=An(i,e.prefix),n=e.children==="structure"?Il[a]:e.children;return{...e,prefix:a,children:n.map(t=>D8(t,a))}}return{...e}},fo=({config:s,prefix:i=""})=>s.map(e=>D8(e,i)),zD=({config:s,routePath:i,headerDepth:e})=>{const a=Ue(s).sort((n,t)=>t.length-n.length);for(const n of a)if(bl(decodeURI(i),n)){const t=s[n];return fo({config:t==="structure"?Il[n]:t||[],prefix:n})}return console.warn(`${decodeURI(i)} is missing it's sidebar config.`),[]},qD=({config:s,headerDepth:i,routeLocale:e,routePath:a})=>s==="structure"?fo({config:Il[e],prefix:e}):Dh(s)?fo({config:s}):er(s)?zD({config:s,routePath:a,headerDepth:i}):[],w8=Symbol(""),HD=()=>{const s=js(),i=Vs(),e=Be(),a=ar(),n=V(()=>s.value.home?!1:s.value.sidebar??i.value.sidebar??"structure"),t=V(()=>s.value.headerDepth??i.value.headerDepth??2),l=V(()=>qD({config:n.value,headerDepth:t.value,routeLocale:e.value,routePath:a.value}));Di(w8,l)},Xu=()=>{const s=Ns(w8);if(!s)throw new Error("useSidebarItems() is called without provider.");return s},m0=(s,i)=>s===!1?s:er(s)?{...s,link:xh(s.link,!0,i).link}:li(s)?xh(s,!0,i):null,mo=(s,i,e)=>{const a=s.findIndex(t=>t.link===i);if(a!==-1){if(!s[a+e])return null;const t=s[a+e];return t.link?t:"prefix"in t&&!ne(t.prefix).notFound?{...t,link:t.prefix}:null}for(const t of s)if("children"in t){const l=mo(t.children,i,e);if(l)return l}const n=s.findIndex(t=>"prefix"in t&&t.prefix===i);if(n!==-1){if(!s[n+e])return null;const t=s[n+e];return t.link?t:"prefix"in t&&!ne(t.prefix).notFound?{...t,link:t.prefix}:null}return null},jD=()=>{const s=js(),i=Vs(),e=Xu(),a=ar(),n=V(()=>{const l=m0(s.value.prev,a.value);return l===!1?null:l??(i.value.prevLink===!1?null:mo(e.value,a.value,-1))}),t=V(()=>{const l=m0(s.value.next,a.value);return l===!1?null:l??(i.value.nextLink===!1?null:mo(e.value,a.value,1))});return{prevLink:n,nextLink:t}},UD="719px",GD="1440px",WD="9",It={mobileBreakPoint:UD,pcBreakPoint:GD,colorNumber:WD},{mobileBreakPoint:KD,pcBreakPoint:YD}=It,v0=s=>s.endsWith("px")?Number(s.slice(0,-2)):null,dr=()=>{const s=Q(!1),i=Q(!1),e=()=>{s.value=window.innerWidth<=(v0(KD)??719),i.value=window.innerWidth>=(v0(YD)??1440)};return Is("resize",e,!1),Is("orientationchange",e,!1),ws(()=>{e()}),{isMobile:s,isPC:i}},x8=Symbol(""),or=()=>{const s=Ns(x8);if(!s)throw new Error("useDarkMode() is called without provider.");return s},XD=s=>{const i=Ye(),e=G5(),a=V(()=>i.value.darkmode??"switch"),n=lr("vuepress-theme-hope-scheme","auto"),t=V(()=>{const r=a.value;return r==="disable"?!1:r==="enable"?!0:r==="auto"?e.value:r==="toggle"?n.value==="dark":n.value==="dark"||n.value==="auto"&&e.value}),l=V(()=>{const r=a.value;return r==="switch"||r==="toggle"});s.provide(x8,{canToggle:l,config:a,isDarkMode:t,status:n}),Object.defineProperties(s.config.globalProperties,{$isDarkMode:{get:()=>t.value}})},ZD=()=>{const{config:s,isDarkMode:i,status:e}=or();ep(()=>{s.value==="disable"?e.value="light":s.value==="enable"?e.value="dark":s.value==="toggle"&&e.value==="auto"&&(e.value="light")}),ws(()=>{te(i,a=>{document.documentElement.setAttribute("data-theme",a?"dark":"light")})})},JD=ts({name:"PageFooter",setup(){const s=Ye(),i=Vs(),e=js(),a=_8(),n=V(()=>{const{copyright:p,footer:k}=e.value;return k!==!1&&!!(p||k||i.value.displayFooter)}),t=V(()=>{const{footer:p}=e.value;return p===!1?!1:li(p)?p:i.value.footer??""}),l=V(()=>a.value.map(({name:p})=>p).join(", ")),r=p=>`Copyright © ${new Date().getFullYear()} ${l.value} ${p?`${p} Licensed`:""}`,h=V(()=>{const{copyright:p,license:k=""}=e.value,{license:d}=s.value,{copyright:o}=i.value;return p??(k?r(k):o??(l.value||d?r(d):!1))});return()=>n.value?B("footer",{class:"vp-footer-wrapper","vp-footer":""},[t.value?B("div",{class:"vp-footer",innerHTML:t.value}):null,h.value?B("div",{class:"vp-copyright",innerHTML:h.value}):null]):null}}),rh=()=>null,Gi=ts({name:"AutoLink",props:{config:{type:Object,required:!0},iconSizing:{type:String,default:"both"}},emits:["focusout"],slots:Object,setup(s,{emit:i,slots:e}){return()=>{const{icon:a}=s.config;return B(B5,{...s,onFocusout:()=>{i("focusout")}},{default:e.default,before:e.before??(a?()=>B(Ws("VPIcon"),{icon:a,sizing:s.iconSizing}):null),after:e.after})}}}),QD=ts({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:i}){const e=Ms(s,"config"),a=V(()=>e.value.ariaLabel??e.value.text),n=Q(!1),t=l=>{l.detail===0&&(n.value=!n.value)};return Ca(()=>{n.value=!1}),()=>{var l;return B("div",{class:["vp-dropdown-wrapper",{open:n.value}]},[B("button",{type:"button",class:"vp-dropdown-title","aria-label":a.value,onClick:t},[((l=i.title)==null?void 0:l.call(i))??[B(Ws("VPIcon"),{icon:e.value.icon}),s.config.text],B("span",{class:"arrow"}),B("ul",{class:"vp-dropdown"},e.value.children.map((r,h)=>{const p=h===e.value.children.length-1;return B("li",{class:"vp-dropdown-item"},"children"in r?[B("h4",{class:"vp-dropdown-subtitle"},r.link?B(Gi,{config:r,onFocusout:()=>{r.children.length===0&&p&&(n.value=!1)}}):r.text),B("ul",{class:"vp-dropdown-subitems"},r.children.map((k,d)=>B("li",{class:"vp-dropdown-subitem"},B(Gi,{config:k,onFocusout:()=>{d===r.children.length-1&&p&&(n.value=!1)}}))))]:B(Gi,{config:r,onFocusout:()=>{p&&(n.value=!1)}}))}))])])}}}),T8=(s,i="")=>li(s)?xh(An(i,s)):"children"in s?{...s,...s.link&&Ao(s.link)?{link:ne(An(i,s.link)).path}:{},children:s.children.map(e=>T8(e,An(i,s.prefix)))}:{...s,link:Ao(s.link)?ne(An(i,s.link)).path:s.link},S8=()=>{const s=Vs();return V(()=>(s.value.navbar||[]).map(i=>T8(i)))},sw=()=>{const s=Vs(),i=V(()=>s.value.repo),e=V(()=>i.value?y9(i.value):null),a=V(()=>i.value?Uu(i.value):null),n=V(()=>e.value?s.value.repoLabel??a.value??"Source":null);return V(()=>!e.value||!n.value||s.value.repoDisplay===!1?null:{type:a.value??"Source",label:n.value,link:e.value})},iw=ts({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(s){const i=Ms(s,"config"),e=V(()=>i.value.ariaLabel??i.value.text),a=Q(!1),n=(t,l)=>l[l.length-1]===t;return Ca(()=>{a.value=!1}),()=>[B("button",{type:"button",class:["vp-nav-screen-menu-title",{active:a.value}],"aria-label":e.value,onClick:()=>{a.value=!a.value}},[B("span",{class:"text"},[B(Ws("VPIcon"),{icon:i.value.icon,sizing:"both"}),s.config.text]),B("span",{class:["arrow",a.value?"down":"end"]})]),B("ul",{class:["vp-nav-screen-menu",{hide:!a.value}]},i.value.children.map(t=>B("li",{class:"vp-nav-screen-menu-item"},"children"in t?[B("h4",{class:"vp-nav-screen-menu-subtitle"},t.link?B(Gi,{config:t,onFocusout:()=>{n(t,i.value.children)&&t.children.length===0&&(a.value=!1)}}):t.text),B("ul",{class:"vp-nav-screen-menu-subitems"},t.children.map(l=>B("li",{class:"vp-nav-screen-menu-subitem"},B(Gi,{config:l,onFocusout:()=>{n(l,t.children)&&n(t,i.value.children)&&(a.value=!1)}}))))]:B(Gi,{config:t,onFocusout:()=>{n(t,i.value.children)&&(a.value=!1)}}))))]}}),ew=ts({name:"NavScreenLinks",setup(){const s=S8();return()=>s.value.length?B("nav",{class:"nav-screen-links"},s.value.map(i=>B("div",{class:"navbar-links-item"},"children"in i?B(iw,{config:i}):B(Gi,{config:i})))):null}}),I8=()=>B(Ys,{name:"dark"},()=>B("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));I8.displayName="DarkIcon";const R8=()=>B(Ys,{name:"light"},()=>B("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));R8.displayName="LightIcon";const O8=()=>B(Ys,{name:"auto"},()=>B("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));O8.displayName="AutoIcon";const P8=()=>B(Ys,{name:"enter-fullscreen"},()=>B("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));P8.displayName="EnterFullScreenIcon";const L8=()=>B(Ys,{name:"cancel-fullscreen"},()=>B("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));L8.displayName="CancelFullScreenIcon";const N8=()=>B(Ys,{name:"outlook"},()=>[B("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);N8.displayName="OutlookIcon";const M8=ts({name:"ColorModeSwitch",setup(){const{config:s,isDarkMode:i,status:e}=or(),a=Yi(),n=()=>{s.value==="switch"?e.value={light:"dark",dark:"auto",auto:"light"}[e.value]:e.value=e.value==="light"?"dark":"light"},t=async l=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!a.value)){n();return}const h=l.clientX,p=l.clientY,k=Math.hypot(Math.max(h,innerWidth-h),Math.max(p,innerHeight-p)),d=i.value;await document.startViewTransition(async()=>{n(),await qs()}).ready,i.value!==d&&document.documentElement.animate({clipPath:i.value?[`circle(${k}px at ${h}px ${p}px)`,`circle(0px at ${h}px ${p}px)`]:[`circle(0px at ${h}px ${p}px)`,`circle(${k}px at ${h}px ${p}px)`]},{duration:400,pseudoElement:i.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>B("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:t},[B(O8,{style:{display:e.value==="auto"?"block":"none"}}),B(I8,{style:{display:e.value==="dark"?"block":"none"}}),B(R8,{style:{display:e.value==="light"?"block":"none"}})])}}),aw=ts({name:"ColorMode",setup(){const s=Vs(),{canToggle:i}=or(),e=V(()=>s.value.outlookLocales.darkmode);return()=>i.value?B("div",{class:"vp-color-mode"},[B("label",{class:"vp-color-mode-title",for:"color-mode-switch"},e.value),B(M8)]):null}}),nw=ts({name:"ToggleFullScreenButton",setup(){const{isSupported:s,isFullscreen:i,toggle:e}=hp();return()=>s.value?B("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:i.value,onClick:()=>e()},i.value?B(L8):B(P8)):null}}),V8=ts({name:"ToggleFullScreenButton",setup(){const s=Vs(),{isSupported:i}=hp(),e=V(()=>s.value.outlookLocales.fullscreen);return()=>i.value?B("div",{class:"full-screen-wrapper"},[B("label",{class:"full-screen-title",for:"full-screen-switch"},e.value),B(nw)]):null}}),$8=ts({name:"OutlookSettings",setup(){const s=Ye(),i=Yi(),e=V(()=>!i.value&&s.value.fullscreen);return()=>B(Du,()=>[null,B(aw),e.value?B(V8):null])}}),tw=ts({name:"NavScreen",props:{show:Boolean},slots:Object,setup(s,{slots:i}){const{isMobile:e}=dr(),a=Ts(),n=rr(a);return Ca(()=>{n.value=!1}),bs(e,t=>{!t&&s.show&&(n.value=!1)}),ws(()=>{a.value=document.body}),_i(()=>{n.value=!1}),()=>B(wn,{name:"fade",onEnter:()=>{n.value=!0},onAfterLeave:()=>{n.value=!1}},()=>{var t,l;return s.show?B("div",{id:"nav-screen",class:"vp-nav-screen"},B("div",{class:"vp-nav-screen-container"},[(t=i.before)==null?void 0:t.call(i),B(ew),B("div",{class:"vp-outlook-wrapper"},B($8)),(l=i.after)==null?void 0:l.call(i)])):null})}}),lw=ts({name:"NavbarBrand",setup(){const s=Be(),i=wt(),e=Vs(),a=V(()=>e.value.home??s.value),n=V(()=>i.value.title),t=V(()=>e.value.navbarTitle??n.value),l=V(()=>e.value.logo?Gs(e.value.logo):null),r=V(()=>e.value.logoDark?Gs(e.value.logoDark):null);return()=>B(mi,{to:a.value,class:"vp-brand","aria-label":e.value.routeLocales.home},()=>[l.value?B("img",{class:["vp-nav-logo",{light:!!r.value}],src:l.value,alt:""}):null,r.value?B("img",{class:["vp-nav-logo dark"],src:r.value,alt:""}):null,t.value?B("span",{class:["vp-site-name",{"hide-in-pad":l.value&&(e.value.hideSiteNameOnMobile??!0)}]},t.value):null])}}),rw=ts({name:"NavbarLinks",setup(){const s=S8();return()=>s.value.length?B("nav",{class:"vp-nav-links"},s.value.map(i=>B("div",{class:"vp-nav-item hide-in-mobile"},"children"in i?B(QD,{config:i}):B(Gi,{config:i,iconSizing:"height"})))):null}}),hw=ts({name:"RepoLink",setup(){const s=sw();return()=>s.value?B("div",{class:"vp-nav-item vp-action"},B("a",{class:"vp-action-link",href:s.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":s.value.label},B(f9,{type:s.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}}),z8=({active:s=!1},{emit:i})=>B("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":s}],"aria-label":"Toggle Navbar","aria-expanded":s,"aria-controls":"nav-screen",onClick:()=>{i("toggle")}},B("span",[B("span",{class:"vp-top"}),B("span",{class:"vp-middle"}),B("span",{class:"vp-bottom"})]));z8.displayName="ToggleNavbarButton";const Zu=(s,{emit:i})=>B("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>{i("toggle")}},B("span",{class:"icon"}));Zu.displayName="ToggleSidebarButton";Zu.emits=["toggle"];const pw=ts({name:"OutlookButton",setup(){const s=Ye(),{canToggle:i}=or(),{isSupported:e}=hp(),a=Yi(),n=Q(!1),t=V(()=>!a.value&&s.value.fullscreen&&e),l=V(()=>i.value||t.value);return Ca(()=>{n.value=!1}),()=>l.value?B("div",{class:"vp-nav-item hide-in-mobile"},i.value&&!t.value?B(M8):t.value&&!i.value?B(V8):B("button",{type:"button",class:["vp-outlook-button",{open:n.value}],tabindex:"-1","aria-hidden":!0},[B(N8),B("div",{class:"vp-outlook-dropdown"},B($8))])):null}}),kw=ts({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(s,{emit:i,slots:e}){const a=Vs(),{isMobile:n}=dr(),t=Q(!1),l=V(()=>{const{navbarAutoHide:k="mobile"}=a.value;return k!=="none"&&(k==="always"||n.value)}),r=V(()=>a.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),h={Brand:lw,Language:rh,Links:rw,Repo:hw,Outlook:pw,Search:Ce("SearchBox")?Ws("SearchBox"):rh},p=k=>h[k]??(Ce(k)?Ws(k):rh);return Ca(()=>{t.value=!1}),bs(n,k=>{k||(t.value=!1)}),()=>{var k,d,o;return[B("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":l.value}],"vp-navbar":""},[B("div",{class:"vp-navbar-start"},[B(Zu,{onToggle:()=>{t.value&&(t.value=!1),i("toggleSidebar")}}),(k=r.value.start)==null?void 0:k.map(u=>B(p(u)))]),B("div",{class:"vp-navbar-center"},[(d=r.value.center)==null?void 0:d.map(u=>B(p(u)))]),B("div",{class:"vp-navbar-end"},[(o=r.value.end)==null?void 0:o.map(u=>B(p(u))),B(z8,{active:t.value,onToggle:()=>{t.value=!t.value}})])]),B(tw,{show:t.value},{before:e.screenTop,after:e.screenBottom})]}}}),dw=ts({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(s){const i=We();return()=>li(s.config.link)?B(Gi,{class:["vp-sidebar-link",{active:Ku(i,s.config)}],config:{...s.config,exact:!0}}):B("p",s,[B(Ws("VPIcon"),{icon:s.config.icon,sizing:"both"}),s.config.text])}}),ow=ts({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(s,{emit:i}){const e=We(),a=Q(!1),n=V(()=>Yu(e,s.config)),t=V(()=>Ku(e,s.config)),l=V(()=>s.open||s.config.expanded&&!a.value);return()=>{const{collapsible:r,children:h=[],icon:p,prefix:k,link:d,text:o}=s.config;return B("section",{class:"vp-sidebar-group"},[B(r?"button":"p",{class:["vp-sidebar-header",{clickable:r||d,exact:t.value,active:n.value}],...r?{type:"button",onClick:()=>{a.value=!0,i("toggle")}}:{}},[B(Ws("VPIcon"),{icon:p,sizing:"both"}),d?B(Gi,{class:"vp-sidebar-title no-external-link-icon",config:{text:o,link:d}}):B("span",{class:"vp-sidebar-title"},o),r?B("span",{class:["vp-arrow",l.value?"down":"end"]}):null]),l.value||!r?B(q8,{key:k,config:h}):null])}}}),q8=ts({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(s){const i=We(),e=ar(),a=Q(-1),n=t=>{a.value=t===a.value?-1:t};return te(e,()=>{const t=s.config.findIndex(l=>Yu(i,l));a.value=t},{flush:"post"}),()=>B("ul",{class:"vp-sidebar-links"},s.config.map((t,l)=>B("li","children"in t?B(ow,{config:t,open:l===a.value,onToggle:()=>{n(l)}}):B(dw,{config:t}))))}}),uw=ts({name:"SideBar",slots:Object,setup(s,{slots:i}){const e=We(),a=Xu(),n=Ts();return ws(()=>{te(()=>e.hash,t=>{const l=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${e.path}${t}"]`);if(!l)return;const{top:r,height:h}=n.value.getBoundingClientRect(),{top:p,height:k}=l.getBoundingClientRect();p<r?l.scrollIntoView(!0):p+k>r+h&&l.scrollIntoView(!1)})}),()=>{var t,l,r;return B("aside",{ref:n,key:"sidebar",id:"sidebar",class:"vp-sidebar","vp-sidebar":""},[(t=i.top)==null?void 0:t.call(i),((l=i.default)==null?void 0:l.call(i))??B(q8,{config:a.value}),(r=i.bottom)==null?void 0:r.call(i)])}}}),ur=ts({name:"CommonWrapper",props:{containerClass:String,noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(s,{slots:i}){const e=js(),a=Ye(),n=Vs(),{isMobile:t,isPC:l}=dr(),r=Yi(),[h,p]=Fl(!1),[k,d]=Fl(!1),o=Xu(),u=Ts(),c=rr(u),A=Q(!1),g=V(()=>s.noNavbar||e.value.navbar===!1||n.value.navbar===!1?!1:!!(n.value.logo??n.value.repo??n.value.navbar)),f=V(()=>s.noSidebar?!1:e.value.sidebar!==!1&&o.value.length!==0&&!e.value.home),m=V(()=>e.value.externalLinkIcon??a.value.externalLinkIcon??!0),y=V(()=>!s.noToc&&!e.value.home&&(e.value.toc??n.value.toc??!0)),v={x:0,y:0},_=T=>{v.x=T.changedTouches[0].clientX,v.y=T.changedTouches[0].clientY},S=T=>{const C=T.changedTouches[0].clientX-v.x,I=T.changedTouches[0].clientY-v.y;Math.abs(C)>Math.abs(I)*1.5&&Math.abs(C)>40&&(C>0&&v.x<=80?p(!0):p(!1))};let N=0;return Is("scroll",i3(()=>{const T=window.scrollY;T<=58||T<N?A.value=!1:N+200<T&&!h.value&&(A.value=!0),N=T},300,!0)),Ca(()=>{p(!1)}),bs(t,T=>{T||p(!1)}),bs(h,T=>{c.value=T}),ws(()=>{u.value=document.body}),_i(()=>{c.value=!1}),()=>B(Ce("GlobalEncrypt")?Ws("GlobalEncrypt"):ju,()=>B("div",{class:["theme-container",{"hide-navbar":A.value,"no-navbar":!g.value,"sidebar-collapsed":!t.value&&!l.value&&k.value,"sidebar-open":t.value&&h.value,"no-sidebar":!f.value&&!i.sidebar&&!i.sidebarTop&&!i.sidebarBottom,"external-link-icon":m.value,pure:r.value,"has-toc":y.value},s.containerClass??"",e.value.containerClass??""],"vp-container":"",onTouchStart:_,onTouchEnd:S},[g.value?B(kw,{onToggleSidebar:()=>p()},{screenTop:i.navScreenTop,screenBottom:i.navScreenBottom}):null,B(wn,{name:"fade"},()=>h.value?B("div",{class:"vp-sidebar-mask",onClick:()=>p(!1)}):null),B(wn,{name:"fade"},()=>t.value?null:B("div",{class:"toggle-sidebar-wrapper",onClick:()=>d()},B("span",{class:["arrow",k.value?"end":"start"]}))),B(uw,{},{default:i.sidebar,top:i.sidebarTop,bottom:i.sidebarBottom}),i.default(),B(JD)]))}}),vo=(s,{slots:i})=>{var d,o;const{bgImage:e,bgImageDark:a,bgImageStyle:n,color:t,description:l,image:r,imageDark:h,header:p,features:k=[]}=s;return B("div",{class:"vp-feature-wrapper"},[e?B("div",{class:["vp-feature-bg",{light:a}],style:[{"background-image":`url(${e})`},n]}):null,a?B("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${a})`},n]}):null,B("div",{class:"vp-feature",style:t?{color:t}:{}},[((d=i.image)==null?void 0:d.call(i,s))??[r?B("img",{class:["vp-feature-image",{light:h}],src:Gs(r),alt:""}):null,h?B("img",{class:"vp-feature-image dark",src:Gs(h),alt:""}):null],((o=i.info)==null?void 0:o.call(i,s))??[p?B("h2",{class:"vp-feature-header"},p):null,l?B("p",{class:"vp-feature-description",innerHTML:l}):null],k.length?B("div",{class:"vp-features"},k.map(({icon:u,title:c,details:A,link:g})=>{const f=[B("h3",{class:"vp-feature-title"},[B(Ws("VPIcon"),{icon:u}),B("span",{innerHTML:c})]),B("p",{class:"vp-feature-details",innerHTML:A})];return g?fu(g)?B("a",{class:"vp-feature-item link",href:g,"aria-label":c,target:"_blank"},f):B(mi,{class:"vp-feature-item link",to:g,"aria-label":c},()=>f):B("div",{class:"vp-feature-item"},f)})):null])])};vo.displayName="FeaturePanel";const Rs=ts({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(s,{slots:i}){const e=n=>{n.style.transition=`transform ${s.duration}s ease-in-out ${s.delay}s, opacity ${s.duration}s ease-in-out ${s.delay}s`,n.style.transform="translateY(-20px)",n.style.opacity="0"},a=n=>{n.style.transform="translateY(0)",n.style.opacity="1"};return()=>{const n={name:"drop",appear:s.appear,onAppear:e,onAfterAppear:a,onEnter:e,onAfterEnter:a,onBeforeLeave:e},t=()=>i.default();return s.type==="group"?B(E4,n,t):B(wn,n,t)}}}),Bp=(s,{slots:i})=>B(wn,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:yo.resolve,onBeforeLeave:yo.pending},()=>i.default());Bp.displayName="FadeSlideY";const cw=ts({name:"HeroInfo",slots:Object,setup(s,{slots:i}){const e=js(),a=wt(),n=V(()=>e.value.heroFullScreen??!1),t=V(()=>{const{heroText:p,tagline:k}=e.value;return{text:p??(a.value.title||"Hello"),tagline:k??a.value.description,isFullScreen:n.value}}),l=V(()=>{const{heroText:p,heroImage:k,heroImageDark:d,heroAlt:o,heroImageStyle:u}=e.value;return{image:k?Gs(k):null,imageDark:d?Gs(d):null,imageStyle:u,alt:o??p??"",isFullScreen:n.value}}),r=V(()=>{const{bgImage:p,bgImageDark:k,bgImageStyle:d}=e.value;return{image:li(p)?Gs(p):null,imageDark:li(k)?Gs(k):null,bgStyle:d,isFullScreen:n.value}}),h=V(()=>e.value.actions??[]);return()=>{var p,k,d;return B("header",{class:["vp-hero-info-wrapper",{fullscreen:n.value}]},[((p=i.bg)==null?void 0:p.call(i,r.value))??[r.value.image?B("div",{class:["vp-hero-mask",{light:r.value.imageDark}],style:[{"background-image":`url(${r.value.image})`},r.value.bgStyle]}):null,r.value.imageDark?B("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${r.value.imageDark})`},r.value.bgStyle]}):null],B("div",{class:"vp-hero-info"},[((k=i.logo)==null?void 0:k.call(i,l.value))??B(Rs,{appear:!0,type:"group"},()=>{const{image:o,imageDark:u,imageStyle:c,alt:A}=l.value;return[o?B("img",{key:"light",class:["vp-hero-image",{light:u}],style:c,src:o,alt:A}):null,u?B("img",{key:"dark",class:"vp-hero-image dark",style:c,src:u,alt:A}):null]}),((d=i.info)==null?void 0:d.call(i,t.value))??B("div",{class:"vp-hero-infos"},[t.value.text?B(Rs,{appear:!0,delay:.04},()=>B("h1",{id:"main-title",class:"vp-hero-title"},t.value.text)):null,t.value.tagline?B(Rs,{appear:!0,delay:.08},()=>B("p",{id:"main-description",innerHTML:t.value.tagline})):null,h.value.length?B(Rs,{appear:!0,delay:.12},()=>B("p",{class:"vp-hero-actions"},h.value.map(o=>B(Gi,{class:["vp-hero-action",o.type??"default","no-external-link-icon"],config:o})))):null])])])}}}),H8=(s,{slots:i})=>{var o,u,c;const{bgImage:e,bgImageDark:a,bgImageStyle:n,color:t,description:l,image:r,imageDark:h,header:p,highlights:k=[],type:d="un-order"}=s;return B("div",{class:"vp-highlight-wrapper",style:t?{color:t}:{}},[e?B("div",{class:["vp-highlight-bg",{light:a}],style:[{"background-image":`url(${e})`},n]}):null,a?B("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${a})`},n]}):null,B("div",{class:"vp-highlight"},[((o=i.image)==null?void 0:o.call(i,s))??[r?B("img",{class:["vp-highlight-image",{light:h}],src:Gs(r),alt:""}):null,h?B("img",{class:"vp-highlight-image dark",src:Gs(h),alt:""}):null],((u=i.info)==null?void 0:u.call(i,s))??[B("div",{class:"vp-highlight-info-wrapper"},B("div",{class:"vp-highlight-info"},[p?B("h2",{class:"vp-highlight-header",innerHTML:p}):null,l?B("p",{class:"vp-highlight-description",innerHTML:l}):null,((c=i.highlights)==null?void 0:c.call(i,k))??B(d==="order"?"ol":d==="no-order"?"dl":"ul",{class:"vp-highlights"},k.map(({icon:A,title:g,details:f,link:m})=>{const y=[B(d==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[A?B(Ws("VPIcon"),{class:"vp-highlight-icon",icon:A}):null,B("span",{innerHTML:g})]),f?B(d==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:f}):null];return B(d==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:m}]},m?fu(m)?B("a",{class:"vp-highlight-item link",href:m,"aria-label":g,target:"_blank"},y):B(mi,{class:"vp-highlight-item link",to:m,"aria-label":g},()=>y):B("div",{class:"vp-highlight-item"},y))}))]))]])])};H8.displayName="HighlightPanel";const Ap=ts({name:"MarkdownContent",props:{custom:Boolean},setup(s){const i=Ye(),e=Q(),a=X5(e,{delayEnter:nh(i.value.focus)?i.value.focus:1500,delayLeave:0}),n=V(()=>!!(i.value.focus??i.value.pure)&&a.value);return ws(()=>{const t=document.documentElement;te(n,l=>{l?t.classList.add("is-focusing"):t.classList.remove("is-focusing")})}),()=>B(Z4,{ref:e,class:["theme-hope-content",{custom:s.custom}],"vp-content":""})}}),gw=ts({name:"HomePage",slots:Object,setup(s,{slots:i}){const e=js(),a=V(()=>{const{features:t}=e.value;return Dh(t)?t:null}),n=V(()=>{const{highlights:t}=e.value;return Dh(t)?t:null});return()=>{var t,l,r,h;return B("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":e.value.heroText===""?"":"main-title"},[(t=i.top)==null?void 0:t.call(i),B(cw),((l=n.value)==null?void 0:l.map(p=>"features"in p?B(vo,p):B(H8,p)))??(a.value?B(Rs,{appear:!0,delay:.24},()=>B(vo,{features:a.value})):null),(r=i.center)==null?void 0:r.call(i),B(Rs,{appear:!0,delay:.32},()=>B(Ap)),(h=i.bottom)==null?void 0:h.call(i)])}}}),Bw=ts({name:"BreadCrumb",setup(){const s=Bi(),i=Be(),e=ar(),a=js(),n=Vs(),t=Ts([]),l=V(()=>(a.value.breadcrumb??n.value.breadcrumb??!0)&&t.value.length>1),r=V(()=>a.value.breadcrumbIcon??n.value.breadcrumbIcon??!0),h=()=>{const p=$D(s.value.path,i.value).map(({link:k,name:d})=>{const{path:o,meta:u,notFound:c}=ne(k);return c||u.breadcrumbExclude?null:{title:u.shortTitle||u.title||d,icon:u.icon,path:o}}).filter(k=>k!==null);p.length>1&&(t.value=p)};return ws(()=>{te(e,h)}),()=>B("nav",{class:["vp-breadcrumb",{disable:!l.value}]},l.value?B("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},t.value.map((p,k)=>B("li",{class:{"is-active":t.value.length-1===k},property:"itemListElement",typeof:"ListItem"},[B(mi,{to:p.path,property:"item",typeof:"WebPage"},()=>[r.value?B(Ws("VPIcon"),{icon:p.icon}):null,B("span",{property:"name"},p.title||"Unknown")]),B("meta",{property:"position",content:k+1})]))):[])}}),Aw=ts({name:"PageNav",setup(){const s=Vs(),i=_a(),{prevLink:e,nextLink:a}=jD();return Is("keydown",n=>{n.altKey&&(n.key==="ArrowRight"?a.value&&(i(a.value.link),n.preventDefault()):n.key==="ArrowLeft"&&e.value&&(i(e.value.link),n.preventDefault()))}),()=>e.value||a.value?B("nav",{class:"vp-page-nav"},[e.value?B(Gi,{class:"prev",config:e.value},()=>{var n,t;return[B("div",{class:"hint"},[B("span",{class:"arrow start"}),s.value.metaLocales.prev]),B("div",{class:"link"},[B(Ws("VPIcon"),{icon:(n=e.value)==null?void 0:n.icon}),(t=e.value)==null?void 0:t.text])]}):null,a.value?B(Gi,{class:"next",config:a.value},()=>{var n,t;return[B("div",{class:"hint"},[s.value.metaLocales.next,B("span",{class:"arrow end"})]),B("div",{class:"link"},[(n=a.value)==null?void 0:n.text,B(Ws("VPIcon"),{icon:(t=a.value)==null?void 0:t.icon})])]}):null]):null}}),j8=()=>B(Ys,{name:"author"},()=>B("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));j8.displayName="AuthorIcon";const U8=()=>B(Ys,{name:"calendar"},()=>B("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));U8.displayName="CalendarIcon";const G8=()=>B(Ys,{name:"category"},()=>B("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));G8.displayName="CategoryIcon";const W8=()=>B(Ys,{name:"print"},()=>B("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));W8.displayName="PrintIcon";const K8=()=>B(Ys,{name:"tag"},()=>B("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));K8.displayName="TagIcon";const Y8=()=>B(Ys,{name:"timer"},()=>B("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Y8.displayName="TimerIcon";const X8=()=>B(Ys,{name:"word"},()=>[B("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),B("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);X8.displayName="WordIcon";const yw=()=>{const s=Vs(),i=Bi(),e=js();return V(()=>{var n;return e.value.contributors??s.value.contributors??!0?((n=i.value.git)==null?void 0:n.contributors)??null:null})},fw={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},mw=({docsRepo:s,docsBranch:i,docsDir:e,filePathRelative:a,editLinkPattern:n})=>{if(!a)return null;const t=Uu(s);let l;return n?l=n:t!==null&&(l=fw[t]),l?l.replace(/:repo/u,nn(s)?s:`https://github.com/${s}`).replace(/:branch/u,i).replace(/:path/u,w4(`${vu(e)}/${a}`)):null},vw=()=>{const s=Vs(),i=Bi(),e=js();return V(()=>{const{repo:a,docsRepo:n=a,docsBranch:t="main",docsDir:l="",editLink:r,editLinkPattern:h=""}=s.value;if(!(e.value.editLink??r??!0)||!n)return null;const k=mw({docsRepo:n,docsBranch:t,docsDir:l,editLinkPattern:h,filePathRelative:i.value.filePathRelative});return k?{text:s.value.metaLocales.editLink,link:k}:null})},tn=()=>{const s=Vs();return V(()=>s.value.metaLocales)},Fw=()=>{const s=wt(),i=Vs(),e=Bi(),a=js();return V(()=>{var l;return!(a.value.lastUpdated??i.value.lastUpdated??!0)||!((l=e.value.git)!=null&&l.updatedTime)?null:new Date(e.value.git.updatedTime).toLocaleString(s.value.lang)})},Ew=ts({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(s){const i=tn(),e=Yi();return()=>s.author.length?B("span",{class:"page-author-info","aria-label":`${i.value.author}${e.value?"":"🖊"}`,...e.value?{}:{"data-balloon-pos":"up"}},[B(j8),B("span",s.author.map(a=>a.url?B("a",{class:"page-author-item",href:a.url,target:"_blank",rel:"noopener noreferrer"},a.name):B("span",{class:"page-author-item"},a.name))),B("span",{property:"author",content:s.author.map(a=>a.name).join(", ")})]):null}}),bw=ts({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(s){const i=tn(),e=_a(),a=Yi();return()=>s.category.length?B("span",{class:"page-category-info","aria-label":`${i.value.category}${a.value?"":"🌈"}`,...a.value?{}:{"data-balloon-pos":"up"}},[B(G8),s.category.map(({name:n,path:t})=>B("span",{class:["page-category-item",{[`color${kr(n,Number(It.colorNumber))}`]:!a.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&e(t)}},n)),B("meta",{property:"articleSection",content:s.category.map(({name:n})=>n).join(",")})]):null}}),Cw=ts({name:"DateInfo",inheritAttrs:!1,props:{date:Object,localizedDate:String},setup(s){const i=Cu(),e=tn(),a=Yi();return()=>s.date?B("span",{class:"page-date-info","aria-label":`${e.value.date}${a.value?"":"📅"}`,...a.value?{}:{"data-balloon-pos":"up"}},[B(U8),B("span",{"data-allow-mismatch":"text"},s.localizedDate??s.date.toLocaleDateString(i.value)),B("meta",{property:"datePublished",content:s.date.toISOString()||""})]):null}}),_w=ts({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(s){const i=tn();return()=>s.isOriginal?B("span",{class:"page-original-info"},i.value.origin):null}}),Dw=ts({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:Object,readingTimeLocale:Object},setup(s){const i=tn(),e=Yi(),a=V(()=>{if(!s.readingTime)return null;const{minutes:n}=s.readingTime;return n<1?"PT1M":`PT${Math.round(n)}M`});return()=>{var n;return(n=s.readingTimeLocale)!=null&&n.time?B("span",{class:"page-reading-time-info","aria-label":`${i.value.readingTime}${e.value?"":"⌛"}`,...e.value?{}:{"data-balloon-pos":"up"}},[B(Y8),B("span",s.readingTimeLocale.time),B("meta",{property:"timeRequired",content:a.value})]):null}}}),ww=ts({name:"TagInfo",inheritAttrs:!1,props:{tag:Array},setup(s){const i=tn(),e=_a(),a=Yi();return()=>{var n;return(n=s.tag)!=null&&n.length?B("span",{class:"page-tag-info","aria-label":`${i.value.tag}${a.value?"":"🏷"}`,...a.value?{}:{"data-balloon-pos":"up"}},[B(K8),s.tag.map(({name:t,path:l})=>B("span",{class:["page-tag-item",{[`color${kr(t,Number(It.colorNumber))}`]:!a.value,clickable:l}],role:l?"navigation":"",onClick:()=>{l&&e(l)}},t)),B("meta",{property:"keywords",content:s.tag.map(({name:t})=>t).join(",")})]):null}}}),xw=ts({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:Object,readingTimeLocale:Object},setup(s){const i=tn(),e=Yi();return()=>{var a,n;return(a=s.readingTimeLocale)!=null&&a.words?B("span",{class:"page-word-info","aria-label":`${i.value.words}${e.value?"":"🔠"}`,...e.value?{}:{"data-balloon-pos":"up"}},[B(X8),B("span",s.readingTimeLocale.words),B("meta",{property:"wordCount",content:(n=s.readingTime)==null?void 0:n.words})]):null}}}),Z8=ts({name:"PageInfo",components:{AuthorInfo:Ew,CategoryInfo:bw,DateInfo:Cw,OriginalInfo:_w,PageViewInfo:rh,ReadingTimeInfo:Dw,TagInfo:ww,WordInfo:xw},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(s){const i=Yi();return()=>s.items?B("div",{class:"page-info"},s.items.map(e=>B(Ws(`${e}Info`),{...s.info,isPure:i.value}))):null}}),Tw=ts({name:"PageTitle",setup(){const s=Bi(),i=js(),e=Vs(),{info:a,items:n}=VD();return()=>B("div",{class:"vp-page-title"},[B("h1",[e.value.titleIcon===!1?null:B(Ws("VPIcon"),{icon:i.value.icon}),s.value.title]),B(Z8,{info:a.value,items:n.value}),B("hr")])}}),J8=()=>B(Ys,{name:"edit"},()=>[B("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),B("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);J8.displayName="EditIcon";const Sw=ts({name:"PageMeta",setup(){const s=Vs(),i=vw(),e=Fw(),a=yw();return()=>{var t;const{metaLocales:n}=s.value;return B("footer",{class:"vp-page-meta"},[i.value?B("div",{class:"vp-meta-item edit-link"},B(Gi,{class:"vp-meta-label",config:i.value},{before:()=>B(J8)})):null,B("div",{class:"vp-meta-item git-info"},[e.value?B("div",{class:"update-time"},[B("span",{class:"vp-meta-label"},`${n.lastUpdated}: `),B("span",{class:"vp-meta-info","data-allow-mismatch":"text"},e.value)]):null,(t=a.value)!=null&&t.length?B("div",{class:"contributors"},[B("span",{class:"vp-meta-label"},`${n.contributors}: `),a.value.map(({email:l,name:r},h,p)=>[B("span",{class:"vp-meta-info",title:`email: ${l}`},r),h!==p.length-1?",":""])]):null])])}}}),Iw=ts({name:"PrintButton",setup(){const s=Ye(),i=Vs();return()=>s.value.print===!1?null:B("button",{type:"button",class:"print-button",title:i.value.metaLocales.print,onClick:()=>{window.print()}},B(W8))}}),Q8=ts({name:"TOC",props:{items:Array,options:Object},slots:Object,setup(s,{slots:i}){const e=Ms(s,"options"),a=X7(e),n=We(),t=tn(),[l,r]=Fl(),h=Ts(),p=Q("-1.7rem"),k=c=>{var A;(A=h.value)==null||A.scrollTo({top:c,behavior:"smooth"})},d=()=>{if(h.value){const c=document.querySelector(".vp-toc-item.active");c?p.value=`${c.getBoundingClientRect().top-h.value.getBoundingClientRect().top+h.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};ws(()=>{te(()=>n.hash,c=>{if(h.value){const A=document.querySelector(`#toc a.vp-toc-link[href$="${c}"]`);if(!A)return;const{top:g,height:f}=h.value.getBoundingClientRect(),{top:m,height:y}=A.getBoundingClientRect();m<g?k(h.value.scrollTop+m-g):m+y>g+f&&k(h.value.scrollTop+m+y-g-f)}},{flush:"post"}),te(()=>n.fullPath,d,{flush:"post"})});const o=({title:c,level:A,slug:g})=>B(mi,{to:`#${g}`,class:["vp-toc-link",`level${A}`],onClick:()=>{r()}},()=>c),u=c=>c.length?B("ul",{class:"vp-toc-list"},c.map(A=>{const g=u(A.children);return[B("li",{class:["vp-toc-item",{active:n.hash===`#${A.slug}`}]},o(A)),g?B("li",g):null]})):null;return()=>{var f,m,y;const c=(f=s.items)!=null&&f.length?u(s.items):u(a.value),A=(m=i.before)==null?void 0:m.call(i),g=(y=i.after)==null?void 0:y.call(i);return B(Du,()=>c||A||g?B("div",{class:"vp-toc-placeholder"},[B("aside",{id:"toc","vp-toc":""},[A,c?[B("div",{class:"vp-toc-header",onClick:()=>{r()}},[t.value.toc,B(Iw),B("div",{class:["arrow",l.value?"down":"end"]})]),B("div",{class:["vp-toc-wrapper",l.value?"open":""],ref:h},[c,B("div",{class:"vp-toc-marker",style:{top:p.value}})])]:null,g])]):null)}}}),Ju=ts({name:"NormalPage",slots:Object,setup(s,{slots:i}){const e=js(),{isDarkMode:a}=or(),n=Vs(),t=V(()=>e.value.toc??n.value.toc??!0),l=V(()=>[2,(e.value.headerDepth??n.value.headerDepth??2)+1]);return()=>B("main",{id:"main-content",class:"vp-page"},B(Ce("LocalEncrypt")?Ws("LocalEncrypt"):ju,()=>{var r,h,p,k;return[(r=i.top)==null?void 0:r.call(i),e.value.cover?B("div",{class:"page-cover"},B("img",{src:Gs(e.value.cover),alt:"","no-view":""})):null,B(Bw),B(Tw),t.value?B(Q8,{options:{levels:l.value}},{before:i.tocBefore,after:i.tocAfter}):null,(h=i.contentBefore)==null?void 0:h.call(i),B(Ap),(p=i.contentAfter)==null?void 0:p.call(i),B(Sw),B(Aw),Ce("CommentService")?B(Ws("CommentService"),{darkmode:a.value}):null,(k=i.bottom)==null?void 0:k.call(i)]}))}}),Rw=ts({name:"PortfolioHero",slots:Object,setup(s,{slots:i}){const e=F8(),a=js(),n=Q(0),t=V(()=>{var o;return((o=a.value.titles)==null?void 0:o[n.value])??""}),l=Q(""),r=V(()=>{const{name:o,avatar:u,avatarDark:c,avatarAlt:A,avatarStyle:g}=a.value;return{name:o??e.value.name,avatar:u?Gs(u):null,avatarDark:c?Gs(c):null,avatarStyle:g,alt:(A||o)??""}}),h=V(()=>{const{bgImage:o,bgImageDark:u,bgImageStyle:c}=a.value;return{image:li(o)?Gs(o):null,imageDark:li(u)?Gs(u):null,bgStyle:c}}),p=V(()=>{const{welcome:o,name:u,titles:c=[],medias:A}=a.value;return{name:u??e.value.name,welcome:o??"👋 Hi There, I'm",title:l.value,titles:c,medias:A??null}}),k=()=>{l.value="";let o=0,u=!1;const c=async()=>{if(!u)if(l.value+=t.value[o],o+=1,await qs(),o<t.value.length)setTimeout(()=>{c()},150);else{const A=p.value.titles.length;setTimeout(()=>{n.value=A<=1||n.value===p.value.titles.length-1?0:n.value+1},1e3)}};return c(),()=>{u=!0}};let d;return ws(()=>{te(t,()=>{d==null||d(),d=k()})}),()=>{var o,u,c;return B("section",{id:"portfolio",class:["vp-portfolio",{bg:h.value.image}]},[((o=i.bg)==null?void 0:o.call(i,h.value))??[h.value.image?B("div",{class:["vp-portfolio-mask",{light:h.value.imageDark}],style:[{background:`url(${h.value.image}) center/cover no-repeat`},h.value.bgStyle]}):null,h.value.imageDark?B("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${h.value.imageDark}) center/cover no-repeat`},h.value.bgStyle]}):null],((u=i.avatar)==null?void 0:u.call(i,r.value))??B("div",{class:"vp-portfolio-avatar"},[B(Rs,{delay:.04},()=>{const{avatar:A,avatarDark:g,name:f,alt:m,avatarStyle:y}=r.value;return[A?B("img",{key:"light",class:{light:g},src:A,title:f,alt:m,style:y}):null,g?B("img",{key:"dark",class:"dark",src:g,title:f,alt:m,style:y}):null]})]),B("div",{class:"vp-portfolio-container"},((c=i.info)==null?void 0:c.call(i,p.value))??B("div",{class:"vp-portfolio-info"},[B(Rs,{appear:!0,delay:.08},()=>B("h6",{class:"vp-portfolio-welcome"},p.value.welcome)),B(Rs,{appear:!0,delay:.12},()=>B("h1",{class:"vp-portfolio-name",id:"main-title"},p.value.name)),B(Rs,{appear:!0,delay:.16},()=>B("h2",{class:"vp-portfolio-title"},l.value)),B(Rs,{appear:!0,delay:.2},()=>p.value.medias?B("div",{class:"vp-portfolio-medias"},p.value.medias.map(({name:A,url:g,icon:f})=>B("a",{class:"vp-portfolio-media",href:g,rel:"noopener noreferrer",target:"_blank",title:A},B(Ws("VPIcon"),{icon:f,sizing:"both"})))):Ce("SocialMedias")?B(Ws("SocialMedias")):null)]))])}}}),Ow=ts({name:"PortfolioHome",setup(){const s=js(),i=V(()=>s.value.content??"portfolio");return()=>B("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[B(Rw),i.value==="none"?null:B("div",{},B(Rs,{appear:!0,delay:.24},()=>B(Ap,{class:{"vp-portfolio-content":i.value==="portfolio"}})))])}}),cr=ts({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(s){const i=Vs(),e=Ts(),a=({target:n})=>{const t=document.querySelector(n.hash);if(t){const l=()=>{t.removeAttribute("tabindex"),t.removeEventListener("blur",l)};t.setAttribute("tabindex","-1"),t.addEventListener("blur",l),t.focus(),window.scrollTo(0,0)}};return Ca(()=>{var n;(n=e.value)==null||n.focus()}),()=>[B("span",{ref:e,tabindex:"-1"}),B("a",{href:`#${s.content}`,class:"vp-skip-link sr-only",onClick:a},i.value.routeLocales.skipToContent)]}}),yp=ts({name:"Layout",slots:Object,setup(s,{slots:i}){const e=Ye(),a=Vs(),n=Bi(),t=js(),l=Yi(),{isMobile:r}=dr(),h=V(()=>{var p,k;return((p=a.value.blog)==null?void 0:p.sidebarDisplay)??((k=e.value.blog)==null?void 0:k.sidebarDisplay)??"mobile"});return()=>[B(cr),B(ur,{},{default:()=>{var p;return((p=i.default)==null?void 0:p.call(i))??(t.value.portfolio?B(Ow):t.value.home?B(gw):B(l.value?ju:Bp,()=>B(Ju,{key:n.value.path},{top:i.top,bottom:i.bottom,contentBefore:i.contentBefore,contentAfter:i.contentAfter,tocBefore:i.tocBefore,tocAfter:i.tocAfter})))},navScreenBottom:h.value==="none"&&Ce("BloggerInfo")?()=>B(Ws("BloggerInfo")):null,sidebar:!r.value&&h.value==="always"&&Ce("BloggerInfo")?()=>B(Ws("BloggerInfo")):null})]}}),Pw=ts({name:"NotFoundHint",setup(){const s=Vs(),i=()=>{const e=s.value.routeLocales.notFoundMsg;return e[Math.floor(Math.random()*e.length)]};return()=>B("div",{class:"not-found-hint"},[B("p",{class:"error-code"},"404"),B("h1",{class:"error-title"},s.value.routeLocales.notFoundTitle),B("p",{class:"error-hint"},i())])}}),Lw=ts({name:"NotFound",slots:Object,setup(s,{slots:i}){const e=De(),a=Be(),n=Vs();return()=>[B(cr),B(ur,{noSidebar:!0},()=>{var t;return B("main",{id:"main-content",class:"vp-page not-found"},((t=i.default)==null?void 0:t.call(i))??[B(Pw),B("div",{class:"actions"},[B("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},n.value.routeLocales.back),B("button",{type:"button",class:"action-button",onClick:()=>{e.push(n.value.home??a.value)}},n.value.routeLocales.home)])])})]}}),Nw={},Mw=JSON.parse('{"category":{"/":{"path":"/category/","map":{}}},"tag":{"/":{"path":"/tag/","map":{}}}}'),s6=JSON.parse('["/","/src/SUMMARY.html","/src/about-book.html","/src/beat-ai.html","/src/community.html","/src/github.html","/src/index-list.html","/src/into-rust.html","/src/practice.html","/src/rust-weekly.html","/src/rustt.html","/src/rusty-book.html","/src/some-thoughts.html","/assets/rustlings-zh/CHANGELOG.html","/assets/rustlings-zh/CONTRIBUTING.html","/assets/rustlings-zh/","/assets/writing-material/books.html","/assets/writing-material/courses.html","/assets/writing-material/demos_for_learning.html","/assets/writing-material/good-sourcecode.html","/assets/writing-material/%E8%AF%BB%E8%80%85%E7%96%91%E6%83%91%E7%9A%84%E7%82%B9%E8%AE%B0%E5%BD%95.html","/src/advance/errors.html","/src/advance/global-variable.html","/src/advance/hrtb.html","/src/advance/intro.html","/src/advance/macro.html","/src/advance/simd.html","/src/advance-practice/async.html","/src/advance-practice/bridging-with-sync.html","/src/advance-practice/channels.html","/src/advance-practice/design-pattern.html","/src/advance-practice/frame.html","/src/advance-practice/getting-startted.html","/src/advance-practice/graceful-shutdown.html","/src/advance-practice/intro.html","/src/advance-practice/io.html","/src/advance-practice/overview.html","/src/advance-practice/select.html","/src/advance-practice/shared-state.html","/src/advance-practice/spawning.html","/src/advance-practice/stream.html","/src/advance-practice1/graceful-shutdown.html","/src/advance-practice1/intro.html","/src/advance-practice1/multi-threads.html","/src/advance-practice1/web-server.html","/src/appendix/derive.html","/src/appendix/difficulties.html","/src/appendix/expressions.html","/src/appendix/intro.html","/src/appendix/keywords.html","/src/appendix/operators.html","/src/appendix/prelude.html","/src/appendix/rust-version.html","/src/basic/comment.html","/src/basic/flow-control.html","/src/basic/formatted-output.html","/src/basic/intro.html","/src/basic/lifetime.html","/src/basic/method.html","/src/basic/variable.html","/src/basic-practice/base-features.html","/src/basic-practice/envs.html","/src/basic-practice/intro.html","/src/basic-practice/iterators.html","/src/basic-practice/refactoring.html","/src/basic-practice/stderr.html","/src/basic-practice/tests.html","/src/cargo/getting-started.html","/src/cargo/git-auth.html","/src/cargo/intro.html","/src/compiler/intro.html","/src/difficulties/cow.html","/src/difficulties/eq.html","/src/difficulties/intro.html","/src/difficulties/lifetime.html","/src/difficulties/move-copy.html","/src/difficulties/pointer.html","/src/difficulties/slice.html","/src/difficulties/string.html","/src/first-try/cargo.html","/src/first-try/editor.html","/src/first-try/hello-world.html","/src/first-try/installation.html","/src/first-try/intro.html","/src/first-try/slowly-downloading.html","/src/first-try/sth-you-should-not-do.html","/src/libraries/intro.html","/src/logs/about-log.html","/src/logs/intro.html","/src/logs/log.html","/src/logs/tracing-logger.html","/src/logs/tracing.html","/src/practice/best-pratice.html","/src/practice/interview.html","/src/practice/intro.html","/src/practice/naming.html","/src/practice/third-party-libs.html","/src/profiling/intro.html","/src/std/hashmap.html","/src/std/intro.html","/src/std/iterator.html","/src/std/search.html","/src/std/vector.html","/src/templates/intro.html","/src/test/assertion.html","/src/test/benchmark.html","/src/test/ci.html","/src/test/intro.html","/src/test/unit-integration-test.html","/src/test/write-tests.html","/src/too-many-lists/do-we-need-it.html","/src/too-many-lists/intro.html","/src/usecases/aws-rust.html","/src/usecases/intro.html","/assets/rustlings-zh/exercises/","/assets/writing-material/posts/Iterator.html","/assets/writing-material/posts/SIMD.html","/assets/writing-material/posts/atomic.html","/assets/writing-material/posts/attributes.html","/assets/writing-material/posts/file.html","/assets/writing-material/posts/function_signature.html","/assets/writing-material/posts/generics.html","/assets/writing-material/posts/hashmap.html","/assets/writing-material/posts/identifier.html","/assets/writing-material/posts/images.html","/assets/writing-material/posts/interview.html","/assets/writing-material/posts/io.html","/assets/writing-material/posts/lifetime.html","/assets/writing-material/posts/lifetime_elision_rules.html","/assets/writing-material/posts/non-lexical-lifetime.html","/assets/writing-material/posts/operators.html","/assets/writing-material/posts/package.html","/assets/writing-material/posts/performance.html","/assets/writing-material/posts/plugins.html","/assets/writing-material/posts/reference.html","/assets/writing-material/posts/rust-analyser.html","/assets/writing-material/posts/self-referential.html","/assets/writing-material/posts/string.html","/assets/writing-material/posts/system_command.html","/assets/writing-material/posts/threads.html","/assets/writing-material/posts/to_resolved.html","/assets/writing-material/posts/tokio.html","/assets/writing-material/posts/trivia.html","/assets/writing-material/posts/wasm.html","/assets/writing-material/style_guide/coding.html","/assets/writing-material/style_guide/naming.html","/src/advance/async/async-await.html","/src/advance/async/future-excuting.html","/src/advance/async/getting-started.html","/src/advance/async/intro.html","/src/advance/async/multi-futures-simultaneous.html","/src/advance/async/pain-points-and-workarounds.html","/src/advance/async/pin-unpin.html","/src/advance/async/web-server.html","/src/advance/circle-self-ref/circle-reference.html","/src/advance/circle-self-ref/intro.html","/src/advance/circle-self-ref/self-referential.html","/src/advance/concurrency-with-threads/concurrency-parallelism.html","/src/advance/concurrency-with-threads/intro.html","/src/advance/concurrency-with-threads/message-passing.html","/src/advance/concurrency-with-threads/races.html","/src/advance/concurrency-with-threads/ref-counter-lock.html","/src/advance/concurrency-with-threads/send-sync.html","/src/advance/concurrency-with-threads/sync1.html","/src/advance/concurrency-with-threads/sync2.html","/src/advance/concurrency-with-threads/thread.html","/src/advance/difficulties/pointer.html","/src/advance/functional-programing/closure.html","/src/advance/functional-programing/intro.html","/src/advance/functional-programing/iterator.html","/src/advance/into-types/converse.html","/src/advance/into-types/custom-type.html","/src/advance/into-types/enum-int.html","/src/advance/into-types/intro.html","/src/advance/into-types/sized.html","/src/advance/lifetime/advance.html","/src/advance/lifetime/intro.html","/src/advance/lifetime/misconceptions.html","/src/advance/lifetime/static.html","/src/advance/smart-pointer/box.html","/src/advance/smart-pointer/cell-refcell.html","/src/advance/smart-pointer/deref.html","/src/advance/smart-pointer/drop.html","/src/advance/smart-pointer/intro.html","/src/advance/smart-pointer/rc-arc.html","/src/advance/unsafe/inline-asm.html","/src/advance/unsafe/intro.html","/src/advance/unsafe/superpowers.html","/src/advance/unsafe/ub.html","/src/appendix/rust-versions/1.58.html","/src/appendix/rust-versions/1.59.html","/src/appendix/rust-versions/1.60.html","/src/appendix/rust-versions/1.61.html","/src/appendix/rust-versions/1.62.html","/src/appendix/rust-versions/1.63.html","/src/appendix/rust-versions/1.64.html","/src/appendix/rust-versions/1.65.html","/src/appendix/rust-versions/1.66.html","/src/appendix/rust-versions/1.67.html","/src/appendix/rust-versions/1.68.html","/src/appendix/rust-versions/1.69.html","/src/appendix/rust-versions/1.70.html","/src/appendix/rust-versions/1.71.html","/src/appendix/rust-versions/1.72.html","/src/appendix/rust-versions/1.73.html","/src/appendix/rust-versions/1.74.html","/src/appendix/rust-versions/1.75.html","/src/appendix/rust-versions/1.76.html","/src/appendix/rust-versions/1.77.html","/src/appendix/rust-versions/1.78.html","/src/appendix/rust-versions/1.79.html","/src/appendix/rust-versions/1.80.html","/src/appendix/rust-versions/1.81.html","/src/appendix/rust-versions/1.82.html","/src/appendix/rust-versions/1.83.html","/src/appendix/rust-versions/1.84.html","/src/appendix/rust-versions/1.85.html","/src/appendix/rust-versions/intro.html","/src/basic/base-type/char-bool.html","/src/basic/base-type/function.html","/src/basic/base-type/","/src/basic/base-type/numbers.html","/src/basic/base-type/statement-expression.html","/src/basic/collections/hashmap.html","/src/basic/collections/intro.html","/src/basic/collections/vector.html","/src/basic/compound-type/array.html","/src/basic/compound-type/enum.html","/src/basic/compound-type/intro.html","/src/basic/compound-type/string-slice.html","/src/basic/compound-type/struct.html","/src/basic/compound-type/tuple.html","/src/basic/crate-module/crate.html","/src/basic/crate-module/intro.html","/src/basic/crate-module/module.html","/src/basic/crate-module/use.html","/src/basic/match-pattern/all-patterns.html","/src/basic/match-pattern/intro.html","/src/basic/match-pattern/match-if-let.html","/src/basic/match-pattern/option.html","/src/basic/match-pattern/pattern-match.html","/src/basic/ownership/borrowing.html","/src/basic/ownership/","/src/basic/ownership/ownership.html","/src/basic/result-error/intro.html","/src/basic/result-error/panic.html","/src/basic/result-error/result.html","/src/basic/trait/advance-trait.html","/src/basic/trait/generic.html","/src/basic/trait/intro.html","/src/basic/trait/trait-object.html","/src/basic/trait/trait.html","/src/cargo/guide/build-cache.html","/src/cargo/guide/cargo-cache.html","/src/cargo/guide/cargo-toml-lock.html","/src/cargo/guide/dependencies.html","/src/cargo/guide/download-package.html","/src/cargo/guide/intro.html","/src/cargo/guide/package-layout.html","/src/cargo/guide/tests-ci.html","/src/cargo/guide/why-exist.html","/src/cargo/reference/cargo-target.html","/src/cargo/reference/configuration.html","/src/cargo/reference/deps-overriding.html","/src/cargo/reference/env.html","/src/cargo/reference/intro.html","/src/cargo/reference/manifest.html","/src/cargo/reference/package-id.html","/src/cargo/reference/profile.html","/src/cargo/reference/profiles.html","/src/cargo/reference/publishing-on-crates.io.html","/src/cargo/reference/specify-deps.html","/src/cargo/reference/workspaces.html","/src/compiler/fight-with-compiler/intro.html","/src/compiler/fight-with-compiler/phantom-data.html","/src/compiler/fight-with-compiler/unconstrained.html","/src/compiler/pitfalls/arithmetic-overflow.html","/src/compiler/pitfalls/closure-with-lifetime.html","/src/compiler/pitfalls/","/src/compiler/pitfalls/iterator-everywhere.html","/src/compiler/pitfalls/lazy-iterators.html","/src/compiler/pitfalls/main-with-channel-blocked.html","/src/compiler/pitfalls/multiple-mutable-references.html","/src/compiler/pitfalls/stack-overflow.html","/src/compiler/pitfalls/the-disabled-mutability.html","/src/compiler/pitfalls/use-vec-in-for.html","/src/compiler/pitfalls/utf8-performance.html","/src/compiler/pitfalls/weird-ranges.html","/src/libraries/command/intro.html","/src/libraries/command/structopt.html","/src/libraries/http/intro.html","/src/libraries/http/reqwest.html","/src/libraries/json/intro.html","/src/libraries/json/serde.html","/src/logs/observe/about-observe.html","/src/logs/observe/intro.html","/src/logs/observe/trace.html","/src/profiling/compiler/attributes.html","/src/profiling/compiler/intro.html","/src/profiling/compiler/llvm.html","/src/profiling/compiler/phantom-data.html","/src/profiling/compiler/speed-up.html","/src/profiling/memory/allocation.html","/src/profiling/memory/intro.html","/src/profiling/memory/layout.html","/src/profiling/memory/pointer-ref.html","/src/profiling/memory/uninit.html","/src/profiling/memory/virtual.html","/src/profiling/performance/allocator.html","/src/profiling/performance/calculate.html","/src/profiling/performance/clone-copy.html","/src/profiling/performance/cpu-cache.html","/src/profiling/performance/deep-into-move.html","/src/profiling/performance/early-optimise.html","/src/profiling/performance/enum.html","/src/profiling/performance/heap-stack.html","/src/profiling/performance/intro.html","/src/profiling/performance/runtime-check.html","/src/profiling/performance/string.html","/src/profiling/performance/tools.html","/src/templates/files/dir.html","/src/templates/files/intro.html","/src/templates/http/intro.html","/src/too-many-lists/advanced-lists/double-singly.html","/src/too-many-lists/advanced-lists/intro.html","/src/too-many-lists/advanced-lists/stack-allocated.html","/src/too-many-lists/advanced-lists/unsafe-deque.html","/src/too-many-lists/bad-stack/basic-operations.html","/src/too-many-lists/bad-stack/final-code.html","/src/too-many-lists/bad-stack/intro.html","/src/too-many-lists/bad-stack/layout.html","/src/too-many-lists/deque/final-code.html","/src/too-many-lists/deque/intro.html","/src/too-many-lists/deque/iterator.html","/src/too-many-lists/deque/layout.html","/src/too-many-lists/deque/peek.html","/src/too-many-lists/deque/symmetric.html","/src/too-many-lists/ok-stack/intro.html","/src/too-many-lists/ok-stack/iter.html","/src/too-many-lists/ok-stack/itermut.html","/src/too-many-lists/ok-stack/peek.html","/src/too-many-lists/ok-stack/type-optimizing.html","/src/too-many-lists/persistent-stack/drop-arc.html","/src/too-many-lists/persistent-stack/intro.html","/src/too-many-lists/persistent-stack/layout.html","/src/too-many-lists/production-unsafe-deque/basics.html","/src/too-many-lists/production-unsafe-deque/boring-combinatorics.html","/src/too-many-lists/production-unsafe-deque/drop-and-panic-safety.html","/src/too-many-lists/production-unsafe-deque/filling-in-random-bits.html","/src/too-many-lists/production-unsafe-deque/final-code.html","/src/too-many-lists/production-unsafe-deque/implementing-cursors.html","/src/too-many-lists/production-unsafe-deque/intro.html","/src/too-many-lists/production-unsafe-deque/layout.html","/src/too-many-lists/production-unsafe-deque/send-sync-and-compile-tests.html","/src/too-many-lists/production-unsafe-deque/testing-cursors.html","/src/too-many-lists/production-unsafe-deque/testing.html","/src/too-many-lists/production-unsafe-deque/variance-and-phantomData.html","/src/too-many-lists/unsafe-queue/basics.html","/src/too-many-lists/unsafe-queue/extra-junk.html","/src/too-many-lists/unsafe-queue/final-code.html","/src/too-many-lists/unsafe-queue/intro.html","/src/too-many-lists/unsafe-queue/layout.html","/src/too-many-lists/unsafe-queue/layout2.html","/src/too-many-lists/unsafe-queue/miri.html","/src/too-many-lists/unsafe-queue/stacked-borrow.html","/src/too-many-lists/unsafe-queue/testing-stacked-borrow.html","/assets/rustlings-zh/exercises/clippy/","/assets/rustlings-zh/exercises/collections/","/assets/rustlings-zh/exercises/conversions/","/assets/rustlings-zh/exercises/enums/","/assets/rustlings-zh/exercises/error_handling/","/assets/rustlings-zh/exercises/functions/","/assets/rustlings-zh/exercises/generics/","/assets/rustlings-zh/exercises/if/","/assets/rustlings-zh/exercises/macros/","/assets/rustlings-zh/exercises/modules/","/assets/rustlings-zh/exercises/move_semantics/","/assets/rustlings-zh/exercises/option/","/assets/rustlings-zh/exercises/primitive_types/","/assets/rustlings-zh/exercises/standard_library_types/","/assets/rustlings-zh/exercises/strings/","/assets/rustlings-zh/exercises/structs/","/assets/rustlings-zh/exercises/tests/","/assets/rustlings-zh/exercises/threads/","/assets/rustlings-zh/exercises/traits/","/assets/rustlings-zh/exercises/variables/","/assets/writing-material/posts/fight-with-compiler-check/borrow.html","/assets/writing-material/posts/fight-with-compiler-check/generic.html","/assets/writing-material/posts/tests/doc_test.html","/assets/writing-material/posts/tests/integration_test.html","/assets/writing-material/posts/tests/misc.html","/assets/writing-material/posts/tests/unit_test.html","/src/cargo/reference/build-script/examples.html","/src/cargo/reference/build-script/intro.html","/src/cargo/reference/features/examples.html","/src/cargo/reference/features/intro.html","/src/compiler/fight-with-compiler/borrowing/borrow-distinct-fields-of-struct.html","/src/compiler/fight-with-compiler/borrowing/intro.html","/src/compiler/fight-with-compiler/borrowing/ref-exist-in-out-fn.html","/src/compiler/fight-with-compiler/lifetime/closure-with-static.html","/src/compiler/fight-with-compiler/lifetime/intro.html","/src/compiler/fight-with-compiler/lifetime/loop.html","/src/compiler/fight-with-compiler/lifetime/too-long1.html","/src/compiler/fight-with-compiler/lifetime/too-long2.html","/src/profiling/compiler/optimization/intro.html","/src/profiling/compiler/optimization/option.html","/src/profiling/profiling/performance/benchmark.html"]'),Vw=JSON.parse('{"article":{"/":{"path":"/Blog/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406]}},"star":{"/":{"path":"/star/","indexes":[]}},"timeline":{"/":{"path":"/timeline/","indexes":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406]}}}'),Fo=Ts(Mw);Ge(Fo);const i6=s=>{const i=Bi(),e=js(),a=Be();return V(()=>{var r;const n=s??((r=e.value.blog)==null?void 0:r.key)??"";if(!n)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!(n in Fo.value))throw new Error(`useBlogCategory: key ${n} is invalid`);const t=Fo.value[n][a.value],l={path:t.path,map:{}};for(const h in t.map){const p=t.map[h];l.map[h]={path:p.path,items:[]};for(const k of p.indexes){const{path:d,meta:o}=ne(s6[k]);l.map[h].items.push({path:d,info:o})}i.value.path===p.path&&(l.currentItems=l.map[h].items)}return l})},Eo=Ts(Vw);Ge(Eo);const fp=s=>{const i=js(),e=Be();return V(()=>{var l;const a=s??((l=i.value.blog)==null?void 0:l.key)??"";if(!a)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!(a in Eo.value))throw new Error(`useBlogType: key ${s} is invalid`);const n=Eo.value[a][e.value],t={path:n.path,items:[]};for(const r of n.indexes){const{path:h,meta:p}=ne(s6[r]);t.items.push({path:h,info:p})}return t})},e6=Symbol(""),Qu=()=>{const s=Ns(e6);if(!s)throw new Error("useTimeline() is called without provider.");return s},$w=()=>{const s=fp("timeline"),i=Cu(),e=V(()=>{const a=[];return s.value.items.forEach(({info:n,path:t})=>{const l=Su(n.date);if(l){const r=l.getFullYear();(!a[0]||a[0].year!==r)&&a.unshift({year:r,items:[]}),a[0].items.push({date:l.toLocaleDateString(i.value,{month:"numeric",day:"numeric"}),info:n,path:t})}}),{...s.value,config:a.reverse()}});Di(e6,e)},a6=Symbol(""),gr=()=>{const s=Ns(a6);if(!s)throw new Error("useArticles() is called without provider.");return s},zw=()=>{const s=fp("article");Di(a6,s)},n6=Symbol.for("categoryMap"),Br=()=>{const s=Ns(n6);if(!s)throw new Error("useCategoryMap() is called without provider.");return s},qw=()=>{const s=i6("category");Di(n6,s)},t6=Symbol(""),sc=()=>{const s=Ns(t6);if(!s)throw new Error("useStars() is called without provider.");return s},Hw=()=>{const s=fp("star");Di(t6,s)},l6=Symbol.for("tagMap"),Ar=()=>{const s=Ns(l6);if(!s)throw new Error("useTagMap() is called without provider.");return s},jw=()=>{const s=i6("tag");Di(l6,s)},Uw=()=>{zw(),qw(),Hw(),jw(),$w()},yr=()=>{const s=Ye(),i=Vs();return V(()=>({...s.value.blog,...i.value.blog}))},Gw=s=>{const i=Vs();return V(()=>{const{["author"]:e}=s.value;return e?Tl(e):e===!1?[]:Tl(i.value.author,!1)})},Ww=s=>{const i=Br();return V(()=>u8(s.value.category).map(e=>({name:e,path:i.value.map[e].path})))},Kw=s=>{const i=Ar();return V(()=>c8(s.value.tag).map(e=>({name:e,path:i.value.map[e].path})))},Yw=s=>V(()=>{const{["date"]:i}=s.value;return Su(i)}),Xw=s=>{const i=Ms(s,"info"),e=yr(),a=Gw(i),n=Ww(i),t=Kw(i),l=Yw(i),r=C8(),h=V(()=>({author:a.value,category:n.value,date:l.value,localizedDate:i.value.localizedDate??"",tag:t.value,isOriginal:i.value.isOriginal??!1,readingTime:i.value.readingTime??null,readingTimeLocale:i.value.readingTime&&r.value?b8(i.value.readingTime,r.value):null,pageview:s.path})),p=V(()=>e.value.articleInfo);return{info:h,items:p}},ln=()=>{const s=Vs();return V(()=>s.value.blogLocales)},r6=ts({name:"SocialMedias",setup(){const s=yr(),i=Yi(),e=V(()=>Pn(s.value.medias??{}).map(([a,n])=>typeof n=="string"?{name:a,icon:Nw[a],link:n}:{name:a,...n}));return()=>e.value.length?B("div",{class:"vp-social-medias"},e.value.map(({name:a,icon:n,link:t})=>B("a",{class:"vp-social-media",href:t,rel:"noopener noreferrer",target:"_blank","aria-label":a||"",...i.value?{}:{"data-balloon-pos":"up"},innerHTML:nn(n)?`<img class="vp-social-media-icon ${a}-icon" src="${n}">`:n}))):null}}),ic=ts({name:"BloggerInfo",setup(){const s=ln(),i=yr(),e=wt(),a=Vs(),n=gr(),t=Br(),l=Ar(),r=Qu(),h=_a(),p=V(()=>{var o;return i.value.name??((o=Tl(a.value.author)[0])==null?void 0:o.name)??e.value.title}),k=V(()=>i.value.avatar??a.value.logo),d=V(()=>i.value.intro);return()=>{const{article:o,category:u,tag:c,timeline:A}=s.value,g=[[n.value.path,n.value.items.length,o],[t.value.path,Ue(t.value.map).length,u],[l.value.path,Ue(l.value.map).length,c],[r.value.path,r.value.items.length,A]];return B("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[B("div",{class:"vp-blogger",...d.value?{"aria-label":s.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>{h(d.value)}}:{}},[k.value?B("img",{class:"vp-blogger-avatar",src:Gs(k.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,p.value?B("div",{class:"vp-blogger-name",property:"name"},p.value):null,i.value.description?B("div",{class:"vp-blogger-description",innerHTML:i.value.description}):null,d.value?B("meta",{property:"url",content:Gs(d.value)}):null]),B("div",{class:"vp-blog-counts"},g.map(([f,m,y])=>B(mi,{class:"vp-blog-count",to:f},()=>[B("div",{class:"count"},m),B("div",y)]))),B(r6)])}}}),ec=()=>B(Ys,{name:"category"},()=>B("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));ec.displayName="CategoryIcon";const ac=()=>B(Ys,{name:"tag"},()=>B("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));ac.displayName="TagIcon";const nc=()=>B(Ys,{name:"timeline"},()=>B("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));nc.displayName="TimelineIcon";const h6=()=>B(Ys,{name:"slides"},()=>B("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));h6.displayName="SlideIcon";const p6=()=>B(Ys,{name:"sticky"},()=>[B("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);p6.displayName="StickyIcon";const tc=()=>B(Ys,{name:"article"},()=>B("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));tc.displayName="ArticleIcon";const bo=()=>B(Ys,{name:"slide-down"},()=>B("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));bo.displayName="SlideDownIcon";const k6=()=>B(Ys,{name:"lock"},()=>B("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));k6.displayName="LockIcon";const Zw=ts({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(s,{slots:i}){const e=Ms(s,"info"),{info:a,items:n}=Xw(s),t=De();return()=>{var u,c,A;const{title:l,["type"]:r,["isEncrypted"]:h=!1,["cover"]:p,["excerpt"]:k,["sticky"]:d}=e.value,o=a.value;return B("div",{class:"vp-article-wrapper",onClick:g=>{var f;(f=g.target)!=null&&f.matches("summary")||(g.preventDefault(),t.push(s.path))}},B("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((u=i.cover)==null?void 0:u.call(i,{cover:p}))??(p?[B("img",{class:"vp-article-cover",src:Gs(p),alt:"",loading:"lazy"}),B("meta",{property:"image",content:Gs(p)})]:[]),d?B(p6):null,B(mi,{to:s.path},()=>{var g;return((g=i.title)==null?void 0:g.call(i,{title:l,isEncrypted:h,type:r}))??B("header",{class:"vp-article-title"},[h?B(k6):null,r==="slide"?B(h6):null,B("span",{property:"headline"},l)])}),((c=i.excerpt)==null?void 0:c.call(i,{excerpt:k}))??(k?B("div",{class:"vp-article-excerpt",innerHTML:k}):null),B("hr",{class:"vp-article-hr"}),((A=i.info)==null?void 0:A.call(i,{info:o}))??B(Z8,{info:o,...n.value?{items:n.value}:{}})]))}}}),Jw='<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>',Qw=ts({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(s,{emit:i}){let e;const a=Vs(),n=Q(""),t=V(()=>a.value.paginationLocales),l=V(()=>Math.ceil(s.total/s.perPage)),r=V(()=>!!l.value&&l.value!==1),h=V(()=>l.value<7?!1:s.current>4),p=V(()=>l.value<7?!1:s.current<l.value-3),k=V(()=>{const{current:u}=s;let c=1,A=l.value;const g=[];l.value>=7&&(u<=4&&u<l.value-3?(c=1,A=5):u>4&&u>=l.value-3?(A=l.value,c=l.value-4):l.value>7&&(c=u-2,A=u+2));for(let f=c;f<=A;f++)g.push(f);return g}),d=u=>{i("updateCurrentPage",u)},o=u=>{const c=parseInt(u,10);c<=l.value&&c>0?d(c):e.pop(`${Jw}${t.value.errorText.replace(/\$page/gu,l.value.toString())}`)};return ws(()=>{e=new v9}),()=>B("div",{class:"vp-pagination"},r.value?B("nav",{class:"vp-pagination-list"},[B("div",{class:"vp-pagination-number "},[s.current>1?B("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>{d(s.current-1)}},t.value.prev):null,h.value?[B("div",{role:"navigation",onClick:()=>{d(1)}},1),B("div",{class:"ellipsis"},"...")]:null,k.value.map(u=>B("div",{key:u,class:{active:s.current===u},role:"navigation",onClick:()=>{d(u)}},u)),p.value?[B("div",{class:"ellipsis"},"..."),B("div",{role:"navigation",onClick:()=>{d(l.value)}},l.value)]:null,s.current<l.value?B("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>{d(s.current+1)}},t.value.next):null]),B("div",{class:"vp-pagination-nav"},[B("label",{for:"navigation-text"},`${t.value.navigate}: `),B("input",{id:"navigation-text",value:n.value,onInput:({target:u})=>{n.value=u.value},onKeydown:u=>{u.key==="Enter"&&(u.preventDefault(),o(n.value))}}),B("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:t.value.action,onClick:()=>{o(n.value)}},t.value.action)])]):[])}}),lc=ts({name:"ArticleList",props:{items:{type:Array,required:!0}},setup(s){const i=We(),e=De(),a=ln(),n=yr(),t=Q(1),l=V(()=>n.value.articlePerPage??10),r=V(()=>s.items.slice((t.value-1)*l.value,t.value*l.value)),h=async p=>{t.value=p;const k={...i.query};!(k.page===p.toString()||p===1&&!k.page)&&(p===1?delete k.page:k.page=p.toString(),await e.push({path:i.path,query:k}))};return ws(()=>{const{page:p}=i.query;h(p?Number(p):1),bs(t,()=>{const k=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,k)},100)})}),()=>B("div",{id:"article-list",class:"vp-article-list",role:"feed"},r.value.length?[...r.value.map(({info:p,path:k},d)=>B(Rs,{appear:!0,delay:d*.04},()=>B(Zw,{key:k,info:p,path:k}))),B(Qw,{current:t.value,perPage:l.value,total:s.items.length,onUpdateCurrentPage:h})]:B("h2",{class:"vp-empty-hint"},a.value.empty))}}),sx=ts({name:"ArticlesInfo",setup(){const s=gr(),i=ln(),e=sc(),a=_a(),n=V(()=>s.value.items.length),t=V(()=>e.value.items);return()=>B(Rs,()=>B("div",{class:"vp-star-article-wrapper"},[B("div",{class:"title",onClick:()=>{a(s.value.path)}},[B(tc),B("span",{class:"num"},n.value),i.value.article]),B("hr"),t.value.length?B("ul",{class:"vp-star-articles"},t.value.map(({info:l,path:r},h)=>B(Rs,{appear:!0,delay:.08*(h+1)},()=>B("li",{class:"vp-star-article"},B(mi,{to:r},()=>l.title))))):B("div",{class:"vp-star-article-empty"},i.value.empty.replace("$text",i.value.star))]))}}),d6=ts({name:"CategoryList",setup(){const s=Bi(),i=Br();return()=>B("ul",{class:"vp-category-list"},Pn(i.value.map).sort(([,e],[,a])=>a.items.length-e.items.length).map(([e,{path:a,items:n}])=>B("li",{class:"vp-category-item"},B(mi,{class:["vp-category",`color${kr(e,Number(It.colorNumber))}`,{active:a===s.value.path}],to:a},()=>[e,B("span",{class:"vp-category-count"},n.length)]))))}}),ix=ts({name:"CategoriesInfo",setup(){const s=ln(),i=Br(),e=_a(),a=V(()=>Ue(i.value.map).length);return()=>B("div",{class:"vp-category-wrapper"},[a.value?[B("div",{class:"title",onClick:()=>{e(i.value.path)}},[B(ec),B("span",{class:"num"},a.value),s.value.category]),B("hr"),B(Rs,{delay:.04},()=>B(d6))]:B("div",{class:"vp-category-empty"},s.value.empty.replace("$text",s.value.category))])}}),o6=ts({name:"TagList",setup(){const s=js(),i=Ar(),e=a=>{var n;return a===((n=s.value.blog)==null?void 0:n.name)};return()=>B("ul",{class:"vp-tag-list"},Pn(i.value.map).sort(([,a],[,n])=>n.items.length-a.items.length).map(([a,{path:n,items:t}])=>B("li",{class:"vp-tag-item"},B(mi,{class:["vp-tag",`color${kr(a,Number(It.colorNumber))}`,{active:e(a)}],to:n},()=>[a,B("span",{class:"vp-tag-count"},t.length)]))))}}),ex=ts({name:"TagsInfo",setup(){const s=ln(),i=Ar(),e=_a(),a=V(()=>Ue(i.value.map).length);return()=>B("div",{class:"vp-tag-wrapper"},[a.value?[B("div",{class:"title",onClick:()=>{e(i.value.path)}},[B(ac),B("span",{class:"num"},a.value),s.value.tag]),B("hr"),B(Rs,{delay:.04},()=>B(o6))]:B("div",{class:"vp-tag-empty"},s.value.empty.replace("$text",s.value.tag))])}}),ax=ts({name:"TimelineList",setup(){const s=ln(),i=Qu(),e=_a();return()=>B("div",{class:"timeline-list-wrapper"},[B("div",{class:"timeline-list-title",onClick:()=>{e(i.value.path)}},[B(nc),B("span",{class:"num"},i.value.items.length),s.value.timeline]),B("hr"),B("div",{class:"timeline-content"},B("ul",{class:"timeline-list"},i.value.config.map(({year:a,items:n},t)=>B(Rs,{appear:!0,delay:.08*(t+1)},()=>B("li",[B("h3",{class:"timeline-year"},a),B("ul",{class:"timeline-year-wrapper"},n.map(({date:l,info:r,path:h})=>B("li",{class:"timeline-item"},[B("span",{class:"timeline-date"},l),B(mi,{class:"timeline-title",to:h},()=>r.title)])))])))))])}}),nx={article:tc,category:ec,tag:ac,timeline:nc},u6=ts({name:"InfoList",setup(){const s=ln(),i=Q("article");return()=>B("div",{class:"vp-blog-infos"},[B("div",{class:"vp-blog-type-switcher"},Pn(nx).map(([e,a])=>B("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{i.value=e}},B("div",{class:["vp-blog-type-icon-wrapper",{active:i.value===e}],"aria-label":s.value[e],"data-balloon-pos":"up"},B(a))))),B(Rs,()=>i.value==="article"?B(sx):i.value==="category"?B(ix):i.value==="tag"?B(ex):B(ax))])}}),mp=ts({name:"BlogWrapper",slots:Object,setup(s,{slots:i}){const{isMobile:e}=dr();return()=>[B(cr),B(ur,{noSidebar:!0,noToc:!0},{default:()=>i.default(),navScreenBottom:()=>B(ic),sidebar:e.value?()=>B(u6):null})]}}),fr=()=>B("aside",{class:"vp-blog-info-wrapper"},[B(Rs,()=>B(ic)),B(Rs,{delay:.04},()=>B(u6))]);fr.displayName="InfoPanel";const tx=ts({name:"BlogCategory",setup(){const s=Bi(),i=js(),e=Br(),a=Ar(),n=V(()=>i.value.blog),t=V(()=>{var h;if(((h=n.value)==null?void 0:h.type)!=="category")return null;const{name:l,key:r}=n.value;return l?r==="category"?e.value.map[l].items:r==="tag"?a.value.map[l].items:null:null});return()=>B(mp,()=>B("div",{class:"vp-page vp-blog"},B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[B(Rs,()=>{var l,r;return((l=n.value)==null?void 0:l.key)==="category"?B(d6):((r=n.value)==null?void 0:r.key)==="tag"?B(o6):null}),t.value?B(Rs,{appear:!0,delay:.24},()=>B(lc,{key:s.value.path,items:t.value})):null]),B(Rs,{delay:.16},()=>B(fr,{key:"blog"}))])))}}),lx="//theme-hope-assets.vuejs.press/hero/default.jpg",rx=ts({name:"BlogHero",slots:Object,setup(s,{slots:i}){const e=js(),a=wt(),n=Ts(),t=V(()=>e.value.heroFullScreen??!1),l=V(()=>{const{heroText:h,heroImage:p,heroImageDark:k,heroAlt:d,heroImageStyle:o,tagline:u}=e.value;return{text:h??(a.value.title||"Hello"),tagline:u??"",image:p?Gs(p):null,imageDark:k?Gs(k):null,alt:d??h??"",imageStyle:o,isFullScreen:t.value}}),r=V(()=>{const{bgImage:h,bgImageDark:p,bgImageStyle:k}=e.value;return{image:li(h)?Gs(h):h===!1?null:lx,imageDark:li(p)?Gs(p):null,bgStyle:k,isFullScreen:t.value}});return()=>{var h,p;return e.value.hero===!1?null:B("div",{ref:n,class:["vp-blog-hero",{fullscreen:t.value,"no-bg":!r.value.image}]},[((h=i.bg)==null?void 0:h.call(i,r.value))??[r.value.image?B("div",{class:["vp-blog-mask",{light:r.value.imageDark}],style:[{background:`url(${r.value.image}) center/cover no-repeat`},r.value.bgStyle]}):null,r.value.imageDark?B("div",{class:"vp-blog-mask dark",style:[{background:`url(${r.value.imageDark}) center/cover no-repeat`},r.value.bgStyle]}):null],((p=i.info)==null?void 0:p.call(i,l.value))??[B(Rs,{appear:!0,type:"group",delay:.04},()=>{const{image:k,imageDark:d,imageStyle:o,alt:u}=l.value;return[k?B("img",{key:"light",class:["vp-blog-hero-image",{light:d}],style:o,src:k,alt:u}):null,d?B("img",{key:"dark",class:"vp-blog-hero-image dark",style:o,src:d,alt:u}):null]}),B(Rs,{appear:!0,delay:.08},()=>l.value.text?B("h1",{class:"vp-blog-hero-title"},l.value.text):null),B(Rs,{appear:!0,delay:.12},()=>l.value.tagline?B("p",{class:"vp-blog-hero-description",innerHTML:l.value.tagline}):null)],l.value.isFullScreen?B("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:n.value.clientHeight,behavior:"smooth"})}},[B(bo),B(bo)]):null])}}}),hx=ts({name:"ProjectPanel",props:{items:{type:Array,required:!0}},setup(s){const i=Yi(),e=_a();return()=>B("div",{class:"vp-project-panel"},s.items.map(({icon:a,link:n,name:t,desc:l,background:r})=>B("a",{class:["vp-project-card",{[`color${kr(t,Number(It.colorNumber))}`]:!i.value&&!r}],...r?{style:r}:{},href:dp(n)?Gs(n):n,onClick:h=>{e(n),h.preventDefault()}},[a?B(Ws("VPIcon"),{class:"vp-project-icon",icon:a}):null,B("div",{class:"vp-project-name"},t),B("div",{class:"vp-project-desc"},l)])))}}),px=ts({name:"BlogHomePage",setup(){const s=gr(),i=js(),e=V(()=>i.value.projects??[]);return()=>B("div",{class:"vp-page vp-blog-home"},[B(rx),B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[e.value.length?B(Rs,{appear:!0,delay:.16},()=>B(hx,{items:e.value})):null,B(Rs,{appear:!0,delay:.24},()=>B(lc,{items:s.value.items}))]),B(Rs,{appear:!0,delay:.16},()=>B(fr,{key:"blog"}))]),B(Rs,{appear:!0,delay:.28},()=>B(Ap))])}}),c6=()=>B(mp,()=>B(px));c6.displayName="BlogHome";var kx=[];const dx=ts({name:"ArticleType",setup(){const s=Bi(),i=Be(),e=gr(),a=sc(),n=ln(),t=V(()=>[{text:n.value.all,path:e.value.path},{text:n.value.star,path:a.value.path},...kx.map(({key:l,path:r})=>{const h=r.replace(/^\//,i.value);return{text:n.value[l]??ne(h).meta.title??l,path:h}})]);return()=>B("ul",{class:"vp-article-type-wrapper"},t.value.map(l=>B("li",{class:["vp-article-type",{active:l.path===s.value.path}]},B(mi,{to:l.path},()=>l.text))))}}),ox=ts({name:"BlogType",setup(){const s=fp(),i=js(),e=Bi(),a=gr(),n=sc(),t=V(()=>{const l=i.value.blog;return(l==null?void 0:l.type)!=="type"||!l.key?a.value.items:l.key==="star"?n.value.items:s.value.items});return()=>B(mp,()=>B("div",{class:"vp-page vp-blog"},B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[B(Rs,()=>B(dx)),B(Rs,{appear:!0,delay:.24},()=>B(lc,{key:e.value.path,items:t.value}))]),B(Rs,{delay:.16},()=>B(fr,{key:"blog"}))])))}}),ux=ts({name:"TimelineItems",setup(){const s=yr(),i=Vs(),e=Qu(),a=V(()=>s.value.timeline??i.value.blogLocales.timelineTitle),n=V(()=>e.value.config.map(({year:t})=>({title:t.toString(),level:2,slug:t.toString(),children:[]})));return()=>B("div",{class:"timeline-wrapper"},B("ul",{class:"timeline-content"},[B(Rs,()=>B("li",{class:"motto"},a.value)),B(Q8,{items:n.value}),e.value.config.map(({year:t,items:l},r)=>B(Rs,{appear:!0,delay:.08*(r+1),type:"group"},()=>[B("h3",{key:"title",id:t,class:"timeline-year-title"},B("span",t)),B("li",{key:"content",class:"timeline-year-list"},[B("ul",{class:"timeline-year-wrapper"},l.map(({date:h,info:p,path:k})=>B("li",{class:"timeline-item"},[B("span",{class:"timeline-date"},h),B(mi,{class:"timeline-title",to:k},()=>p.title)])))])]))]))}}),g6=()=>B(mp,()=>B("div",{class:"vp-page vp-blog"},B("div",{class:"blog-page-wrapper"},[B("main",{id:"main-content",class:"vp-blog-main"},[B(Rs,{appear:!0,delay:.24},()=>B(ux))]),B(Rs,{delay:.16},()=>B(fr,{key:"blog"}))])));g6.displayName="Timeline";z9(s=>{const i=s.title,e=s.index!==!1,a=s.icon;return e?{title:i,content:a?()=>[B(Ws("VPIcon"),{icon:a}),i]:null,order:s.order,index:s.index}:null});const cx={enhance:({app:s,router:i})=>{const{scrollBehavior:e}=i.options;i.options.scrollBehavior=async(...a)=>(await yo.wait(),e(...a)),XD(s),s.component("BloggerInfo",ic),s.component("SocialMedias",r6)},setup:()=>{ZD(),HD(),Uw()},layouts:{Layout:yp,NotFound:Lw,BlogCategory:tx,BlogHome:c6,BlogType:ox,Timeline:g6}},gx=Object.freeze(Object.defineProperty({__proto__:null,default:cx},Symbol.toStringTag,{value:"Module"}));function F0(s){var i;if(s.querySelector(".ab-super-width")){const e=s.querySelectorAll(".ab-note");for(const n of e)if(n.querySelector(".ab-super-width")){const t=n.parentNode;t&&t.classList.contains("ab-replace")&&t.classList.add("ab-super-width-p")}const a=document.querySelectorAll(".app-container .workspace-leaf");for(const n of a)n.style.setProperty("--ab-width-outer",(n.offsetWidth-40).toString()+"px")}if(s.querySelector(".ab-nodes-node")){const e=document.querySelectorAll(".ab-nodes.min .ab-nodes-node"),a=s.querySelectorAll(".ab-nodes-node");for(const n of a){const t=n.querySelector(".ab-nodes-content");if(!t)continue;const l=n.querySelector(".ab-nodes-children");if(!l)continue;const r=l.querySelector(".ab-nodes-bracket");if(!r)continue;const h=l.querySelector(".ab-nodes-bracket2");if(!h)continue;const p=l.childNodes;if(p.length<3){r.style.setProperty("display","none"),h.style.setProperty("display","none");continue}const k=p[2],d=p[p.length-1],o=k.querySelector(".ab-nodes-content"),u=d.querySelector(".ab-nodes-content");let c=0,A=(k.offsetHeight+d.offsetHeight)/2;p.length==3?(c=o.offsetHeight-20>20?o.offsetHeight-20:20,h.style.cssText=`
          height: ${c}px;
          top: calc(50% - ${c/2}px);
        `):h.style.cssText=`
          height: calc(100% - ${A}px);
          top: ${k.offsetHeight/2}px;
        `,Array.prototype.includes.call(e,n)&&(p.length==3?r.style.cssText=`
            display: block;
            top: calc(50% + ${t.offsetHeight/2}px - 3px);
            clip-path: circle(40% at 50% 40%);
          `:r.setAttribute("display","none"),p.length==3&&t.offsetHeight==o.offsetHeight?h.style.cssText=`
            height: 1px;
            top: calc(50% + ${t.offsetHeight/2}px - 1px);
            width: 18px; /* 可以溢出点 */
            border-radius: 0;
            border: none;
            border-bottom: 1px solid var(--node-color);
          `:(p.length==3?(c=u.offsetHeight/2-t.offsetHeight/2,h.style.setProperty("height",`${c}px`),h.style.setProperty("top",`calc(50% + ${t.offsetHeight/2}px)`),h.style.setProperty("border-radius","0 0 0 10px"),h.style.setProperty("border-top","0")):(A=k.offsetHeight/2+o.offsetHeight/2+d.offsetHeight/2-u.offsetHeight/2,h.style.setProperty("height",`calc(100% - ${A}px + 1px)`),h.style.setProperty("top",`${k.offsetHeight/2+o.offsetHeight/2-1}px`)),h.style.setProperty("width","20px")))}}if(s.querySelector(".ab-items.ab-lay-vfall:not(.js-waterfall):not(.ab-lay-hfall):not(.ab-lay-grid)")){const e=s.querySelectorAll(".ab-items.ab-lay-vfall:not(.js-waterfall):not(.ab-lay-hfall):not(.ab-lay-grid)");for(const a of e){a.classList.add("js-waterfall");const n=a.querySelectorAll(".ab-items-item"),t=parseInt(window.getComputedStyle(a).getPropertyValue("column-count"));let l;t&&!isNaN(t)&&t>0?l=t:a.classList.contains("ab-col-auto")&&n.length<=4?(l=n.length,a.classList.add("ab-col"+l)):(l=4,a.classList.add("ab-col"+l));const r=[],h=[];for(let k=0;k<l;k++)r.push(0),h.push([]);for(const k of n){const d=Math.min.apply(null,r),o=r.indexOf(d),u=parseInt(window.getComputedStyle(k).getPropertyValue("height"));r[o]+=u&&!isNaN(u)&&u>0?u:10,h[o].push(k)}const p=l-n.length%l;if(p!=4)for(let k=0;k<p;k++){const d=document.createElement("div");d.classList.add(".ab-items-item.placeholder"),d.setAttribute("style","height: 20px");const o=Math.min.apply(null,r),u=r.indexOf(o);r[u]+=20,h[u].push(d)}a.innerHTML="";for(let k=0;k<l;k++)for(const d of h[k])a.appendChild(d)}}if(s.querySelector(".ab-markmap-div")){const e=s;let a="";e.tagName==="DIV"&&(a=((i=e.querySelector(".ab-markmap-div"))==null?void 0:i.id)||"");let n;a?n=document.querySelectorAll("#"+a):n=document.querySelectorAll(".ab-markmap-div");for(const t of n){const l=t.querySelector("svg"),r=l==null?void 0:l.querySelector("g");if(l&&r){const h=r.getBBox().height/t.offsetWidth;l.setAttribute("style",`height:${r.getBBox().height*h+40}px`),Bx(s)}}}}function Bx(s){var i;if(s.querySelector(".ab-markmap-svg")){console.log("  - markmap_event");let e=document.querySelector('script[script-id="ab-markmap-script"]');e&&e.remove();const a=s;let n="";a.tagName==="DIV"&&(n=((i=a.querySelector(".ab-markmap-svg"))==null?void 0:i.id)||""),e=document.createElement("script"),document.head.appendChild(e),e.type="module",e.setAttribute("script-id","ab-markmap-script"),e.textContent=`
    import { Markmap, } from 'https://jspm.dev/markmap-view';
    const markmapId = "${n||""}";
    let mindmaps;
    if (markmapId) {
      mindmaps = document.querySelectorAll('#' + markmapId);
    } else {
      mindmaps = document.querySelectorAll('.ab-markmap-svg'); // 注意一下这里的选择器
    }
    for(const mindmap of mindmaps) {
      mindmap.innerHTML = "";
      Markmap.create(mindmap,null,JSON.parse(mindmap.getAttribute('data-json')));
    }`}}const E0=s=>new Promise(i=>setTimeout(i,s)),Ax=Ti({setup(){yx()}});function yx(s=1e3,i=!1){const e=Bi(),a=!0;bs(()=>[e.value.path,a],async()=>{await qs(),await E0(s/4),F0(document),await E0(s/4*3),F0(document)},{immediate:!0})}const fx=Object.freeze(Object.defineProperty({__proto__:null,default:Ax},Symbol.toStringTag,{value:"Module"}));let Ma={app:null,ctx:null,cahce_workspace:null,isDebug:!1,md:null};function mx(s){if(typeof s=="string")if(s=="demo")s=JSON.parse(JSON.stringify(vx));else if(s=="demo2")s=JSON.parse(JSON.stringify(Fx));else if(s=="demo3")s=JSON.parse(JSON.stringify(Ex));else return{code:-1,msg:"error demo: "+s,data:{}};return{code:0,msg:"",data:s}}const vx={nodes:[{id:"1",type:"input",position:{x:250,y:5},data:{label:"Node 11"}},{id:"2",position:{x:100,y:100},data:{label:"Node 12"}},{id:"3",type:"output",position:{x:400,y:200},data:{label:"Node 13"}},{id:"4",type:"special",position:{x:600,y:100},data:{label:"Node 14",hello:"world"}}],edges:[{id:"e1->2",source:"1",target:"2"},{id:"e2->3",source:"2",target:"3",animated:!0},{id:"e3->4",type:"special",source:"3",target:"4",data:{hello:"world"}}]},Fx={nodes:[{id:"1",position:{x:0,y:0},type:"process"},{id:"2",position:{x:0,y:0},type:"process"},{id:"2a",position:{x:0,y:0},type:"process"},{id:"2b",position:{x:0,y:0},type:"process"},{id:"2c",position:{x:0,y:0},type:"process"},{id:"2d",position:{x:0,y:0},type:"process"},{id:"3",position:{x:0,y:0},type:"process"},{id:"4",position:{x:0,y:0},type:"process"},{id:"5",position:{x:0,y:0},type:"process"},{id:"6",position:{x:0,y:0},type:"process"},{id:"7",position:{x:0,y:0},type:"process"}],edges:[{id:"e1-2",source:"1",target:"2",type:"animation",animated:!0},{id:"e1-3",source:"1",target:"3",type:"animation",animated:!0},{id:"e2-2a",source:"2",target:"2a",type:"animation",animated:!0},{id:"e2-2b",source:"2",target:"2b",type:"animation",animated:!0},{id:"e2-2c",source:"2",target:"2c",type:"animation",animated:!0},{id:"e2c-2d",source:"2c",target:"2d",type:"animation",animated:!0},{id:"e3-7",source:"3",target:"4",type:"animation",animated:!0},{id:"e4-5",source:"4",target:"5",type:"animation",animated:!0},{id:"e5-6",source:"5",target:"6",type:"animation",animated:!0},{id:"e5-7",source:"5",target:"7",type:"animation",animated:!0}]},Ex={nodes:[{id:"1",type:"color-selector",data:{color:"#6F3381"},position:{x:0,y:50}},{id:"2",type:"color-output",position:{x:350,y:114},targetPosition:"left"}],edges:[{id:"e1a-2",source:"1",sourceHandle:"a",target:"2",animated:!0,style:{stroke:"#6F3381"}}]};function bx(s){if(typeof s=="string")if(s=="demo")s=JSON.parse(JSON.stringify(Cx));else return{code:-1,msg:"error demo: "+s,data:{}};try{let i=[];s.nodes.forEach(t=>{i.push({id:t.id,position:{x:t.x,y:t.y},data:{label:t.hasOwnProperty("text")?t.text:t.hasOwnProperty("file")?t.file:"Error Type: "+t.type},type:"obcanvas"})});let a=[];return s.edges.forEach(t=>{a.push({id:t.id,source:t.fromNode,target:t.toNode,sourceHandle:t.fromSide,targetHandle:t.toSide,markerEnd:"arrowclosed"})}),{code:0,msg:"",data:{nodes:i,edges:a}}}catch(i){return{code:-1,msg:"error: obcanvas json parse fail: "+i,data:{}}}}const Cx={nodes:[{id:"d1acdb5136ffb1f1",x:25,y:70,width:250,height:60,type:"text",text:`## Title

**Test** *1*
`},{id:"f7dc36d69da1bb36",x:330,y:70,width:250,height:60,type:"text",text:`~~Test~~ ==2==
`}],edges:[{id:"fc3f1bc43902aac9",fromNode:"d1acdb5136ffb1f1",fromSide:"right",toNode:"f7dc36d69da1bb36",toSide:"left"}]};function _x(s){if(typeof s=="string")if(s=="demo")s=JSON.parse(JSON.stringify(Dx));else if(s=="demo2")s=JSON.parse(JSON.stringify(wx));else return{code:-1,msg:"error demo: "+s,data:{}};try{let i=[];s.nodes.forEach(h=>{i.push({id:""+h.id,position:{x:h.pos[0],y:h.pos[1]-30},data:{label:h.hasOwnProperty("title")?h.title:h.type,type:h.type,inputs:h.inputs,outputs:h.outputs,widgets_values:h.widgets_values},...h.hasOwnProperty("size")?{width:h.size[0]+"px",height:h.size[1]+30+"px"}:{},type:"comfyui"})});let a=[];const n=s.links,t=["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff1a","#00ff66","#00ffb3","#00ffff","#00b3ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004c"];n.forEach(h=>{const p=h[5].toLowerCase().charCodeAt(0)%20;a.push({id:""+h[0],style:{stroke:t[p]},source:""+h[1],sourceHandle:"source-"+h[2],target:""+h[3],targetHandle:"target-"+h[4]})});const l=s.groups;let r=0;return l.forEach(h=>{i.push({id:"group-"+r++,position:{x:h.bounding[0],y:h.bounding[1]},width:h.bounding[2]+"px",height:h.bounding[3]+30+"px",data:{label:h.title},...h.hasOwnProperty("color")?{style:{backgroundColor:h.color+"44",zIndex:-1}}:{},type:"comfyui-group"})}),{code:0,msg:"",data:{nodes:i,edges:a}}}catch(i){return{code:-1,msg:"error: comfyui json parse fail: "+i,data:{}}}}const Dx={last_node_id:9,last_link_id:9,nodes:[{id:6,type:"CLIPTextEncode",pos:{0:373,1:47},size:{0:422.84503173828125,1:164.31304931640625},flags:{},order:2,mode:0,inputs:[{name:"clip",type:"CLIP",link:3}],outputs:[{name:"CONDITIONING",type:"CONDITIONING",links:[4],slot_index:0}],properties:{"Node name for S&R":"CLIPTextEncode"},widgets_values:["beautiful scenery nature glass bottle landscape, , purple galaxy bottle,"]},{id:7,type:"CLIPTextEncode",pos:{0:408,1:569},size:{0:425.27801513671875,1:180.6060791015625},flags:{},order:3,mode:0,inputs:[{name:"clip",type:"CLIP",link:5}],outputs:[{name:"CONDITIONING",type:"CONDITIONING",links:[6],slot_index:0}],properties:{"Node name for S&R":"CLIPTextEncode"},widgets_values:["text, watermark"]},{id:5,type:"EmptyLatentImage",pos:{0:489,1:809},size:{0:315,1:106},flags:{},order:0,mode:0,inputs:[],outputs:[{name:"LATENT",type:"LATENT",links:[2],slot_index:0}],properties:{"Node name for S&R":"EmptyLatentImage"},widgets_values:[512,512,1]},{id:8,type:"VAEDecode",pos:{0:1325,1:336},size:{0:210,1:46},flags:{},order:5,mode:0,inputs:[{name:"samples",type:"LATENT",link:7},{name:"vae",type:"VAE",link:8}],outputs:[{name:"IMAGE",type:"IMAGE",links:[9],slot_index:0}],properties:{"Node name for S&R":"VAEDecode"},widgets_values:[]},{id:9,type:"SaveImage",pos:{0:1577,1:335},size:[210,270],flags:{},order:6,mode:0,inputs:[{name:"images",type:"IMAGE",link:9}],outputs:[],properties:{},widgets_values:["ComfyUI"]},{id:3,type:"KSampler",pos:{0:941,1:377},size:{0:315,1:262},flags:{},order:4,mode:0,inputs:[{name:"model",type:"MODEL",link:1},{name:"positive",type:"CONDITIONING",link:4},{name:"negative",type:"CONDITIONING",link:6},{name:"latent_image",type:"LATENT",link:2}],outputs:[{name:"LATENT",type:"LATENT",links:[7],slot_index:0}],properties:{"Node name for S&R":"KSampler"},widgets_values:[984943483018319,"randomize",20,8,"euler","normal",1]},{id:4,type:"CheckpointLoaderSimple",pos:{0:19,1:438},size:{0:315,1:98},flags:{},order:1,mode:0,inputs:[],outputs:[{name:"MODEL",type:"MODEL",links:[1],slot_index:0},{name:"CLIP",type:"CLIP",links:[3,5],slot_index:1},{name:"VAE",type:"VAE",links:[8],slot_index:2}],properties:{"Node name for S&R":"CheckpointLoaderSimple"},widgets_values:["abyssorangemix2SFW_abyssorangemix2Sfw.safetensors"]}],links:[[1,4,0,3,0,"MODEL"],[2,5,0,3,3,"LATENT"],[3,4,1,6,0,"CLIP"],[4,6,0,3,1,"CONDITIONING"],[5,4,1,7,0,"CLIP"],[6,7,0,3,2,"CONDITIONING"],[7,3,0,8,0,"LATENT"],[8,4,2,8,1,"VAE"],[9,8,0,9,0,"IMAGE"]],groups:[],config:{},extra:{ds:{scale:1.1000000000000003,offset:[105.73286361205797,93.22187298366379]}},version:.4},wx={last_node_id:103,last_link_id:127,nodes:[{id:52,type:"ADE_StandardUniformContextOptions",pos:[1689,830],size:{0:327.6000061035156,1:222},flags:{},order:0,mode:0,inputs:[{link:null,name:"prev_context",type:"CONTEXT_OPTIONS",label:"前上下文"},{link:null,name:"view_opts",type:"VIEW_OPTS",label:"视图设置"}],outputs:[{links:[40],name:"CONTEXT_OPTS",shape:3,type:"CONTEXT_OPTIONS",label:"上下文设置"}],properties:{"Node name for S&R":"ADE_StandardUniformContextOptions"},widgets_values:[16,1,4,"pyramid",!1,0,1]},{id:49,type:"ADE_ApplyAnimateDiffModelSimple",pos:[1703,675],size:{0:304.79998779296875,1:106},flags:{},order:11,mode:0,inputs:[{link:37,name:"motion_model",type:"MOTION_MODEL_ADE",label:"动态模型"},{link:null,name:"motion_lora",slot_index:1,type:"MOTION_LORA",label:"动态LoRA"},{link:null,name:"scale_multival",type:"MULTIVAL",label:"缩放多值"},{link:null,name:"effect_multival",type:"MULTIVAL",label:"效果多值"},{link:null,name:"ad_keyframes",type:"AD_KEYFRAMES",label:"AD关键帧"}],outputs:[{links:[38],name:"M_MODELS",shape:3,slot_index:0,type:"M_MODELS",label:"动态模型组"}],properties:{"Node name for S&R":"ADE_ApplyAnimateDiffModelSimple"}},{id:47,type:"ADE_LoadAnimateDiffModel",pos:[1190,600],size:{0:340,1:60},flags:{},order:1,mode:0,inputs:[{link:null,name:"ad_settings",type:"AD_SETTINGS",label:"AD设置"}],outputs:[{links:[37],name:"MOTION_MODEL",shape:3,slot_index:0,type:"MOTION_MODEL_ADE",label:"动态模型"}],properties:{"Node name for S&R":"ADE_LoadAnimateDiffModel"},widgets_values:["AnimateLCM\\sd15_t2v_beta.ckpt"]},{id:70,type:"ControlNetLoaderAdvanced",pos:[900,1390],size:{0:367.79998779296875,1:58},flags:{},order:2,mode:0,inputs:[{name:"timestep_keyframe",type:"TIMESTEP_KEYFRAME",link:null,label:"帧间隔"}],outputs:[{name:"CONTROL_NET",type:"CONTROL_NET",links:[75],shape:3,label:"ControlNet"}],properties:{"Node name for S&R":"ControlNetLoaderAdvanced"},widgets_values:["1.5\\control_v11p_sd15_openpose.pth"]},{id:69,type:"ACN_AdvancedControlNetApply",pos:[1680,1110],size:{0:355.20001220703125,1:266},flags:{},order:20,mode:0,inputs:[{name:"positive",type:"CONDITIONING",link:71,label:"正面条件"},{name:"negative",type:"CONDITIONING",link:72,label:"负面条件"},{name:"control_net",type:"CONTROL_NET",link:75,label:"ControlNet",slot_index:2},{name:"image",type:"IMAGE",link:119,label:"图像",slot_index:3},{name:"mask_optional",type:"MASK",link:null,label:"遮罩"},{name:"timestep_kf",type:"TIMESTEP_KEYFRAME",link:null,label:"帧间隔",slot_index:5},{name:"latent_kf_override",type:"LATENT_KEYFRAME",link:null,label:"Latent关键帧"},{name:"weights_override",type:"CONTROL_NET_WEIGHTS",link:null,label:"ControlNet权重"},{name:"model_optional",type:"MODEL",link:null,slot_index:8}],outputs:[{name:"positive",type:"CONDITIONING",links:[73],shape:3,label:"正面条件",slot_index:0},{name:"negative",type:"CONDITIONING",links:[74],shape:3,label:"负面条件",slot_index:1},{name:"model_opt",type:"MODEL",links:null,shape:3,slot_index:2}],properties:{"Node name for S&R":"ACN_AdvancedControlNetApply"},widgets_values:[1,0,1]},{id:60,type:"LCMScheduler",pos:[2150,1500],size:{0:315,1:82},flags:{},order:18,mode:0,inputs:[{link:66,name:"model",slot_index:0,type:"MODEL",label:"model"}],outputs:[{links:[55],name:"SIGMAS",shape:3,type:"SIGMAS",label:"SIGMAS"}],properties:{"Node name for S&R":"LCMScheduler"},widgets_values:[10,1]},{id:59,type:"SamplerLCMCycle",pos:[2170,1300],size:{0:315,1:130},flags:{},order:3,mode:0,outputs:[{links:[54],name:"SAMPLER",shape:3,type:"SAMPLER",label:"SAMPLER"}],properties:{"Node name for S&R":"SamplerLCMCycle"},widgets_values:[2,2,!1,0]},{id:63,type:"BNK_CLIPTextEncodeAdvanced",pos:[920,1140],size:{0:400,1:200},flags:{},order:16,mode:0,inputs:[{link:65,name:"clip",type:"CLIP",label:"CLIP"}],outputs:[{links:[72],name:"CONDITIONING",shape:3,type:"CONDITIONING",label:"条件",slot_index:0}],properties:{"Node name for S&R":"BNK_CLIPTextEncodeAdvanced"},widgets_values:["(worst quality:1.3), unfinished sketch, blurry, normal, mundane, boring, everyday, safe, ordinary, monochrome, greyscale, text, watermark","mean","A1111"]},{id:62,type:"BNK_CLIPTextEncodeAdvanced",pos:[920,860],size:{0:400,1:200},flags:{},order:15,mode:0,inputs:[{link:64,name:"clip",slot_index:0,type:"CLIP",label:"CLIP"}],outputs:[{links:[71],name:"CONDITIONING",shape:3,type:"CONDITIONING",label:"条件",slot_index:0}],properties:{"Node name for S&R":"BNK_CLIPTextEncodeAdvanced"},widgets_values:["(best quality, masterpiece), 1boy, mechano punk plaza, blue eyes, dancing","mean","A1111"]},{id:92,type:"IPAdapterApply",pos:[2672.018828230932,342.46597762958794],size:{0:315,1:258},flags:{},order:19,mode:0,inputs:[{name:"ipadapter",type:"IPADAPTER",link:103,label:"IP适配"},{name:"clip_vision",type:"CLIP_VISION",link:104,label:"CLIP视觉",slot_index:1},{name:"image",type:"IMAGE",link:105,label:"图像"},{name:"model",type:"MODEL",link:106,label:"模型"},{name:"attn_mask",type:"MASK",link:null,label:"关注层遮罩"}],outputs:[{name:"MODEL",type:"MODEL",links:[107],shape:3,label:"模型",slot_index:0}],properties:{"Node name for S&R":"IPAdapterApply"},widgets_values:[1,0,"original",0,1,!1]},{id:94,type:"CheckpointLoader|pysssss",pos:[1050,390],size:{0:410,1:122},flags:{},order:4,mode:0,outputs:[{name:"MODEL",type:"MODEL",links:[112],shape:3,label:"模型",slot_index:0},{name:"CLIP",type:"CLIP",links:[113],shape:3,label:"CLIP",slot_index:1},{name:"VAE",type:"VAE",links:null,shape:3,label:"VAE"}],properties:{"Node name for S&R":"CheckpointLoader|pysssss"},widgets_values:[{content:"sd1.5\\动漫\\darkSushiMixMix_225D.safetensors",image:"checkpoints/sd1.5\\动漫\\darkSushiMixMix_225D.jpg"},"[none]"]},{id:50,type:"ADE_UseEvolvedSampling",pos:[2130,870],size:{0:315,1:118},flags:{},order:14,mode:0,inputs:[{link:62,name:"model",slot_index:0,type:"MODEL",label:"模型"},{link:38,name:"m_models",slot_index:1,type:"M_MODELS",label:"动态模型组"},{link:40,name:"context_options",slot_index:2,type:"CONTEXT_OPTIONS",label:"上下文设置"},{link:null,name:"sample_settings",type:"SAMPLE_SETTINGS",label:"采样设置"}],outputs:[{links:[66,106],name:"MODEL",shape:3,slot_index:0,type:"MODEL",label:"模型"}],properties:{"Node name for S&R":"ADE_UseEvolvedSampling"},widgets_values:["lcm[100_ots]"]},{id:93,type:"CLIPVisionLoader",pos:[2160,400],size:{0:315,1:58},flags:{},order:5,mode:0,outputs:[{name:"CLIP_VISION",type:"CLIP_VISION",links:[104],shape:3,label:"CLIP视觉"}],properties:{"Node name for S&R":"CLIPVisionLoader"},widgets_values:["clip_h.pth"]},{id:64,type:"LoraLoader",pos:[1620,450],size:{0:460,1:150},flags:{},order:12,mode:0,inputs:[{link:112,name:"model",type:"MODEL",label:"模型"},{link:113,name:"clip",slot_index:1,type:"CLIP",label:"CLIP"}],outputs:[{links:[62],name:"MODEL",shape:3,slot_index:0,type:"MODEL",label:"模型"},{links:[64,65],name:"CLIP",shape:3,slot_index:1,type:"CLIP",label:"CLIP"}],properties:{"Node name for S&R":"LoraLoader"},widgets_values:["AnimateLCM\\sd15_lora_t2v_beta.safetensors",1,1]},{id:91,type:"IPAdapterModelLoader",pos:[1650,330],size:{0:450,1:60},flags:{},order:6,mode:0,outputs:[{name:"IPADAPTER",type:"IPADAPTER",links:[103],shape:3,label:"IP适配",slot_index:0}],properties:{"Node name for S&R":"IPAdapterModelLoader"},widgets_values:["IP\\1.5\\H\\ip-adapter-plus_sd15.bin"]},{id:58,type:"SamplerCustom",pos:[2550,910],size:{0:355.20001220703125,1:230},flags:{},order:21,mode:0,inputs:[{link:107,name:"model",type:"MODEL",label:"模型"},{link:73,name:"positive",slot_index:1,type:"CONDITIONING",label:"正面条件"},{link:74,name:"negative",slot_index:2,type:"CONDITIONING",label:"负面条件"},{link:54,name:"sampler",slot_index:3,type:"SAMPLER",label:"采样器"},{link:55,name:"sigmas",slot_index:4,type:"SIGMAS",label:"Sigmas"},{link:102,name:"latent_image",slot_index:5,type:"LATENT",label:"Latent"}],outputs:[{links:[],name:"output",shape:3,slot_index:0,type:"LATENT",label:"输出"},{links:[53],name:"denoised_output",shape:3,slot_index:1,type:"LATENT",label:"降噪输出"}],properties:{"Node name for S&R":"SamplerCustom"},widgets_values:[!0,0,"fixed",1.8]},{id:67,type:"VAELoader",pos:[2580,1200],size:{0:315,1:58},flags:{},order:7,mode:0,outputs:[{links:[69],name:"VAE",shape:3,type:"VAE"}],properties:{"Node name for S&R":"VAELoader"},widgets_values:["kl-f8-anime2.ckpt"]},{id:80,type:"EmptyLatentImage",pos:[1700,1540],size:{0:320,1:110},flags:{},order:17,mode:0,inputs:[{name:"width",type:"INT",link:86,widget:{name:"width"},label:"宽度"},{name:"height",type:"INT",link:87,widget:{name:"height"},label:"高度"},{name:"batch_size",type:"INT",link:88,widget:{name:"batch_size"},label:"批次大小"}],outputs:[{name:"LATENT",type:"LATENT",links:[102],shape:3,label:"Latent",slot_index:0}],properties:{"Node name for S&R":"EmptyLatentImage"},widgets_values:[512,512,1]},{id:81,type:"ImageSizeAndBatchSize",pos:[1270,1630],size:{0:210,1:66},flags:{},order:13,mode:0,inputs:[{name:"image",type:"IMAGE",link:120,label:"图像",slot_index:0}],outputs:[{name:"width",type:"INT",links:[86],shape:3,label:"宽度",slot_index:0},{name:"height",type:"INT",links:[87],shape:3,label:"高度",slot_index:1},{name:"batch_size",type:"INT",links:[88],shape:3,label:"批次大小",slot_index:2}],properties:{"Node name for S&R":"ImageSizeAndBatchSize"}},{id:97,type:"VHS_LoadVideo",pos:[910,1540],size:[210,360],flags:{},order:8,mode:0,inputs:[{name:"batch_manager",type:"VHS_BatchManager",link:null}],outputs:[{name:"IMAGE",type:"IMAGE",links:[119,120],shape:3,label:"图像",slot_index:0},{name:"frame_count",type:"INT",links:null,shape:3,label:"帧计数"},{name:"audio",type:"VHS_AUDIO",links:null,shape:3}],properties:{"Node name for S&R":"VHS_LoadVideo"},widgets_values:{video:"cxk_00003_.gif",force_rate:0,force_size:"Disabled",custom_width:512,custom_height:512,frame_load_cap:160,skip_first_frames:50,select_every_nth:1,"choose video to upload":"image",videopreview:{hidden:!1,paused:!1,params:{frame_load_cap:160,skip_first_frames:50,force_rate:0,filename:"cxk_00003_.gif",type:"input",format:"image/gif",select_every_nth:1}}}},{id:86,type:"LoadImage",pos:[2190,510],size:{0:250,1:310},flags:{},order:9,mode:0,outputs:[{name:"IMAGE",type:"IMAGE",links:[105],shape:3,label:"图像",slot_index:0},{name:"MASK",type:"MASK",links:null,shape:3,label:"遮罩"}],properties:{"Node name for S&R":"LoadImage"},widgets_values:["00581-420388937-((masterpiece)), (((best quality))), ((ultra-detailed)), (adult_2), ((illustration)), (cute detailed face_1.25),1girl, robotic u.png","image"]},{id:102,type:"VHS_LoadAudio",pos:[3320,1130],size:{0:315,1:82},flags:{},order:10,mode:0,outputs:[{name:"audio",type:"VHS_AUDIO",links:[126],shape:3,label:"音频",slot_index:0}],properties:{"Node name for S&R":"VHS_LoadAudio"},widgets_values:{audio_file:"C:\\ComfyUI_windows_portable\\ComfyUI\\input\\audio.mp3",seek_seconds:0}},{id:56,type:"VAEDecode",pos:[3e3,1030],size:{0:210,1:46},flags:{},order:22,mode:0,inputs:[{link:53,name:"samples",type:"LATENT",label:"Latent"},{link:69,name:"vae",slot_index:1,type:"VAE",label:"VAE"}],outputs:[{links:[121,127],name:"IMAGE",shape:3,slot_index:0,type:"IMAGE",label:"图像"}],properties:{"Node name for S&R":"VAEDecode"}},{id:103,type:"SaveImage",pos:[3372.826571377841,1362.901866566051],size:{0:315,1:58},flags:{},order:24,mode:0,inputs:[{name:"images",type:"IMAGE",link:127,label:"图像"}],properties:{},widgets_values:["111"]},{id:96,type:"VHS_VideoCombine",pos:[3790,1e3],size:[320,290],flags:{},order:23,mode:0,inputs:[{name:"images",type:"IMAGE",link:121,label:"图像"},{name:"audio",type:"VHS_AUDIO",link:126,label:"音频",slot_index:1},{name:"batch_manager",type:"VHS_BatchManager",link:null,label:"批次管理"}],outputs:[{name:"Filenames",type:"VHS_FILENAMES",links:null,shape:3,label:"文件名"}],properties:{"Node name for S&R":"VHS_VideoCombine"},widgets_values:{frame_rate:10,loop_count:0,filename_prefix:"AnimateDiff/comfy",format:"video/h265-mp4",pix_fmt:"yuv420p",crf:22,save_metadata:!0,pingpong:!0,save_output:!0,videopreview:{hidden:!1,paused:!1,params:{filename:"comfy_00011-audio.mp4",subfolder:"AnimateDiff",type:"output",format:"video/h265-mp4"}}}}],links:[[37,47,0,49,0,"MOTION_MODEL_ADE"],[38,49,0,50,1,"M_MODELS"],[40,52,0,50,2,"CONTEXT_OPTIONS"],[53,58,1,56,0,"LATENT"],[54,59,0,58,3,"SAMPLER"],[55,60,0,58,4,"SIGMAS"],[62,64,0,50,0,"MODEL"],[64,64,1,62,0,"CLIP"],[65,64,1,63,0,"CLIP"],[66,50,0,60,0,"MODEL"],[69,67,0,56,1,"VAE"],[71,62,0,69,0,"CONDITIONING"],[72,63,0,69,1,"CONDITIONING"],[73,69,0,58,1,"CONDITIONING"],[74,69,1,58,2,"CONDITIONING"],[75,70,0,69,2,"CONTROL_NET"],[86,81,0,80,0,"INT"],[87,81,1,80,1,"INT"],[88,81,2,80,2,"INT"],[102,80,0,58,5,"LATENT"],[103,91,0,92,0,"IPADAPTER"],[104,93,0,92,1,"CLIP_VISION"],[105,86,0,92,2,"IMAGE"],[106,50,0,92,3,"MODEL"],[107,92,0,58,0,"MODEL"],[112,94,0,64,0,"MODEL"],[113,94,1,64,1,"CLIP"],[119,97,0,69,3,"IMAGE"],[120,97,0,81,0,"IMAGE"],[121,56,0,96,0,"IMAGE"],[126,102,0,96,1,"VHS_AUDIO"],[127,56,0,103,0,"IMAGE"]],groups:[],config:{},extra:{},version:.4};function xx(s){if(s.startsWith("demo"))if(s=="demo")s=Tx;else return{code:-1,msg:"error demo: "+s,data:{}};let i=0,e=[];try{let a=[],n=[],t,l,r,h;for(t of s.split(`
`)){const p=t.match(/(^\s*)(- )?(.*)/);if(p){if(!p[2]){if(a.length==0){Ma.isDebug;continue}const k=n[n.length-1];if(k.self+=`
`+p[3],!k.self_data.hasOwnProperty("value")){Ma.isDebug;continue}k.self_data.value+=(k.self_data.value==""?"":`
`)+p[3];continue}l=p[1].length;{r=-1;for(let k=0;k<a.length;k++)if(a[k]>=l){a=a.slice(0,k+1),r=k;break}r==-1&&(a.push(l),r=a.length-1)}{let k=[];const o=p[3].split(",");for(let u of o)k.push(u.trim().split(":"));k[3]?h={self:p[3],children:[],self_data:{type:"edge",id:""+i++,parentId:"",parent:null,from_node:k[0][0],from_socket:k[1][0],to_node:k[2][0],to_socket:k[3][0],name:k[4]?k[4][0]:""}}:k[1]?h={self:p[3],children:[],self_data:{type:k[1]&&["i","input","o","output","v","value"].includes(k[1][0])?k[1][0]:"value",id:k[0][0],name:k[0][1]??k[0][0],parentId:"",parent:null,value:k[2]?k[2][0]:""}}:h={self:p[3],children:[],self_data:{type:"node",id:k[0][0],name:k[0][1]??k[0][0],parentId:"",parent:null,children:{inputs:[],outputs:[],values:[]}}},n=n.slice(0,a.length),n[r]=h}if(r==0)e.push(h);else{const k=n[r-1];if(k.self_data.type!="n"&&k.self_data.type!="node"&&k.self_data.type!="g"&&k.self_data.type!="group")continue;k.children.push(h),h.self_data.parentId=k.self_data.id,h.self_data.parent=k,h.self_data.type=="input"||h.self_data.type=="i"?(k.self_data.type="node",k.self_data.children.inputs.push(h)):h.self_data.type=="output"||h.self_data.type=="o"?(k.self_data.type="node",k.self_data.children.outputs.push(h)):h.self_data.type=="value"||h.self_data.type=="v"?(k.self_data.type="node",k.self_data.children.values.push(h)):(h.self_data.type=="node"||h.self_data.type=="n")&&(k.self_data.type="group")}}}}catch(a){return{code:-1,msg:"error: list parse fail: "+a,data:{}}}{if(e.length!=2)return{code:-1,msg:"error: without rootNode: edges and edges",data:{}};let a=[];{let t=function(l){for(let r of l){if(r.self_data.type!="n"&&r.self_data.type!="node"&&r.self_data.type!="g"&&r.self_data.type!="group")continue;const h={id:r.self_data.id,data:{type:r.self_data.type,label:r.self_data.name,inputs:r.self_data.children.inputs.map(p=>({id:p.self_data.id,name:p.self_data.name,value:p.self_data.value})),outputs:r.self_data.children.outputs.map(p=>({id:p.self_data.id,name:p.self_data.name,value:p.self_data.value})),values:r.self_data.children.values.map(p=>({id:p.self_data.id,name:p.self_data.name,value:p.self_data.value}))},position:{x:0,y:0},...r.self_data.parentId==""||r.self_data.parentId=="nodes"?{}:{parentNode:r.self_data.parentId},type:"common"};a.push(h),t(r.children)}};t(e[0].children)}let n=[];{let t=function(r){for(let h of r){if(h.self_data.type!="e"&&h.self_data.type!="edge")continue;const p=h.self_data.from_socket.toLowerCase().charCodeAt(0)%20;n.push({id:h.self_data.id,style:{stroke:l[p]},source:h.self_data.from_node,sourceHandle:h.self_data.from_socket,target:h.self_data.to_node,targetHandle:h.self_data.to_socket}),t(h.children)}};const l=["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff1a","#00ff66","#00ffb3","#00ffff","#00b3ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004c"];t(e[1].children)}return{code:0,msg:"",data:{nodes:a,edges:n}}}}const Tx=`
- nodes
  - node1:KSample
    - Latent, o
    - model, i
    - positive, i
    - negative, i
    - Latent, i
    - seed,
    - control_after_generate,, randomize
    - steps,, 20
    - CFG,, 8.0
    - sampler_name,, euler
    - scheduler,, normal
    - denoise,, 1.00
    - io defaultTest, i , test
    - io defaultTest, o, test
    - t1:noValueTest,
    - t2:,, noKeyTest
      mul lines test
  - node2:KSample
    - 潜空间, o
    - 模型, i
    - 正面条件, i
    - 负面条件, i
    - 潜空间, i
    - 种子,
    - 运行后操作,
    - 步数,
    - CFG,
    - 采样器/采样方法,
    - 调度器,
    - 降噪,
  - translate
- edges
  - node1,Latent, translate,l
  - translate,r, node2, 潜空间
`;function Sx(s){if(typeof s=="string")if(s.startsWith("demo"))s=JSON.parse(JSON.stringify(Ix));else return{code:-1,msg:"error demo: "+s,data:{}};for(let i of s.nodes)i.hasOwnProperty("position")||(i.position={x:0,y:0}),(!i.hasOwnProperty("valueType")||i.valueType=="")&&(i.valueType="item-default"),i.type="item";return{code:0,msg:"",data:s}}const Ix={nodes:[{id:6,data:{label:"itemData testData",valueType:"itemData valueType",items:[{id:"01",name:"null",refType:"input",valueType:"item-default",value:""},{id:"02",name:"null",refType:"output",valueType:"item-default",value:""},{id:"03",name:"color",refType:"input",valueType:"item-color",value:"#2283fc"},{id:"1",name:"number",refType:"input",valueType:"item-default",value:"123"},{id:"2",name:"number",refType:"output",valueType:"item-default",value:"456"},{id:"3",name:"vName",refType:"value",valueType:"item-default",value:"vValue"},{id:"4",name:"clip",refType:"input",valueType:"item-default",value:""},{id:"5",name:"clip",refType:"output",valueType:"item-default",value:""},{id:"6",name:"selectName",refType:"value",valueType:"item-dropdown",value:"select1|select2|select3"},{id:"7",name:"markdown",refType:"value",valueType:"item-markdown",value:`## Markdown

**bord** *italic* ==highlight== ~~del~~`}]}}]};function Rx(s){if(s.startsWith("demo"))if(s=="demo")s=Px;else return{code:-1,msg:"error demo: "+s,data:{}};let i;const e=Ox(s);if(e.code!=0)return e;i=e.data;{if(i.length!=2)return{code:-1,msg:"error: without rootNode: edges and edges",data:{}};let a=[];{let t=function(l){for(let r of l){if(r.self_data.type!="n"&&r.self_data.type!="node"&&r.self_data.type!="g"&&r.self_data.type!="group")continue;const h={id:r.self_data.id,data:{type:r.self_data.type,label:r.self_data.name,items:r.self_data.items},position:{x:0,y:0},...r.self_data.parentId==""||r.self_data.parentId=="nodes"?{}:{parentNode:r.self_data.parentId},type:"item"};a.push(h),t(r.children)}};t(i[0].children)}let n=[];{let t=function(r){for(let h of r){if(h.self_data.type!="e"&&h.self_data.type!="edge")continue;const p=h.self_data.from_socket.toLowerCase().charCodeAt(0)%20;n.push({id:h.self_data.id,style:{stroke:l[p]},source:h.self_data.from_node,sourceHandle:h.self_data.from_socket,target:h.self_data.to_node,targetHandle:h.self_data.to_socket}),t(h.children)}};const l=["#ff0000","#ff4d00","#ff9900","#ffe600","#ccff00","#80ff00","#33ff00","#00ff1a","#00ff66","#00ffb3","#00ffff","#00b3ff","#0066ff","#001aff","#3300ff","#8000ff","#cc00ff","#ff00e6","#ff0099","#ff004c"];t(i[1].children)}return{code:0,msg:"",data:{nodes:a,edges:n}}}}function Ox(s){let i=0,e=[];try{let a=[],n=[],t=0,l,r,h,p,k,d,o=null,u=null;const c=s.split(`
`);for(t=0;t<c.length;t++){let A=function(){let g=[];const m=h.split(",");for(let y of m)g.push(y.trim().split(":"));g[3]?d.self_data={type:"edge",id:""+i++,parentId:"",parent:null,from_node:g[0][0],from_socket:g[1][0],to_node:g[2][0],to_socket:g[3][0],name:g[4]?g[4][0]:""}:g[1]?d.self_data={type:"socket",refType:g[1]&&["i","input","o","output","v","value"].includes(g[1][0])?g[1][0]:"value",valueType:g[1]&&g[1][1]?g[1][1]:"item-default",id:g[0][0],name:g[0][1]??g[0][0],parentId:"",parent:null,value:g[2]?g[2][0]:"",items:[]}:d.self_data={type:"node",id:g[0][0],name:g[0][1]??g[0][0],parentId:"",parent:null,items:[]},n=n.slice(0,a.length),n[k]=d};if(l=o??c[t],r=u??l.match(/(^\s*)(- )?(.*)/),!!r&&r[2]){for(h=r[3];!(t>=c.length-1);){if(o=c[t+1],u=o.match(/(^\s*)(- )?(.*)/),!u){t++;continue}if(!u[2]){l+=`
`+u[3],h+=`
`+u[3],t++;continue}break}p=r[1].length;{k=-1;for(let g=0;g<a.length;g++)if(a[g]>=p){a=a.slice(0,g+1),k=g;break}k==-1&&(a.push(p),k=a.length-1)}if(d={self:h,children:[],self_data:null},A(),k==0)e.push(d);else{const g=n[k-1];if(g.self_data.type!="n"&&g.self_data.type!="node"&&g.self_data.type!="g"&&g.self_data.type!="group"&&g.self_data.type!="s"&&g.self_data.type!="socket")continue;d.self_data.parentId=g.self_data.id,d.self_data.parent=g,(d.self_data.type=="socket"||d.self_data.type=="s"||d.self_data.type=="node"||d.self_data.type=="n")&&g.self_data.items.push(d.self_data),g.children.push(d)}}}}catch(a){return{code:-1,msg:"error: list parse fail: "+a,data:[]}}return{code:0,msg:"",data:e}}const Px=`
- nodes
  - NodeTitle
    - only name, i
    - i2, i, *i2
    - i3, i, mul line
      i3-2
      i3-3
    - i4, i, *i4
    - only name, o
    - o2, o, *o2
    - o3, o, *o3
    - o4, o, mul line
      o4-2
      o4-3
    - v2, v, *v2
    - v4, , mul line
      v4-2
      v4-3
    - v3, , *v3
    - v5:color, :item-color, #008888
    - v6:, :item-markdown, only value
      **v6-1**
      *v6-2*
    - v7, :item-dropdown, option1|option2|option3
    - v8 only name, 
    - v9, :item-item, l
      - only name2, i
      - i22, i, *i2
      - v91, :item-item, l
        - v911, 
      - v92, :item-item, l
        - v921, 
    - v10,,over
- edges
`;function Lx(s="nodeflow-vueflow",i="{nodes:[],edges:[]}"){let e;if(i.trim()=="")return{code:-1,msg:"error: content is empty",data:{}};if(i.startsWith("demo"))e=i;else if(s==="nodeflow-list"||s==="nodeflow-listitem")e=i;else try{if(e=JSON.parse(i),!e)return{code:-1,msg:"Error: not a legitimate json",data:{}}}catch(n){return{code:-1,msg:"Error: not a legitimate json: "+n,data:{}}}let a;if(s=="nodeflow-comfyui")a=_x(e);else if(s=="nodeflow-obcanvas")a=bx(e);else if(s=="nodeflow-vueflow")a=mx(e);else if(s=="nodeflow-list")a=xx(e);else if(s=="nodeflow-item")a=Sx(e);else if(s=="nodeflow-listitem")a=Rx(e);else return{code:-1,msg:"error: invalid json type: "+s,data:{}};return a.code!=0?a:a.data.hasOwnProperty("nodes")?(a.data.hasOwnProperty("edges")||(a.data.edges=[]),a):{code:-1,msg:"json without nodes attrs",data:{}}}function vp(s){return Zh()?(il(s),!0):!1}function oa(s){return typeof s=="function"?s():ms(s)}const Nx=typeof window<"u"&&typeof document<"u",Mx=s=>typeof s<"u",Vx=Object.prototype.toString,$x=s=>Vx.call(s)==="[object Object]",zx=()=>{};function qx(s,i){function e(...a){return new Promise((n,t)=>{Promise.resolve(s(()=>i.apply(this,a),{fn:i,thisArg:this,args:a})).then(n).catch(t)})}return e}const B6=s=>s();function Hx(s=B6){const i=Q(!0);function e(){i.value=!1}function a(){i.value=!0}const n=(...t)=>{i.value&&s(...t)};return{isActive:Ge(i),pause:e,resume:a,eventFilter:n}}function b0(s,i=!1,e="Timeout"){return new Promise((a,n)=>{setTimeout(i?()=>n(e):a,s)})}function jx(s,i,e={}){const{eventFilter:a=B6,...n}=e;return bs(s,qx(a,i),n)}function Vn(s,i,e={}){const{eventFilter:a,...n}=e,{eventFilter:t,pause:l,resume:r,isActive:h}=Hx(a);return{stop:jx(s,i,{...n,eventFilter:t}),pause:l,resume:r,isActive:h}}function Ux(s,i={}){if(!ti(s))return Fm(s);const e=Array.isArray(s.value)?Array.from({length:s.value.length}):{};for(const a in s.value)e[a]=ku(()=>({get(){return s.value[a]},set(n){var t;if((t=oa(i.replaceRef))!=null?t:!0)if(Array.isArray(s.value)){const r=[...s.value];r[a]=n,s.value=r}else{const r={...s.value,[a]:n};Object.setPrototypeOf(r,Object.getPrototypeOf(s.value)),s.value=r}else s.value[a]=n}}));return e}function Co(s,i=!1){function e(d,{flush:o="sync",deep:u=!1,timeout:c,throwOnTimeout:A}={}){let g=null;const m=[new Promise(y=>{g=bs(s,v=>{d(v)!==i&&(g==null||g(),y(v))},{flush:o,deep:u,immediate:!0})})];return c!=null&&m.push(b0(c,A).then(()=>oa(s)).finally(()=>g==null?void 0:g())),Promise.race(m)}function a(d,o){if(!ti(d))return e(v=>v===d,o);const{flush:u="sync",deep:c=!1,timeout:A,throwOnTimeout:g}=o??{};let f=null;const y=[new Promise(v=>{f=bs([s,d],([_,S])=>{i!==(_===S)&&(f==null||f(),v(_))},{flush:u,deep:c,immediate:!0})})];return A!=null&&y.push(b0(A,g).then(()=>oa(s)).finally(()=>(f==null||f(),oa(s)))),Promise.race(y)}function n(d){return e(o=>!!o,d)}function t(d){return a(null,d)}function l(d){return a(void 0,d)}function r(d){return e(Number.isNaN,d)}function h(d,o){return e(u=>{const c=Array.from(u);return c.includes(d)||c.includes(oa(d))},o)}function p(d){return k(1,d)}function k(d=1,o){let u=-1;return e(()=>(u+=1,u>=d),o)}return Array.isArray(oa(s))?{toMatch:e,toContains:h,changed:p,changedTimes:k,get not(){return Co(s,!i)}}:{toMatch:e,toBe:a,toBeTruthy:n,toBeNull:t,toBeNaN:r,toBeUndefined:l,changed:p,changedTimes:k,get not(){return Co(s,!i)}}}function _o(s){return Co(s)}function Gx(s){var i;const e=oa(s);return(i=e==null?void 0:e.$el)!=null?i:e}const A6=Nx?window:void 0;function y6(...s){let i,e,a,n;if(typeof s[0]=="string"||Array.isArray(s[0])?([e,a,n]=s,i=A6):[i,e,a,n]=s,!i)return zx;Array.isArray(e)||(e=[e]),Array.isArray(a)||(a=[a]);const t=[],l=()=>{t.forEach(k=>k()),t.length=0},r=(k,d,o,u)=>(k.addEventListener(d,o,u),()=>k.removeEventListener(d,o,u)),h=bs(()=>[Gx(i),oa(n)],([k,d])=>{if(l(),!k)return;const o=$x(d)?{...d}:d;t.push(...e.flatMap(u=>a.map(c=>r(k,u,c,o))))},{immediate:!0,flush:"post"}),p=()=>{h(),l()};return vp(p),p}function Wx(s){return typeof s=="function"?s:typeof s=="string"?i=>i.key===s:Array.isArray(s)?i=>s.includes(i.key):()=>!0}function C0(...s){let i,e,a={};s.length===3?(i=s[0],e=s[1],a=s[2]):s.length===2?typeof s[1]=="object"?(i=!0,e=s[0],a=s[1]):(i=s[0],e=s[1]):(i=!0,e=s[0]);const{target:n=A6,eventName:t="keydown",passive:l=!1,dedupe:r=!1}=a,h=Wx(i);return y6(n,t,k=>{k.repeat&&oa(r)||h(k)&&e(k)},l)}function Kx(s){return JSON.parse(JSON.stringify(s))}function Ek(s,i,e,a={}){var n,t,l;const{clone:r=!1,passive:h=!1,eventName:p,deep:k=!1,defaultValue:d,shouldEmit:o}=a,u=pe(),c=e||(u==null?void 0:u.emit)||((n=u==null?void 0:u.$emit)==null?void 0:n.bind(u))||((l=(t=u==null?void 0:u.proxy)==null?void 0:t.$emit)==null?void 0:l.bind(u==null?void 0:u.proxy));let A=p;i||(i="modelValue"),A=A||`update:${i.toString()}`;const g=y=>r?typeof r=="function"?r(y):Kx(y):y,f=()=>Mx(s[i])?g(s[i]):d,m=y=>{o?o(y)&&c(A,y):c(A,y)};if(h){const y=f(),v=Q(y);let _=!1;return bs(()=>s[i],S=>{_||(_=!0,v.value=g(S),qs(()=>_=!1))}),bs(v,S=>{!_&&(S!==s[i]||k)&&m(S)},{deep:k}),v}else return V({get(){return f()},set(y){m(y)}})}var Yx={value:()=>{}};function Fp(){for(var s=0,i=arguments.length,e={},a;s<i;++s){if(!(a=arguments[s]+"")||a in e||/[\s.]/.test(a))throw new Error("illegal type: "+a);e[a]=[]}return new hh(e)}function hh(s){this._=s}function Xx(s,i){return s.trim().split(/^|\s+/).map(function(e){var a="",n=e.indexOf(".");if(n>=0&&(a=e.slice(n+1),e=e.slice(0,n)),e&&!i.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:a}})}hh.prototype=Fp.prototype={constructor:hh,on:function(s,i){var e=this._,a=Xx(s+"",e),n,t=-1,l=a.length;if(arguments.length<2){for(;++t<l;)if((n=(s=a[t]).type)&&(n=Zx(e[n],s.name)))return n;return}if(i!=null&&typeof i!="function")throw new Error("invalid callback: "+i);for(;++t<l;)if(n=(s=a[t]).type)e[n]=_0(e[n],s.name,i);else if(i==null)for(n in e)e[n]=_0(e[n],s.name,null);return this},copy:function(){var s={},i=this._;for(var e in i)s[e]=i[e].slice();return new hh(s)},call:function(s,i){if((n=arguments.length-2)>0)for(var e=new Array(n),a=0,n,t;a<n;++a)e[a]=arguments[a+2];if(!this._.hasOwnProperty(s))throw new Error("unknown type: "+s);for(t=this._[s],a=0,n=t.length;a<n;++a)t[a].value.apply(i,e)},apply:function(s,i,e){if(!this._.hasOwnProperty(s))throw new Error("unknown type: "+s);for(var a=this._[s],n=0,t=a.length;n<t;++n)a[n].value.apply(i,e)}};function Zx(s,i){for(var e=0,a=s.length,n;e<a;++e)if((n=s[e]).name===i)return n.value}function _0(s,i,e){for(var a=0,n=s.length;a<n;++a)if(s[a].name===i){s[a]=Yx,s=s.slice(0,a).concat(s.slice(a+1));break}return e!=null&&s.push({name:i,value:e}),s}var Do="http://www.w3.org/1999/xhtml";const D0={svg:"http://www.w3.org/2000/svg",xhtml:Do,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function Ep(s){var i=s+="",e=i.indexOf(":");return e>=0&&(i=s.slice(0,e))!=="xmlns"&&(s=s.slice(e+1)),D0.hasOwnProperty(i)?{space:D0[i],local:s}:s}function Jx(s){return function(){var i=this.ownerDocument,e=this.namespaceURI;return e===Do&&i.documentElement.namespaceURI===Do?i.createElement(s):i.createElementNS(e,s)}}function Qx(s){return function(){return this.ownerDocument.createElementNS(s.space,s.local)}}function f6(s){var i=Ep(s);return(i.local?Qx:Jx)(i)}function sT(){}function rc(s){return s==null?sT:function(){return this.querySelector(s)}}function iT(s){typeof s!="function"&&(s=rc(s));for(var i=this._groups,e=i.length,a=new Array(e),n=0;n<e;++n)for(var t=i[n],l=t.length,r=a[n]=new Array(l),h,p,k=0;k<l;++k)(h=t[k])&&(p=s.call(h,h.__data__,k,t))&&("__data__"in h&&(p.__data__=h.__data__),r[k]=p);return new le(a,this._parents)}function eT(s){return s==null?[]:Array.isArray(s)?s:Array.from(s)}function aT(){return[]}function m6(s){return s==null?aT:function(){return this.querySelectorAll(s)}}function nT(s){return function(){return eT(s.apply(this,arguments))}}function tT(s){typeof s=="function"?s=nT(s):s=m6(s);for(var i=this._groups,e=i.length,a=[],n=[],t=0;t<e;++t)for(var l=i[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&(a.push(s.call(h,h.__data__,p,l)),n.push(h));return new le(a,n)}function v6(s){return function(){return this.matches(s)}}function F6(s){return function(i){return i.matches(s)}}var lT=Array.prototype.find;function rT(s){return function(){return lT.call(this.children,s)}}function hT(){return this.firstElementChild}function pT(s){return this.select(s==null?hT:rT(typeof s=="function"?s:F6(s)))}var kT=Array.prototype.filter;function dT(){return Array.from(this.children)}function oT(s){return function(){return kT.call(this.children,s)}}function uT(s){return this.selectAll(s==null?dT:oT(typeof s=="function"?s:F6(s)))}function cT(s){typeof s!="function"&&(s=v6(s));for(var i=this._groups,e=i.length,a=new Array(e),n=0;n<e;++n)for(var t=i[n],l=t.length,r=a[n]=[],h,p=0;p<l;++p)(h=t[p])&&s.call(h,h.__data__,p,t)&&r.push(h);return new le(a,this._parents)}function E6(s){return new Array(s.length)}function gT(){return new le(this._enter||this._groups.map(E6),this._parents)}function Th(s,i){this.ownerDocument=s.ownerDocument,this.namespaceURI=s.namespaceURI,this._next=null,this._parent=s,this.__data__=i}Th.prototype={constructor:Th,appendChild:function(s){return this._parent.insertBefore(s,this._next)},insertBefore:function(s,i){return this._parent.insertBefore(s,i)},querySelector:function(s){return this._parent.querySelector(s)},querySelectorAll:function(s){return this._parent.querySelectorAll(s)}};function BT(s){return function(){return s}}function AT(s,i,e,a,n,t){for(var l=0,r,h=i.length,p=t.length;l<p;++l)(r=i[l])?(r.__data__=t[l],a[l]=r):e[l]=new Th(s,t[l]);for(;l<h;++l)(r=i[l])&&(n[l]=r)}function yT(s,i,e,a,n,t,l){var r,h,p=new Map,k=i.length,d=t.length,o=new Array(k),u;for(r=0;r<k;++r)(h=i[r])&&(o[r]=u=l.call(h,h.__data__,r,i)+"",p.has(u)?n[r]=h:p.set(u,h));for(r=0;r<d;++r)u=l.call(s,t[r],r,t)+"",(h=p.get(u))?(a[r]=h,h.__data__=t[r],p.delete(u)):e[r]=new Th(s,t[r]);for(r=0;r<k;++r)(h=i[r])&&p.get(o[r])===h&&(n[r]=h)}function fT(s){return s.__data__}function mT(s,i){if(!arguments.length)return Array.from(this,fT);var e=i?yT:AT,a=this._parents,n=this._groups;typeof s!="function"&&(s=BT(s));for(var t=n.length,l=new Array(t),r=new Array(t),h=new Array(t),p=0;p<t;++p){var k=a[p],d=n[p],o=d.length,u=vT(s.call(k,k&&k.__data__,p,a)),c=u.length,A=r[p]=new Array(c),g=l[p]=new Array(c),f=h[p]=new Array(o);e(k,d,A,g,f,u,i);for(var m=0,y=0,v,_;m<c;++m)if(v=A[m]){for(m>=y&&(y=m+1);!(_=g[y])&&++y<c;);v._next=_||null}}return l=new le(l,a),l._enter=r,l._exit=h,l}function vT(s){return typeof s=="object"&&"length"in s?s:Array.from(s)}function FT(){return new le(this._exit||this._groups.map(E6),this._parents)}function ET(s,i,e){var a=this.enter(),n=this,t=this.exit();return typeof s=="function"?(a=s(a),a&&(a=a.selection())):a=a.append(s+""),i!=null&&(n=i(n),n&&(n=n.selection())),e==null?t.remove():e(t),a&&n?a.merge(n).order():n}function bT(s){for(var i=s.selection?s.selection():s,e=this._groups,a=i._groups,n=e.length,t=a.length,l=Math.min(n,t),r=new Array(n),h=0;h<l;++h)for(var p=e[h],k=a[h],d=p.length,o=r[h]=new Array(d),u,c=0;c<d;++c)(u=p[c]||k[c])&&(o[c]=u);for(;h<n;++h)r[h]=e[h];return new le(r,this._parents)}function CT(){for(var s=this._groups,i=-1,e=s.length;++i<e;)for(var a=s[i],n=a.length-1,t=a[n],l;--n>=0;)(l=a[n])&&(t&&l.compareDocumentPosition(t)^4&&t.parentNode.insertBefore(l,t),t=l);return this}function _T(s){s||(s=DT);function i(d,o){return d&&o?s(d.__data__,o.__data__):!d-!o}for(var e=this._groups,a=e.length,n=new Array(a),t=0;t<a;++t){for(var l=e[t],r=l.length,h=n[t]=new Array(r),p,k=0;k<r;++k)(p=l[k])&&(h[k]=p);h.sort(i)}return new le(n,this._parents).order()}function DT(s,i){return s<i?-1:s>i?1:s>=i?0:NaN}function wT(){var s=arguments[0];return arguments[0]=this,s.apply(null,arguments),this}function xT(){return Array.from(this)}function TT(){for(var s=this._groups,i=0,e=s.length;i<e;++i)for(var a=s[i],n=0,t=a.length;n<t;++n){var l=a[n];if(l)return l}return null}function ST(){let s=0;for(const i of this)++s;return s}function IT(){return!this.node()}function RT(s){for(var i=this._groups,e=0,a=i.length;e<a;++e)for(var n=i[e],t=0,l=n.length,r;t<l;++t)(r=n[t])&&s.call(r,r.__data__,t,n);return this}function OT(s){return function(){this.removeAttribute(s)}}function PT(s){return function(){this.removeAttributeNS(s.space,s.local)}}function LT(s,i){return function(){this.setAttribute(s,i)}}function NT(s,i){return function(){this.setAttributeNS(s.space,s.local,i)}}function MT(s,i){return function(){var e=i.apply(this,arguments);e==null?this.removeAttribute(s):this.setAttribute(s,e)}}function VT(s,i){return function(){var e=i.apply(this,arguments);e==null?this.removeAttributeNS(s.space,s.local):this.setAttributeNS(s.space,s.local,e)}}function $T(s,i){var e=Ep(s);if(arguments.length<2){var a=this.node();return e.local?a.getAttributeNS(e.space,e.local):a.getAttribute(e)}return this.each((i==null?e.local?PT:OT:typeof i=="function"?e.local?VT:MT:e.local?NT:LT)(e,i))}function b6(s){return s.ownerDocument&&s.ownerDocument.defaultView||s.document&&s||s.defaultView}function zT(s){return function(){this.style.removeProperty(s)}}function qT(s,i,e){return function(){this.style.setProperty(s,i,e)}}function HT(s,i,e){return function(){var a=i.apply(this,arguments);a==null?this.style.removeProperty(s):this.style.setProperty(s,a,e)}}function jT(s,i,e){return arguments.length>1?this.each((i==null?zT:typeof i=="function"?HT:qT)(s,i,e??"")):Bt(this.node(),s)}function Bt(s,i){return s.style.getPropertyValue(i)||b6(s).getComputedStyle(s,null).getPropertyValue(i)}function UT(s){return function(){delete this[s]}}function GT(s,i){return function(){this[s]=i}}function WT(s,i){return function(){var e=i.apply(this,arguments);e==null?delete this[s]:this[s]=e}}function KT(s,i){return arguments.length>1?this.each((i==null?UT:typeof i=="function"?WT:GT)(s,i)):this.node()[s]}function C6(s){return s.trim().split(/^|\s+/)}function hc(s){return s.classList||new _6(s)}function _6(s){this._node=s,this._names=C6(s.getAttribute("class")||"")}_6.prototype={add:function(s){var i=this._names.indexOf(s);i<0&&(this._names.push(s),this._node.setAttribute("class",this._names.join(" ")))},remove:function(s){var i=this._names.indexOf(s);i>=0&&(this._names.splice(i,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(s){return this._names.indexOf(s)>=0}};function D6(s,i){for(var e=hc(s),a=-1,n=i.length;++a<n;)e.add(i[a])}function w6(s,i){for(var e=hc(s),a=-1,n=i.length;++a<n;)e.remove(i[a])}function YT(s){return function(){D6(this,s)}}function XT(s){return function(){w6(this,s)}}function ZT(s,i){return function(){(i.apply(this,arguments)?D6:w6)(this,s)}}function JT(s,i){var e=C6(s+"");if(arguments.length<2){for(var a=hc(this.node()),n=-1,t=e.length;++n<t;)if(!a.contains(e[n]))return!1;return!0}return this.each((typeof i=="function"?ZT:i?YT:XT)(e,i))}function QT(){this.textContent=""}function sS(s){return function(){this.textContent=s}}function iS(s){return function(){var i=s.apply(this,arguments);this.textContent=i??""}}function eS(s){return arguments.length?this.each(s==null?QT:(typeof s=="function"?iS:sS)(s)):this.node().textContent}function aS(){this.innerHTML=""}function nS(s){return function(){this.innerHTML=s}}function tS(s){return function(){var i=s.apply(this,arguments);this.innerHTML=i??""}}function lS(s){return arguments.length?this.each(s==null?aS:(typeof s=="function"?tS:nS)(s)):this.node().innerHTML}function rS(){this.nextSibling&&this.parentNode.appendChild(this)}function hS(){return this.each(rS)}function pS(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function kS(){return this.each(pS)}function dS(s){var i=typeof s=="function"?s:f6(s);return this.select(function(){return this.appendChild(i.apply(this,arguments))})}function oS(){return null}function uS(s,i){var e=typeof s=="function"?s:f6(s),a=i==null?oS:typeof i=="function"?i:rc(i);return this.select(function(){return this.insertBefore(e.apply(this,arguments),a.apply(this,arguments)||null)})}function cS(){var s=this.parentNode;s&&s.removeChild(this)}function gS(){return this.each(cS)}function BS(){var s=this.cloneNode(!1),i=this.parentNode;return i?i.insertBefore(s,this.nextSibling):s}function AS(){var s=this.cloneNode(!0),i=this.parentNode;return i?i.insertBefore(s,this.nextSibling):s}function yS(s){return this.select(s?AS:BS)}function fS(s){return arguments.length?this.property("__data__",s):this.node().__data__}function mS(s){return function(i){s.call(this,i,this.__data__)}}function vS(s){return s.trim().split(/^|\s+/).map(function(i){var e="",a=i.indexOf(".");return a>=0&&(e=i.slice(a+1),i=i.slice(0,a)),{type:i,name:e}})}function FS(s){return function(){var i=this.__on;if(i){for(var e=0,a=-1,n=i.length,t;e<n;++e)t=i[e],(!s.type||t.type===s.type)&&t.name===s.name?this.removeEventListener(t.type,t.listener,t.options):i[++a]=t;++a?i.length=a:delete this.__on}}}function ES(s,i,e){return function(){var a=this.__on,n,t=mS(i);if(a){for(var l=0,r=a.length;l<r;++l)if((n=a[l]).type===s.type&&n.name===s.name){this.removeEventListener(n.type,n.listener,n.options),this.addEventListener(n.type,n.listener=t,n.options=e),n.value=i;return}}this.addEventListener(s.type,t,e),n={type:s.type,name:s.name,value:i,listener:t,options:e},a?a.push(n):this.__on=[n]}}function bS(s,i,e){var a=vS(s+""),n,t=a.length,l;if(arguments.length<2){var r=this.node().__on;if(r){for(var h=0,p=r.length,k;h<p;++h)for(n=0,k=r[h];n<t;++n)if((l=a[n]).type===k.type&&l.name===k.name)return k.value}return}for(r=i?ES:FS,n=0;n<t;++n)this.each(r(a[n],i,e));return this}function x6(s,i,e){var a=b6(s),n=a.CustomEvent;typeof n=="function"?n=new n(i,e):(n=a.document.createEvent("Event"),e?(n.initEvent(i,e.bubbles,e.cancelable),n.detail=e.detail):n.initEvent(i,!1,!1)),s.dispatchEvent(n)}function CS(s,i){return function(){return x6(this,s,i)}}function _S(s,i){return function(){return x6(this,s,i.apply(this,arguments))}}function DS(s,i){return this.each((typeof i=="function"?_S:CS)(s,i))}function*wS(){for(var s=this._groups,i=0,e=s.length;i<e;++i)for(var a=s[i],n=0,t=a.length,l;n<t;++n)(l=a[n])&&(yield l)}var T6=[null];function le(s,i){this._groups=s,this._parents=i}function mr(){return new le([[document.documentElement]],T6)}function xS(){return this}le.prototype=mr.prototype={constructor:le,select:iT,selectAll:tT,selectChild:pT,selectChildren:uT,filter:cT,data:mT,enter:gT,exit:FT,join:ET,merge:bT,selection:xS,order:CT,sort:_T,call:wT,nodes:xT,node:TT,size:ST,empty:IT,each:RT,attr:$T,style:jT,property:KT,classed:JT,text:eS,html:lS,raise:hS,lower:kS,append:dS,insert:uS,remove:gS,clone:yS,datum:fS,on:bS,dispatch:DS,[Symbol.iterator]:wS};function fe(s){return typeof s=="string"?new le([[document.querySelector(s)]],[document.documentElement]):new le([[s]],T6)}function TS(s){let i;for(;i=s.sourceEvent;)s=i;return s}function Me(s,i){if(s=TS(s),i===void 0&&(i=s.currentTarget),i){var e=i.ownerSVGElement||i;if(e.createSVGPoint){var a=e.createSVGPoint();return a.x=s.clientX,a.y=s.clientY,a=a.matrixTransform(i.getScreenCTM().inverse()),[a.x,a.y]}if(i.getBoundingClientRect){var n=i.getBoundingClientRect();return[s.clientX-n.left-i.clientLeft,s.clientY-n.top-i.clientTop]}}return[s.pageX,s.pageY]}const SS={passive:!1},Rl={capture:!0,passive:!1};function bk(s){s.stopImmediatePropagation()}function it(s){s.preventDefault(),s.stopImmediatePropagation()}function S6(s){var i=s.document.documentElement,e=fe(s).on("dragstart.drag",it,Rl);"onselectstart"in i?e.on("selectstart.drag",it,Rl):(i.__noselect=i.style.MozUserSelect,i.style.MozUserSelect="none")}function I6(s,i){var e=s.document.documentElement,a=fe(s).on("dragstart.drag",null);i&&(a.on("click.drag",it,Rl),setTimeout(function(){a.on("click.drag",null)},0)),"onselectstart"in e?a.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}const Vr=s=>()=>s;function wo(s,{sourceEvent:i,subject:e,target:a,identifier:n,active:t,x:l,y:r,dx:h,dy:p,dispatch:k}){Object.defineProperties(this,{type:{value:s,enumerable:!0,configurable:!0},sourceEvent:{value:i,enumerable:!0,configurable:!0},subject:{value:e,enumerable:!0,configurable:!0},target:{value:a,enumerable:!0,configurable:!0},identifier:{value:n,enumerable:!0,configurable:!0},active:{value:t,enumerable:!0,configurable:!0},x:{value:l,enumerable:!0,configurable:!0},y:{value:r,enumerable:!0,configurable:!0},dx:{value:h,enumerable:!0,configurable:!0},dy:{value:p,enumerable:!0,configurable:!0},_:{value:k}})}wo.prototype.on=function(){var s=this._.on.apply(this._,arguments);return s===this._?this:s};function IS(s){return!s.ctrlKey&&!s.button}function RS(){return this.parentNode}function OS(s,i){return i??{x:s.x,y:s.y}}function PS(){return navigator.maxTouchPoints||"ontouchstart"in this}function LS(){var s=IS,i=RS,e=OS,a=PS,n={},t=Fp("start","drag","end"),l=0,r,h,p,k,d=0;function o(v){v.on("mousedown.drag",u).filter(a).on("touchstart.drag",g).on("touchmove.drag",f,SS).on("touchend.drag touchcancel.drag",m).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function u(v,_){if(!(k||!s.call(this,v,_))){var S=y(this,i.call(this,v,_),v,_,"mouse");S&&(fe(v.view).on("mousemove.drag",c,Rl).on("mouseup.drag",A,Rl),S6(v.view),bk(v),p=!1,r=v.clientX,h=v.clientY,S("start",v))}}function c(v){if(it(v),!p){var _=v.clientX-r,S=v.clientY-h;p=_*_+S*S>d}n.mouse("drag",v)}function A(v){fe(v.view).on("mousemove.drag mouseup.drag",null),I6(v.view,p),it(v),n.mouse("end",v)}function g(v,_){if(s.call(this,v,_)){var S=v.changedTouches,N=i.call(this,v,_),T=S.length,C,I;for(C=0;C<T;++C)(I=y(this,N,v,_,S[C].identifier,S[C]))&&(bk(v),I("start",v,S[C]))}}function f(v){var _=v.changedTouches,S=_.length,N,T;for(N=0;N<S;++N)(T=n[_[N].identifier])&&(it(v),T("drag",v,_[N]))}function m(v){var _=v.changedTouches,S=_.length,N,T;for(k&&clearTimeout(k),k=setTimeout(function(){k=null},500),N=0;N<S;++N)(T=n[_[N].identifier])&&(bk(v),T("end",v,_[N]))}function y(v,_,S,N,T,C){var I=t.copy(),O=Me(C||S,_),w,z,b;if((b=e.call(v,new wo("beforestart",{sourceEvent:S,target:o,identifier:T,active:l,x:O[0],y:O[1],dx:0,dy:0,dispatch:I}),N))!=null)return w=b.x-O[0]||0,z=b.y-O[1]||0,function $(R,M,W){var Y=O,ls;switch(R){case"start":n[T]=$,ls=l++;break;case"end":delete n[T],--l;case"drag":O=Me(W||M,_),ls=l;break}I.call(R,v,new wo(R,{sourceEvent:M,subject:b,target:o,identifier:T,active:ls,x:O[0]+w,y:O[1]+z,dx:O[0]-Y[0],dy:O[1]-Y[1],dispatch:I}),N)}}return o.filter=function(v){return arguments.length?(s=typeof v=="function"?v:Vr(!!v),o):s},o.container=function(v){return arguments.length?(i=typeof v=="function"?v:Vr(v),o):i},o.subject=function(v){return arguments.length?(e=typeof v=="function"?v:Vr(v),o):e},o.touchable=function(v){return arguments.length?(a=typeof v=="function"?v:Vr(!!v),o):a},o.on=function(){var v=t.on.apply(t,arguments);return v===t?o:v},o.clickDistance=function(v){return arguments.length?(d=(v=+v)*v,o):Math.sqrt(d)},o}function pc(s,i,e){s.prototype=i.prototype=e,e.constructor=s}function R6(s,i){var e=Object.create(s.prototype);for(var a in i)e[a]=i[a];return e}function vr(){}var Ol=.7,Sh=1/Ol,et="\\s*([+-]?\\d+)\\s*",Pl="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",He="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",NS=/^#([0-9a-f]{3,8})$/,MS=new RegExp(`^rgb\\(${et},${et},${et}\\)$`),VS=new RegExp(`^rgb\\(${He},${He},${He}\\)$`),$S=new RegExp(`^rgba\\(${et},${et},${et},${Pl}\\)$`),zS=new RegExp(`^rgba\\(${He},${He},${He},${Pl}\\)$`),qS=new RegExp(`^hsl\\(${Pl},${He},${He}\\)$`),HS=new RegExp(`^hsla\\(${Pl},${He},${He},${Pl}\\)$`),w0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};pc(vr,Ll,{copy(s){return Object.assign(new this.constructor,this,s)},displayable(){return this.rgb().displayable()},hex:x0,formatHex:x0,formatHex8:jS,formatHsl:US,formatRgb:T0,toString:T0});function x0(){return this.rgb().formatHex()}function jS(){return this.rgb().formatHex8()}function US(){return O6(this).formatHsl()}function T0(){return this.rgb().formatRgb()}function Ll(s){var i,e;return s=(s+"").trim().toLowerCase(),(i=NS.exec(s))?(e=i[1].length,i=parseInt(i[1],16),e===6?S0(i):e===3?new ji(i>>8&15|i>>4&240,i>>4&15|i&240,(i&15)<<4|i&15,1):e===8?$r(i>>24&255,i>>16&255,i>>8&255,(i&255)/255):e===4?$r(i>>12&15|i>>8&240,i>>8&15|i>>4&240,i>>4&15|i&240,((i&15)<<4|i&15)/255):null):(i=MS.exec(s))?new ji(i[1],i[2],i[3],1):(i=VS.exec(s))?new ji(i[1]*255/100,i[2]*255/100,i[3]*255/100,1):(i=$S.exec(s))?$r(i[1],i[2],i[3],i[4]):(i=zS.exec(s))?$r(i[1]*255/100,i[2]*255/100,i[3]*255/100,i[4]):(i=qS.exec(s))?O0(i[1],i[2]/100,i[3]/100,1):(i=HS.exec(s))?O0(i[1],i[2]/100,i[3]/100,i[4]):w0.hasOwnProperty(s)?S0(w0[s]):s==="transparent"?new ji(NaN,NaN,NaN,0):null}function S0(s){return new ji(s>>16&255,s>>8&255,s&255,1)}function $r(s,i,e,a){return a<=0&&(s=i=e=NaN),new ji(s,i,e,a)}function GS(s){return s instanceof vr||(s=Ll(s)),s?(s=s.rgb(),new ji(s.r,s.g,s.b,s.opacity)):new ji}function xo(s,i,e,a){return arguments.length===1?GS(s):new ji(s,i,e,a??1)}function ji(s,i,e,a){this.r=+s,this.g=+i,this.b=+e,this.opacity=+a}pc(ji,xo,R6(vr,{brighter(s){return s=s==null?Sh:Math.pow(Sh,s),new ji(this.r*s,this.g*s,this.b*s,this.opacity)},darker(s){return s=s==null?Ol:Math.pow(Ol,s),new ji(this.r*s,this.g*s,this.b*s,this.opacity)},rgb(){return this},clamp(){return new ji(En(this.r),En(this.g),En(this.b),Ih(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:I0,formatHex:I0,formatHex8:WS,formatRgb:R0,toString:R0}));function I0(){return`#${yn(this.r)}${yn(this.g)}${yn(this.b)}`}function WS(){return`#${yn(this.r)}${yn(this.g)}${yn(this.b)}${yn((isNaN(this.opacity)?1:this.opacity)*255)}`}function R0(){const s=Ih(this.opacity);return`${s===1?"rgb(":"rgba("}${En(this.r)}, ${En(this.g)}, ${En(this.b)}${s===1?")":`, ${s})`}`}function Ih(s){return isNaN(s)?1:Math.max(0,Math.min(1,s))}function En(s){return Math.max(0,Math.min(255,Math.round(s)||0))}function yn(s){return s=En(s),(s<16?"0":"")+s.toString(16)}function O0(s,i,e,a){return a<=0?s=i=e=NaN:e<=0||e>=1?s=i=NaN:i<=0&&(s=NaN),new me(s,i,e,a)}function O6(s){if(s instanceof me)return new me(s.h,s.s,s.l,s.opacity);if(s instanceof vr||(s=Ll(s)),!s)return new me;if(s instanceof me)return s;s=s.rgb();var i=s.r/255,e=s.g/255,a=s.b/255,n=Math.min(i,e,a),t=Math.max(i,e,a),l=NaN,r=t-n,h=(t+n)/2;return r?(i===t?l=(e-a)/r+(e<a)*6:e===t?l=(a-i)/r+2:l=(i-e)/r+4,r/=h<.5?t+n:2-t-n,l*=60):r=h>0&&h<1?0:l,new me(l,r,h,s.opacity)}function KS(s,i,e,a){return arguments.length===1?O6(s):new me(s,i,e,a??1)}function me(s,i,e,a){this.h=+s,this.s=+i,this.l=+e,this.opacity=+a}pc(me,KS,R6(vr,{brighter(s){return s=s==null?Sh:Math.pow(Sh,s),new me(this.h,this.s,this.l*s,this.opacity)},darker(s){return s=s==null?Ol:Math.pow(Ol,s),new me(this.h,this.s,this.l*s,this.opacity)},rgb(){var s=this.h%360+(this.h<0)*360,i=isNaN(s)||isNaN(this.s)?0:this.s,e=this.l,a=e+(e<.5?e:1-e)*i,n=2*e-a;return new ji(Ck(s>=240?s-240:s+120,n,a),Ck(s,n,a),Ck(s<120?s+240:s-120,n,a),this.opacity)},clamp(){return new me(P0(this.h),zr(this.s),zr(this.l),Ih(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const s=Ih(this.opacity);return`${s===1?"hsl(":"hsla("}${P0(this.h)}, ${zr(this.s)*100}%, ${zr(this.l)*100}%${s===1?")":`, ${s})`}`}}));function P0(s){return s=(s||0)%360,s<0?s+360:s}function zr(s){return Math.max(0,Math.min(1,s||0))}function Ck(s,i,e){return(s<60?i+(e-i)*s/60:s<180?e:s<240?i+(e-i)*(240-s)/60:i)*255}const P6=s=>()=>s;function YS(s,i){return function(e){return s+e*i}}function XS(s,i,e){return s=Math.pow(s,e),i=Math.pow(i,e)-s,e=1/e,function(a){return Math.pow(s+a*i,e)}}function ZS(s){return(s=+s)==1?L6:function(i,e){return e-i?XS(i,e,s):P6(isNaN(i)?e:i)}}function L6(s,i){var e=i-s;return e?YS(s,e):P6(isNaN(s)?i:s)}const L0=function s(i){var e=ZS(i);function a(n,t){var l=e((n=xo(n)).r,(t=xo(t)).r),r=e(n.g,t.g),h=e(n.b,t.b),p=L6(n.opacity,t.opacity);return function(k){return n.r=l(k),n.g=r(k),n.b=h(k),n.opacity=p(k),n+""}}return a.gamma=s,a}(1);function Va(s,i){return s=+s,i=+i,function(e){return s*(1-e)+i*e}}var To=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,_k=new RegExp(To.source,"g");function JS(s){return function(){return s}}function QS(s){return function(i){return s(i)+""}}function sI(s,i){var e=To.lastIndex=_k.lastIndex=0,a,n,t,l=-1,r=[],h=[];for(s=s+"",i=i+"";(a=To.exec(s))&&(n=_k.exec(i));)(t=n.index)>e&&(t=i.slice(e,t),r[l]?r[l]+=t:r[++l]=t),(a=a[0])===(n=n[0])?r[l]?r[l]+=n:r[++l]=n:(r[++l]=null,h.push({i:l,x:Va(a,n)})),e=_k.lastIndex;return e<i.length&&(t=i.slice(e),r[l]?r[l]+=t:r[++l]=t),r.length<2?h[0]?QS(h[0].x):JS(i):(i=h.length,function(p){for(var k=0,d;k<i;++k)r[(d=h[k]).i]=d.x(p);return r.join("")})}var N0=180/Math.PI,So={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function N6(s,i,e,a,n,t){var l,r,h;return(l=Math.sqrt(s*s+i*i))&&(s/=l,i/=l),(h=s*e+i*a)&&(e-=s*h,a-=i*h),(r=Math.sqrt(e*e+a*a))&&(e/=r,a/=r,h/=r),s*a<i*e&&(s=-s,i=-i,h=-h,l=-l),{translateX:n,translateY:t,rotate:Math.atan2(i,s)*N0,skewX:Math.atan(h)*N0,scaleX:l,scaleY:r}}var qr;function iI(s){const i=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(s+"");return i.isIdentity?So:N6(i.a,i.b,i.c,i.d,i.e,i.f)}function eI(s){return s==null||(qr||(qr=document.createElementNS("http://www.w3.org/2000/svg","g")),qr.setAttribute("transform",s),!(s=qr.transform.baseVal.consolidate()))?So:(s=s.matrix,N6(s.a,s.b,s.c,s.d,s.e,s.f))}function M6(s,i,e,a){function n(p){return p.length?p.pop()+" ":""}function t(p,k,d,o,u,c){if(p!==d||k!==o){var A=u.push("translate(",null,i,null,e);c.push({i:A-4,x:Va(p,d)},{i:A-2,x:Va(k,o)})}else(d||o)&&u.push("translate("+d+i+o+e)}function l(p,k,d,o){p!==k?(p-k>180?k+=360:k-p>180&&(p+=360),o.push({i:d.push(n(d)+"rotate(",null,a)-2,x:Va(p,k)})):k&&d.push(n(d)+"rotate("+k+a)}function r(p,k,d,o){p!==k?o.push({i:d.push(n(d)+"skewX(",null,a)-2,x:Va(p,k)}):k&&d.push(n(d)+"skewX("+k+a)}function h(p,k,d,o,u,c){if(p!==d||k!==o){var A=u.push(n(u)+"scale(",null,",",null,")");c.push({i:A-4,x:Va(p,d)},{i:A-2,x:Va(k,o)})}else(d!==1||o!==1)&&u.push(n(u)+"scale("+d+","+o+")")}return function(p,k){var d=[],o=[];return p=s(p),k=s(k),t(p.translateX,p.translateY,k.translateX,k.translateY,d,o),l(p.rotate,k.rotate,d,o),r(p.skewX,k.skewX,d,o),h(p.scaleX,p.scaleY,k.scaleX,k.scaleY,d,o),p=k=null,function(u){for(var c=-1,A=o.length,g;++c<A;)d[(g=o[c]).i]=g.x(u);return d.join("")}}}var aI=M6(iI,"px, ","px)","deg)"),nI=M6(eI,", ",")",")"),tI=1e-12;function M0(s){return((s=Math.exp(s))+1/s)/2}function lI(s){return((s=Math.exp(s))-1/s)/2}function rI(s){return((s=Math.exp(2*s))-1)/(s+1)}const hI=function s(i,e,a){function n(t,l){var r=t[0],h=t[1],p=t[2],k=l[0],d=l[1],o=l[2],u=k-r,c=d-h,A=u*u+c*c,g,f;if(A<tI)f=Math.log(o/p)/i,g=function(N){return[r+N*u,h+N*c,p*Math.exp(i*N*f)]};else{var m=Math.sqrt(A),y=(o*o-p*p+a*A)/(2*p*e*m),v=(o*o-p*p-a*A)/(2*o*e*m),_=Math.log(Math.sqrt(y*y+1)-y),S=Math.log(Math.sqrt(v*v+1)-v);f=(S-_)/i,g=function(N){var T=N*f,C=M0(_),I=p/(e*m)*(C*rI(i*T+_)-lI(_));return[r+I*u,h+I*c,p*C/M0(i*T+_)]}}return g.duration=f*1e3*i/Math.SQRT2,g}return n.rho=function(t){var l=Math.max(.001,+t),r=l*l,h=r*r;return s(l,r,h)},n}(Math.SQRT2,2,4);var At=0,Yt=0,zt=0,V6=1e3,Rh,Xt,Oh=0,Tn=0,bp=0,Nl=typeof performance=="object"&&performance.now?performance:Date,$6=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(s){setTimeout(s,17)};function kc(){return Tn||($6(pI),Tn=Nl.now()+bp)}function pI(){Tn=0}function Ph(){this._call=this._time=this._next=null}Ph.prototype=z6.prototype={constructor:Ph,restart:function(s,i,e){if(typeof s!="function")throw new TypeError("callback is not a function");e=(e==null?kc():+e)+(i==null?0:+i),!this._next&&Xt!==this&&(Xt?Xt._next=this:Rh=this,Xt=this),this._call=s,this._time=e,Io()},stop:function(){this._call&&(this._call=null,this._time=1/0,Io())}};function z6(s,i,e){var a=new Ph;return a.restart(s,i,e),a}function kI(){kc(),++At;for(var s=Rh,i;s;)(i=Tn-s._time)>=0&&s._call.call(void 0,i),s=s._next;--At}function V0(){Tn=(Oh=Nl.now())+bp,At=Yt=0;try{kI()}finally{At=0,oI(),Tn=0}}function dI(){var s=Nl.now(),i=s-Oh;i>V6&&(bp-=i,Oh=s)}function oI(){for(var s,i=Rh,e,a=1/0;i;)i._call?(a>i._time&&(a=i._time),s=i,i=i._next):(e=i._next,i._next=null,i=s?s._next=e:Rh=e);Xt=s,Io(a)}function Io(s){if(!At){Yt&&(Yt=clearTimeout(Yt));var i=s-Tn;i>24?(s<1/0&&(Yt=setTimeout(V0,s-Nl.now()-bp)),zt&&(zt=clearInterval(zt))):(zt||(Oh=Nl.now(),zt=setInterval(dI,V6)),At=1,$6(V0))}}function $0(s,i,e){var a=new Ph;return i=i==null?0:+i,a.restart(n=>{a.stop(),s(n+i)},i,e),a}var uI=Fp("start","end","cancel","interrupt"),cI=[],q6=0,z0=1,Ro=2,ph=3,q0=4,Oo=5,kh=6;function Cp(s,i,e,a,n,t){var l=s.__transition;if(!l)s.__transition={};else if(e in l)return;gI(s,e,{name:i,index:a,group:n,on:uI,tween:cI,time:t.time,delay:t.delay,duration:t.duration,ease:t.ease,timer:null,state:q6})}function dc(s,i){var e=xe(s,i);if(e.state>q6)throw new Error("too late; already scheduled");return e}function Xe(s,i){var e=xe(s,i);if(e.state>ph)throw new Error("too late; already running");return e}function xe(s,i){var e=s.__transition;if(!e||!(e=e[i]))throw new Error("transition not found");return e}function gI(s,i,e){var a=s.__transition,n;a[i]=e,e.timer=z6(t,0,e.time);function t(p){e.state=z0,e.timer.restart(l,e.delay,e.time),e.delay<=p&&l(p-e.delay)}function l(p){var k,d,o,u;if(e.state!==z0)return h();for(k in a)if(u=a[k],u.name===e.name){if(u.state===ph)return $0(l);u.state===q0?(u.state=kh,u.timer.stop(),u.on.call("interrupt",s,s.__data__,u.index,u.group),delete a[k]):+k<i&&(u.state=kh,u.timer.stop(),u.on.call("cancel",s,s.__data__,u.index,u.group),delete a[k])}if($0(function(){e.state===ph&&(e.state=q0,e.timer.restart(r,e.delay,e.time),r(p))}),e.state=Ro,e.on.call("start",s,s.__data__,e.index,e.group),e.state===Ro){for(e.state=ph,n=new Array(o=e.tween.length),k=0,d=-1;k<o;++k)(u=e.tween[k].value.call(s,s.__data__,e.index,e.group))&&(n[++d]=u);n.length=d+1}}function r(p){for(var k=p<e.duration?e.ease.call(null,p/e.duration):(e.timer.restart(h),e.state=Oo,1),d=-1,o=n.length;++d<o;)n[d].call(s,k);e.state===Oo&&(e.on.call("end",s,s.__data__,e.index,e.group),h())}function h(){e.state=kh,e.timer.stop(),delete a[i];for(var p in a)return;delete s.__transition}}function dh(s,i){var e=s.__transition,a,n,t=!0,l;if(e){i=i==null?null:i+"";for(l in e){if((a=e[l]).name!==i){t=!1;continue}n=a.state>Ro&&a.state<Oo,a.state=kh,a.timer.stop(),a.on.call(n?"interrupt":"cancel",s,s.__data__,a.index,a.group),delete e[l]}t&&delete s.__transition}}function BI(s){return this.each(function(){dh(this,s)})}function AI(s,i){var e,a;return function(){var n=Xe(this,s),t=n.tween;if(t!==e){a=e=t;for(var l=0,r=a.length;l<r;++l)if(a[l].name===i){a=a.slice(),a.splice(l,1);break}}n.tween=a}}function yI(s,i,e){var a,n;if(typeof e!="function")throw new Error;return function(){var t=Xe(this,s),l=t.tween;if(l!==a){n=(a=l).slice();for(var r={name:i,value:e},h=0,p=n.length;h<p;++h)if(n[h].name===i){n[h]=r;break}h===p&&n.push(r)}t.tween=n}}function fI(s,i){var e=this._id;if(s+="",arguments.length<2){for(var a=xe(this.node(),e).tween,n=0,t=a.length,l;n<t;++n)if((l=a[n]).name===s)return l.value;return null}return this.each((i==null?AI:yI)(e,s,i))}function oc(s,i,e){var a=s._id;return s.each(function(){var n=Xe(this,a);(n.value||(n.value={}))[i]=e.apply(this,arguments)}),function(n){return xe(n,a).value[i]}}function H6(s,i){var e;return(typeof i=="number"?Va:i instanceof Ll?L0:(e=Ll(i))?(i=e,L0):sI)(s,i)}function mI(s){return function(){this.removeAttribute(s)}}function vI(s){return function(){this.removeAttributeNS(s.space,s.local)}}function FI(s,i,e){var a,n=e+"",t;return function(){var l=this.getAttribute(s);return l===n?null:l===a?t:t=i(a=l,e)}}function EI(s,i,e){var a,n=e+"",t;return function(){var l=this.getAttributeNS(s.space,s.local);return l===n?null:l===a?t:t=i(a=l,e)}}function bI(s,i,e){var a,n,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttribute(s):(l=this.getAttribute(s),h=r+"",l===h?null:l===a&&h===n?t:(n=h,t=i(a=l,r)))}}function CI(s,i,e){var a,n,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttributeNS(s.space,s.local):(l=this.getAttributeNS(s.space,s.local),h=r+"",l===h?null:l===a&&h===n?t:(n=h,t=i(a=l,r)))}}function _I(s,i){var e=Ep(s),a=e==="transform"?nI:H6;return this.attrTween(s,typeof i=="function"?(e.local?CI:bI)(e,a,oc(this,"attr."+s,i)):i==null?(e.local?vI:mI)(e):(e.local?EI:FI)(e,a,i))}function DI(s,i){return function(e){this.setAttribute(s,i.call(this,e))}}function wI(s,i){return function(e){this.setAttributeNS(s.space,s.local,i.call(this,e))}}function xI(s,i){var e,a;function n(){var t=i.apply(this,arguments);return t!==a&&(e=(a=t)&&wI(s,t)),e}return n._value=i,n}function TI(s,i){var e,a;function n(){var t=i.apply(this,arguments);return t!==a&&(e=(a=t)&&DI(s,t)),e}return n._value=i,n}function SI(s,i){var e="attr."+s;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(i==null)return this.tween(e,null);if(typeof i!="function")throw new Error;var a=Ep(s);return this.tween(e,(a.local?xI:TI)(a,i))}function II(s,i){return function(){dc(this,s).delay=+i.apply(this,arguments)}}function RI(s,i){return i=+i,function(){dc(this,s).delay=i}}function OI(s){var i=this._id;return arguments.length?this.each((typeof s=="function"?II:RI)(i,s)):xe(this.node(),i).delay}function PI(s,i){return function(){Xe(this,s).duration=+i.apply(this,arguments)}}function LI(s,i){return i=+i,function(){Xe(this,s).duration=i}}function NI(s){var i=this._id;return arguments.length?this.each((typeof s=="function"?PI:LI)(i,s)):xe(this.node(),i).duration}function MI(s,i){if(typeof i!="function")throw new Error;return function(){Xe(this,s).ease=i}}function VI(s){var i=this._id;return arguments.length?this.each(MI(i,s)):xe(this.node(),i).ease}function $I(s,i){return function(){var e=i.apply(this,arguments);if(typeof e!="function")throw new Error;Xe(this,s).ease=e}}function zI(s){if(typeof s!="function")throw new Error;return this.each($I(this._id,s))}function qI(s){typeof s!="function"&&(s=v6(s));for(var i=this._groups,e=i.length,a=new Array(e),n=0;n<e;++n)for(var t=i[n],l=t.length,r=a[n]=[],h,p=0;p<l;++p)(h=t[p])&&s.call(h,h.__data__,p,t)&&r.push(h);return new fa(a,this._parents,this._name,this._id)}function HI(s){if(s._id!==this._id)throw new Error;for(var i=this._groups,e=s._groups,a=i.length,n=e.length,t=Math.min(a,n),l=new Array(a),r=0;r<t;++r)for(var h=i[r],p=e[r],k=h.length,d=l[r]=new Array(k),o,u=0;u<k;++u)(o=h[u]||p[u])&&(d[u]=o);for(;r<a;++r)l[r]=i[r];return new fa(l,this._parents,this._name,this._id)}function jI(s){return(s+"").trim().split(/^|\s+/).every(function(i){var e=i.indexOf(".");return e>=0&&(i=i.slice(0,e)),!i||i==="start"})}function UI(s,i,e){var a,n,t=jI(i)?dc:Xe;return function(){var l=t(this,s),r=l.on;r!==a&&(n=(a=r).copy()).on(i,e),l.on=n}}function GI(s,i){var e=this._id;return arguments.length<2?xe(this.node(),e).on.on(s):this.each(UI(e,s,i))}function WI(s){return function(){var i=this.parentNode;for(var e in this.__transition)if(+e!==s)return;i&&i.removeChild(this)}}function KI(){return this.on("end.remove",WI(this._id))}function YI(s){var i=this._name,e=this._id;typeof s!="function"&&(s=rc(s));for(var a=this._groups,n=a.length,t=new Array(n),l=0;l<n;++l)for(var r=a[l],h=r.length,p=t[l]=new Array(h),k,d,o=0;o<h;++o)(k=r[o])&&(d=s.call(k,k.__data__,o,r))&&("__data__"in k&&(d.__data__=k.__data__),p[o]=d,Cp(p[o],i,e,o,p,xe(k,e)));return new fa(t,this._parents,i,e)}function XI(s){var i=this._name,e=this._id;typeof s!="function"&&(s=m6(s));for(var a=this._groups,n=a.length,t=[],l=[],r=0;r<n;++r)for(var h=a[r],p=h.length,k,d=0;d<p;++d)if(k=h[d]){for(var o=s.call(k,k.__data__,d,h),u,c=xe(k,e),A=0,g=o.length;A<g;++A)(u=o[A])&&Cp(u,i,e,A,o,c);t.push(o),l.push(k)}return new fa(t,l,i,e)}var ZI=mr.prototype.constructor;function JI(){return new ZI(this._groups,this._parents)}function QI(s,i){var e,a,n;return function(){var t=Bt(this,s),l=(this.style.removeProperty(s),Bt(this,s));return t===l?null:t===e&&l===a?n:n=i(e=t,a=l)}}function j6(s){return function(){this.style.removeProperty(s)}}function sR(s,i,e){var a,n=e+"",t;return function(){var l=Bt(this,s);return l===n?null:l===a?t:t=i(a=l,e)}}function iR(s,i,e){var a,n,t;return function(){var l=Bt(this,s),r=e(this),h=r+"";return r==null&&(h=r=(this.style.removeProperty(s),Bt(this,s))),l===h?null:l===a&&h===n?t:(n=h,t=i(a=l,r))}}function eR(s,i){var e,a,n,t="style."+i,l="end."+t,r;return function(){var h=Xe(this,s),p=h.on,k=h.value[t]==null?r||(r=j6(i)):void 0;(p!==e||n!==k)&&(a=(e=p).copy()).on(l,n=k),h.on=a}}function aR(s,i,e){var a=(s+="")=="transform"?aI:H6;return i==null?this.styleTween(s,QI(s,a)).on("end.style."+s,j6(s)):typeof i=="function"?this.styleTween(s,iR(s,a,oc(this,"style."+s,i))).each(eR(this._id,s)):this.styleTween(s,sR(s,a,i),e).on("end.style."+s,null)}function nR(s,i,e){return function(a){this.style.setProperty(s,i.call(this,a),e)}}function tR(s,i,e){var a,n;function t(){var l=i.apply(this,arguments);return l!==n&&(a=(n=l)&&nR(s,l,e)),a}return t._value=i,t}function lR(s,i,e){var a="style."+(s+="");if(arguments.length<2)return(a=this.tween(a))&&a._value;if(i==null)return this.tween(a,null);if(typeof i!="function")throw new Error;return this.tween(a,tR(s,i,e??""))}function rR(s){return function(){this.textContent=s}}function hR(s){return function(){var i=s(this);this.textContent=i??""}}function pR(s){return this.tween("text",typeof s=="function"?hR(oc(this,"text",s)):rR(s==null?"":s+""))}function kR(s){return function(i){this.textContent=s.call(this,i)}}function dR(s){var i,e;function a(){var n=s.apply(this,arguments);return n!==e&&(i=(e=n)&&kR(n)),i}return a._value=s,a}function oR(s){var i="text";if(arguments.length<1)return(i=this.tween(i))&&i._value;if(s==null)return this.tween(i,null);if(typeof s!="function")throw new Error;return this.tween(i,dR(s))}function uR(){for(var s=this._name,i=this._id,e=U6(),a=this._groups,n=a.length,t=0;t<n;++t)for(var l=a[t],r=l.length,h,p=0;p<r;++p)if(h=l[p]){var k=xe(h,i);Cp(h,s,e,p,l,{time:k.time+k.delay+k.duration,delay:0,duration:k.duration,ease:k.ease})}return new fa(a,this._parents,s,e)}function cR(){var s,i,e=this,a=e._id,n=e.size();return new Promise(function(t,l){var r={value:l},h={value:function(){--n===0&&t()}};e.each(function(){var p=Xe(this,a),k=p.on;k!==s&&(i=(s=k).copy(),i._.cancel.push(r),i._.interrupt.push(r),i._.end.push(h)),p.on=i}),n===0&&t()})}var gR=0;function fa(s,i,e,a){this._groups=s,this._parents=i,this._name=e,this._id=a}function U6(){return++gR}var aa=mr.prototype;fa.prototype={constructor:fa,select:YI,selectAll:XI,selectChild:aa.selectChild,selectChildren:aa.selectChildren,filter:qI,merge:HI,selection:JI,transition:uR,call:aa.call,nodes:aa.nodes,node:aa.node,size:aa.size,empty:aa.empty,each:aa.each,on:GI,attr:_I,attrTween:SI,style:aR,styleTween:lR,text:pR,textTween:oR,remove:KI,tween:fI,delay:OI,duration:NI,ease:VI,easeVarying:zI,end:cR,[Symbol.iterator]:aa[Symbol.iterator]};function BR(s){return((s*=2)<=1?s*s*s:(s-=2)*s*s+2)/2}var AR={time:null,delay:0,duration:250,ease:BR};function yR(s,i){for(var e;!(e=s.__transition)||!(e=e[i]);)if(!(s=s.parentNode))throw new Error(`transition ${i} not found`);return e}function fR(s){var i,e;s instanceof fa?(i=s._id,s=s._name):(i=U6(),(e=AR).time=kc(),s=s==null?null:s+"");for(var a=this._groups,n=a.length,t=0;t<n;++t)for(var l=a[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&Cp(h,s,i,p,l,e||yR(h,i));return new fa(a,this._parents,s,i)}mr.prototype.interrupt=BI;mr.prototype.transition=fR;const Hr=s=>()=>s;function mR(s,{sourceEvent:i,target:e,transform:a,dispatch:n}){Object.defineProperties(this,{type:{value:s,enumerable:!0,configurable:!0},sourceEvent:{value:i,enumerable:!0,configurable:!0},target:{value:e,enumerable:!0,configurable:!0},transform:{value:a,enumerable:!0,configurable:!0},_:{value:n}})}function ca(s,i,e){this.k=s,this.x=i,this.y=e}ca.prototype={constructor:ca,scale:function(s){return s===1?this:new ca(this.k*s,this.x,this.y)},translate:function(s,i){return s===0&i===0?this:new ca(this.k,this.x+this.k*s,this.y+this.k*i)},apply:function(s){return[s[0]*this.k+this.x,s[1]*this.k+this.y]},applyX:function(s){return s*this.k+this.x},applyY:function(s){return s*this.k+this.y},invert:function(s){return[(s[0]-this.x)/this.k,(s[1]-this.y)/this.k]},invertX:function(s){return(s-this.x)/this.k},invertY:function(s){return(s-this.y)/this.k},rescaleX:function(s){return s.copy().domain(s.range().map(this.invertX,this).map(s.invert,s))},rescaleY:function(s){return s.copy().domain(s.range().map(this.invertY,this).map(s.invert,s))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var yt=new ca(1,0,0);ca.prototype;function Dk(s){s.stopImmediatePropagation()}function qt(s){s.preventDefault(),s.stopImmediatePropagation()}function vR(s){return(!s.ctrlKey||s.type==="wheel")&&!s.button}function FR(){var s=this;return s instanceof SVGElement?(s=s.ownerSVGElement||s,s.hasAttribute("viewBox")?(s=s.viewBox.baseVal,[[s.x,s.y],[s.x+s.width,s.y+s.height]]):[[0,0],[s.width.baseVal.value,s.height.baseVal.value]]):[[0,0],[s.clientWidth,s.clientHeight]]}function H0(){return this.__zoom||yt}function ER(s){return-s.deltaY*(s.deltaMode===1?.05:s.deltaMode?1:.002)*(s.ctrlKey?10:1)}function bR(){return navigator.maxTouchPoints||"ontouchstart"in this}function CR(s,i,e){var a=s.invertX(i[0][0])-e[0][0],n=s.invertX(i[1][0])-e[1][0],t=s.invertY(i[0][1])-e[0][1],l=s.invertY(i[1][1])-e[1][1];return s.translate(n>a?(a+n)/2:Math.min(0,a)||Math.max(0,n),l>t?(t+l)/2:Math.min(0,t)||Math.max(0,l))}function _R(){var s=vR,i=FR,e=CR,a=ER,n=bR,t=[0,1/0],l=[[-1/0,-1/0],[1/0,1/0]],r=250,h=hI,p=Fp("start","zoom","end"),k,d,o,u=500,c=150,A=0,g=10;function f(b){b.property("__zoom",H0).on("wheel.zoom",T,{passive:!1}).on("mousedown.zoom",C).on("dblclick.zoom",I).filter(n).on("touchstart.zoom",O).on("touchmove.zoom",w).on("touchend.zoom touchcancel.zoom",z).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}f.transform=function(b,$,R,M){var W=b.selection?b.selection():b;W.property("__zoom",H0),b!==W?_(b,$,R,M):W.interrupt().each(function(){S(this,arguments).event(M).start().zoom(null,typeof $=="function"?$.apply(this,arguments):$).end()})},f.scaleBy=function(b,$,R,M){f.scaleTo(b,function(){var W=this.__zoom.k,Y=typeof $=="function"?$.apply(this,arguments):$;return W*Y},R,M)},f.scaleTo=function(b,$,R,M){f.transform(b,function(){var W=i.apply(this,arguments),Y=this.__zoom,ls=R==null?v(W):typeof R=="function"?R.apply(this,arguments):R,ps=Y.invert(ls),es=typeof $=="function"?$.apply(this,arguments):$;return e(y(m(Y,es),ls,ps),W,l)},R,M)},f.translateBy=function(b,$,R,M){f.transform(b,function(){return e(this.__zoom.translate(typeof $=="function"?$.apply(this,arguments):$,typeof R=="function"?R.apply(this,arguments):R),i.apply(this,arguments),l)},null,M)},f.translateTo=function(b,$,R,M,W){f.transform(b,function(){var Y=i.apply(this,arguments),ls=this.__zoom,ps=M==null?v(Y):typeof M=="function"?M.apply(this,arguments):M;return e(yt.translate(ps[0],ps[1]).scale(ls.k).translate(typeof $=="function"?-$.apply(this,arguments):-$,typeof R=="function"?-R.apply(this,arguments):-R),Y,l)},M,W)};function m(b,$){return $=Math.max(t[0],Math.min(t[1],$)),$===b.k?b:new ca($,b.x,b.y)}function y(b,$,R){var M=$[0]-R[0]*b.k,W=$[1]-R[1]*b.k;return M===b.x&&W===b.y?b:new ca(b.k,M,W)}function v(b){return[(+b[0][0]+ +b[1][0])/2,(+b[0][1]+ +b[1][1])/2]}function _(b,$,R,M){b.on("start.zoom",function(){S(this,arguments).event(M).start()}).on("interrupt.zoom end.zoom",function(){S(this,arguments).event(M).end()}).tween("zoom",function(){var W=this,Y=arguments,ls=S(W,Y).event(M),ps=i.apply(W,Y),es=R==null?v(ps):typeof R=="function"?R.apply(W,Y):R,q=Math.max(ps[1][0]-ps[0][0],ps[1][1]-ps[0][1]),U=W.__zoom,K=typeof $=="function"?$.apply(W,Y):$,rs=h(U.invert(es).concat(q/U.k),K.invert(es).concat(q/K.k));return function(j){if(j===1)j=K;else{var J=rs(j),Z=q/J[2];j=new ca(Z,es[0]-J[0]*Z,es[1]-J[1]*Z)}ls.zoom(null,j)}})}function S(b,$,R){return!R&&b.__zooming||new N(b,$)}function N(b,$){this.that=b,this.args=$,this.active=0,this.sourceEvent=null,this.extent=i.apply(b,$),this.taps=0}N.prototype={event:function(b){return b&&(this.sourceEvent=b),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(b,$){return this.mouse&&b!=="mouse"&&(this.mouse[1]=$.invert(this.mouse[0])),this.touch0&&b!=="touch"&&(this.touch0[1]=$.invert(this.touch0[0])),this.touch1&&b!=="touch"&&(this.touch1[1]=$.invert(this.touch1[0])),this.that.__zoom=$,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(b){var $=fe(this.that).datum();p.call(b,this.that,new mR(b,{sourceEvent:this.sourceEvent,target:f,transform:this.that.__zoom,dispatch:p}),$)}};function T(b,...$){if(!s.apply(this,arguments))return;var R=S(this,$).event(b),M=this.__zoom,W=Math.max(t[0],Math.min(t[1],M.k*Math.pow(2,a.apply(this,arguments)))),Y=Me(b);if(R.wheel)(R.mouse[0][0]!==Y[0]||R.mouse[0][1]!==Y[1])&&(R.mouse[1]=M.invert(R.mouse[0]=Y)),clearTimeout(R.wheel);else{if(M.k===W)return;R.mouse=[Y,M.invert(Y)],dh(this),R.start()}qt(b),R.wheel=setTimeout(ls,c),R.zoom("mouse",e(y(m(M,W),R.mouse[0],R.mouse[1]),R.extent,l));function ls(){R.wheel=null,R.end()}}function C(b,...$){if(o||!s.apply(this,arguments))return;var R=b.currentTarget,M=S(this,$,!0).event(b),W=fe(b.view).on("mousemove.zoom",es,!0).on("mouseup.zoom",q,!0),Y=Me(b,R),ls=b.clientX,ps=b.clientY;S6(b.view),Dk(b),M.mouse=[Y,this.__zoom.invert(Y)],dh(this),M.start();function es(U){if(qt(U),!M.moved){var K=U.clientX-ls,rs=U.clientY-ps;M.moved=K*K+rs*rs>A}M.event(U).zoom("mouse",e(y(M.that.__zoom,M.mouse[0]=Me(U,R),M.mouse[1]),M.extent,l))}function q(U){W.on("mousemove.zoom mouseup.zoom",null),I6(U.view,M.moved),qt(U),M.event(U).end()}}function I(b,...$){if(s.apply(this,arguments)){var R=this.__zoom,M=Me(b.changedTouches?b.changedTouches[0]:b,this),W=R.invert(M),Y=R.k*(b.shiftKey?.5:2),ls=e(y(m(R,Y),M,W),i.apply(this,$),l);qt(b),r>0?fe(this).transition().duration(r).call(_,ls,M,b):fe(this).call(f.transform,ls,M,b)}}function O(b,...$){if(s.apply(this,arguments)){var R=b.touches,M=R.length,W=S(this,$,b.changedTouches.length===M).event(b),Y,ls,ps,es;for(Dk(b),ls=0;ls<M;++ls)ps=R[ls],es=Me(ps,this),es=[es,this.__zoom.invert(es),ps.identifier],W.touch0?!W.touch1&&W.touch0[2]!==es[2]&&(W.touch1=es,W.taps=0):(W.touch0=es,Y=!0,W.taps=1+!!k);k&&(k=clearTimeout(k)),Y&&(W.taps<2&&(d=es[0],k=setTimeout(function(){k=null},u)),dh(this),W.start())}}function w(b,...$){if(this.__zooming){var R=S(this,$).event(b),M=b.changedTouches,W=M.length,Y,ls,ps,es;for(qt(b),Y=0;Y<W;++Y)ls=M[Y],ps=Me(ls,this),R.touch0&&R.touch0[2]===ls.identifier?R.touch0[0]=ps:R.touch1&&R.touch1[2]===ls.identifier&&(R.touch1[0]=ps);if(ls=R.that.__zoom,R.touch1){var q=R.touch0[0],U=R.touch0[1],K=R.touch1[0],rs=R.touch1[1],j=(j=K[0]-q[0])*j+(j=K[1]-q[1])*j,J=(J=rs[0]-U[0])*J+(J=rs[1]-U[1])*J;ls=m(ls,Math.sqrt(j/J)),ps=[(q[0]+K[0])/2,(q[1]+K[1])/2],es=[(U[0]+rs[0])/2,(U[1]+rs[1])/2]}else if(R.touch0)ps=R.touch0[0],es=R.touch0[1];else return;R.zoom("touch",e(y(ls,ps,es),R.extent,l))}}function z(b,...$){if(this.__zooming){var R=S(this,$).event(b),M=b.changedTouches,W=M.length,Y,ls;for(Dk(b),o&&clearTimeout(o),o=setTimeout(function(){o=null},u),Y=0;Y<W;++Y)ls=M[Y],R.touch0&&R.touch0[2]===ls.identifier?delete R.touch0:R.touch1&&R.touch1[2]===ls.identifier&&delete R.touch1;if(R.touch1&&!R.touch0&&(R.touch0=R.touch1,delete R.touch1),R.touch0)R.touch0[1]=this.__zoom.invert(R.touch0[0]);else if(R.end(),R.taps===2&&(ls=Me(ls,this),Math.hypot(d[0]-ls[0],d[1]-ls[1])<g)){var ps=fe(this).on("dblclick.zoom");ps&&ps.apply(this,arguments)}}}return f.wheelDelta=function(b){return arguments.length?(a=typeof b=="function"?b:Hr(+b),f):a},f.filter=function(b){return arguments.length?(s=typeof b=="function"?b:Hr(!!b),f):s},f.touchable=function(b){return arguments.length?(n=typeof b=="function"?b:Hr(!!b),f):n},f.extent=function(b){return arguments.length?(i=typeof b=="function"?b:Hr([[+b[0][0],+b[0][1]],[+b[1][0],+b[1][1]]]),f):i},f.scaleExtent=function(b){return arguments.length?(t[0]=+b[0],t[1]=+b[1],f):[t[0],t[1]]},f.translateExtent=function(b){return arguments.length?(l[0][0]=+b[0][0],l[1][0]=+b[1][0],l[0][1]=+b[0][1],l[1][1]=+b[1][1],f):[[l[0][0],l[0][1]],[l[1][0],l[1][1]]]},f.constrain=function(b){return arguments.length?(e=b,f):e},f.duration=function(b){return arguments.length?(r=+b,f):r},f.interpolate=function(b){return arguments.length?(h=b,f):h},f.on=function(){var b=p.on.apply(p,arguments);return b===p?f:b},f.clickDistance=function(b){return arguments.length?(A=(b=+b)*b,f):Math.sqrt(A)},f.tapDistance=function(b){return arguments.length?(g=+b,f):g},f}var Fs=(s=>(s.Left="left",s.Top="top",s.Right="right",s.Bottom="bottom",s))(Fs||{}),uc=(s=>(s.Partial="partial",s.Full="full",s))(uc||{}),cn=(s=>(s.Bezier="default",s.SimpleBezier="simple-bezier",s.Straight="straight",s.Step="step",s.SmoothStep="smoothstep",s))(cn||{}),Qa=(s=>(s.Strict="strict",s.Loose="loose",s))(Qa||{}),Po=(s=>(s.Arrow="arrow",s.ArrowClosed="arrowclosed",s))(Po||{}),ol=(s=>(s.Free="free",s.Vertical="vertical",s.Horizontal="horizontal",s))(ol||{});function Lo(s){var i,e;const a=((e=(i=s.composedPath)==null?void 0:i.call(s))==null?void 0:e[0])||s.target,n=typeof(a==null?void 0:a.hasAttribute)=="function"?a.hasAttribute("contenteditable"):!1,t=typeof(a==null?void 0:a.closest)=="function"?a.closest(".nokey"):null;return["INPUT","SELECT","TEXTAREA"].includes(a==null?void 0:a.nodeName)||n||!!t}function DR(s){return s.ctrlKey||s.metaKey||s.shiftKey}function j0(s,i,e,a){const n=i.replace("+",`
`).replace(`

`,`
+`).split(`
`).map(l=>l.trim().toLowerCase());if(n.length===1)return s.toLowerCase()===i.toLowerCase();a||e.add(s.toLowerCase());const t=n.every((l,r)=>e.has(l)&&Array.from(e.values())[r]===n[r]);return a&&e.delete(s.toLowerCase()),t}function wR(s,i){return e=>{if(!e.code&&!e.key)return!1;const a=xR(e.code,s);return Array.isArray(s)?s.some(n=>j0(e[a],n,i,e.type==="keyup")):j0(e[a],s,i,e.type==="keyup")}}function xR(s,i){return i.includes(s)?"code":"key"}function ul(s,i){const e=Ms(()=>vs(i==null?void 0:i.actInsideInputWithModifier)??!1),a=Ms(()=>vs(i==null?void 0:i.target)??window),n=Q(vs(s)===!0);let t=!1;const l=new Set;let r=p(vs(s));bs(()=>vs(s),(k,d)=>{typeof d=="boolean"&&typeof k!="boolean"&&h(),r=p(k)},{immediate:!0}),y6(["blur","contextmenu"],h),C0((...k)=>r(...k),k=>{t=DR(k),!((!t||t&&!e.value)&&Lo(k))&&(k.preventDefault(),n.value=!0)},{eventName:"keydown",target:a}),C0((...k)=>r(...k),k=>{if(n.value){if((!t||t&&!e.value)&&Lo(k))return;t=!1,n.value=!1}},{eventName:"keyup",target:a});function h(){t=!1,l.clear(),n.value=vs(s)===!0}function p(k){return k===null?(h(),()=>!1):typeof k=="boolean"?(h(),n.value=k,()=>!1):Array.isArray(k)||typeof k=="string"?wR(k,l):k}return n}const G6="vue-flow__node-desc",W6="vue-flow__edge-desc",TR="vue-flow__aria-live",K6=["Enter"," ","Escape"],at={ArrowUp:{x:0,y:-1},ArrowDown:{x:0,y:1},ArrowLeft:{x:-1,y:0},ArrowRight:{x:1,y:0}};function Lh(s){return{...s.computedPosition||{x:0,y:0},width:s.dimensions.width||0,height:s.dimensions.height||0}}function Nh(s,i){const e=Math.max(0,Math.min(s.x+s.width,i.x+i.width)-Math.max(s.x,i.x)),a=Math.max(0,Math.min(s.y+s.height,i.y+i.height)-Math.max(s.y,i.y));return Math.ceil(e*a)}function _p(s){return{width:s.offsetWidth,height:s.offsetHeight}}function Sn(s,i=0,e=1){return Math.min(Math.max(s,i),e)}function Y6(s,i){return{x:Sn(s.x,i[0][0],i[1][0]),y:Sn(s.y,i[0][1],i[1][1])}}function U0(s){const i=s.getRootNode();return"elementFromPoint"in i?i:window.document}function sn(s){return s&&typeof s=="object"&&"id"in s&&"source"in s&&"target"in s}function bn(s){return s&&typeof s=="object"&&"id"in s&&"position"in s&&!sn(s)}function Zt(s){return bn(s)&&"computedPosition"in s}function jr(s){return!Number.isNaN(s)&&Number.isFinite(s)}function SR(s){return jr(s.width)&&jr(s.height)&&jr(s.x)&&jr(s.y)}function IR(s,i,e){const a={id:s.id.toString(),type:s.type??"default",dimensions:Yn({width:0,height:0}),computedPosition:Yn({z:0,...s.position}),handleBounds:{source:[],target:[]},draggable:void 0,selectable:void 0,connectable:void 0,focusable:void 0,selected:!1,dragging:!1,resizing:!1,initialized:!1,isParent:!1,position:{x:0,y:0},data:oi(s.data)?s.data:{},events:Yn(oi(s.events)?s.events:{})};return Object.assign(i??a,s,{id:s.id.toString(),parentNode:e})}function X6(s,i,e){var a,n;const t={id:s.id.toString(),type:s.type??(i==null?void 0:i.type)??"default",source:s.source.toString(),target:s.target.toString(),sourceHandle:(a=s.sourceHandle)==null?void 0:a.toString(),targetHandle:(n=s.targetHandle)==null?void 0:n.toString(),updatable:s.updatable??(e==null?void 0:e.updatable),selectable:s.selectable??(e==null?void 0:e.selectable),focusable:s.focusable??(e==null?void 0:e.focusable),data:oi(s.data)?s.data:{},events:Yn(oi(s.events)?s.events:{}),label:s.label??"",interactionWidth:s.interactionWidth??(e==null?void 0:e.interactionWidth),...e??{}};return Object.assign(i??t,s,{id:s.id.toString()})}function Z6(s,i,e,a){const n=typeof s=="string"?s:s.id,t=new Set,l=a==="source"?"target":"source";for(const r of e)r[l]===n&&t.add(r[a]);return i.filter(r=>t.has(r.id))}function RR(...s){if(s.length===3){const[t,l,r]=s;return Z6(t,l,r,"target")}const[i,e]=s,a=typeof i=="string"?i:i.id;return e.filter(t=>sn(t)&&t.source===a).map(t=>e.find(l=>bn(l)&&l.id===t.target))}function OR(...s){if(s.length===3){const[t,l,r]=s;return Z6(t,l,r,"source")}const[i,e]=s,a=typeof i=="string"?i:i.id;return e.filter(t=>sn(t)&&t.target===a).map(t=>e.find(l=>bn(l)&&l.id===t.source))}function J6({source:s,sourceHandle:i,target:e,targetHandle:a}){return`vueflow__edge-${s}${i??""}-${e}${a??""}`}function PR(s,i){return i.some(e=>sn(e)&&e.source===s.source&&e.target===s.target&&(e.sourceHandle===s.sourceHandle||!e.sourceHandle&&!s.sourceHandle)&&(e.targetHandle===s.targetHandle||!e.targetHandle&&!s.targetHandle))}function No({x:s,y:i},{x:e,y:a,zoom:n}){return{x:s*n+e,y:i*n+a}}function Ml({x:s,y:i},{x:e,y:a,zoom:n},t=!1,l=[1,1]){const r={x:(s-e)/n,y:(i-a)/n};return t?Dp(r,l):r}function LR(s,i){return{x:Math.min(s.x,i.x),y:Math.min(s.y,i.y),x2:Math.max(s.x2,i.x2),y2:Math.max(s.y2,i.y2)}}function Q6({x:s,y:i,width:e,height:a}){return{x:s,y:i,x2:s+e,y2:i+a}}function NR({x:s,y:i,x2:e,y2:a}){return{x:s,y:i,width:e-s,height:a-i}}function sf(s){let i={x:Number.POSITIVE_INFINITY,y:Number.POSITIVE_INFINITY,x2:Number.NEGATIVE_INFINITY,y2:Number.NEGATIVE_INFINITY};for(let e=0;e<s.length;e++){const a=s[e];i=LR(i,Q6({...a.computedPosition,...a.dimensions}))}return NR(i)}function ef(s,i,e={x:0,y:0,zoom:1},a=!1,n=!1){const t={...Ml(i,e),width:i.width/e.zoom,height:i.height/e.zoom},l=[];for(const r of s){const{dimensions:h,selectable:p=!0,hidden:k=!1}=r,d=h.width??r.width??null,o=h.height??r.height??null;if(n&&!p||k)continue;const u=Nh(t,Lh(r)),c=d===null||o===null,A=a&&u>0,g=(d??0)*(o??0);(c||A||u>=g||r.dragging)&&l.push(r)}return l}function af(s,i){const e=new Set;if(typeof s=="string")e.add(s);else if(s.length>=1)for(const a of s)e.add(a.id);return i.filter(a=>e.has(a.source)||e.has(a.target))}function G0(s,i,e,a,n,t=.1,l={x:0,y:0}){const r=i/(s.width*(1+t)),h=e/(s.height*(1+t)),p=Math.min(r,h),k=Sn(p,a,n),d=s.x+s.width/2,o=s.y+s.height/2,u=i/2-d*k+(l.x??0),c=e/2-o*k+(l.y??0);return{x:u,y:c,zoom:k}}function MR(s,i){return{x:i.x+s.x,y:i.y+s.y,z:(s.z>i.z?s.z:i.z)+1}}function nf(s,i){if(!s.parentNode)return!1;const e=i(s.parentNode);return e?e.selected?!0:nf(e,i):!1}function Vl(s,i){return typeof s>"u"?"":typeof s=="string"?s:`${i?`${i}__`:""}${Object.keys(s).sort().map(a=>`${a}=${s[a]}`).join("&")}`}function W0(s,i,e){return s<i?Sn(Math.abs(s-i),1,i)/i:s>e?-Sn(Math.abs(s-e),1,i)/i:0}function tf(s,i,e=15,a=40){const n=W0(s.x,a,i.width-a)*e,t=W0(s.y,a,i.height-a)*e;return[n,t]}function wk(s,i){if(i){const e=s.position.x+s.dimensions.width-i.dimensions.width,a=s.position.y+s.dimensions.height-i.dimensions.height;if(e>0||a>0||s.position.x<0||s.position.y<0){let n={};if(typeof i.style=="function"?n={...i.style(i)}:i.style&&(n={...i.style}),n.width=n.width??`${i.dimensions.width}px`,n.height=n.height??`${i.dimensions.height}px`,e>0)if(typeof n.width=="string"){const t=Number(n.width.replace("px",""));n.width=`${t+e}px`}else n.width+=e;if(a>0)if(typeof n.height=="string"){const t=Number(n.height.replace("px",""));n.height=`${t+a}px`}else n.height+=a;if(s.position.x<0){const t=Math.abs(s.position.x);if(i.position.x=i.position.x-t,typeof n.width=="string"){const l=Number(n.width.replace("px",""));n.width=`${l+t}px`}else n.width+=t;s.position.x=0}if(s.position.y<0){const t=Math.abs(s.position.y);if(i.position.y=i.position.y-t,typeof n.height=="string"){const l=Number(n.height.replace("px",""));n.height=`${l+t}px`}else n.height+=t;s.position.y=0}i.dimensions.width=Number(n.width.toString().replace("px","")),i.dimensions.height=Number(n.height.toString().replace("px","")),typeof i.style=="function"?i.style=t=>{const l=i.style;return{...l(t),...n}}:i.style={...i.style,...n}}}}function K0(s,i){var e,a;const n=s.filter(l=>l.type==="add"||l.type==="remove");for(const l of n)if(l.type==="add")i.findIndex(h=>h.id===l.item.id)===-1&&i.push(l.item);else if(l.type==="remove"){const r=i.findIndex(h=>h.id===l.id);r!==-1&&i.splice(r,1)}const t=i.map(l=>l.id);for(const l of i)for(const r of s)if(r.id===l.id)switch(r.type){case"select":l.selected=r.selected;break;case"position":if(Zt(l)&&(typeof r.position<"u"&&(l.position=r.position),typeof r.dragging<"u"&&(l.dragging=r.dragging),l.expandParent&&l.parentNode)){const h=i[t.indexOf(l.parentNode)];h&&Zt(h)&&wk(l,h)}break;case"dimensions":if(Zt(l)&&(typeof r.dimensions<"u"&&(l.dimensions=r.dimensions),typeof r.updateStyle<"u"&&r.updateStyle&&(l.style={...l.style||{},width:`${(e=r.dimensions)==null?void 0:e.width}px`,height:`${(a=r.dimensions)==null?void 0:a.height}px`}),typeof r.resizing<"u"&&(l.resizing=r.resizing),l.expandParent&&l.parentNode)){const h=i[t.indexOf(l.parentNode)];h&&Zt(h)&&(!!h.dimensions.width&&!!h.dimensions.height?wk(l,h):qs(()=>{wk(l,h)}))}break}return i}function Ra(s,i){return{id:s,type:"select",selected:i}}function Y0(s){return{item:s,type:"add"}}function X0(s){return{id:s,type:"remove"}}function Z0(s,i,e,a,n){return{id:s,source:i,target:e,sourceHandle:a||null,targetHandle:n||null,type:"remove"}}function $a(s,i=new Set,e=!1){const a=[];for(const[n,t]of s){const l=i.has(n);!(t.selected===void 0&&!l)&&t.selected!==l&&(e&&(t.selected=l),a.push(Ra(t.id,l)))}return a}function fs(s){const i=new Set;let e=!1;const a=()=>i.size>0;s&&(e=!0,i.add(s));const n=r=>{i.delete(r)};return{on:r=>{s&&e&&i.delete(s),i.add(r);const h=()=>{n(r),s&&e&&i.add(s)};return vp(h),{off:h}},off:n,trigger:r=>Promise.all(Array.from(i).map(h=>h(r))),hasListeners:a,fns:i}}function J0(s,i,e){let a=s;do{if(a&&a.matches(i))return!0;if(a===e)return!1;a=a.parentElement}while(a);return!1}function VR(s,i,e,a,n){var t,l;const r=[];for(const h of s)(h.selected||h.id===n)&&(!h.parentNode||!nf(h,a))&&(h.draggable||i&&typeof h.draggable>"u")&&r.push(Yn({id:h.id,position:h.position||{x:0,y:0},distance:{x:e.x-((t=h.computedPosition)==null?void 0:t.x)||0,y:e.y-((l=h.computedPosition)==null?void 0:l.y)||0},from:h.computedPosition,extent:h.extent,parentNode:h.parentNode,dimensions:h.dimensions,expandParent:h.expandParent}));return r}function xk({id:s,dragItems:i,findNode:e}){const a=[];for(const n of i){const t=e(n.id);t&&a.push(t)}return[s?a.find(n=>n.id===s):a[0],a]}function lf(s){if(Array.isArray(s))switch(s.length){case 1:return[s[0],s[0],s[0],s[0]];case 2:return[s[0],s[1],s[0],s[1]];case 3:return[s[0],s[1],s[2],s[1]];case 4:return s;default:return[0,0,0,0]}return[s,s,s,s]}function $R(s,i,e){const[a,n,t,l]=typeof s!="string"?lf(s.padding):[0,0,0,0];return e&&typeof e.computedPosition.x<"u"&&typeof e.computedPosition.y<"u"&&typeof e.dimensions.width<"u"&&typeof e.dimensions.height<"u"?[[e.computedPosition.x+l,e.computedPosition.y+a],[e.computedPosition.x+e.dimensions.width-n,e.computedPosition.y+e.dimensions.height-t]]:!1}function zR(s,i,e,a){let n=s.extent||e;if((n==="parent"||!Array.isArray(n)&&(n==null?void 0:n.range)==="parent")&&!s.expandParent)if(s.parentNode&&a&&s.dimensions.width&&s.dimensions.height){const t=$R(n,s,a);t&&(n=t)}else i(new vi(ui.NODE_EXTENT_INVALID,s.id)),n=e;else if(Array.isArray(n)){const t=(a==null?void 0:a.computedPosition.x)||0,l=(a==null?void 0:a.computedPosition.y)||0;n=[[n[0][0]+t,n[0][1]+l],[n[1][0]+t,n[1][1]+l]]}else if(n!=="parent"&&(n!=null&&n.range)&&Array.isArray(n.range)){const[t,l,r,h]=lf(n.padding),p=(a==null?void 0:a.computedPosition.x)||0,k=(a==null?void 0:a.computedPosition.y)||0;n=[[n.range[0][0]+p+h,n.range[0][1]+k+t],[n.range[1][0]+p-l,n.range[1][1]+k-r]]}return n==="parent"?[[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY]]:n}function qR({width:s,height:i},e){return[e[0],[e[1][0]-(s||0),e[1][1]-(i||0)]]}function cc(s,i,e,a,n){const t=qR(s.dimensions,zR(s,e,a,n)),l=Y6(i,t);return{position:{x:l.x-((n==null?void 0:n.computedPosition.x)||0),y:l.y-((n==null?void 0:n.computedPosition.y)||0)},computedPosition:l}}function ft(s,i,e=Fs.Left,a=!1){const n=((i==null?void 0:i.x)??0)+s.computedPosition.x,t=((i==null?void 0:i.y)??0)+s.computedPosition.y,{width:l,height:r}=i??UR(s);if(a)return{x:n+l/2,y:t+r/2};switch((i==null?void 0:i.position)??e){case Fs.Top:return{x:n+l/2,y:t};case Fs.Right:return{x:n+l,y:t+r/2};case Fs.Bottom:return{x:n+l/2,y:t+r};case Fs.Left:return{x:n,y:t+r/2}}}function Q0(s,i){return s&&(i?s.find(e=>e.id===i):s[0])||null}function HR({sourcePos:s,targetPos:i,sourceWidth:e,sourceHeight:a,targetWidth:n,targetHeight:t,width:l,height:r,viewport:h}){const p={x:Math.min(s.x,i.x),y:Math.min(s.y,i.y),x2:Math.max(s.x+e,i.x+n),y2:Math.max(s.y+a,i.y+t)};p.x===p.x2&&(p.x2+=1),p.y===p.y2&&(p.y2+=1);const k=Q6({x:(0-h.x)/h.zoom,y:(0-h.y)/h.zoom,width:l/h.zoom,height:r/h.zoom}),d=Math.max(0,Math.min(k.x2,p.x2)-Math.max(k.x,p.x)),o=Math.max(0,Math.min(k.y2,p.y2)-Math.max(k.y,p.y));return Math.ceil(d*o)>0}function jR(s,i,e=!1){const a=typeof s.zIndex=="number";let n=a?s.zIndex:0;const t=i(s.source),l=i(s.target);return!t||!l?0:(e&&(n=a?s.zIndex:Math.max(t.computedPosition.z||0,l.computedPosition.z||0)),n)}var ui=(s=>(s.MISSING_STYLES="MISSING_STYLES",s.MISSING_VIEWPORT_DIMENSIONS="MISSING_VIEWPORT_DIMENSIONS",s.NODE_INVALID="NODE_INVALID",s.NODE_NOT_FOUND="NODE_NOT_FOUND",s.NODE_MISSING_PARENT="NODE_MISSING_PARENT",s.NODE_TYPE_MISSING="NODE_TYPE_MISSING",s.NODE_EXTENT_INVALID="NODE_EXTENT_INVALID",s.EDGE_INVALID="EDGE_INVALID",s.EDGE_NOT_FOUND="EDGE_NOT_FOUND",s.EDGE_SOURCE_MISSING="EDGE_SOURCE_MISSING",s.EDGE_TARGET_MISSING="EDGE_TARGET_MISSING",s.EDGE_TYPE_MISSING="EDGE_TYPE_MISSING",s.EDGE_SOURCE_TARGET_SAME="EDGE_SOURCE_TARGET_SAME",s.EDGE_SOURCE_TARGET_MISSING="EDGE_SOURCE_TARGET_MISSING",s.EDGE_ORPHANED="EDGE_ORPHANED",s.USEVUEFLOW_OPTIONS="USEVUEFLOW_OPTIONS",s))(ui||{});const sB={MISSING_STYLES:()=>"It seems that you haven't loaded the necessary styles. Please import '@vue-flow/core/dist/style.css' to ensure that the graph is rendered correctly",MISSING_VIEWPORT_DIMENSIONS:()=>"The Vue Flow parent container needs a width and a height to render the graph",NODE_INVALID:s=>`Node is invalid
Node: ${s}`,NODE_NOT_FOUND:s=>`Node not found
Node: ${s}`,NODE_MISSING_PARENT:(s,i)=>`Node is missing a parent
Node: ${s}
Parent: ${i}`,NODE_TYPE_MISSING:s=>`Node type is missing
Type: ${s}`,NODE_EXTENT_INVALID:s=>`Only child nodes can use a parent extent
Node: ${s}`,EDGE_INVALID:s=>`An edge needs a source and a target
Edge: ${s}`,EDGE_SOURCE_MISSING:(s,i)=>`Edge source is missing
Edge: ${s} 
Source: ${i}`,EDGE_TARGET_MISSING:(s,i)=>`Edge target is missing
Edge: ${s} 
Target: ${i}`,EDGE_TYPE_MISSING:s=>`Edge type is missing
Type: ${s}`,EDGE_SOURCE_TARGET_SAME:(s,i,e)=>`Edge source and target are the same
Edge: ${s} 
Source: ${i} 
Target: ${e}`,EDGE_SOURCE_TARGET_MISSING:(s,i,e)=>`Edge source or target is missing
Edge: ${s} 
Source: ${i} 
Target: ${e}`,EDGE_ORPHANED:s=>`Edge was orphaned (suddenly missing source or target) and has been removed
Edge: ${s}`,EDGE_NOT_FOUND:s=>`Edge not found
Edge: ${s}`,USEVUEFLOW_OPTIONS:()=>"The options parameter is deprecated and will be removed in the next major version. Please use the id parameter instead"};class vi extends Error{constructor(i,...e){var a;super((a=sB[i])==null?void 0:a.call(sB,...e)),this.name="VueFlowError",this.code=i,this.args=e}}function gc(s){return"clientX"in s}function rf(s){return"sourceEvent"in s}function Ka(s,i){var e,a;const n=gc(s),t=n?s.clientX:(e=s.touches)==null?void 0:e[0].clientX,l=n?s.clientY:(a=s.touches)==null?void 0:a[0].clientY;return{x:t-((i==null?void 0:i.left)??0),y:l-((i==null?void 0:i.top)??0)}}const Mh=()=>{var s;return typeof navigator<"u"&&((s=navigator==null?void 0:navigator.userAgent)==null?void 0:s.indexOf("Mac"))>=0};function UR(s){var i,e;return{width:((i=s.dimensions)==null?void 0:i.width)??s.width??0,height:((e=s.dimensions)==null?void 0:e.height)??s.height??0}}function Dp(s,i=[1,1]){return{x:i[0]*Math.round(s.x/i[0]),y:i[1]*Math.round(s.y/i[1])}}const GR=()=>!0;function Tk(s){s==null||s.classList.remove("valid","connecting","vue-flow__handle-valid","vue-flow__handle-connecting")}function WR(s,i,e){const a=[],n={x:s.x-e,y:s.y-e,width:e*2,height:e*2};for(const t of i.values())Nh(n,Lh(t))>0&&a.push(t);return a}const KR=250;function YR(s,i,e,a){var n,t;let l=[],r=Number.POSITIVE_INFINITY;const h=WR(s,e,i+KR);for(const p of h){const k=[...((n=p.handleBounds)==null?void 0:n.source)??[],...((t=p.handleBounds)==null?void 0:t.target)??[]];for(const d of k){if(a.nodeId===d.nodeId&&a.type===d.type&&a.id===d.id)continue;const{x:o,y:u}=ft(p,d,d.position,!0),c=Math.sqrt((o-s.x)**2+(u-s.y)**2);c>i||(c<r?(l=[{...d,x:o,y:u}],r=c):c===r&&l.push({...d,x:o,y:u}))}}if(!l.length)return null;if(l.length>1){const p=a.type==="source"?"target":"source";return l.find(k=>k.type===p)??l[0]}return l[0]}function iB(s,{handle:i,connectionMode:e,fromNodeId:a,fromHandleId:n,fromType:t,doc:l,lib:r,flowId:h,isValidConnection:p=GR},k,d,o){const u=t==="target",c=i?l.querySelector(`.${r}-flow__handle[data-id="${h}-${i==null?void 0:i.nodeId}-${i==null?void 0:i.id}-${i==null?void 0:i.type}"]`):null,{x:A,y:g}=Ka(s),f=l.elementFromPoint(A,g),m=f!=null&&f.classList.contains(`${r}-flow__handle`)?f:c,y={handleDomNode:m,isValid:!1,connection:null,toHandle:null};if(m){const v=hf(void 0,m),_=m.getAttribute("data-nodeid"),S=m.getAttribute("data-handleid"),N=m.classList.contains("connectable"),T=m.classList.contains("connectableend");if(!_||!v)return y;const C={source:u?_:a,sourceHandle:u?S:n,target:u?a:_,targetHandle:u?n:S};y.connection=C;const O=N&&T&&(e===Qa.Strict?u&&v==="source"||!u&&v==="target":_!==a||S!==n);y.isValid=O&&p(C,{nodes:d,edges:k,sourceNode:o(a),targetNode:o(_)}),y.toHandle=i}return y}function hf(s,i){return s||(i!=null&&i.classList.contains("target")?"target":i!=null&&i.classList.contains("source")?"source":null)}function XR(s,i){let e=null;return i?e="valid":s&&!i&&(e="invalid"),e}function ZR(s,i){let e=null;return i?e=!0:s&&!i&&(e=!1),e}function JR(s,i,e,a,n,t=!1){var l,r,h;const p=a.get(s);if(!p)return null;const k=n===Qa.Strict?(l=p.handleBounds)==null?void 0:l[i]:[...((r=p.handleBounds)==null?void 0:r.source)??[],...((h=p.handleBounds)==null?void 0:h.target)??[]],d=(e?k==null?void 0:k.find(o=>o.id===e):k==null?void 0:k[0])??null;return d&&t?{...d,...ft(p,d,d.position,!0)}:d}const Mo={[Fs.Left]:Fs.Right,[Fs.Right]:Fs.Left,[Fs.Top]:Fs.Bottom,[Fs.Bottom]:Fs.Top},QR=["production","prod"];function wp(s,...i){pf()&&console.warn(`[Vue Flow]: ${s}`,...i)}function pf(){return!QR.includes("production")}function eB(s,i,e,a){const n=i.querySelectorAll(`.vue-flow__handle.${s}`);return Array.from(n).map(l=>{const r=l.getBoundingClientRect();return{id:l.getAttribute("data-handleid"),position:l.getAttribute("data-handlepos"),nodeId:l.getAttribute("data-nodeid"),type:s,x:(r.left-e.left)/a,y:(r.top-e.top)/a,..._p(l)}})}function Vo(s,i,e,a,n,t=!1,l){n.value=!1,s.selected?(t||s.selected&&i)&&(a([s]),qs(()=>{l.blur()})):e([s])}function oi(s){return typeof ms(s)<"u"}function sO(s,i,e,a){if(!s||!s.source||!s.target)return e(new vi(ui.EDGE_INVALID,(s==null?void 0:s.id)??"[ID UNKNOWN]")),!1;let n;return sn(s)?n=s:n={...s,id:J6(s)},n=X6(n,void 0,a),PR(n,i)?!1:n}function iO(s,i,e,a,n){if(!i.source||!i.target)return n(new vi(ui.EDGE_INVALID,s.id)),!1;if(!e)return n(new vi(ui.EDGE_NOT_FOUND,s.id)),!1;const{id:t,...l}=s;return{...l,id:a?J6(i):t,source:i.source,target:i.target,sourceHandle:i.sourceHandle,targetHandle:i.targetHandle}}function aB(s,i,e){const a={},n=[];for(let t=0;t<s.length;++t){const l=s[t];if(!bn(l)){e(new vi(ui.NODE_INVALID,l==null?void 0:l.id)||`[ID UNKNOWN|INDEX ${t}]`);continue}const r=IR(l,i(l.id),l.parentNode);l.parentNode&&(a[l.parentNode]=!0),n[t]=r}for(const t of n){const l=i(t.parentNode)||n.find(r=>r.id===t.parentNode);t.parentNode&&!l&&e(new vi(ui.NODE_MISSING_PARENT,t.id,t.parentNode)),(t.parentNode||a[t.id])&&(a[t.id]&&(t.isParent=!0),l&&(l.isParent=!0))}return n}function nB(s,i,e,a,n,t){let l=n;const r=a.get(l)||new Map;a.set(l,r.set(e,i)),l=`${n}-${s}`;const h=a.get(l)||new Map;if(a.set(l,h.set(e,i)),t){l=`${n}-${s}-${t}`;const p=a.get(l)||new Map;a.set(l,p.set(e,i))}}function Sk(s,i,e){s.clear(),i.clear();for(const a of e){const{source:n,target:t,sourceHandle:l=null,targetHandle:r=null}=a,h={edgeId:a.id,source:n,target:t,sourceHandle:l,targetHandle:r},p=`${n}-${l}--${t}-${r}`,k=`${t}-${r}--${n}-${l}`;nB("source",h,k,s,n,l),nB("target",h,p,s,t,r),i.set(a.id,a)}}function tB(s,i){if(s.size!==i.size)return!1;for(const e of s)if(!i.has(e))return!1;return!0}function Ik(s,i,e,a,n,t,l,r){const h=[];for(const p of s){const k=sn(p)?p:sO(p,r,n,t);if(!k)continue;const d=e(k.source),o=e(k.target);if(!d||!o){n(new vi(ui.EDGE_SOURCE_TARGET_MISSING,k.id,k.source,k.target));continue}if(!d){n(new vi(ui.EDGE_SOURCE_MISSING,k.id,k.source));continue}if(!o){n(new vi(ui.EDGE_TARGET_MISSING,k.id,k.target));continue}if(i&&!i(k,{edges:r,nodes:l,sourceNode:d,targetNode:o})){n(new vi(ui.EDGE_INVALID,k.id));continue}const u=a(k.id);h.push({...X6(k,u,t),sourceNode:d,targetNode:o})}return h}const lB=Symbol("vueFlow"),kf=Symbol("nodeId"),df=Symbol("nodeRef"),eO=Symbol("edgeId"),aO=Symbol("edgeRef"),xp=Symbol("slots");function of(s){const{vueFlowRef:i,snapToGrid:e,snapGrid:a,noDragClassName:n,nodes:t,nodeExtent:l,nodeDragThreshold:r,viewport:h,autoPanOnNodeDrag:p,autoPanSpeed:k,nodesDraggable:d,panBy:o,findNode:u,multiSelectionActive:c,nodesSelectionActive:A,selectNodesOnDrag:g,removeSelectedElements:f,addSelectedNodes:m,updateNodePositions:y,emits:v}=Ks(),{onStart:_,onDrag:S,onStop:N,onClick:T,el:C,disabled:I,id:O,selectable:w,dragHandle:z}=s,b=Q(!1);let $=[],R,M=null,W={x:void 0,y:void 0},Y={x:0,y:0},ls=null,ps=!1,es=0,q=!1;const U=lO(),K=({x:cs,y:X})=>{W={x:cs,y:X};let x=!1;if($=$.map(E=>{const D={x:cs-E.distance.x,y:X-E.distance.y},{computedPosition:P}=cc(E,e.value?Dp(D,a.value):D,v.error,l.value,E.parentNode?u(E.parentNode):void 0);return x=x||E.position.x!==P.x||E.position.y!==P.y,E.position=P,E}),!!x&&(y($,!0,!0),b.value=!0,ls)){const[E,D]=xk({id:O,dragItems:$,findNode:u});S({event:ls,node:E,nodes:D})}},rs=()=>{if(!M)return;const[cs,X]=tf(Y,M,k.value);if(cs!==0||X!==0){const x={x:(W.x??0)-cs/h.value.zoom,y:(W.y??0)-X/h.value.zoom};o({x:cs,y:X})&&K(x)}es=requestAnimationFrame(rs)},j=(cs,X)=>{ps=!0;const x=u(O);!g.value&&!c.value&&x&&(x.selected||f()),x&&vs(w)&&g.value&&Vo(x,c.value,m,f,A,!1,X);const E=U(cs.sourceEvent);if(W=E,$=VR(t.value,d.value,E,u,O),$.length){const[D,P]=xk({id:O,dragItems:$,findNode:u});_({event:cs.sourceEvent,node:D,nodes:P})}},J=(cs,X)=>{var x;cs.sourceEvent.type==="touchmove"&&cs.sourceEvent.touches.length>1||(r.value===0&&j(cs,X),W=U(cs.sourceEvent),M=((x=i.value)==null?void 0:x.getBoundingClientRect())||null,Y=Ka(cs.sourceEvent,M))},Z=(cs,X)=>{const x=U(cs.sourceEvent);if(!q&&ps&&p.value&&(q=!0,rs()),!ps){const E=x.xSnapped-(W.x??0),D=x.ySnapped-(W.y??0);Math.sqrt(E*E+D*D)>r.value&&j(cs,X)}(W.x!==x.xSnapped||W.y!==x.ySnapped)&&$.length&&ps&&(ls=cs.sourceEvent,Y=Ka(cs.sourceEvent,M),K(x))},ks=cs=>{if(!rf(cs)&&!ps&&!b.value&&!c.value){const X=cs,x=U(X),E=x.xSnapped-(W.x??0),D=x.ySnapped-(W.y??0),P=Math.sqrt(E*E+D*D);P!==0&&P<=r.value&&(T==null||T(X));return}if(b.value=!1,q=!1,ps=!1,W={x:void 0,y:void 0},cancelAnimationFrame(es),$.length){y($,!1,!1);const[X,x]=xk({id:O,dragItems:$,findNode:u});N({event:cs.sourceEvent,node:X,nodes:x})}};return bs([()=>vs(I),C],([cs,X],x,E)=>{if(X){const D=fe(X);cs||(R=LS().on("start",P=>J(P,X)).on("drag",P=>Z(P,X)).on("end",P=>ks(P)).filter(P=>{const L=P.target,H=vs(z);return!P.button&&(!n.value||!J0(L,`.${n.value}`,X)&&(!H||J0(L,H,X)))}),D.call(R)),E(()=>{D.on(".drag",null),R&&(R.on("start",null),R.on("drag",null),R.on("end",null))})}}),b}function nO(){return{doubleClick:fs(),click:fs(),mouseEnter:fs(),mouseMove:fs(),mouseLeave:fs(),contextMenu:fs(),updateStart:fs(),update:fs(),updateEnd:fs()}}function tO(s,i){const e=nO();return e.doubleClick.on(a=>{var n,t;i.edgeDoubleClick(a),(t=(n=s.events)==null?void 0:n.doubleClick)==null||t.call(n,a)}),e.click.on(a=>{var n,t;i.edgeClick(a),(t=(n=s.events)==null?void 0:n.click)==null||t.call(n,a)}),e.mouseEnter.on(a=>{var n,t;i.edgeMouseEnter(a),(t=(n=s.events)==null?void 0:n.mouseEnter)==null||t.call(n,a)}),e.mouseMove.on(a=>{var n,t;i.edgeMouseMove(a),(t=(n=s.events)==null?void 0:n.mouseMove)==null||t.call(n,a)}),e.mouseLeave.on(a=>{var n,t;i.edgeMouseLeave(a),(t=(n=s.events)==null?void 0:n.mouseLeave)==null||t.call(n,a)}),e.contextMenu.on(a=>{var n,t;i.edgeContextMenu(a),(t=(n=s.events)==null?void 0:n.contextMenu)==null||t.call(n,a)}),e.updateStart.on(a=>{var n,t;i.edgeUpdateStart(a),(t=(n=s.events)==null?void 0:n.updateStart)==null||t.call(n,a)}),e.update.on(a=>{var n,t;i.edgeUpdate(a),(t=(n=s.events)==null?void 0:n.update)==null||t.call(n,a)}),e.updateEnd.on(a=>{var n,t;i.edgeUpdateEnd(a),(t=(n=s.events)==null?void 0:n.updateEnd)==null||t.call(n,a)}),Object.entries(e).reduce((a,[n,t])=>(a.emit[n]=t.trigger,a.on[n]=t.on,a),{emit:{},on:{}})}function lO(){const{viewport:s,snapGrid:i,snapToGrid:e}=Ks();return a=>{const n=rf(a)?a.sourceEvent:a,{x:t,y:l}=Ka(n),r=Ml({x:t,y:l},s.value),{x:h,y:p}=e.value?Dp(r,i.value):r;return{xSnapped:h,ySnapped:p,...r}}}function Ur(){return!0}function uf({handleId:s,nodeId:i,type:e,isValidConnection:a,edgeUpdaterType:n,onEdgeUpdate:t,onEdgeUpdateEnd:l}){const{id:r,vueFlowRef:h,connectionMode:p,connectionRadius:k,connectOnClick:d,connectionClickStartHandle:o,nodesConnectable:u,autoPanOnConnect:c,autoPanSpeed:A,findNode:g,panBy:f,startConnection:m,updateConnection:y,endConnection:v,emits:_,viewport:S,edges:N,nodes:T,isValidConnection:C,nodeLookup:I}=Ks();let O=null,w=!1,z=null;function b(R){var M;const W=vs(e)==="target",Y=gc(R),ls=U0(R.target);if(Y&&R.button===0||!Y){let ps=function(ns){E=Ka(ns,cs),K=YR(Ml(E,S.value,!1,[1,1]),k.value,I.value,L),D||(P(),D=!0);const gs=iB(ns,{handle:K,connectionMode:p.value,fromNodeId:vs(i),fromHandleId:vs(s),fromType:W?"target":"source",isValidConnection:U,doc:ls,lib:"vue",flowId:r,nodeLookup:I.value},N.value,T.value,g);z=gs.handleDomNode,O=gs.connection,w=ZR(!!K,gs.isValid);const ds={...ss,isValid:w,to:K&&w?No({x:K.x,y:K.y},S.value):E,toHandle:gs.toHandle,toPosition:w&&gs.toHandle?gs.toHandle.position:Mo[L.position],toNode:gs.toHandle?I.value.get(gs.toHandle.nodeId):null};if(!(w&&K&&(ss!=null&&ss.toHandle)&&ds.toHandle&&ss.toHandle.type===ds.toHandle.type&&ss.toHandle.nodeId===ds.toHandle.nodeId&&ss.toHandle.id===ds.toHandle.id&&ss.to.x===ds.to.x&&ss.to.y===ds.to.y)){if(y(K&&w?No({x:K.x,y:K.y},S.value):E,gs.toHandle,XR(!!K,w)),ss=ds,!K&&!w&&!z)return Tk(x);O&&O.source!==O.target&&z&&(Tk(x),x=z,z.classList.add("connecting","vue-flow__handle-connecting"),z.classList.toggle("valid",!!w),z.classList.toggle("vue-flow__handle-valid",!!w))}},es=function(ns){(K||z)&&O&&w&&(t?t(ns,O):_.connect(O)),_.connectEnd(ns),n&&(l==null||l(ns)),Tk(x),cancelAnimationFrame(rs),v(ns),D=!1,w=!1,O=null,z=null,ls.removeEventListener("mousemove",ps),ls.removeEventListener("mouseup",es),ls.removeEventListener("touchmove",ps),ls.removeEventListener("touchend",es)};const q=g(vs(i));let U=vs(a)||C.value||Ur;!U&&q&&(U=(W?q.isValidSourcePos:q.isValidTargetPos)||Ur);let K,rs=0;const{x:j,y:J}=Ka(R),Z=ls==null?void 0:ls.elementFromPoint(j,J),ks=hf(vs(n),Z),cs=(M=h.value)==null?void 0:M.getBoundingClientRect();if(!cs||!ks)return;const X=JR(vs(i),ks,vs(s),I.value,p.value);if(!X)return;let x,E=Ka(R,cs),D=!1;const P=()=>{if(!c.value)return;const[ns,gs]=tf(E,cs,A.value);f({x:ns,y:gs}),rs=requestAnimationFrame(P)},L={...X,nodeId:vs(i),type:ks,position:X.position},H=I.value.get(vs(i)),as={inProgress:!0,isValid:null,from:ft(H,L,Fs.Left,!0),fromHandle:L,fromPosition:L.position,fromNode:H,to:E,toHandle:null,toPosition:Mo[L.position],toNode:null};m({nodeId:vs(i),id:vs(s),type:ks,position:(Z==null?void 0:Z.getAttribute("data-handlepos"))||Fs.Top},{x:j-cs.left,y:J-cs.top}),_.connectStart({event:R,nodeId:vs(i),handleId:vs(s),handleType:ks});let ss=as;ls.addEventListener("mousemove",ps),ls.addEventListener("mouseup",es),ls.addEventListener("touchmove",ps),ls.addEventListener("touchend",es)}}function $(R){var M,W;if(!d.value)return;const Y=vs(e)==="target";if(!o.value){_.clickConnectStart({event:R,nodeId:vs(i),handleId:vs(s)}),m({nodeId:vs(i),type:vs(e),id:vs(s),position:Fs.Top},void 0,!0);return}let ls=vs(a)||C.value||Ur;const ps=g(vs(i));if(!ls&&ps&&(ls=(Y?ps.isValidSourcePos:ps.isValidTargetPos)||Ur),ps&&(typeof ps.connectable>"u"?u.value:ps.connectable)===!1)return;const es=U0(R.target),q=iB(R,{handle:{nodeId:vs(i),id:vs(s),type:vs(e),position:Fs.Top},connectionMode:p.value,fromNodeId:o.value.nodeId,fromHandleId:o.value.id||null,fromType:o.value.type,isValidConnection:ls,doc:es,lib:"vue",flowId:r,nodeLookup:I.value},N.value,T.value,g),U=((M=q.connection)==null?void 0:M.source)===((W=q.connection)==null?void 0:W.target);q.isValid&&q.connection&&!U&&_.connect(q.connection),_.clickConnectEnd(R),v(R,!0)}return{handlePointerDown:b,handleClick:$}}function rO(){return Ns(kf,"")}function cf(s){const i=s??rO()??"",e=Ns(df,Q(null)),{findNode:a,edges:n,emits:t}=Ks(),l=a(i);return l||t.error(new vi(ui.NODE_NOT_FOUND,i)),{id:i,nodeEl:e,node:l,parentNode:V(()=>a(l.parentNode)),connectedEdges:V(()=>af([l],n.value))}}function hO(){return{doubleClick:fs(),click:fs(),mouseEnter:fs(),mouseMove:fs(),mouseLeave:fs(),contextMenu:fs(),dragStart:fs(),drag:fs(),dragStop:fs()}}function pO(s,i){const e=hO();return e.doubleClick.on(a=>{var n,t;i.nodeDoubleClick(a),(t=(n=s.events)==null?void 0:n.doubleClick)==null||t.call(n,a)}),e.click.on(a=>{var n,t;i.nodeClick(a),(t=(n=s.events)==null?void 0:n.click)==null||t.call(n,a)}),e.mouseEnter.on(a=>{var n,t;i.nodeMouseEnter(a),(t=(n=s.events)==null?void 0:n.mouseEnter)==null||t.call(n,a)}),e.mouseMove.on(a=>{var n,t;i.nodeMouseMove(a),(t=(n=s.events)==null?void 0:n.mouseMove)==null||t.call(n,a)}),e.mouseLeave.on(a=>{var n,t;i.nodeMouseLeave(a),(t=(n=s.events)==null?void 0:n.mouseLeave)==null||t.call(n,a)}),e.contextMenu.on(a=>{var n,t;i.nodeContextMenu(a),(t=(n=s.events)==null?void 0:n.contextMenu)==null||t.call(n,a)}),e.dragStart.on(a=>{var n,t;i.nodeDragStart(a),(t=(n=s.events)==null?void 0:n.dragStart)==null||t.call(n,a)}),e.drag.on(a=>{var n,t;i.nodeDrag(a),(t=(n=s.events)==null?void 0:n.drag)==null||t.call(n,a)}),e.dragStop.on(a=>{var n,t;i.nodeDragStop(a),(t=(n=s.events)==null?void 0:n.dragStop)==null||t.call(n,a)}),Object.entries(e).reduce((a,[n,t])=>(a.emit[n]=t.trigger,a.on[n]=t.on,a),{emit:{},on:{}})}function gf(){const{getSelectedNodes:s,nodeExtent:i,updateNodePositions:e,findNode:a,snapGrid:n,snapToGrid:t,nodesDraggable:l,emits:r}=Ks();return(h,p=!1)=>{const k=t.value?n.value[0]:5,d=t.value?n.value[1]:5,o=p?4:1,u=h.x*k*o,c=h.y*d*o,A=[];for(const g of s.value)if(g.draggable||l&&typeof g.draggable>"u"){const f={x:g.computedPosition.x+u,y:g.computedPosition.y+c},{computedPosition:m}=cc(g,f,r.error,i.value,g.parentNode?a(g.parentNode):void 0);A.push({id:g.id,position:m,from:g.position,distance:{x:h.x,y:h.y},dimensions:g.dimensions})}e(A,!0,!1)}}const Rk=.1;function xa(){return wp("Viewport not initialized yet."),Promise.resolve(!1)}const kO={zoomIn:xa,zoomOut:xa,zoomTo:xa,fitView:xa,setCenter:xa,fitBounds:xa,project:s=>s,screenToFlowCoordinate:s=>s,flowToScreenCoordinate:s=>s,setViewport:xa,setTransform:xa,getViewport:()=>({x:0,y:0,zoom:1}),getTransform:()=>({x:0,y:0,zoom:1}),viewportInitialized:!1};function dO(s){function i(a,n){return new Promise(t=>{s.d3Selection&&s.d3Zoom?s.d3Zoom.scaleBy(Ok(s.d3Selection,n,()=>{t(!0)}),a):t(!1)})}function e(a,n,t,l){return new Promise(r=>{const{x:h,y:p}=Y6({x:-a,y:-n},s.translateExtent),k=yt.translate(-h,-p).scale(t);s.d3Selection&&s.d3Zoom?s.d3Zoom.transform(Ok(s.d3Selection,l,()=>{r(!0)}),k):r(!1)})}return V(()=>s.d3Zoom&&s.d3Selection&&s.dimensions.width&&s.dimensions.height?{viewportInitialized:!0,zoomIn:n=>i(1.2,n==null?void 0:n.duration),zoomOut:n=>i(1/1.2,n==null?void 0:n.duration),zoomTo:(n,t)=>new Promise(l=>{s.d3Selection&&s.d3Zoom?s.d3Zoom.scaleTo(Ok(s.d3Selection,t==null?void 0:t.duration,()=>{l(!0)}),n):l(!1)}),setViewport:(n,t)=>e(n.x,n.y,n.zoom,t==null?void 0:t.duration),setTransform:(n,t)=>e(n.x,n.y,n.zoom,t==null?void 0:t.duration),getViewport:()=>({x:s.viewport.x,y:s.viewport.y,zoom:s.viewport.zoom}),getTransform:()=>({x:s.viewport.x,y:s.viewport.y,zoom:s.viewport.zoom}),fitView:(n={padding:Rk,includeHiddenNodes:!1,duration:0})=>{var t,l;const r=[];for(const o of s.nodes)o.dimensions.width&&o.dimensions.height&&((n==null?void 0:n.includeHiddenNodes)||!o.hidden)&&(!((t=n.nodes)!=null&&t.length)||(l=n.nodes)!=null&&l.length&&n.nodes.includes(o.id))&&r.push(o);if(!r.length)return Promise.resolve(!1);const h=sf(r),{x:p,y:k,zoom:d}=G0(h,s.dimensions.width,s.dimensions.height,n.minZoom??s.minZoom,n.maxZoom??s.maxZoom,n.padding??Rk,n.offset);return e(p,k,d,n==null?void 0:n.duration)},setCenter:(n,t,l)=>{const r=typeof(l==null?void 0:l.zoom)<"u"?l.zoom:s.maxZoom,h=s.dimensions.width/2-n*r,p=s.dimensions.height/2-t*r;return e(h,p,r,l==null?void 0:l.duration)},fitBounds:(n,t={padding:Rk})=>{const{x:l,y:r,zoom:h}=G0(n,s.dimensions.width,s.dimensions.height,s.minZoom,s.maxZoom,t.padding);return e(l,r,h,t==null?void 0:t.duration)},project:n=>Ml(n,s.viewport,s.snapToGrid,s.snapGrid),screenToFlowCoordinate:n=>{if(s.vueFlowRef){const{x:t,y:l}=s.vueFlowRef.getBoundingClientRect(),r={x:n.x-t,y:n.y-l};return Ml(r,s.viewport,s.snapToGrid,s.snapGrid)}return{x:0,y:0}},flowToScreenCoordinate:n=>{if(s.vueFlowRef){const{x:t,y:l}=s.vueFlowRef.getBoundingClientRect(),r={x:n.x+t,y:n.y+l};return No(r,s.viewport)}return{x:0,y:0}}}:kO)}function Ok(s,i=0,e){return s.transition().duration(i).on("end",e)}function oO(s,i,e){const a=JA(!0);return a.run(()=>{const n=()=>{a.run(()=>{let A,g,f=!!(e.nodes.value.length||e.edges.value.length);A=Vn([s.modelValue,()=>{var m,y;return(y=(m=s.modelValue)==null?void 0:m.value)==null?void 0:y.length}],([m])=>{m&&Array.isArray(m)&&(g==null||g.pause(),e.setElements(m),!g&&!f&&m.length?f=!0:g==null||g.resume())}),g=Vn([e.nodes,e.edges,()=>e.edges.value.length,()=>e.nodes.value.length],([m,y])=>{var v;(v=s.modelValue)!=null&&v.value&&Array.isArray(s.modelValue.value)&&(A==null||A.pause(),s.modelValue.value=[...m,...y],qs(()=>{A==null||A.resume()}))},{immediate:f}),il(()=>{A==null||A.stop(),g==null||g.stop()})})},t=()=>{a.run(()=>{let A,g,f=!!e.nodes.value.length;A=Vn([s.nodes,()=>{var m,y;return(y=(m=s.nodes)==null?void 0:m.value)==null?void 0:y.length}],([m])=>{m&&Array.isArray(m)&&(g==null||g.pause(),e.setNodes(m),!g&&!f&&m.length?f=!0:g==null||g.resume())}),g=Vn([e.nodes,()=>e.nodes.value.length],([m])=>{var y;(y=s.nodes)!=null&&y.value&&Array.isArray(s.nodes.value)&&(A==null||A.pause(),s.nodes.value=[...m],qs(()=>{A==null||A.resume()}))},{immediate:f}),il(()=>{A==null||A.stop(),g==null||g.stop()})})},l=()=>{a.run(()=>{let A,g,f=!!e.edges.value.length;A=Vn([s.edges,()=>{var m,y;return(y=(m=s.edges)==null?void 0:m.value)==null?void 0:y.length}],([m])=>{m&&Array.isArray(m)&&(g==null||g.pause(),e.setEdges(m),!g&&!f&&m.length?f=!0:g==null||g.resume())}),g=Vn([e.edges,()=>e.edges.value.length],([m])=>{var y;(y=s.edges)!=null&&y.value&&Array.isArray(s.edges.value)&&(A==null||A.pause(),s.edges.value=[...m],qs(()=>{A==null||A.resume()}))},{immediate:f}),il(()=>{A==null||A.stop(),g==null||g.stop()})})},r=()=>{a.run(()=>{bs(()=>i.maxZoom,()=>{i.maxZoom&&oi(i.maxZoom)&&e.setMaxZoom(i.maxZoom)},{immediate:!0})})},h=()=>{a.run(()=>{bs(()=>i.minZoom,()=>{i.minZoom&&oi(i.minZoom)&&e.setMinZoom(i.minZoom)},{immediate:!0})})},p=()=>{a.run(()=>{bs(()=>i.translateExtent,()=>{i.translateExtent&&oi(i.translateExtent)&&e.setTranslateExtent(i.translateExtent)},{immediate:!0})})},k=()=>{a.run(()=>{bs(()=>i.nodeExtent,()=>{i.nodeExtent&&oi(i.nodeExtent)&&e.setNodeExtent(i.nodeExtent)},{immediate:!0})})},d=()=>{a.run(()=>{bs(()=>i.applyDefault,()=>{oi(i.applyDefault)&&(e.applyDefault.value=i.applyDefault)},{immediate:!0})})},o=()=>{a.run(()=>{const A=async g=>{let f=g;typeof i.autoConnect=="function"&&(f=await i.autoConnect(g)),f!==!1&&e.addEdges([f])};bs(()=>i.autoConnect,()=>{oi(i.autoConnect)&&(e.autoConnect.value=i.autoConnect)},{immediate:!0}),bs(e.autoConnect,(g,f,m)=>{g?e.onConnect(A):e.hooks.value.connect.off(A),m(()=>{e.hooks.value.connect.off(A)})},{immediate:!0})})},u=()=>{const A=["id","modelValue","translateExtent","nodeExtent","edges","nodes","maxZoom","minZoom","applyDefault","autoConnect"];for(const g of Object.keys(i)){const f=g;if(!A.includes(f)){const m=Ms(()=>i[f]),y=e[f];ti(y)&&a.run(()=>{bs(m,v=>{oi(v)&&(y.value=v)},{immediate:!0})})}}};(()=>{n(),t(),l(),h(),r(),p(),k(),d(),o(),u()})()}),()=>a.stop()}function uO(){return{edgesChange:fs(),nodesChange:fs(),nodeDoubleClick:fs(),nodeClick:fs(),nodeMouseEnter:fs(),nodeMouseMove:fs(),nodeMouseLeave:fs(),nodeContextMenu:fs(),nodeDragStart:fs(),nodeDrag:fs(),nodeDragStop:fs(),nodesInitialized:fs(),miniMapNodeClick:fs(),miniMapNodeDoubleClick:fs(),miniMapNodeMouseEnter:fs(),miniMapNodeMouseMove:fs(),miniMapNodeMouseLeave:fs(),connect:fs(),connectStart:fs(),connectEnd:fs(),clickConnectStart:fs(),clickConnectEnd:fs(),paneReady:fs(),init:fs(),move:fs(),moveStart:fs(),moveEnd:fs(),selectionDragStart:fs(),selectionDrag:fs(),selectionDragStop:fs(),selectionContextMenu:fs(),selectionStart:fs(),selectionEnd:fs(),viewportChangeStart:fs(),viewportChange:fs(),viewportChangeEnd:fs(),paneScroll:fs(),paneClick:fs(),paneContextMenu:fs(),paneMouseEnter:fs(),paneMouseMove:fs(),paneMouseLeave:fs(),edgeContextMenu:fs(),edgeMouseEnter:fs(),edgeMouseMove:fs(),edgeMouseLeave:fs(),edgeDoubleClick:fs(),edgeClick:fs(),edgeUpdateStart:fs(),edgeUpdate:fs(),edgeUpdateEnd:fs(),updateNodeInternals:fs(),error:fs(s=>wp(s.message))}}function cO(s,i){Oy(()=>{for(const[e,a]of Object.entries(i.value)){const n=t=>{s(e,t)};a.fns.add(n),vp(()=>{a.off(n)})}})}function Bf(){return{vueFlowRef:null,viewportRef:null,nodes:[],edges:[],connectionLookup:new Map,nodeTypes:{},edgeTypes:{},initialized:!1,dimensions:{width:0,height:0},viewport:{x:0,y:0,zoom:1},d3Zoom:null,d3Selection:null,d3ZoomHandler:null,minZoom:.5,maxZoom:2,translateExtent:[[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY]],nodeExtent:[[Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY],[Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY]],selectionMode:uc.Full,paneDragging:!1,preventScrolling:!0,zoomOnScroll:!0,zoomOnPinch:!0,zoomOnDoubleClick:!0,panOnScroll:!1,panOnScrollSpeed:.5,panOnScrollMode:ol.Free,paneClickDistance:0,panOnDrag:!0,edgeUpdaterRadius:10,onlyRenderVisibleElements:!1,defaultViewport:{x:0,y:0,zoom:1},nodesSelectionActive:!1,userSelectionActive:!1,userSelectionRect:null,defaultMarkerColor:"#b1b1b7",connectionLineStyle:{},connectionLineType:null,connectionLineOptions:{type:cn.Bezier,style:{}},connectionMode:Qa.Loose,connectionStartHandle:null,connectionEndHandle:null,connectionClickStartHandle:null,connectionPosition:{x:Number.NaN,y:Number.NaN},connectionRadius:20,connectOnClick:!0,connectionStatus:null,isValidConnection:null,snapGrid:[15,15],snapToGrid:!1,edgesUpdatable:!1,edgesFocusable:!0,nodesFocusable:!0,nodesConnectable:!0,nodesDraggable:!0,nodeDragThreshold:1,elementsSelectable:!0,selectNodesOnDrag:!0,multiSelectionActive:!1,selectionKeyCode:"Shift",multiSelectionKeyCode:Mh()?"Meta":"Control",zoomActivationKeyCode:Mh()?"Meta":"Control",deleteKeyCode:"Backspace",panActivationKeyCode:"Space",hooks:uO(),applyDefault:!0,autoConnect:!1,fitViewOnInit:!1,fitViewOnInitDone:!1,noDragClassName:"nodrag",noWheelClassName:"nowheel",noPanClassName:"nopan",defaultEdgeOptions:void 0,elevateEdgesOnSelect:!1,elevateNodesOnSelect:!0,autoPanOnNodeDrag:!0,autoPanOnConnect:!0,autoPanSpeed:15,disableKeyboardA11y:!1,ariaLiveMessage:""}}const gO=["id","vueFlowRef","viewportRef","initialized","modelValue","nodes","edges","maxZoom","minZoom","translateExtent","hooks","defaultEdgeOptions"];function BO(s,i,e){const a=dO(s),n=E=>{const D=E??[];s.hooks.updateNodeInternals.trigger(D)},t=E=>OR(E,s.nodes,s.edges),l=E=>RR(E,s.nodes,s.edges),r=E=>af(E,s.edges),h=({id:E,type:D,nodeId:P})=>{var L;return Array.from(((L=s.connectionLookup.get(`${P}-${D}-${E??null}`))==null?void 0:L.values())??[])},p=E=>{if(E)return i.value.get(E)},k=E=>{if(E)return e.value.get(E)},d=(E,D,P)=>{var L,H;const is=[];for(const as of E){const ss={id:as.id,type:"position",dragging:P,from:as.from};if(D&&(ss.position=as.position,as.parentNode)){const ns=p(as.parentNode);ss.position={x:ss.position.x-(((L=ns==null?void 0:ns.computedPosition)==null?void 0:L.x)??0),y:ss.position.y-(((H=ns==null?void 0:ns.computedPosition)==null?void 0:H.y)??0)}}is.push(ss)}is!=null&&is.length&&s.hooks.nodesChange.trigger(is)},o=E=>{if(!s.vueFlowRef)return;const D=s.vueFlowRef.querySelector(".vue-flow__transformationpane");if(!D)return;const P=window.getComputedStyle(D),{m22:L}=new window.DOMMatrixReadOnly(P.transform),H=[];for(let is=0;is<E.length;++is){const as=E[is],ss=p(as.id);if(ss){const ns=_p(as.nodeElement);if(!!(ns.width&&ns.height&&(ss.dimensions.width!==ns.width||ss.dimensions.height!==ns.height||as.forceUpdate))){const ds=as.nodeElement.getBoundingClientRect();ss.dimensions=ns,ss.handleBounds.source=eB("source",as.nodeElement,ds,L),ss.handleBounds.target=eB("target",as.nodeElement,ds,L),H.push({id:ss.id,type:"dimensions",dimensions:ns})}}}!s.fitViewOnInitDone&&s.fitViewOnInit&&a.value.fitView().then(()=>{s.fitViewOnInitDone=!0}),H.length&&s.hooks.nodesChange.trigger(H)},u=(E,D)=>{const P=new Set,L=new Set;for(const as of E)bn(as)?P.add(as.id):sn(as)&&L.add(as.id);const H=$a(i.value,P,!0),is=$a(e.value,L);if(s.multiSelectionActive){for(const as of P)H.push(Ra(as,D));for(const as of L)is.push(Ra(as,D))}H.length&&s.hooks.nodesChange.trigger(H),is.length&&s.hooks.edgesChange.trigger(is)},c=E=>{if(s.multiSelectionActive){const D=E.map(P=>Ra(P.id,!0));s.hooks.nodesChange.trigger(D);return}s.hooks.nodesChange.trigger($a(i.value,new Set(E.map(D=>D.id)),!0)),s.hooks.edgesChange.trigger($a(e.value))},A=E=>{if(s.multiSelectionActive){const D=E.map(P=>Ra(P.id,!0));s.hooks.edgesChange.trigger(D);return}s.hooks.edgesChange.trigger($a(e.value,new Set(E.map(D=>D.id)))),s.hooks.nodesChange.trigger($a(i.value,new Set,!0))},g=E=>{u(E,!0)},f=E=>{const P=(E||s.nodes).map(L=>(L.selected=!1,Ra(L.id,!1)));s.hooks.nodesChange.trigger(P)},m=E=>{const P=(E||s.edges).map(L=>(L.selected=!1,Ra(L.id,!1)));s.hooks.edgesChange.trigger(P)},y=E=>{if(!E||!E.length)return u([],!1);const D=E.reduce((P,L)=>{const H=Ra(L.id,!1);return bn(L)?P.nodes.push(H):P.edges.push(H),P},{nodes:[],edges:[]});D.nodes.length&&s.hooks.nodesChange.trigger(D.nodes),D.edges.length&&s.hooks.edgesChange.trigger(D.edges)},v=E=>{var D;(D=s.d3Zoom)==null||D.scaleExtent([E,s.maxZoom]),s.minZoom=E},_=E=>{var D;(D=s.d3Zoom)==null||D.scaleExtent([s.minZoom,E]),s.maxZoom=E},S=E=>{var D;(D=s.d3Zoom)==null||D.translateExtent(E),s.translateExtent=E},N=E=>{s.nodeExtent=E,n()},T=E=>{var D;(D=s.d3Zoom)==null||D.clickDistance(E)},C=E=>{s.nodesDraggable=E,s.nodesConnectable=E,s.elementsSelectable=E},I=E=>{const D=E instanceof Function?E(s.nodes):E;!s.initialized&&!D.length||(s.nodes=aB(D,p,s.hooks.error.trigger))},O=E=>{const D=E instanceof Function?E(s.edges):E;if(!s.initialized&&!D.length)return;const P=Ik(D,s.isValidConnection,p,k,s.hooks.error.trigger,s.defaultEdgeOptions,s.nodes,s.edges);Sk(s.connectionLookup,e.value,P),s.edges=P},w=E=>{const D=E instanceof Function?E([...s.nodes,...s.edges]):E;!s.initialized&&!D.length||(I(D.filter(bn)),O(D.filter(sn)))},z=E=>{let D=E instanceof Function?E(s.nodes):E;D=Array.isArray(D)?D:[D];const P=aB(D,p,s.hooks.error.trigger),L=[];for(const H of P)L.push(Y0(H));L.length&&s.hooks.nodesChange.trigger(L)},b=E=>{let D=E instanceof Function?E(s.edges):E;D=Array.isArray(D)?D:[D];const P=Ik(D,s.isValidConnection,p,k,s.hooks.error.trigger,s.defaultEdgeOptions,s.nodes,s.edges),L=[];for(const H of P)L.push(Y0(H));L.length&&s.hooks.edgesChange.trigger(L)},$=(E,D=!0,P=!1)=>{const L=E instanceof Function?E(s.nodes):E,H=Array.isArray(L)?L:[L],is=[],as=[];function ss(gs){const ds=r(gs);for(const As of ds)(!oi(As.deletable)||As.deletable)&&as.push(Z0(As.id,As.source,As.target,As.sourceHandle,As.targetHandle))}function ns(gs){const ds=[];for(const As of s.nodes)As.parentNode===gs&&ds.push(As);if(ds.length){for(const As of ds)is.push(X0(As.id));D&&ss(ds);for(const As of ds)ns(As.id)}}for(const gs of H){const ds=typeof gs=="string"?p(gs):gs;ds&&(oi(ds.deletable)&&!ds.deletable||(is.push(X0(ds.id)),D&&ss([ds]),P&&ns(ds.id)))}as.length&&s.hooks.edgesChange.trigger(as),is.length&&s.hooks.nodesChange.trigger(is)},R=E=>{const D=E instanceof Function?E(s.edges):E,P=Array.isArray(D)?D:[D],L=[];for(const H of P){const is=typeof H=="string"?k(H):H;is&&(oi(is.deletable)&&!is.deletable||L.push(Z0(typeof H=="string"?H:H.id,is.source,is.target,is.sourceHandle,is.targetHandle)))}s.hooks.edgesChange.trigger(L)},M=(E,D,P=!0)=>{const L=k(E.id),H=iO(E,D,L,P,s.hooks.error.trigger);if(H){const[is]=Ik([H],s.isValidConnection,p,k,s.hooks.error.trigger,s.defaultEdgeOptions,s.nodes,s.edges);return s.edges.splice(s.edges.indexOf(L),1,is),Sk(s.connectionLookup,e.value,[is]),is}return!1},W=(E,D,P={replace:!1})=>{const L=k(E);if(!L)return;const H=typeof D=="function"?D(L):D;L.data=P.replace?H:{...L.data,...H}},Y=E=>K0(E,s.nodes),ls=E=>{const D=K0(E,s.edges);return Sk(s.connectionLookup,e.value,D),D},ps=(E,D,P={replace:!1})=>{const L=p(E);if(!L)return;const H=typeof D=="function"?D(L):D;P.replace?s.nodes.splice(s.nodes.indexOf(L),1,H):Object.assign(L,H)},es=(E,D,P={replace:!1})=>{const L=p(E);if(!L)return;const H=typeof D=="function"?D(L):D;L.data=P.replace?H:{...L.data,...H}},q=(E,D,P=!1)=>{P?s.connectionClickStartHandle=E:s.connectionStartHandle=E,s.connectionEndHandle=null,s.connectionStatus=null,D&&(s.connectionPosition=D)},U=(E,D=null,P=null)=>{s.connectionStartHandle&&(s.connectionPosition=E,s.connectionEndHandle=D,s.connectionStatus=P)},K=(E,D)=>{s.connectionPosition={x:Number.NaN,y:Number.NaN},s.connectionEndHandle=null,s.connectionStatus=null,D?s.connectionClickStartHandle=null:s.connectionStartHandle=null},rs=E=>{const D=SR(E),P=D?null:Zt(E)?E:p(E.id);return!D&&!P?[null,null,D]:[D?E:Lh(P),P,D]},j=(E,D=!0,P=s.nodes)=>{const[L,H,is]=rs(E);if(!L)return[];const as=[];for(const ss of P||s.nodes){if(!is&&(ss.id===H.id||!ss.computedPosition))continue;const ns=Lh(ss),gs=Nh(ns,L);(D&&gs>0||gs>=Number(L.width)*Number(L.height))&&as.push(ss)}return as},J=(E,D,P=!0)=>{const[L]=rs(E);if(!L)return!1;const H=Nh(L,D);return P&&H>0||H>=Number(L.width)*Number(L.height)},Z=E=>{const{viewport:D,dimensions:P,d3Zoom:L,d3Selection:H,translateExtent:is}=s;if(!L||!H||!E.x&&!E.y)return!1;const as=yt.translate(D.x+E.x,D.y+E.y).scale(D.zoom),ss=[[0,0],[P.width,P.height]],ns=L.constrain()(as,ss,is),gs=s.viewport.x!==ns.x||s.viewport.y!==ns.y||s.viewport.zoom!==ns.k;return L.transform(H,ns),gs},ks=E=>{const D=E instanceof Function?E(s):E,P=["d3Zoom","d3Selection","d3ZoomHandler","viewportRef","vueFlowRef","dimensions","hooks"];oi(D.defaultEdgeOptions)&&(s.defaultEdgeOptions=D.defaultEdgeOptions);const L=D.modelValue||D.nodes||D.edges?[]:void 0;L&&(D.modelValue&&L.push(...D.modelValue),D.nodes&&L.push(...D.nodes),D.edges&&L.push(...D.edges),w(L));const H=()=>{oi(D.maxZoom)&&_(D.maxZoom),oi(D.minZoom)&&v(D.minZoom),oi(D.translateExtent)&&S(D.translateExtent)};for(const is of Object.keys(D)){const as=is,ss=D[as];![...gO,...P].includes(as)&&oi(ss)&&(s[as]=ss)}_o(()=>s.d3Zoom).not.toBeNull().then(H),s.initialized||(s.initialized=!0)};return{updateNodePositions:d,updateNodeDimensions:o,setElements:w,setNodes:I,setEdges:O,addNodes:z,addEdges:b,removeNodes:$,removeEdges:R,findNode:p,findEdge:k,updateEdge:M,updateEdgeData:W,updateNode:ps,updateNodeData:es,applyEdgeChanges:ls,applyNodeChanges:Y,addSelectedElements:g,addSelectedNodes:c,addSelectedEdges:A,setMinZoom:v,setMaxZoom:_,setTranslateExtent:S,setNodeExtent:N,setPaneClickDistance:T,removeSelectedElements:y,removeSelectedNodes:f,removeSelectedEdges:m,startConnection:q,updateConnection:U,endConnection:K,setInteractive:C,setState:ks,getIntersectingNodes:j,getIncomers:t,getOutgoers:l,getConnectedEdges:r,getHandleConnections:h,isNodeIntersecting:J,panBy:Z,fitView:E=>a.value.fitView(E),zoomIn:E=>a.value.zoomIn(E),zoomOut:E=>a.value.zoomOut(E),zoomTo:(E,D)=>a.value.zoomTo(E,D),setViewport:(E,D)=>a.value.setViewport(E,D),setTransform:(E,D)=>a.value.setTransform(E,D),getViewport:()=>a.value.getViewport(),getTransform:()=>a.value.getTransform(),setCenter:(E,D,P)=>a.value.setCenter(E,D,P),fitBounds:(E,D)=>a.value.fitBounds(E,D),project:E=>a.value.project(E),screenToFlowCoordinate:E=>a.value.screenToFlowCoordinate(E),flowToScreenCoordinate:E=>a.value.flowToScreenCoordinate(E),toObject:()=>{const E=[],D=[];for(const P of s.nodes){const{computedPosition:L,handleBounds:H,selected:is,dimensions:as,isParent:ss,resizing:ns,dragging:gs,events:ds,...As}=P;E.push(As)}for(const P of s.edges){const{selected:L,sourceNode:H,targetNode:is,events:as,...ss}=P;D.push(ss)}return JSON.parse(JSON.stringify({nodes:E,edges:D,position:[s.viewport.x,s.viewport.y],zoom:s.viewport.zoom,viewport:s.viewport}))},fromObject:E=>new Promise(D=>{const{nodes:P,edges:L,position:H,zoom:is,viewport:as}=E;if(P&&I(P),L&&O(L),as!=null&&as.x&&(as!=null&&as.y)||H){const ss=(as==null?void 0:as.x)||H[0],ns=(as==null?void 0:as.y)||H[1],gs=(as==null?void 0:as.zoom)||is||s.viewport.zoom;return _o(()=>a.value.viewportInitialized).toBe(!0).then(()=>{a.value.setViewport({x:ss,y:ns,zoom:gs}).then(()=>{D(!0)})})}else D(!0)}),updateNodeInternals:n,viewportHelper:a,$reset:()=>{const E=Bf();if(s.edges=[],s.nodes=[],s.d3Zoom&&s.d3Selection){const D=yt.translate(E.defaultViewport.x??0,E.defaultViewport.y??0).scale(Sn(E.defaultViewport.zoom??1,E.minZoom,E.maxZoom)),P=s.viewportRef.getBoundingClientRect(),L=[[0,0],[P.width,P.height]],H=s.d3Zoom.constrain()(D,L,E.translateExtent);s.d3Zoom.transform(s.d3Selection,H)}ks(E)},$destroy:()=>{}}}const AO=["data-id","data-handleid","data-nodeid","data-handlepos"],yO={name:"Handle",compatConfig:{MODE:3}},ma=ts({...yO,props:{id:{default:null},type:{},position:{default:()=>Fs.Top},isValidConnection:{type:Function},connectable:{type:[Boolean,Number,String,Function],default:void 0},connectableStart:{type:Boolean,default:!0},connectableEnd:{type:Boolean,default:!0}},setup(s,{expose:i}){const e=kv(s,["position","connectable","connectableStart","connectableEnd","id"]),a=Ms(()=>e.type??"source"),n=Ms(()=>e.isValidConnection??null),{id:t,connectionStartHandle:l,connectionClickStartHandle:r,connectionEndHandle:h,vueFlowRef:p,nodesConnectable:k,noDragClassName:d,noPanClassName:o}=Ks(),{id:u,node:c,nodeEl:A,connectedEdges:g}=cf(),f=Q(),m=Ms(()=>typeof s.connectableStart<"u"?s.connectableStart:!0),y=Ms(()=>typeof s.connectableEnd<"u"?s.connectableEnd:!0),v=Ms(()=>{var O,w,z,b,$,R;return((O=l.value)==null?void 0:O.nodeId)===u&&((w=l.value)==null?void 0:w.id)===s.id&&((z=l.value)==null?void 0:z.type)===a.value||((b=h.value)==null?void 0:b.nodeId)===u&&(($=h.value)==null?void 0:$.id)===s.id&&((R=h.value)==null?void 0:R.type)===a.value}),_=Ms(()=>{var O,w,z;return((O=r.value)==null?void 0:O.nodeId)===u&&((w=r.value)==null?void 0:w.id)===s.id&&((z=r.value)==null?void 0:z.type)===a.value}),{handlePointerDown:S,handleClick:N}=uf({nodeId:u,handleId:s.id,isValidConnection:n,type:a}),T=V(()=>typeof s.connectable=="string"&&s.connectable==="single"?!g.value.some(O=>{const w=O[`${a.value}Handle`];return O[a.value]!==u?!1:w?w===s.id:!0}):typeof s.connectable=="number"?g.value.filter(O=>{const w=O[`${a.value}Handle`];return O[a.value]!==u?!1:w?w===s.id:!0}).length<s.connectable:typeof s.connectable=="function"?s.connectable(c,g.value):oi(s.connectable)?s.connectable:k.value);ws(()=>{var O;if(!c.dimensions.width||!c.dimensions.height)return;const w=(O=c.handleBounds[a.value])==null?void 0:O.find(Y=>Y.id===s.id);if(!p.value||w)return;const z=p.value.querySelector(".vue-flow__transformationpane");if(!A.value||!f.value||!z||!s.id)return;const b=A.value.getBoundingClientRect(),$=f.value.getBoundingClientRect(),R=window.getComputedStyle(z),{m22:M}=new window.DOMMatrixReadOnly(R.transform),W={id:s.id,position:s.position,x:($.left-b.left)/M,y:($.top-b.top)/M,type:a.value,nodeId:u,..._p(f.value)};c.handleBounds[a.value]=[...c.handleBounds[a.value]??[],W]}),_i(()=>{const O=c.handleBounds[a.value];O&&(c.handleBounds[a.value]=O.filter(w=>w.id!==s.id))});function C(O){const w=gc(O);T.value&&m.value&&(w&&O.button===0||!w)&&S(O)}function I(O){!u||!r.value&&!m.value||T.value&&N(O)}return i({handleClick:N,handlePointerDown:S,onClick:I,onPointerDown:C}),(O,w)=>(hs(),us("div",{ref_key:"handle",ref:f,"data-id":`${ms(t)}-${ms(u)}-${s.id}-${a.value}`,"data-handleid":s.id,"data-nodeid":ms(u),"data-handlepos":O.position,class:Ps(["vue-flow__handle",[`vue-flow__handle-${O.position}`,`vue-flow__handle-${s.id}`,ms(d),ms(o),a.value,{connectable:T.value,connecting:_.value,connectablestart:m.value,connectableend:y.value,connectionindicator:T.value&&(m.value&&!v.value||y.value&&v.value)}]]),onMousedown:C,onTouchstartPassive:C,onClick:I},[ee(O.$slots,"default",{id:O.id})],42,AO))}}),Tp=function({sourcePosition:s=Fs.Bottom,targetPosition:i=Fs.Top,label:e,connectable:a=!0,isValidTargetPos:n,isValidSourcePos:t,data:l}){const r=l.label||e;return[B(ma,{type:"target",position:i,connectable:a,isValidConnection:n}),typeof r!="string"&&r?B(r):B(Ds,[r]),B(ma,{type:"source",position:s,connectable:a,isValidConnection:t})]};Tp.props=["sourcePosition","targetPosition","label","isValidTargetPos","isValidSourcePos","connectable","data"];Tp.inheritAttrs=!1;Tp.compatConfig={MODE:3};const fO=Tp,Sp=function({targetPosition:s=Fs.Top,label:i,connectable:e=!0,isValidTargetPos:a,data:n}){const t=n.label||i;return[B(ma,{type:"target",position:s,connectable:e,isValidConnection:a}),typeof t!="string"&&t?B(t):B(Ds,[t])]};Sp.props=["targetPosition","label","isValidTargetPos","connectable","data"];Sp.inheritAttrs=!1;Sp.compatConfig={MODE:3};const mO=Sp,Ip=function({sourcePosition:s=Fs.Bottom,label:i,connectable:e=!0,isValidSourcePos:a,data:n}){const t=n.label||i;return[typeof t!="string"&&t?B(t):B(Ds,[t]),B(ma,{type:"source",position:s,connectable:e,isValidConnection:a})]};Ip.props=["sourcePosition","label","isValidSourcePos","connectable","data"];Ip.inheritAttrs=!1;Ip.compatConfig={MODE:3};const vO=Ip,FO=["transform"],EO=["width","height","x","y","rx","ry"],bO=["y"],CO={name:"EdgeText",compatConfig:{MODE:3}},_O=ts({...CO,props:{x:{},y:{},label:{},labelStyle:{default:()=>({})},labelShowBg:{type:Boolean,default:!0},labelBgStyle:{default:()=>({})},labelBgPadding:{default:()=>[2,4]},labelBgBorderRadius:{default:2}},setup(s){const i=Q({x:0,y:0,width:0,height:0}),e=Q(null),a=V(()=>`translate(${s.x-i.value.width/2} ${s.y-i.value.height/2})`);ws(n),bs([()=>s.x,()=>s.y,e,()=>s.label],n);function n(){if(!e.value)return;const t=e.value.getBBox();(t.width!==i.value.width||t.height!==i.value.height)&&(i.value=t)}return(t,l)=>(hs(),us("g",{transform:a.value,class:"vue-flow__edge-textwrapper"},[t.labelShowBg?(hs(),us("rect",{key:0,class:"vue-flow__edge-textbg",width:`${i.value.width+2*t.labelBgPadding[0]}px`,height:`${i.value.height+2*t.labelBgPadding[1]}px`,x:-t.labelBgPadding[0],y:-t.labelBgPadding[1],style:gi(t.labelBgStyle),rx:t.labelBgBorderRadius,ry:t.labelBgBorderRadius},null,12,EO)):ys("",!0),G("text",yu(t.$attrs,{ref_key:"el",ref:e,class:"vue-flow__edge-text",y:i.value.height/2,dy:"0.3em",style:t.labelStyle}),[ee(t.$slots,"default",{},()=>[typeof t.label!="string"?(hs(),ri(lv(t.label),{key:0})):(hs(),us(Ds,{key:1},[ki(Ls(t.label),1)],64))])],16,bO)],8,FO))}}),DO=["id","d","marker-end","marker-start"],wO=["d","stroke-width"],xO={name:"BaseEdge",inheritAttrs:!1,compatConfig:{MODE:3}},Rp=ts({...xO,props:{id:{},labelX:{},labelY:{},path:{},label:{},markerStart:{},markerEnd:{},interactionWidth:{default:20},labelStyle:{},labelShowBg:{type:Boolean},labelBgStyle:{},labelBgPadding:{},labelBgBorderRadius:{}},setup(s,{expose:i}){const e=Q(null),a=Q(null),n=Q(null),t=pv();return i({pathEl:e,interactionEl:a,labelEl:n}),(l,r)=>(hs(),us(Ds,null,[G("path",yu(ms(t),{id:l.id,ref_key:"pathEl",ref:e,d:l.path,class:"vue-flow__edge-path","marker-end":l.markerEnd,"marker-start":l.markerStart}),null,16,DO),l.interactionWidth?(hs(),us("path",{key:0,ref_key:"interactionEl",ref:a,fill:"none",d:l.path,"stroke-width":l.interactionWidth,"stroke-opacity":0,class:"vue-flow__edge-interaction"},null,8,wO)):ys("",!0),l.label&&l.labelX&&l.labelY?(hs(),ri(_O,{key:1,ref_key:"labelEl",ref:n,x:l.labelX,y:l.labelY,label:l.label,"label-show-bg":l.labelShowBg,"label-bg-style":l.labelBgStyle,"label-bg-padding":l.labelBgPadding,"label-bg-border-radius":l.labelBgBorderRadius,"label-style":l.labelStyle},null,8,["x","y","label","label-show-bg","label-bg-style","label-bg-padding","label-bg-border-radius","label-style"])):ys("",!0)],64))}});function Af({sourceX:s,sourceY:i,targetX:e,targetY:a}){const n=Math.abs(e-s)/2,t=e<s?e+n:e-n,l=Math.abs(a-i)/2,r=a<i?a+l:a-l;return[t,r,n,l]}function yf({sourceX:s,sourceY:i,targetX:e,targetY:a,sourceControlX:n,sourceControlY:t,targetControlX:l,targetControlY:r}){const h=s*.125+n*.375+l*.375+e*.125,p=i*.125+t*.375+r*.375+a*.125,k=Math.abs(h-s),d=Math.abs(p-i);return[h,p,k,d]}function Gr(s,i){return s>=0?.5*s:i*25*Math.sqrt(-s)}function rB({pos:s,x1:i,y1:e,x2:a,y2:n,c:t}){let l,r;switch(s){case Fs.Left:l=i-Gr(i-a,t),r=e;break;case Fs.Right:l=i+Gr(a-i,t),r=e;break;case Fs.Top:l=i,r=e-Gr(e-n,t);break;case Fs.Bottom:l=i,r=e+Gr(n-e,t);break}return[l,r]}function ff(s){const{sourceX:i,sourceY:e,sourcePosition:a=Fs.Bottom,targetX:n,targetY:t,targetPosition:l=Fs.Top,curvature:r=.25}=s,[h,p]=rB({pos:a,x1:i,y1:e,x2:n,y2:t,c:r}),[k,d]=rB({pos:l,x1:n,y1:t,x2:i,y2:e,c:r}),[o,u,c,A]=yf({sourceX:i,sourceY:e,targetX:n,targetY:t,sourceControlX:h,sourceControlY:p,targetControlX:k,targetControlY:d});return[`M${i},${e} C${h},${p} ${k},${d} ${n},${t}`,o,u,c,A]}function hB({pos:s,x1:i,y1:e,x2:a,y2:n}){let t,l;switch(s){case Fs.Left:case Fs.Right:t=.5*(i+a),l=e;break;case Fs.Top:case Fs.Bottom:t=i,l=.5*(e+n);break}return[t,l]}function mf(s){const{sourceX:i,sourceY:e,sourcePosition:a=Fs.Bottom,targetX:n,targetY:t,targetPosition:l=Fs.Top}=s,[r,h]=hB({pos:a,x1:i,y1:e,x2:n,y2:t}),[p,k]=hB({pos:l,x1:n,y1:t,x2:i,y2:e}),[d,o,u,c]=yf({sourceX:i,sourceY:e,targetX:n,targetY:t,sourceControlX:r,sourceControlY:h,targetControlX:p,targetControlY:k});return[`M${i},${e} C${r},${h} ${p},${k} ${n},${t}`,d,o,u,c]}const pB={[Fs.Left]:{x:-1,y:0},[Fs.Right]:{x:1,y:0},[Fs.Top]:{x:0,y:-1},[Fs.Bottom]:{x:0,y:1}};function TO({source:s,sourcePosition:i=Fs.Bottom,target:e}){return i===Fs.Left||i===Fs.Right?s.x<e.x?{x:1,y:0}:{x:-1,y:0}:s.y<e.y?{x:0,y:1}:{x:0,y:-1}}function kB(s,i){return Math.sqrt((i.x-s.x)**2+(i.y-s.y)**2)}function SO({source:s,sourcePosition:i=Fs.Bottom,target:e,targetPosition:a=Fs.Top,center:n,offset:t}){const l=pB[i],r=pB[a],h={x:s.x+l.x*t,y:s.y+l.y*t},p={x:e.x+r.x*t,y:e.y+r.y*t},k=TO({source:h,sourcePosition:i,target:p}),d=k.x!==0?"x":"y",o=k[d];let u,c,A;const g={x:0,y:0},f={x:0,y:0},[m,y,v,_]=Af({sourceX:s.x,sourceY:s.y,targetX:e.x,targetY:e.y});if(l[d]*r[d]===-1){c=n.x??m,A=n.y??y;const N=[{x:c,y:h.y},{x:c,y:p.y}],T=[{x:h.x,y:A},{x:p.x,y:A}];l[d]===o?u=d==="x"?N:T:u=d==="x"?T:N}else{const N=[{x:h.x,y:p.y}],T=[{x:p.x,y:h.y}];if(d==="x"?u=l.x===o?T:N:u=l.y===o?N:T,i===a){const z=Math.abs(s[d]-e[d]);if(z<=t){const b=Math.min(t-1,t-z);l[d]===o?g[d]=(h[d]>s[d]?-1:1)*b:f[d]=(p[d]>e[d]?-1:1)*b}}if(i!==a){const z=d==="x"?"y":"x",b=l[d]===r[z],$=h[z]>p[z],R=h[z]<p[z];(l[d]===1&&(!b&&$||b&&R)||l[d]!==1&&(!b&&R||b&&$))&&(u=d==="x"?N:T)}const C={x:h.x+g.x,y:h.y+g.y},I={x:p.x+f.x,y:p.y+f.y},O=Math.max(Math.abs(C.x-u[0].x),Math.abs(I.x-u[0].x)),w=Math.max(Math.abs(C.y-u[0].y),Math.abs(I.y-u[0].y));O>=w?(c=(C.x+I.x)/2,A=u[0].y):(c=u[0].x,A=(C.y+I.y)/2)}return[[s,{x:h.x+g.x,y:h.y+g.y},...u,{x:p.x+f.x,y:p.y+f.y},e],c,A,v,_]}function IO(s,i,e,a){const n=Math.min(kB(s,i)/2,kB(i,e)/2,a),{x:t,y:l}=i;if(s.x===t&&t===e.x||s.y===l&&l===e.y)return`L${t} ${l}`;if(s.y===l){const p=s.x<e.x?-1:1,k=s.y<e.y?1:-1;return`L ${t+n*p},${l}Q ${t},${l} ${t},${l+n*k}`}const r=s.x<e.x?1:-1,h=s.y<e.y?-1:1;return`L ${t},${l+n*h}Q ${t},${l} ${t+n*r},${l}`}function $o(s){const{sourceX:i,sourceY:e,sourcePosition:a=Fs.Bottom,targetX:n,targetY:t,targetPosition:l=Fs.Top,borderRadius:r=5,centerX:h,centerY:p,offset:k=20}=s,[d,o,u,c,A]=SO({source:{x:i,y:e},sourcePosition:a,target:{x:n,y:t},targetPosition:l,center:{x:h,y:p},offset:k});return[d.reduce((f,m,y)=>{let v;return y>0&&y<d.length-1?v=IO(d[y-1],m,d[y+1],r):v=`${y===0?"M":"L"}${m.x} ${m.y}`,f+=v,f},""),o,u,c,A]}function RO(s){const{sourceX:i,sourceY:e,targetX:a,targetY:n}=s,[t,l,r,h]=Af({sourceX:i,sourceY:e,targetX:a,targetY:n});return[`M ${i},${e}L ${a},${n}`,t,l,r,h]}const OO=ts({name:"StraightEdge",props:["label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","markerEnd","markerStart","interactionWidth"],compatConfig:{MODE:3},setup(s,{attrs:i}){return()=>{const[e,a,n]=RO(s);return B(Rp,{path:e,labelX:a,labelY:n,...i,...s})}}}),PO=OO,LO=ts({name:"SmoothStepEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","borderRadius","markerEnd","markerStart","interactionWidth","offset"],compatConfig:{MODE:3},setup(s,{attrs:i}){return()=>{const[e,a,n]=$o({...s,sourcePosition:s.sourcePosition??Fs.Bottom,targetPosition:s.targetPosition??Fs.Top});return B(Rp,{path:e,labelX:a,labelY:n,...i,...s})}}}),vf=LO,NO=ts({name:"StepEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","markerEnd","markerStart","interactionWidth"],setup(s,{attrs:i}){return()=>B(vf,{...s,...i,borderRadius:0})}}),MO=NO,VO=ts({name:"BezierEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","curvature","markerEnd","markerStart","interactionWidth"],compatConfig:{MODE:3},setup(s,{attrs:i}){return()=>{const[e,a,n]=ff({...s,sourcePosition:s.sourcePosition??Fs.Bottom,targetPosition:s.targetPosition??Fs.Top});return B(Rp,{path:e,labelX:a,labelY:n,...i,...s})}}}),$O=VO,zO=ts({name:"SimpleBezierEdge",props:["sourcePosition","targetPosition","label","labelStyle","labelShowBg","labelBgStyle","labelBgPadding","labelBgBorderRadius","sourceY","sourceX","targetX","targetY","markerEnd","markerStart","interactionWidth"],compatConfig:{MODE:3},setup(s,{attrs:i}){return()=>{const[e,a,n]=mf({...s,sourcePosition:s.sourcePosition??Fs.Bottom,targetPosition:s.targetPosition??Fs.Top});return B(Rp,{path:e,labelX:a,labelY:n,...i,...s})}}}),qO=zO,HO={input:vO,default:fO,output:mO},jO={default:$O,straight:PO,step:MO,smoothstep:vf,simplebezier:qO};function UO(s,i,e){const a=V(()=>A=>i.value.get(A)),n=V(()=>A=>e.value.get(A)),t=V(()=>{const A={...jO,...s.edgeTypes},g=Object.keys(A);for(const f of s.edges)f.type&&!g.includes(f.type)&&(A[f.type]=f.type);return A}),l=V(()=>{const A={...HO,...s.nodeTypes},g=Object.keys(A);for(const f of s.nodes)f.type&&!g.includes(f.type)&&(A[f.type]=f.type);return A}),r=V(()=>s.onlyRenderVisibleElements?ef(s.nodes,{x:0,y:0,width:s.dimensions.width,height:s.dimensions.height},s.viewport,!0):s.nodes),h=V(()=>{if(s.onlyRenderVisibleElements){const A=[];for(const g of s.edges){const f=i.value.get(g.source),m=i.value.get(g.target);HR({sourcePos:f.computedPosition||{x:0,y:0},targetPos:m.computedPosition||{x:0,y:0},sourceWidth:f.dimensions.width,sourceHeight:f.dimensions.height,targetWidth:m.dimensions.width,targetHeight:m.dimensions.height,width:s.dimensions.width,height:s.dimensions.height,viewport:s.viewport})&&A.push(g)}return A}return s.edges}),p=V(()=>[...r.value,...h.value]),k=V(()=>{const A=[];for(const g of s.nodes)g.selected&&A.push(g);return A}),d=V(()=>{const A=[];for(const g of s.edges)g.selected&&A.push(g);return A}),o=V(()=>[...k.value,...d.value]),u=V(()=>{const A=[];for(const g of s.nodes)g.dimensions.width&&g.dimensions.height&&g.handleBounds!==void 0&&A.push(g);return A}),c=V(()=>r.value.length>0&&u.value.length===r.value.length);return{getNode:a,getEdge:n,getElements:p,getEdgeTypes:t,getNodeTypes:l,getEdges:h,getNodes:r,getSelectedElements:o,getSelectedNodes:k,getSelectedEdges:d,getNodesInitialized:u,areNodesInitialized:c}}let GO=class qn{constructor(){this.currentId=0,this.flows=new Map}static getInstance(){var i;const e=(i=pe())==null?void 0:i.appContext.app,a=(e==null?void 0:e.config.globalProperties.$vueFlowStorage)??qn.instance;return qn.instance=a??new qn,e&&(e.config.globalProperties.$vueFlowStorage=qn.instance),qn.instance}set(i,e){return this.flows.set(i,e)}get(i){return this.flows.get(i)}remove(i){return this.flows.delete(i)}create(i,e){const a=Bf(),n=Ya(a),t={};for(const[o,u]of Object.entries(n.hooks)){const c=`on${o.charAt(0).toUpperCase()+o.slice(1)}`;t[c]=u.on}const l={};for(const[o,u]of Object.entries(n.hooks))l[o]=u.trigger;const r=V(()=>{const o=new Map;for(const u of n.nodes)o.set(u.id,u);return o}),h=V(()=>{const o=new Map;for(const u of n.edges)o.set(u.id,u);return o}),p=UO(n,r,h),k=BO(n,r,h);k.setState({...n,...e});const d={...t,...p,...k,...Ux(n),nodeLookup:r,edgeLookup:h,emits:l,id:i,vueFlowVersion:"1.42.1",$destroy:()=>{this.remove(i)}};return this.set(i,d),d}getId(){return`vue-flow-${this.currentId++}`}};function Ks(s){const i=GO.getInstance(),e=Zh(),a=typeof s=="object",n=a?s:{id:s},t=n.id,l=t??(e==null?void 0:e.vueFlowId);let r;if(e){const h=Ns(lB,null);typeof h<"u"&&h!==null&&(!l||h.id===l)&&(r=h)}if(r||l&&(r=i.get(l)),!r||l&&r.id!==l){const h=t??i.getId(),p=i.create(h,n);r=p,(e??JA(!0)).run(()=>{bs(p.applyDefault,(d,o,u)=>{const c=g=>{p.applyNodeChanges(g)},A=g=>{p.applyEdgeChanges(g)};d?(p.onNodesChange(c),p.onEdgesChange(A)):(p.hooks.value.nodesChange.off(c),p.hooks.value.edgesChange.off(A)),u(()=>{p.hooks.value.nodesChange.off(c),p.hooks.value.edgesChange.off(A)})},{immediate:!0}),vp(()=>{if(r){const d=i.get(r.id);d?d.$destroy():wp(`No store instance found for id ${r.id} in storage.`)}})})}else a&&r.setState(n);if(e&&(Di(lB,r),e.vueFlowId=r.id),a){const h=pe();(h==null?void 0:h.type.name)!=="VueFlow"&&r.emits.error(new vi(ui.USEVUEFLOW_OPTIONS))}return r}function WO(s){const{emits:i,dimensions:e}=Ks();let a;ws(()=>{const n=s.value,t=()=>{if(!n)return;const l=_p(n);(l.width===0||l.height===0)&&i.error(new vi(ui.MISSING_VIEWPORT_DIMENSIONS)),e.value={width:l.width||500,height:l.height||500}};t(),window.addEventListener("resize",t),n&&(a=new ResizeObserver(()=>t()),a.observe(n)),Dt(()=>{window.removeEventListener("resize",t),a&&n&&a.unobserve(n)})})}const KO={name:"UserSelection",compatConfig:{MODE:3}},YO=ts({...KO,props:{userSelectionRect:{}},setup(s){return(i,e)=>(hs(),us("div",{class:"vue-flow__selection vue-flow__container",style:gi({width:`${i.userSelectionRect.width}px`,height:`${i.userSelectionRect.height}px`,transform:`translate(${i.userSelectionRect.x}px, ${i.userSelectionRect.y}px)`})},null,4))}}),XO=["tabIndex"],ZO={name:"NodesSelection",compatConfig:{MODE:3}},JO=ts({...ZO,setup(s){const{emits:i,viewport:e,getSelectedNodes:a,noPanClassName:n,disableKeyboardA11y:t,userSelectionActive:l}=Ks(),r=gf(),h=Q(null),p=of({el:h,onStart(c){i.selectionDragStart(c)},onDrag(c){i.selectionDrag(c)},onStop(c){i.selectionDragStop(c)}});ws(()=>{var c;t.value||(c=h.value)==null||c.focus({preventScroll:!0})});const k=V(()=>sf(a.value)),d=V(()=>({width:`${k.value.width}px`,height:`${k.value.height}px`,top:`${k.value.y}px`,left:`${k.value.x}px`}));function o(c){i.selectionContextMenu({event:c,nodes:a.value})}function u(c){t||at[c.key]&&(c.preventDefault(),r({x:at[c.key].x,y:at[c.key].y},c.shiftKey))}return(c,A)=>!ms(l)&&k.value.width&&k.value.height?(hs(),us("div",{key:0,class:Ps(["vue-flow__nodesselection vue-flow__container",ms(n)]),style:gi({transform:`translate(${ms(e).x}px,${ms(e).y}px) scale(${ms(e).zoom})`})},[G("div",{ref_key:"el",ref:h,class:Ps([{dragging:ms(p)},"vue-flow__nodesselection-rect"]),style:gi(d.value),tabIndex:ms(t)?void 0:-1,onContextmenu:o,onKeydown:u},null,46,XO)],6)):ys("",!0)}});function QO(s,i){return{x:s.clientX-i.left,y:s.clientY-i.top}}const sP={name:"Pane",compatConfig:{MODE:3}},iP=ts({...sP,props:{isSelecting:{type:Boolean},selectionKeyPressed:{type:Boolean}},setup(s){const{vueFlowRef:i,nodes:e,viewport:a,emits:n,userSelectionActive:t,removeSelectedElements:l,userSelectionRect:r,elementsSelectable:h,nodesSelectionActive:p,getSelectedEdges:k,getSelectedNodes:d,removeNodes:o,removeEdges:u,selectionMode:c,deleteKeyCode:A,multiSelectionKeyCode:g,multiSelectionActive:f,edgeLookup:m,nodeLookup:y,connectionLookup:v,defaultEdgeOptions:_}=Ks(),S=Q(null),N=Q(new Set),T=Q(new Set),C=Q(),I=Ms(()=>h.value&&(s.isSelecting||t.value));let O=!1,w=!1;const z=ul(A,{actInsideInputWithModifier:!1}),b=ul(g);bs(z,es=>{es&&(o(d.value),u(k.value),p.value=!1)}),bs(b,es=>{f.value=es});function $(es,q){return U=>{U.target===q&&(es==null||es(U))}}function R(es){if(O){O=!1;return}n.paneClick(es),l(),p.value=!1}function M(es){es.preventDefault(),es.stopPropagation(),n.paneContextMenu(es)}function W(es){n.paneScroll(es)}function Y(es){var q,U,K;if(C.value=(q=i.value)==null?void 0:q.getBoundingClientRect(),!h.value||!s.isSelecting||es.button!==0||es.target!==S.value||!C.value)return;(K=(U=es.target)==null?void 0:U.setPointerCapture)==null||K.call(U,es.pointerId);const{x:rs,y:j}=QO(es,C.value);w=!0,O=!1,l(),r.value={width:0,height:0,startX:rs,startY:j,x:rs,y:j},n.selectionStart(es)}function ls(es){var q;if(!C.value||!r.value)return;O=!0;const{x:U,y:K}=Ka(es,C.value),{startX:rs=0,startY:j=0}=r.value,J={startX:rs,startY:j,x:U<rs?U:rs,y:K<j?K:j,width:Math.abs(U-rs),height:Math.abs(K-j)},Z=N.value,ks=T.value;N.value=new Set(ef(e.value,J,a.value,c.value===uc.Partial,!0).map(X=>X.id)),T.value=new Set;const cs=((q=_.value)==null?void 0:q.selectable)??!0;for(const X of N.value){const x=v.value.get(X);if(x)for(const{edgeId:E}of x.values()){const D=m.value.get(E);D&&(D.selectable??cs)&&T.value.add(E)}}if(!tB(Z,N.value)){const X=$a(y.value,N.value,!0);n.nodesChange(X)}if(!tB(ks,T.value)){const X=$a(m.value,T.value);n.edgesChange(X)}r.value=J,t.value=!0,p.value=!1}function ps(es){var q;es.button!==0||!w||((q=es.target)==null||q.releasePointerCapture(es.pointerId),!t.value&&r.value&&es.target===S.value&&R(es),t.value=!1,r.value=null,p.value=N.value.size>0,n.selectionEnd(es),s.selectionKeyPressed&&(O=!1),w=!1)}return(es,q)=>(hs(),us("div",{ref_key:"container",ref:S,class:Ps(["vue-flow__pane vue-flow__container",{selection:es.isSelecting}]),onClick:q[0]||(q[0]=U=>I.value?void 0:$(R,S.value)(U)),onContextmenu:q[1]||(q[1]=U=>$(M,S.value)(U)),onWheelPassive:q[2]||(q[2]=U=>$(W,S.value)(U)),onPointerenter:q[3]||(q[3]=U=>I.value?void 0:ms(n).paneMouseEnter(U)),onPointerdown:q[4]||(q[4]=U=>I.value?Y(U):ms(n).paneMouseMove(U)),onPointermove:q[5]||(q[5]=U=>I.value?ls(U):ms(n).paneMouseMove(U)),onPointerup:q[6]||(q[6]=U=>I.value?ps(U):void 0),onPointerleave:q[7]||(q[7]=U=>ms(n).paneMouseLeave(U))},[ee(es.$slots,"default"),ms(t)&&ms(r)?(hs(),ri(YO,{key:0,"user-selection-rect":ms(r)},null,8,["user-selection-rect"])):ys("",!0),ms(p)&&ms(d).length?(hs(),ri(JO,{key:1})):ys("",!0)],34))}}),eP={name:"Transform",compatConfig:{MODE:3}},aP=ts({...eP,setup(s){const{viewport:i,fitViewOnInit:e,fitViewOnInitDone:a}=Ks(),n=V(()=>e.value?!a.value:!1),t=V(()=>`translate(${i.value.x}px,${i.value.y}px) scale(${i.value.zoom})`);return(l,r)=>(hs(),us("div",{class:"vue-flow__transformationpane vue-flow__container",style:gi({transform:t.value,opacity:n.value?0:void 0})},[ee(l.$slots,"default")],4))}}),nP={name:"Viewport",compatConfig:{MODE:3}},tP=ts({...nP,setup(s){const{minZoom:i,maxZoom:e,defaultViewport:a,translateExtent:n,zoomActivationKeyCode:t,selectionKeyCode:l,panActivationKeyCode:r,panOnScroll:h,panOnScrollMode:p,panOnScrollSpeed:k,panOnDrag:d,zoomOnDoubleClick:o,zoomOnPinch:u,zoomOnScroll:c,preventScrolling:A,noWheelClassName:g,noPanClassName:f,emits:m,connectionStartHandle:y,userSelectionActive:v,paneDragging:_,d3Zoom:S,d3Selection:N,d3ZoomHandler:T,viewport:C,viewportRef:I,paneClickDistance:O}=Ks();WO(I);const w=Q(!1),z=Q(!1);let b=null,$=!1,R=0,M={x:0,y:0,zoom:0};const W=ul(r),Y=ul(l),ls=ul(t),ps=Ms(()=>(!Y.value||Y.value&&l.value===!0)&&(W.value||d.value)),es=Ms(()=>W.value||h.value),q=Ms(()=>Y.value||l.value===!0&&ps.value!==!0);ws(()=>{if(!I.value){wp("Viewport element is missing");return}const Z=I.value,ks=Z.getBoundingClientRect(),cs=_R().clickDistance(O.value).scaleExtent([i.value,e.value]).translateExtent(n.value),X=fe(Z).call(cs),x=X.on("wheel.zoom"),E=yt.translate(a.value.x??0,a.value.y??0).scale(Sn(a.value.zoom??1,i.value,e.value)),D=[[0,0],[ks.width,ks.height]],P=cs.constrain()(E,D,n.value);cs.transform(X,P),cs.wheelDelta(K),S.value=cs,N.value=X,T.value=x,C.value={x:P.x,y:P.y,zoom:P.k},cs.on("start",L=>{var H;if(!L.sourceEvent)return null;R=L.sourceEvent.button,w.value=!0;const is=j(L.transform);((H=L.sourceEvent)==null?void 0:H.type)==="mousedown"&&(_.value=!0),M=is,m.viewportChangeStart(is),m.moveStart({event:L,flowTransform:is})}),cs.on("end",L=>{if(!L.sourceEvent)return null;if(w.value=!1,_.value=!1,U(ps.value,R??0)&&!$&&m.paneContextMenu(L.sourceEvent),$=!1,rs(M,L.transform)){const H=j(L.transform);M=H,m.viewportChangeEnd(H),m.moveEnd({event:L,flowTransform:H})}}),cs.filter(L=>{var H;const is=ls.value||c.value,as=u.value&&L.ctrlKey,ss=L.button;if(ss===1&&L.type==="mousedown"&&(J(L,"vue-flow__node")||J(L,"vue-flow__edge")))return!0;if(!ps.value&&!is&&!es.value&&!o.value&&!u.value||v.value||!o.value&&L.type==="dblclick"||J(L,g.value)&&L.type==="wheel"||J(L,f.value)&&(L.type!=="wheel"||es.value&&L.type==="wheel"&&!ls.value)||!u.value&&L.ctrlKey&&L.type==="wheel"||!is&&!es.value&&!as&&L.type==="wheel")return!1;if(!u&&L.type==="touchstart"&&((H=L.touches)==null?void 0:H.length)>1)return L.preventDefault(),!1;if(!ps.value&&(L.type==="mousedown"||L.type==="touchstart")||l.value===!0&&Array.isArray(d.value)&&d.value.includes(0)&&ss===0||Array.isArray(d.value)&&!d.value.includes(ss)&&(L.type==="mousedown"||L.type==="touchstart"))return!1;const ns=Array.isArray(d.value)&&d.value.includes(ss)||l.value===!0&&Array.isArray(d.value)&&!d.value.includes(0)||!ss||ss<=1;return(!L.ctrlKey||W.value||L.type==="wheel")&&ns}),bs([v,ps],()=>{v.value&&!w.value?cs.on("zoom",null):v.value||cs.on("zoom",L=>{C.value={x:L.transform.x,y:L.transform.y,zoom:L.transform.k};const H=j(L.transform);$=U(ps.value,R??0),m.viewportChange(H),m.move({event:L,flowTransform:H})})},{immediate:!0}),bs([v,es,p,ls,u,A,g],()=>{es.value&&!ls.value&&!v.value?X.on("wheel.zoom",L=>{if(J(L,g.value))return!1;const H=ls.value||c.value,is=u.value&&L.ctrlKey;if(!(!A.value||es.value||H||is))return!1;L.preventDefault(),L.stopImmediatePropagation();const ss=X.property("__zoom").k||1,ns=Mh();if(!W.value&&L.ctrlKey&&u.value&&ns){const Ss=Me(L),Xs=K(L),$s=ss*2**Xs;cs.scaleTo(X,$s,Ss,L);return}const gs=L.deltaMode===1?20:1;let ds=p.value===ol.Vertical?0:L.deltaX*gs,As=p.value===ol.Horizontal?0:L.deltaY*gs;!ns&&L.shiftKey&&p.value!==ol.Vertical&&!ds&&As&&(ds=As,As=0),cs.translateBy(X,-(ds/ss)*k.value,-(As/ss)*k.value);const Cs=j(X.property("__zoom"));b&&clearTimeout(b),z.value?(m.move({event:L,flowTransform:Cs}),m.viewportChange(Cs),b=setTimeout(()=>{m.moveEnd({event:L,flowTransform:Cs}),m.viewportChangeEnd(Cs),z.value=!1},150)):(z.value=!0,m.moveStart({event:L,flowTransform:Cs}),m.viewportChangeStart(Cs))},{passive:!1}):typeof x<"u"&&X.on("wheel.zoom",function(L,H){const is=!A.value&&L.type==="wheel"&&!L.ctrlKey,as=ls.value||c.value,ss=u.value&&L.ctrlKey;if(!as&&!h.value&&!ss&&L.type==="wheel"||is||J(L,g.value))return null;L.preventDefault(),x.call(this,L,H)},{passive:!1})},{immediate:!0})});function U(Z,ks){return ks===2&&Array.isArray(Z)&&Z.includes(2)}function K(Z){const ks=Z.ctrlKey&&Mh()?10:1;return-Z.deltaY*(Z.deltaMode===1?.05:Z.deltaMode?1:.002)*ks}function rs(Z,ks){return Z.x!==ks.x&&!Number.isNaN(ks.x)||Z.y!==ks.y&&!Number.isNaN(ks.y)||Z.zoom!==ks.k&&!Number.isNaN(ks.k)}function j(Z){return{x:Z.x,y:Z.y,zoom:Z.k}}function J(Z,ks){return Z.target.closest(`.${ks}`)}return(Z,ks)=>(hs(),us("div",{ref_key:"viewportRef",ref:I,class:"vue-flow__viewport vue-flow__container"},[Bs(iP,{"is-selecting":q.value,"selection-key-pressed":ms(Y),class:Ps({connecting:!!ms(y),dragging:ms(_),draggable:ms(d)===!0||Array.isArray(ms(d))&&ms(d).includes(0)})},{default:Hs(()=>[Bs(aP,null,{default:Hs(()=>[ee(Z.$slots,"default")]),_:3})]),_:3},8,["is-selecting","selection-key-pressed","class"])],512))}}),lP=["id"],rP=["id"],hP=["id"],pP={name:"A11yDescriptions",compatConfig:{MODE:3}},kP=ts({...pP,setup(s){const{id:i,disableKeyboardA11y:e,ariaLiveMessage:a}=Ks();return(n,t)=>(hs(),us(Ds,null,[G("div",{id:`${ms(G6)}-${ms(i)}`,style:{display:"none"}}," Press enter or space to select a node. "+Ls(ms(e)?"":"You can then use the arrow keys to move the node around.")+" You can then use the arrow keys to move the node around, press delete to remove it and press escape to cancel. ",9,lP),G("div",{id:`${ms(W6)}-${ms(i)}`,style:{display:"none"}}," Press enter or space to select an edge. You can then press delete to remove it or press escape to cancel. ",8,rP),ms(e)?ys("",!0):(hs(),us("div",{key:0,id:`${ms(TR)}-${ms(i)}`,"aria-live":"assertive","aria-atomic":"true",style:{position:"absolute",width:"1px",height:"1px",margin:"-1px",border:"0",padding:"0",overflow:"hidden",clip:"rect(0px, 0px, 0px, 0px)","clip-path":"inset(100%)"}},Ls(ms(a)),9,hP))],64))}});function dP(){const s=Ks();bs(()=>s.viewportHelper.value.viewportInitialized,i=>{i&&setTimeout(()=>{s.emits.init(s),s.emits.paneReady(s)},1)})}function oP(s,i,e){return e===Fs.Left?s-i:e===Fs.Right?s+i:s}function uP(s,i,e){return e===Fs.Top?s-i:e===Fs.Bottom?s+i:s}const Bc=function({radius:s=10,centerX:i=0,centerY:e=0,position:a=Fs.Top,type:n}){return B("circle",{class:`vue-flow__edgeupdater vue-flow__edgeupdater-${n}`,cx:oP(i,s,a),cy:uP(e,s,a),r:s,stroke:"transparent",fill:"transparent"})};Bc.props=["radius","centerX","centerY","position","type"];Bc.compatConfig={MODE:3};const dB=Bc,cP=ts({name:"Edge",compatConfig:{MODE:3},props:["id"],setup(s){const{id:i,addSelectedEdges:e,connectionMode:a,edgeUpdaterRadius:n,emits:t,nodesSelectionActive:l,noPanClassName:r,getEdgeTypes:h,removeSelectedEdges:p,findEdge:k,findNode:d,isValidConnection:o,multiSelectionActive:u,disableKeyboardA11y:c,elementsSelectable:A,edgesUpdatable:g,edgesFocusable:f,hooks:m}=Ks(),y=V(()=>k(s.id)),{emit:v,on:_}=tO(y.value,t),S=Ns(xp),N=pe(),T=Q(!1),C=Q(!1),I=Q(""),O=Q(null),w=Q("source"),z=Q(null),b=Ms(()=>typeof y.value.selectable>"u"?A.value:y.value.selectable),$=Ms(()=>typeof y.value.updatable>"u"?g.value:y.value.updatable),R=Ms(()=>typeof y.value.focusable>"u"?f.value:y.value.focusable);Di(eO,s.id),Di(aO,z);const M=V(()=>y.value.class instanceof Function?y.value.class(y.value):y.value.class),W=V(()=>y.value.style instanceof Function?y.value.style(y.value):y.value.style),Y=V(()=>{const D=y.value.type||"default",P=S==null?void 0:S[`edge-${D}`];if(P)return P;let L=y.value.template??h.value[D];if(typeof L=="string"&&N){const H=Object.keys(N.appContext.components);H&&H.includes(D)&&(L=Ws(D,!1))}return L&&typeof L!="string"?L:(t.error(new vi(ui.EDGE_TYPE_MISSING,L)),!1)}),{handlePointerDown:ls}=uf({nodeId:I,handleId:O,type:w,isValidConnection:o,edgeUpdaterType:w,onEdgeUpdate:q,onEdgeUpdateEnd:U});return()=>{const D=d(y.value.source),P=d(y.value.target),L="pathOptions"in y.value?y.value.pathOptions:{};if(!D&&!P)return t.error(new vi(ui.EDGE_SOURCE_TARGET_MISSING,y.value.id,y.value.source,y.value.target)),null;if(!D)return t.error(new vi(ui.EDGE_SOURCE_MISSING,y.value.id,y.value.source)),null;if(!P)return t.error(new vi(ui.EDGE_TARGET_MISSING,y.value.id,y.value.target)),null;if(!y.value||y.value.hidden||D.hidden||P.hidden)return null;let H;a.value===Qa.Strict?H=D.handleBounds.source:H=[...D.handleBounds.source||[],...D.handleBounds.target||[]];const is=Q0(H,y.value.sourceHandle);let as;a.value===Qa.Strict?as=P.handleBounds.target:as=[...P.handleBounds.target||[],...P.handleBounds.source||[]];const ss=Q0(as,y.value.targetHandle),ns=(is==null?void 0:is.position)||Fs.Bottom,gs=(ss==null?void 0:ss.position)||Fs.Top,{x:ds,y:As}=ft(D,is,ns),{x:Cs,y:Ss}=ft(P,ss,gs);return y.value.sourceX=ds,y.value.sourceY=As,y.value.targetX=Cs,y.value.targetY=Ss,B("g",{ref:z,key:s.id,"data-id":s.id,class:["vue-flow__edge",`vue-flow__edge-${Y.value===!1?"default":y.value.type||"default"}`,r.value,M.value,{updating:T.value,selected:y.value.selected,animated:y.value.animated,inactive:!b.value&&!m.value.edgeClick.hasListeners()}],onClick:rs,onContextmenu:j,onDblclick:J,onMouseenter:Z,onMousemove:ks,onMouseleave:cs,onKeyDown:R.value?E:void 0,tabIndex:R.value?0:void 0,"aria-label":y.value.ariaLabel===null?void 0:y.value.ariaLabel||`Edge from ${y.value.source} to ${y.value.target}`,"aria-describedby":R.value?`${W6}-${i}`:void 0,role:R.value?"button":"img"},[C.value?null:B(Y.value===!1?h.value.default:Y.value,{id:s.id,sourceNode:D,targetNode:P,source:y.value.source,target:y.value.target,type:y.value.type,updatable:$.value,selected:y.value.selected,animated:y.value.animated,label:y.value.label,labelStyle:y.value.labelStyle,labelShowBg:y.value.labelShowBg,labelBgStyle:y.value.labelBgStyle,labelBgPadding:y.value.labelBgPadding,labelBgBorderRadius:y.value.labelBgBorderRadius,data:y.value.data,events:{...y.value.events,..._},style:W.value,markerStart:`url('#${Vl(y.value.markerStart,i)}')`,markerEnd:`url('#${Vl(y.value.markerEnd,i)}')`,sourcePosition:ns,targetPosition:gs,sourceX:ds,sourceY:As,targetX:Cs,targetY:Ss,sourceHandleId:y.value.sourceHandle,targetHandleId:y.value.targetHandle,interactionWidth:y.value.interactionWidth,...L}),[$.value==="source"||$.value===!0?[B("g",{onMousedown:X,onMouseenter:ps,onMouseout:es},B(dB,{position:ns,centerX:ds,centerY:As,radius:n.value,type:"source","data-type":"source"}))]:null,$.value==="target"||$.value===!0?[B("g",{onMousedown:x,onMouseenter:ps,onMouseout:es},B(dB,{position:gs,centerX:Cs,centerY:Ss,radius:n.value,type:"target","data-type":"target"}))]:null]])};function ps(){T.value=!0}function es(){T.value=!1}function q(D,P){v.update({event:D,edge:y.value,connection:P})}function U(D){v.updateEnd({event:D,edge:y.value}),C.value=!1}function K(D,P){D.button===0&&(C.value=!0,I.value=P?y.value.target:y.value.source,O.value=(P?y.value.targetHandle:y.value.sourceHandle)??"",w.value=P?"target":"source",v.updateStart({event:D,edge:y.value}),ls(D))}function rs(D){var P;const L={event:D,edge:y.value};b.value&&(l.value=!1,y.value.selected&&u.value?(p([y.value]),(P=z.value)==null||P.blur()):e([y.value])),v.click(L)}function j(D){v.contextMenu({event:D,edge:y.value})}function J(D){v.doubleClick({event:D,edge:y.value})}function Z(D){v.mouseEnter({event:D,edge:y.value})}function ks(D){v.mouseMove({event:D,edge:y.value})}function cs(D){v.mouseLeave({event:D,edge:y.value})}function X(D){K(D,!0)}function x(D){K(D,!1)}function E(D){var P;!c.value&&K6.includes(D.key)&&b.value&&(D.key==="Escape"?((P=z.value)==null||P.blur(),p([k(s.id)])):e([k(s.id)]))}}}),gP=cP,BP=ts({name:"ConnectionLine",compatConfig:{MODE:3},setup(){var s;const{id:i,connectionMode:e,connectionStartHandle:a,connectionEndHandle:n,connectionPosition:t,connectionLineType:l,connectionLineStyle:r,connectionLineOptions:h,connectionStatus:p,viewport:k,findNode:d}=Ks(),o=(s=Ns(xp))==null?void 0:s["connection-line"],u=V(()=>{var m;return d((m=a.value)==null?void 0:m.nodeId)}),c=V(()=>{var m;return d((m=n.value)==null?void 0:m.nodeId)??null}),A=V(()=>({x:(t.value.x-k.value.x)/k.value.zoom,y:(t.value.y-k.value.y)/k.value.zoom})),g=V(()=>h.value.markerStart?`url(#${Vl(h.value.markerStart,i)})`:""),f=V(()=>h.value.markerEnd?`url(#${Vl(h.value.markerEnd,i)})`:"");return()=>{var m,y,v;if(!u.value||!a.value)return null;const _=a.value.id,S=a.value.type,N=u.value.handleBounds;let T=(N==null?void 0:N[S])||[];if(e.value===Qa.Loose){const W=(N==null?void 0:N[S==="source"?"target":"source"])||[];T=[...T,...W]}if(!T)return null;const C=(_?T.find(W=>W.id===_):T[0])??null,I=(C==null?void 0:C.position)||Fs.Top,{x:O,y:w}=ft(u.value,C,I);let z=null;c.value&&(e.value===Qa.Strict?z=((m=c.value.handleBounds[S==="source"?"target":"source"])==null?void 0:m.find(W=>{var Y;return W.id===((Y=n.value)==null?void 0:Y.id)}))||null:z=((y=[...c.value.handleBounds.source||[],...c.value.handleBounds.target||[]])==null?void 0:y.find(W=>{var Y;return W.id===((Y=n.value)==null?void 0:Y.id)}))||null);const b=((v=n.value)==null?void 0:v.position)??(I?Mo[I]:null);if(!I||!b)return null;const $=l.value??h.value.type??cn.Bezier;let R="";const M={sourceX:O,sourceY:w,sourcePosition:I,targetX:A.value.x,targetY:A.value.y,targetPosition:b};return $===cn.Bezier?[R]=ff(M):$===cn.Step?[R]=$o({...M,borderRadius:0}):$===cn.SmoothStep?[R]=$o(M):$===cn.SimpleBezier?[R]=mf(M):R=`M${O},${w} ${A.value.x},${A.value.y}`,B("svg",{class:"vue-flow__edges vue-flow__connectionline vue-flow__container"},B("g",{class:"vue-flow__connection"},o?B(o,{sourceX:O,sourceY:w,sourcePosition:I,targetX:A.value.x,targetY:A.value.y,targetPosition:b,sourceNode:u.value,sourceHandle:C,targetNode:c.value,targetHandle:z,markerEnd:f.value,markerStart:g.value,connectionStatus:p.value}):B("path",{d:R,class:[h.value.class,p,"vue-flow__connection-path"],style:{...r.value,...h.value.style},"marker-end":f.value,"marker-start":g.value})))}}}),AP=BP,yP=["id","markerWidth","markerHeight","markerUnits","orient"],fP={name:"MarkerType",compatConfig:{MODE:3}},mP=ts({...fP,props:{id:{},type:{},color:{default:"none"},width:{default:12.5},height:{default:12.5},markerUnits:{default:"strokeWidth"},orient:{default:"auto-start-reverse"},strokeWidth:{default:1}},setup(s){return(i,e)=>(hs(),us("marker",{id:i.id,class:"vue-flow__arrowhead",viewBox:"-10 -10 20 20",refX:"0",refY:"0",markerWidth:`${i.width}`,markerHeight:`${i.height}`,markerUnits:i.markerUnits,orient:i.orient},[i.type===ms(Po).ArrowClosed?(hs(),us("polyline",{key:0,style:gi({stroke:i.color,fill:i.color,strokeWidth:i.strokeWidth}),"stroke-linecap":"round","stroke-linejoin":"round",points:"-5,-4 0,0 -5,4 -5,-4"},null,4)):ys("",!0),i.type===ms(Po).Arrow?(hs(),us("polyline",{key:1,style:gi({stroke:i.color,strokeWidth:i.strokeWidth}),"stroke-linecap":"round","stroke-linejoin":"round",fill:"none",points:"-5,-4 0,0 -5,4"},null,4)):ys("",!0)],8,yP))}}),vP={class:"vue-flow__marker vue-flow__container"},FP={name:"MarkerDefinitions",compatConfig:{MODE:3}},EP=ts({...FP,setup(s){const{id:i,edges:e,connectionLineOptions:a,defaultMarkerColor:n}=Ks(),t=V(()=>{const l=new Set,r=[],h=p=>{if(p){const k=Vl(p,i);l.has(k)||(typeof p=="object"?r.push({...p,id:k,color:p.color||n.value}):r.push({id:k,color:n.value,type:p}),l.add(k))}};for(const p of[a.value.markerEnd,a.value.markerStart])h(p);for(const p of e.value)for(const k of[p.markerStart,p.markerEnd])h(k);return r.sort((p,k)=>p.id.localeCompare(k.id))});return(l,r)=>(hs(),us("svg",vP,[G("defs",null,[(hs(!0),us(Ds,null,bi(t.value,h=>(hs(),ri(mP,{id:h.id,key:h.id,type:h.type,color:h.color,width:h.width,height:h.height,markerUnits:h.markerUnits,"stroke-width":h.strokeWidth,orient:h.orient},null,8,["id","type","color","width","height","markerUnits","stroke-width","orient"]))),128))])]))}}),bP={name:"Edges",compatConfig:{MODE:3}},CP=ts({...bP,setup(s){const{findNode:i,getEdges:e,elevateEdgesOnSelect:a}=Ks();return(n,t)=>(hs(),us(Ds,null,[Bs(EP),(hs(!0),us(Ds,null,bi(ms(e),l=>(hs(),us("svg",{key:l.id,class:"vue-flow__edges vue-flow__container",style:gi({zIndex:ms(jR)(l,ms(i),ms(a))})},[Bs(ms(gP),{id:l.id},null,8,["id"])],4))),128)),Bs(ms(AP))],64))}}),_P=ts({name:"Node",compatConfig:{MODE:3},props:["id","resizeObserver"],setup(s){const{id:i,noPanClassName:e,selectNodesOnDrag:a,nodesSelectionActive:n,multiSelectionActive:t,emits:l,removeSelectedNodes:r,addSelectedNodes:h,updateNodeDimensions:p,onUpdateNodeInternals:k,getNodeTypes:d,nodeExtent:o,elevateNodesOnSelect:u,disableKeyboardA11y:c,ariaLiveMessage:A,snapToGrid:g,snapGrid:f,nodeDragThreshold:m,nodesDraggable:y,elementsSelectable:v,nodesConnectable:_,nodesFocusable:S,hooks:N}=Ks(),T=Q(null);Di(df,T),Di(kf,s.id);const C=Ns(xp),I=pe(),O=gf(),{node:w,parentNode:z}=cf(s.id),{emit:b,on:$}=pO(w,l),R=Ms(()=>typeof w.draggable>"u"?y.value:w.draggable),M=Ms(()=>typeof w.selectable>"u"?v.value:w.selectable),W=Ms(()=>typeof w.connectable>"u"?_.value:w.connectable),Y=Ms(()=>typeof w.focusable>"u"?S.value:w.focusable),ls=Ms(()=>M.value||R.value||N.value.nodeClick.hasListeners()||N.value.nodeDoubleClick.hasListeners()||N.value.nodeMouseEnter.hasListeners()||N.value.nodeMouseMove.hasListeners()||N.value.nodeMouseLeave.hasListeners()),ps=Ms(()=>!!w.dimensions.width&&!!w.dimensions.height),es=V(()=>{const P=w.type||"default",L=C==null?void 0:C[`node-${P}`];if(L)return L;let H=w.template||d.value[P];if(typeof H=="string"&&I){const is=Object.keys(I.appContext.components);is&&is.includes(P)&&(H=Ws(P,!1))}return H&&typeof H!="string"?H:(l.error(new vi(ui.NODE_TYPE_MISSING,H)),!1)}),q=of({id:s.id,el:T,disabled:()=>!R.value,selectable:M,dragHandle:()=>w.dragHandle,onStart(P){b.dragStart(P)},onDrag(P){b.drag(P)},onStop(P){b.dragStop(P)},onClick(P){E(P)}}),U=V(()=>w.class instanceof Function?w.class(w):w.class),K=V(()=>{const P=(w.style instanceof Function?w.style(w):w.style)||{},L=w.width instanceof Function?w.width(w):w.width,H=w.height instanceof Function?w.height(w):w.height;return!P.width&&L&&(P.width=typeof L=="string"?L:`${L}px`),!P.height&&H&&(P.height=typeof H=="string"?H:`${H}px`),P}),rs=Ms(()=>Number(w.zIndex??K.value.zIndex??0));return k(P=>{(P.includes(s.id)||!P.length)&&J()}),ws(()=>{bs(()=>w.hidden,(P=!1,L,H)=>{!P&&T.value&&(s.resizeObserver.observe(T.value),H(()=>{T.value&&s.resizeObserver.unobserve(T.value)}))},{immediate:!0,flush:"post"})}),bs([()=>w.type,()=>w.sourcePosition,()=>w.targetPosition],()=>{qs(()=>{p([{id:s.id,nodeElement:T.value,forceUpdate:!0}])})}),bs([()=>w.position.x,()=>w.position.y,()=>{var P;return(P=z.value)==null?void 0:P.computedPosition.x},()=>{var P;return(P=z.value)==null?void 0:P.computedPosition.y},()=>{var P;return(P=z.value)==null?void 0:P.computedPosition.z},rs,()=>w.selected,()=>w.dimensions.height,()=>w.dimensions.width,()=>{var P;return(P=z.value)==null?void 0:P.dimensions.height},()=>{var P;return(P=z.value)==null?void 0:P.dimensions.width}],([P,L,H,is,as,ss])=>{const ns={x:P,y:L,z:ss+(u.value&&w.selected?1e3:0)};typeof H<"u"&&typeof is<"u"?w.computedPosition=MR({x:H,y:is,z:as},ns):w.computedPosition=ns},{flush:"post",immediate:!0}),bs([()=>w.extent,o],([P,L],[H,is])=>{(P!==H||L!==is)&&j()}),w.extent==="parent"||typeof w.extent=="object"&&"range"in w.extent&&w.extent.range==="parent"?_o(()=>ps).toBe(!0).then(j):j(),()=>w.hidden?null:B("div",{ref:T,"data-id":w.id,class:["vue-flow__node",`vue-flow__node-${es.value===!1?"default":w.type||"default"}`,{[e.value]:R.value,dragging:q==null?void 0:q.value,draggable:R.value,selected:w.selected,selectable:M.value,parent:w.isParent},U.value],style:{visibility:ps.value?"visible":"hidden",zIndex:w.computedPosition.z??rs.value,transform:`translate(${w.computedPosition.x}px,${w.computedPosition.y}px)`,pointerEvents:ls.value?"all":"none",...K.value},tabIndex:Y.value?0:void 0,role:Y.value?"button":void 0,"aria-describedby":c.value?void 0:`${G6}-${i}`,"aria-label":w.ariaLabel,onMouseenter:Z,onMousemove:ks,onMouseleave:cs,onContextmenu:X,onClick:E,onDblclick:x,onKeydown:D},[B(es.value===!1?d.value.default:es.value,{id:w.id,type:w.type,data:w.data,events:{...w.events,...$},selected:w.selected,resizing:w.resizing,dragging:q.value,connectable:W.value,position:w.computedPosition,dimensions:w.dimensions,isValidTargetPos:w.isValidTargetPos,isValidSourcePos:w.isValidSourcePos,parent:w.parentNode,parentNodeId:w.parentNode,zIndex:w.computedPosition.z??rs.value,targetPosition:w.targetPosition,sourcePosition:w.sourcePosition,label:w.label,dragHandle:w.dragHandle,onUpdateNodeInternals:J})]);function j(){const P=w.computedPosition,{computedPosition:L,position:H}=cc(w,g.value?Dp(P,f.value):P,l.error,o.value,z.value);(w.computedPosition.x!==L.x||w.computedPosition.y!==L.y)&&(w.computedPosition={...w.computedPosition,...L}),(w.position.x!==H.x||w.position.y!==H.y)&&(w.position=H)}function J(){T.value&&p([{id:s.id,nodeElement:T.value,forceUpdate:!0}])}function Z(P){q!=null&&q.value||b.mouseEnter({event:P,node:w})}function ks(P){q!=null&&q.value||b.mouseMove({event:P,node:w})}function cs(P){q!=null&&q.value||b.mouseLeave({event:P,node:w})}function X(P){return b.contextMenu({event:P,node:w})}function x(P){return b.doubleClick({event:P,node:w})}function E(P){M.value&&(!a.value||!R.value||m.value>0)&&Vo(w,t.value,h,r,n,!1,T.value),b.click({event:P,node:w})}function D(P){if(!(Lo(P)||c.value))if(K6.includes(P.key)&&M.value){const L=P.key==="Escape";Vo(w,t.value,h,r,n,L,T.value)}else R.value&&w.selected&&at[P.key]&&(P.preventDefault(),A.value=`Moved selected node ${P.key.replace("Arrow","").toLowerCase()}. New position, x: ${~~w.position.x}, y: ${~~w.position.y}`,O({x:at[P.key].x,y:at[P.key].y},P.shiftKey))}}}),DP=_P;function wP(s={includeHiddenNodes:!1}){const{nodes:i}=Ks();return V(()=>{if(i.value.length===0)return!1;for(const e of i.value)if((s.includeHiddenNodes||!e.hidden)&&((e==null?void 0:e.handleBounds)===void 0||e.dimensions.width===0||e.dimensions.height===0))return!1;return!0})}const xP={class:"vue-flow__nodes vue-flow__container"},TP={name:"Nodes",compatConfig:{MODE:3}},SP=ts({...TP,setup(s){const{getNodes:i,updateNodeDimensions:e,emits:a}=Ks(),n=wP(),t=Q();return bs(n,l=>{l&&qs(()=>{a.nodesInitialized(i.value)})},{immediate:!0}),ws(()=>{t.value=new ResizeObserver(l=>{const r=l.map(h=>({id:h.target.getAttribute("data-id"),nodeElement:h.target,forceUpdate:!0}));qs(()=>e(r))})}),Dt(()=>{var l;return(l=t.value)==null?void 0:l.disconnect()}),(l,r)=>(hs(),us("div",xP,[t.value?(hs(!0),us(Ds,{key:0},bi(ms(i),(h,p,k,d)=>{const o=[h.id];if(d&&d.key===h.id&&Wv(d,o))return d;const u=(hs(),ri(ms(DP),{id:h.id,key:h.id,"resize-observer":t.value},null,8,["id","resize-observer"]));return u.memo=o,u},r,0),128)):ys("",!0)]))}});function IP(){const{emits:s}=Ks();ws(()=>{if(pf()){const i=document.querySelector(".vue-flow__pane");i&&window.getComputedStyle(i).zIndex!=="1"&&s.error(new vi(ui.MISSING_STYLES))}})}const RP=G("div",{class:"vue-flow__edge-labels"},null,-1),OP={name:"VueFlow",compatConfig:{MODE:3}},PP=ts({...OP,props:{id:{},modelValue:{},nodes:{},edges:{},edgeTypes:{},nodeTypes:{},connectionMode:{},connectionLineType:{},connectionLineStyle:{default:void 0},connectionLineOptions:{default:void 0},connectionRadius:{},isValidConnection:{type:[Function,null],default:void 0},deleteKeyCode:{default:void 0},selectionKeyCode:{type:[Boolean,null],default:void 0},multiSelectionKeyCode:{default:void 0},zoomActivationKeyCode:{default:void 0},panActivationKeyCode:{default:void 0},snapToGrid:{type:Boolean,default:void 0},snapGrid:{},onlyRenderVisibleElements:{type:Boolean,default:void 0},edgesUpdatable:{type:[Boolean,String],default:void 0},nodesDraggable:{type:Boolean,default:void 0},nodesConnectable:{type:Boolean,default:void 0},nodeDragThreshold:{},elementsSelectable:{type:Boolean,default:void 0},selectNodesOnDrag:{type:Boolean,default:void 0},panOnDrag:{type:[Boolean,Array],default:void 0},minZoom:{},maxZoom:{},defaultViewport:{},translateExtent:{},nodeExtent:{},defaultMarkerColor:{},zoomOnScroll:{type:Boolean,default:void 0},zoomOnPinch:{type:Boolean,default:void 0},panOnScroll:{type:Boolean,default:void 0},panOnScrollSpeed:{},panOnScrollMode:{},paneClickDistance:{},zoomOnDoubleClick:{type:Boolean,default:void 0},preventScrolling:{type:Boolean,default:void 0},selectionMode:{},edgeUpdaterRadius:{},fitViewOnInit:{type:Boolean,default:void 0},connectOnClick:{type:Boolean,default:void 0},applyDefault:{type:Boolean,default:void 0},autoConnect:{type:[Boolean,Function],default:void 0},noDragClassName:{},noWheelClassName:{},noPanClassName:{},defaultEdgeOptions:{},elevateEdgesOnSelect:{type:Boolean,default:void 0},elevateNodesOnSelect:{type:Boolean,default:void 0},disableKeyboardA11y:{type:Boolean,default:void 0},edgesFocusable:{type:Boolean,default:void 0},nodesFocusable:{type:Boolean,default:void 0},autoPanOnConnect:{type:Boolean,default:void 0},autoPanOnNodeDrag:{type:Boolean,default:void 0},autoPanSpeed:{}},emits:["nodesChange","edgesChange","nodesInitialized","paneReady","init","updateNodeInternals","error","connect","connectStart","connectEnd","clickConnectStart","clickConnectEnd","moveStart","move","moveEnd","selectionDragStart","selectionDrag","selectionDragStop","selectionContextMenu","selectionStart","selectionEnd","viewportChangeStart","viewportChange","viewportChangeEnd","paneScroll","paneClick","paneContextMenu","paneMouseEnter","paneMouseMove","paneMouseLeave","edgeUpdate","edgeContextMenu","edgeMouseEnter","edgeMouseMove","edgeMouseLeave","edgeDoubleClick","edgeClick","edgeUpdateStart","edgeUpdateEnd","nodeContextMenu","nodeMouseEnter","nodeMouseMove","nodeMouseLeave","nodeDoubleClick","nodeClick","nodeDragStart","nodeDrag","nodeDragStop","miniMapNodeClick","miniMapNodeDoubleClick","miniMapNodeMouseEnter","miniMapNodeMouseMove","miniMapNodeMouseLeave","update:modelValue","update:nodes","update:edges"],setup(s,{expose:i,emit:e}){const a=s,n=hv(),t=Ek(a,"modelValue",e),l=Ek(a,"nodes",e),r=Ek(a,"edges",e),h=Ks(a),p=oO({modelValue:t,nodes:l,edges:r},a,h);return cO(e,h.hooks),dP(),IP(),Di(xp,n),_i(()=>{p()}),i(h),(k,d)=>(hs(),us("div",{ref:ms(h).vueFlowRef,class:"vue-flow"},[Bs(tP,null,{default:Hs(()=>[Bs(CP),RP,Bs(SP),ee(k.$slots,"zoom-pane")]),_:3}),ee(k.$slots,"default"),Bs(kP)],512))}}),LP={name:"Panel",compatConfig:{MODE:3}},NP=ts({...LP,props:{position:{}},setup(s){const i=s,{userSelectionActive:e}=Ks(),a=V(()=>`${i.position}`.split("-"));return(n,t)=>(hs(),us("div",{class:Ps(["vue-flow__panel",a.value]),style:gi({pointerEvents:ms(e)?"none":"all"})},[ee(n.$slots,"default")],6))}}),oB={};function MP(s){let i=oB[s];if(i)return i;i=oB[s]=[];for(let e=0;e<128;e++){const a=String.fromCharCode(e);i.push(a)}for(let e=0;e<s.length;e++){const a=s.charCodeAt(e);i[a]="%"+("0"+a.toString(16).toUpperCase()).slice(-2)}return i}function mt(s,i){typeof i!="string"&&(i=mt.defaultChars);const e=MP(i);return s.replace(/(%[a-f0-9]{2})+/gi,function(a){let n="";for(let t=0,l=a.length;t<l;t+=3){const r=parseInt(a.slice(t+1,t+3),16);if(r<128){n+=e[r];continue}if((r&224)===192&&t+3<l){const h=parseInt(a.slice(t+4,t+6),16);if((h&192)===128){const p=r<<6&1984|h&63;p<128?n+="��":n+=String.fromCharCode(p),t+=3;continue}}if((r&240)===224&&t+6<l){const h=parseInt(a.slice(t+4,t+6),16),p=parseInt(a.slice(t+7,t+9),16);if((h&192)===128&&(p&192)===128){const k=r<<12&61440|h<<6&4032|p&63;k<2048||k>=55296&&k<=57343?n+="���":n+=String.fromCharCode(k),t+=6;continue}}if((r&248)===240&&t+9<l){const h=parseInt(a.slice(t+4,t+6),16),p=parseInt(a.slice(t+7,t+9),16),k=parseInt(a.slice(t+10,t+12),16);if((h&192)===128&&(p&192)===128&&(k&192)===128){let d=r<<18&1835008|h<<12&258048|p<<6&4032|k&63;d<65536||d>1114111?n+="����":(d-=65536,n+=String.fromCharCode(55296+(d>>10),56320+(d&1023))),t+=9;continue}}n+="�"}return n})}mt.defaultChars=";/?:@&=+$,#";mt.componentChars="";const uB={};function VP(s){let i=uB[s];if(i)return i;i=uB[s]=[];for(let e=0;e<128;e++){const a=String.fromCharCode(e);/^[0-9a-z]$/i.test(a)?i.push(a):i.push("%"+("0"+e.toString(16).toUpperCase()).slice(-2))}for(let e=0;e<s.length;e++)i[s.charCodeAt(e)]=s[e];return i}function Fr(s,i,e){typeof i!="string"&&(e=i,i=Fr.defaultChars),typeof e>"u"&&(e=!0);const a=VP(i);let n="";for(let t=0,l=s.length;t<l;t++){const r=s.charCodeAt(t);if(e&&r===37&&t+2<l&&/^[0-9a-f]{2}$/i.test(s.slice(t+1,t+3))){n+=s.slice(t,t+3),t+=2;continue}if(r<128){n+=a[r];continue}if(r>=55296&&r<=57343){if(r>=55296&&r<=56319&&t+1<l){const h=s.charCodeAt(t+1);if(h>=56320&&h<=57343){n+=encodeURIComponent(s[t]+s[t+1]),t++;continue}}n+="%EF%BF%BD";continue}n+=encodeURIComponent(s[t])}return n}Fr.defaultChars=";/?:@&=+$,-_.!~*'()#";Fr.componentChars="-_.!~*'()";function Ac(s){let i="";return i+=s.protocol||"",i+=s.slashes?"//":"",i+=s.auth?s.auth+"@":"",s.hostname&&s.hostname.indexOf(":")!==-1?i+="["+s.hostname+"]":i+=s.hostname||"",i+=s.port?":"+s.port:"",i+=s.pathname||"",i+=s.search||"",i+=s.hash||"",i}function Vh(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}const $P=/^([a-z0-9.+-]+:)/i,zP=/:[0-9]*$/,qP=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,HP=["<",">",'"',"`"," ","\r",`
`,"	"],jP=["{","}","|","\\","^","`"].concat(HP),UP=["'"].concat(jP),cB=["%","/","?",";","#"].concat(UP),gB=["/","?","#"],GP=255,BB=/^[+a-z0-9A-Z_-]{0,63}$/,WP=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,AB={javascript:!0,"javascript:":!0},yB={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0};function yc(s,i){if(s&&s instanceof Vh)return s;const e=new Vh;return e.parse(s,i),e}Vh.prototype.parse=function(s,i){let e,a,n,t=s;if(t=t.trim(),!i&&s.split("#").length===1){const p=qP.exec(t);if(p)return this.pathname=p[1],p[2]&&(this.search=p[2]),this}let l=$P.exec(t);if(l&&(l=l[0],e=l.toLowerCase(),this.protocol=l,t=t.substr(l.length)),(i||l||t.match(/^\/\/[^@\/]+@[^@\/]+/))&&(n=t.substr(0,2)==="//",n&&!(l&&AB[l])&&(t=t.substr(2),this.slashes=!0)),!AB[l]&&(n||l&&!yB[l])){let p=-1;for(let c=0;c<gB.length;c++)a=t.indexOf(gB[c]),a!==-1&&(p===-1||a<p)&&(p=a);let k,d;p===-1?d=t.lastIndexOf("@"):d=t.lastIndexOf("@",p),d!==-1&&(k=t.slice(0,d),t=t.slice(d+1),this.auth=k),p=-1;for(let c=0;c<cB.length;c++)a=t.indexOf(cB[c]),a!==-1&&(p===-1||a<p)&&(p=a);p===-1&&(p=t.length),t[p-1]===":"&&p--;const o=t.slice(0,p);t=t.slice(p),this.parseHost(o),this.hostname=this.hostname||"";const u=this.hostname[0]==="["&&this.hostname[this.hostname.length-1]==="]";if(!u){const c=this.hostname.split(/\./);for(let A=0,g=c.length;A<g;A++){const f=c[A];if(f&&!f.match(BB)){let m="";for(let y=0,v=f.length;y<v;y++)f.charCodeAt(y)>127?m+="x":m+=f[y];if(!m.match(BB)){const y=c.slice(0,A),v=c.slice(A+1),_=f.match(WP);_&&(y.push(_[1]),v.unshift(_[2])),v.length&&(t=v.join(".")+t),this.hostname=y.join(".");break}}}}this.hostname.length>GP&&(this.hostname=""),u&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}const r=t.indexOf("#");r!==-1&&(this.hash=t.substr(r),t=t.slice(0,r));const h=t.indexOf("?");return h!==-1&&(this.search=t.substr(h),t=t.slice(0,h)),t&&(this.pathname=t),yB[e]&&this.hostname&&!this.pathname&&(this.pathname=""),this};Vh.prototype.parseHost=function(s){let i=zP.exec(s);i&&(i=i[0],i!==":"&&(this.port=i.substr(1)),s=s.substr(0,s.length-i.length)),s&&(this.hostname=s)};const KP=Object.freeze(Object.defineProperty({__proto__:null,decode:mt,encode:Fr,format:Ac,parse:yc},Symbol.toStringTag,{value:"Module"})),Ff=/[\0-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,Ef=/[\0-\x1F\x7F-\x9F]/,YP=/[\xAD\u0600-\u0605\u061C\u06DD\u070F\u0890\u0891\u08E2\u180E\u200B-\u200F\u202A-\u202E\u2060-\u2064\u2066-\u206F\uFEFF\uFFF9-\uFFFB]|\uD804[\uDCBD\uDCCD]|\uD80D[\uDC30-\uDC3F]|\uD82F[\uDCA0-\uDCA3]|\uD834[\uDD73-\uDD7A]|\uDB40[\uDC01\uDC20-\uDC7F]/,fc=/[!-#%-\*,-\/:;\?@\[-\]_\{\}\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061D-\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1B7D\u1B7E\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u2E52-\u2E5D\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD803[\uDEAD\uDF55-\uDF59\uDF86-\uDF89]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC8\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDC4B-\uDC4F\uDC5A\uDC5B\uDC5D\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDE60-\uDE6C\uDEB9\uDF3C-\uDF3E]|\uD806[\uDC3B\uDD44-\uDD46\uDDE2\uDE3F-\uDE46\uDE9A-\uDE9C\uDE9E-\uDEA2\uDF00-\uDF09]|\uD807[\uDC41-\uDC45\uDC70\uDC71\uDEF7\uDEF8\uDF43-\uDF4F\uDFFF]|\uD809[\uDC70-\uDC74]|\uD80B[\uDFF1\uDFF2]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD81B[\uDE97-\uDE9A\uDFE2]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]|\uD83A[\uDD5E\uDD5F]/,bf=/[\$\+<->\^`\|~\xA2-\xA6\xA8\xA9\xAC\xAE-\xB1\xB4\xB8\xD7\xF7\u02C2-\u02C5\u02D2-\u02DF\u02E5-\u02EB\u02ED\u02EF-\u02FF\u0375\u0384\u0385\u03F6\u0482\u058D-\u058F\u0606-\u0608\u060B\u060E\u060F\u06DE\u06E9\u06FD\u06FE\u07F6\u07FE\u07FF\u0888\u09F2\u09F3\u09FA\u09FB\u0AF1\u0B70\u0BF3-\u0BFA\u0C7F\u0D4F\u0D79\u0E3F\u0F01-\u0F03\u0F13\u0F15-\u0F17\u0F1A-\u0F1F\u0F34\u0F36\u0F38\u0FBE-\u0FC5\u0FC7-\u0FCC\u0FCE\u0FCF\u0FD5-\u0FD8\u109E\u109F\u1390-\u1399\u166D\u17DB\u1940\u19DE-\u19FF\u1B61-\u1B6A\u1B74-\u1B7C\u1FBD\u1FBF-\u1FC1\u1FCD-\u1FCF\u1FDD-\u1FDF\u1FED-\u1FEF\u1FFD\u1FFE\u2044\u2052\u207A-\u207C\u208A-\u208C\u20A0-\u20C0\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211E-\u2123\u2125\u2127\u2129\u212E\u213A\u213B\u2140-\u2144\u214A-\u214D\u214F\u218A\u218B\u2190-\u2307\u230C-\u2328\u232B-\u2426\u2440-\u244A\u249C-\u24E9\u2500-\u2767\u2794-\u27C4\u27C7-\u27E5\u27F0-\u2982\u2999-\u29D7\u29DC-\u29FB\u29FE-\u2B73\u2B76-\u2B95\u2B97-\u2BFF\u2CE5-\u2CEA\u2E50\u2E51\u2E80-\u2E99\u2E9B-\u2EF3\u2F00-\u2FD5\u2FF0-\u2FFF\u3004\u3012\u3013\u3020\u3036\u3037\u303E\u303F\u309B\u309C\u3190\u3191\u3196-\u319F\u31C0-\u31E3\u31EF\u3200-\u321E\u322A-\u3247\u3250\u3260-\u327F\u328A-\u32B0\u32C0-\u33FF\u4DC0-\u4DFF\uA490-\uA4C6\uA700-\uA716\uA720\uA721\uA789\uA78A\uA828-\uA82B\uA836-\uA839\uAA77-\uAA79\uAB5B\uAB6A\uAB6B\uFB29\uFBB2-\uFBC2\uFD40-\uFD4F\uFDCF\uFDFC-\uFDFF\uFE62\uFE64-\uFE66\uFE69\uFF04\uFF0B\uFF1C-\uFF1E\uFF3E\uFF40\uFF5C\uFF5E\uFFE0-\uFFE6\uFFE8-\uFFEE\uFFFC\uFFFD]|\uD800[\uDD37-\uDD3F\uDD79-\uDD89\uDD8C-\uDD8E\uDD90-\uDD9C\uDDA0\uDDD0-\uDDFC]|\uD802[\uDC77\uDC78\uDEC8]|\uD805\uDF3F|\uD807[\uDFD5-\uDFF1]|\uD81A[\uDF3C-\uDF3F\uDF45]|\uD82F\uDC9C|\uD833[\uDF50-\uDFC3]|\uD834[\uDC00-\uDCF5\uDD00-\uDD26\uDD29-\uDD64\uDD6A-\uDD6C\uDD83\uDD84\uDD8C-\uDDA9\uDDAE-\uDDEA\uDE00-\uDE41\uDE45\uDF00-\uDF56]|\uD835[\uDEC1\uDEDB\uDEFB\uDF15\uDF35\uDF4F\uDF6F\uDF89\uDFA9\uDFC3]|\uD836[\uDC00-\uDDFF\uDE37-\uDE3A\uDE6D-\uDE74\uDE76-\uDE83\uDE85\uDE86]|\uD838[\uDD4F\uDEFF]|\uD83B[\uDCAC\uDCB0\uDD2E\uDEF0\uDEF1]|\uD83C[\uDC00-\uDC2B\uDC30-\uDC93\uDCA0-\uDCAE\uDCB1-\uDCBF\uDCC1-\uDCCF\uDCD1-\uDCF5\uDD0D-\uDDAD\uDDE6-\uDE02\uDE10-\uDE3B\uDE40-\uDE48\uDE50\uDE51\uDE60-\uDE65\uDF00-\uDFFF]|\uD83D[\uDC00-\uDED7\uDEDC-\uDEEC\uDEF0-\uDEFC\uDF00-\uDF76\uDF7B-\uDFD9\uDFE0-\uDFEB\uDFF0]|\uD83E[\uDC00-\uDC0B\uDC10-\uDC47\uDC50-\uDC59\uDC60-\uDC87\uDC90-\uDCAD\uDCB0\uDCB1\uDD00-\uDE53\uDE60-\uDE6D\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC5\uDECE-\uDEDB\uDEE0-\uDEE8\uDEF0-\uDEF8\uDF00-\uDF92\uDF94-\uDFCA]/,Cf=/[ \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]/,XP=Object.freeze(Object.defineProperty({__proto__:null,Any:Ff,Cc:Ef,Cf:YP,P:fc,S:bf,Z:Cf},Symbol.toStringTag,{value:"Module"})),ZP=new Uint16Array('ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\0\0\0\0\0\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\0\0\0͔͂\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\0\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\0\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\0ц\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\0\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\0\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\0ֿ\0\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\0ࣃbleBracket;柦nǔࣈ\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\0စbleBracket;柧nǔည\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\0\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\0ጬጱ\0\0\0\0\0ጸጽ፷ᎅ\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\0ᖰᖶᖿ\0\0\0\0ᗆᗛᗫᙟ᙭\0ᚕ᚛ᚲᚹ\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\0\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\0\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\0ᠳƲᠯ\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\0᧨ᨑᨕᨲ\0ᨷᩐ\0\0᪴\0\0᫁\0\0ᬡᬮ᭍᭒\0᯽\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\0\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\0\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\0\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\0\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\0\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\0\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\0\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\0ᾞ\0ᾡᾧ\0\0ῆῌ\0ΐ\0ῦῪ \0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\0\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\0⁐β•‥‧‪‬\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\0‶;慔;慖ʴ‾⁁\0\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\0⊪\0⊸⋅⋎\0⋕⋳\0\0⋸⌢⍧⍢⍿\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\0⒪\0⒱\0\0\0\0\0⒵Ⓔ\0ⓆⓈⓍ\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\0\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\0\0\0\0\0\0\0\0\0\0\0\0\0ⴭ\0ⴸⵈⵠⵥ⵲ⶄᬇ\0\0ⶍⶫ\0ⷈⷎ\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\0\0⵼\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\0⹽\0⺀⺝\0⺢⺹\0\0⻋ຜ\0⼓\0\0⼫⾼\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\0\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\0㍺㎤\0\0㏬㏰\0㐨㑈㑚㒭㒱㓊㓱\0㘖\0\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\0\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\0㙾㛂\0\0\0\0\0㛛㜃\0㜉㝬\0\0\0㞇ɲ㙖\0\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\0\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\0\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\0㪋\0㪐㪛\0\0㪝㪨㪫㪯\0\0㫃㫎\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌'.split("").map(s=>s.charCodeAt(0))),JP=new Uint16Array("Ȁaglq	\x1Bɭ\0\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map(s=>s.charCodeAt(0)));var Pk;const QP=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]),sL=(Pk=String.fromCodePoint)!==null&&Pk!==void 0?Pk:function(s){let i="";return s>65535&&(s-=65536,i+=String.fromCharCode(s>>>10&1023|55296),s=56320|s&1023),i+=String.fromCharCode(s),i};function iL(s){var i;return s>=55296&&s<=57343||s>1114111?65533:(i=QP.get(s))!==null&&i!==void 0?i:s}var Ci;(function(s){s[s.NUM=35]="NUM",s[s.SEMI=59]="SEMI",s[s.EQUALS=61]="EQUALS",s[s.ZERO=48]="ZERO",s[s.NINE=57]="NINE",s[s.LOWER_A=97]="LOWER_A",s[s.LOWER_F=102]="LOWER_F",s[s.LOWER_X=120]="LOWER_X",s[s.LOWER_Z=122]="LOWER_Z",s[s.UPPER_A=65]="UPPER_A",s[s.UPPER_F=70]="UPPER_F",s[s.UPPER_Z=90]="UPPER_Z"})(Ci||(Ci={}));const eL=32;var Ua;(function(s){s[s.VALUE_LENGTH=49152]="VALUE_LENGTH",s[s.BRANCH_LENGTH=16256]="BRANCH_LENGTH",s[s.JUMP_TABLE=127]="JUMP_TABLE"})(Ua||(Ua={}));function zo(s){return s>=Ci.ZERO&&s<=Ci.NINE}function aL(s){return s>=Ci.UPPER_A&&s<=Ci.UPPER_F||s>=Ci.LOWER_A&&s<=Ci.LOWER_F}function nL(s){return s>=Ci.UPPER_A&&s<=Ci.UPPER_Z||s>=Ci.LOWER_A&&s<=Ci.LOWER_Z||zo(s)}function tL(s){return s===Ci.EQUALS||nL(s)}var Ei;(function(s){s[s.EntityStart=0]="EntityStart",s[s.NumericStart=1]="NumericStart",s[s.NumericDecimal=2]="NumericDecimal",s[s.NumericHex=3]="NumericHex",s[s.NamedEntity=4]="NamedEntity"})(Ei||(Ei={}));var ja;(function(s){s[s.Legacy=0]="Legacy",s[s.Strict=1]="Strict",s[s.Attribute=2]="Attribute"})(ja||(ja={}));class lL{constructor(i,e,a){this.decodeTree=i,this.emitCodePoint=e,this.errors=a,this.state=Ei.EntityStart,this.consumed=1,this.result=0,this.treeIndex=0,this.excess=1,this.decodeMode=ja.Strict}startEntity(i){this.decodeMode=i,this.state=Ei.EntityStart,this.result=0,this.treeIndex=0,this.excess=1,this.consumed=1}write(i,e){switch(this.state){case Ei.EntityStart:return i.charCodeAt(e)===Ci.NUM?(this.state=Ei.NumericStart,this.consumed+=1,this.stateNumericStart(i,e+1)):(this.state=Ei.NamedEntity,this.stateNamedEntity(i,e));case Ei.NumericStart:return this.stateNumericStart(i,e);case Ei.NumericDecimal:return this.stateNumericDecimal(i,e);case Ei.NumericHex:return this.stateNumericHex(i,e);case Ei.NamedEntity:return this.stateNamedEntity(i,e)}}stateNumericStart(i,e){return e>=i.length?-1:(i.charCodeAt(e)|eL)===Ci.LOWER_X?(this.state=Ei.NumericHex,this.consumed+=1,this.stateNumericHex(i,e+1)):(this.state=Ei.NumericDecimal,this.stateNumericDecimal(i,e))}addToNumericResult(i,e,a,n){if(e!==a){const t=a-e;this.result=this.result*Math.pow(n,t)+parseInt(i.substr(e,t),n),this.consumed+=t}}stateNumericHex(i,e){const a=e;for(;e<i.length;){const n=i.charCodeAt(e);if(zo(n)||aL(n))e+=1;else return this.addToNumericResult(i,a,e,16),this.emitNumericEntity(n,3)}return this.addToNumericResult(i,a,e,16),-1}stateNumericDecimal(i,e){const a=e;for(;e<i.length;){const n=i.charCodeAt(e);if(zo(n))e+=1;else return this.addToNumericResult(i,a,e,10),this.emitNumericEntity(n,2)}return this.addToNumericResult(i,a,e,10),-1}emitNumericEntity(i,e){var a;if(this.consumed<=e)return(a=this.errors)===null||a===void 0||a.absenceOfDigitsInNumericCharacterReference(this.consumed),0;if(i===Ci.SEMI)this.consumed+=1;else if(this.decodeMode===ja.Strict)return 0;return this.emitCodePoint(iL(this.result),this.consumed),this.errors&&(i!==Ci.SEMI&&this.errors.missingSemicolonAfterCharacterReference(),this.errors.validateNumericCharacterReference(this.result)),this.consumed}stateNamedEntity(i,e){const{decodeTree:a}=this;let n=a[this.treeIndex],t=(n&Ua.VALUE_LENGTH)>>14;for(;e<i.length;e++,this.excess++){const l=i.charCodeAt(e);if(this.treeIndex=rL(a,n,this.treeIndex+Math.max(1,t),l),this.treeIndex<0)return this.result===0||this.decodeMode===ja.Attribute&&(t===0||tL(l))?0:this.emitNotTerminatedNamedEntity();if(n=a[this.treeIndex],t=(n&Ua.VALUE_LENGTH)>>14,t!==0){if(l===Ci.SEMI)return this.emitNamedEntityData(this.treeIndex,t,this.consumed+this.excess);this.decodeMode!==ja.Strict&&(this.result=this.treeIndex,this.consumed+=this.excess,this.excess=0)}}return-1}emitNotTerminatedNamedEntity(){var i;const{result:e,decodeTree:a}=this,n=(a[e]&Ua.VALUE_LENGTH)>>14;return this.emitNamedEntityData(e,n,this.consumed),(i=this.errors)===null||i===void 0||i.missingSemicolonAfterCharacterReference(),this.consumed}emitNamedEntityData(i,e,a){const{decodeTree:n}=this;return this.emitCodePoint(e===1?n[i]&~Ua.VALUE_LENGTH:n[i+1],a),e===3&&this.emitCodePoint(n[i+2],a),a}end(){var i;switch(this.state){case Ei.NamedEntity:return this.result!==0&&(this.decodeMode!==ja.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0;case Ei.NumericDecimal:return this.emitNumericEntity(0,2);case Ei.NumericHex:return this.emitNumericEntity(0,3);case Ei.NumericStart:return(i=this.errors)===null||i===void 0||i.absenceOfDigitsInNumericCharacterReference(this.consumed),0;case Ei.EntityStart:return 0}}}function _f(s){let i="";const e=new lL(s,a=>i+=sL(a));return function(n,t){let l=0,r=0;for(;(r=n.indexOf("&",r))>=0;){i+=n.slice(l,r),e.startEntity(t);const p=e.write(n,r+1);if(p<0){l=r+e.end();break}l=r+p,r=p===0?l+1:l}const h=i+n.slice(l);return i="",h}}function rL(s,i,e,a){const n=(i&Ua.BRANCH_LENGTH)>>7,t=i&Ua.JUMP_TABLE;if(n===0)return t!==0&&a===t?e:-1;if(t){const h=a-t;return h<0||h>=n?-1:s[e+h]-1}let l=e,r=l+n-1;for(;l<=r;){const h=l+r>>>1,p=s[h];if(p<a)l=h+1;else if(p>a)r=h-1;else return s[h+n]}return-1}const hL=_f(ZP);_f(JP);function Df(s,i=ja.Legacy){return hL(s,i)}function pL(s){return Object.prototype.toString.call(s)}function mc(s){return pL(s)==="[object String]"}const kL=Object.prototype.hasOwnProperty;function dL(s,i){return kL.call(s,i)}function Op(s){return Array.prototype.slice.call(arguments,1).forEach(function(e){if(e){if(typeof e!="object")throw new TypeError(e+"must be object");Object.keys(e).forEach(function(a){s[a]=e[a]})}}),s}function wf(s,i,e){return[].concat(s.slice(0,i),e,s.slice(i+1))}function vc(s){return!(s>=55296&&s<=57343||s>=64976&&s<=65007||(s&65535)===65535||(s&65535)===65534||s>=0&&s<=8||s===11||s>=14&&s<=31||s>=127&&s<=159||s>1114111)}function $h(s){if(s>65535){s-=65536;const i=55296+(s>>10),e=56320+(s&1023);return String.fromCharCode(i,e)}return String.fromCharCode(s)}const xf=/\\([!"#$%&'()*+,\-./:;<=>?@[\\\]^_`{|}~])/g,oL=/&([a-z#][a-z0-9]{1,31});/gi,uL=new RegExp(xf.source+"|"+oL.source,"gi"),cL=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;function gL(s,i){if(i.charCodeAt(0)===35&&cL.test(i)){const a=i[1].toLowerCase()==="x"?parseInt(i.slice(2),16):parseInt(i.slice(1),10);return vc(a)?$h(a):s}const e=Df(s);return e!==s?e:s}function BL(s){return s.indexOf("\\")<0?s:s.replace(xf,"$1")}function vt(s){return s.indexOf("\\")<0&&s.indexOf("&")<0?s:s.replace(uL,function(i,e,a){return e||gL(i,a)})}const AL=/[&<>"]/,yL=/[&<>"]/g,fL={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};function mL(s){return fL[s]}function en(s){return AL.test(s)?s.replace(yL,mL):s}const vL=/[.?*+^$[\]\\(){}|-]/g;function FL(s){return s.replace(vL,"\\$&")}function si(s){switch(s){case 9:case 32:return!0}return!1}function $l(s){if(s>=8192&&s<=8202)return!0;switch(s){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1}function zl(s){return fc.test(s)||bf.test(s)}function ql(s){switch(s){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}}function Pp(s){return s=s.trim().replace(/\s+/g," "),"ẞ".toLowerCase()==="Ṿ"&&(s=s.replace(/ẞ/g,"ß")),s.toLowerCase().toUpperCase()}const EL={mdurl:KP,ucmicro:XP},bL=Object.freeze(Object.defineProperty({__proto__:null,arrayReplaceAt:wf,assign:Op,escapeHtml:en,escapeRE:FL,fromCodePoint:$h,has:dL,isMdAsciiPunct:ql,isPunctChar:zl,isSpace:si,isString:mc,isValidEntityCode:vc,isWhiteSpace:$l,lib:EL,normalizeReference:Pp,unescapeAll:vt,unescapeMd:BL},Symbol.toStringTag,{value:"Module"}));function CL(s,i,e){let a,n,t,l;const r=s.posMax,h=s.pos;for(s.pos=i+1,a=1;s.pos<r;){if(t=s.src.charCodeAt(s.pos),t===93&&(a--,a===0)){n=!0;break}if(l=s.pos,s.md.inline.skipToken(s),t===91){if(l===s.pos-1)a++;else if(e)return s.pos=h,-1}}let p=-1;return n&&(p=s.pos),s.pos=h,p}function _L(s,i,e){let a,n=i;const t={ok:!1,pos:0,str:""};if(s.charCodeAt(n)===60){for(n++;n<e;){if(a=s.charCodeAt(n),a===10||a===60)return t;if(a===62)return t.pos=n+1,t.str=vt(s.slice(i+1,n)),t.ok=!0,t;if(a===92&&n+1<e){n+=2;continue}n++}return t}let l=0;for(;n<e&&(a=s.charCodeAt(n),!(a===32||a<32||a===127));){if(a===92&&n+1<e){if(s.charCodeAt(n+1)===32)break;n+=2;continue}if(a===40&&(l++,l>32))return t;if(a===41){if(l===0)break;l--}n++}return i===n||l!==0||(t.str=vt(s.slice(i,n)),t.pos=n,t.ok=!0),t}function DL(s,i,e,a){let n,t=i;const l={ok:!1,can_continue:!1,pos:0,str:"",marker:0};if(a)l.str=a.str,l.marker=a.marker;else{if(t>=e)return l;let r=s.charCodeAt(t);if(r!==34&&r!==39&&r!==40)return l;i++,t++,r===40&&(r=41),l.marker=r}for(;t<e;){if(n=s.charCodeAt(t),n===l.marker)return l.pos=t+1,l.str+=vt(s.slice(i,t)),l.ok=!0,l;if(n===40&&l.marker===41)return l;n===92&&t+1<e&&t++,t++}return l.can_continue=!0,l.str+=vt(s.slice(i,t)),l}const wL=Object.freeze(Object.defineProperty({__proto__:null,parseLinkDestination:_L,parseLinkLabel:CL,parseLinkTitle:DL},Symbol.toStringTag,{value:"Module"})),Ze={};Ze.code_inline=function(s,i,e,a,n){const t=s[i];return"<code"+n.renderAttrs(t)+">"+en(t.content)+"</code>"};Ze.code_block=function(s,i,e,a,n){const t=s[i];return"<pre"+n.renderAttrs(t)+"><code>"+en(s[i].content)+`</code></pre>
`};Ze.fence=function(s,i,e,a,n){const t=s[i],l=t.info?vt(t.info).trim():"";let r="",h="";if(l){const k=l.split(/(\s+)/g);r=k[0],h=k.slice(2).join("")}let p;if(e.highlight?p=e.highlight(t.content,r,h)||en(t.content):p=en(t.content),p.indexOf("<pre")===0)return p+`
`;if(l){const k=t.attrIndex("class"),d=t.attrs?t.attrs.slice():[];k<0?d.push(["class",e.langPrefix+r]):(d[k]=d[k].slice(),d[k][1]+=" "+e.langPrefix+r);const o={attrs:d};return`<pre><code${n.renderAttrs(o)}>${p}</code></pre>
`}return`<pre><code${n.renderAttrs(t)}>${p}</code></pre>
`};Ze.image=function(s,i,e,a,n){const t=s[i];return t.attrs[t.attrIndex("alt")][1]=n.renderInlineAsText(t.children,e,a),n.renderToken(s,i,e)};Ze.hardbreak=function(s,i,e){return e.xhtmlOut?`<br />
`:`<br>
`};Ze.softbreak=function(s,i,e){return e.breaks?e.xhtmlOut?`<br />
`:`<br>
`:`
`};Ze.text=function(s,i){return en(s[i].content)};Ze.html_block=function(s,i){return s[i].content};Ze.html_inline=function(s,i){return s[i].content};function Rt(){this.rules=Op({},Ze)}Rt.prototype.renderAttrs=function(i){let e,a,n;if(!i.attrs)return"";for(n="",e=0,a=i.attrs.length;e<a;e++)n+=" "+en(i.attrs[e][0])+'="'+en(i.attrs[e][1])+'"';return n};Rt.prototype.renderToken=function(i,e,a){const n=i[e];let t="";if(n.hidden)return"";n.block&&n.nesting!==-1&&e&&i[e-1].hidden&&(t+=`
`),t+=(n.nesting===-1?"</":"<")+n.tag,t+=this.renderAttrs(n),n.nesting===0&&a.xhtmlOut&&(t+=" /");let l=!1;if(n.block&&(l=!0,n.nesting===1&&e+1<i.length)){const r=i[e+1];(r.type==="inline"||r.hidden||r.nesting===-1&&r.tag===n.tag)&&(l=!1)}return t+=l?`>
`:">",t};Rt.prototype.renderInline=function(s,i,e){let a="";const n=this.rules;for(let t=0,l=s.length;t<l;t++){const r=s[t].type;typeof n[r]<"u"?a+=n[r](s,t,i,e,this):a+=this.renderToken(s,t,i)}return a};Rt.prototype.renderInlineAsText=function(s,i,e){let a="";for(let n=0,t=s.length;n<t;n++)switch(s[n].type){case"text":a+=s[n].content;break;case"image":a+=this.renderInlineAsText(s[n].children,i,e);break;case"html_inline":case"html_block":a+=s[n].content;break;case"softbreak":case"hardbreak":a+=`
`;break}return a};Rt.prototype.render=function(s,i,e){let a="";const n=this.rules;for(let t=0,l=s.length;t<l;t++){const r=s[t].type;r==="inline"?a+=this.renderInline(s[t].children,i,e):typeof n[r]<"u"?a+=n[r](s,t,i,e,this):a+=this.renderToken(s,t,i,e)}return a};function Ki(){this.__rules__=[],this.__cache__=null}Ki.prototype.__find__=function(s){for(let i=0;i<this.__rules__.length;i++)if(this.__rules__[i].name===s)return i;return-1};Ki.prototype.__compile__=function(){const s=this,i=[""];s.__rules__.forEach(function(e){e.enabled&&e.alt.forEach(function(a){i.indexOf(a)<0&&i.push(a)})}),s.__cache__={},i.forEach(function(e){s.__cache__[e]=[],s.__rules__.forEach(function(a){a.enabled&&(e&&a.alt.indexOf(e)<0||s.__cache__[e].push(a.fn))})})};Ki.prototype.at=function(s,i,e){const a=this.__find__(s),n=e||{};if(a===-1)throw new Error("Parser rule not found: "+s);this.__rules__[a].fn=i,this.__rules__[a].alt=n.alt||[],this.__cache__=null};Ki.prototype.before=function(s,i,e,a){const n=this.__find__(s),t=a||{};if(n===-1)throw new Error("Parser rule not found: "+s);this.__rules__.splice(n,0,{name:i,enabled:!0,fn:e,alt:t.alt||[]}),this.__cache__=null};Ki.prototype.after=function(s,i,e,a){const n=this.__find__(s),t=a||{};if(n===-1)throw new Error("Parser rule not found: "+s);this.__rules__.splice(n+1,0,{name:i,enabled:!0,fn:e,alt:t.alt||[]}),this.__cache__=null};Ki.prototype.push=function(s,i,e){const a=e||{};this.__rules__.push({name:s,enabled:!0,fn:i,alt:a.alt||[]}),this.__cache__=null};Ki.prototype.enable=function(s,i){Array.isArray(s)||(s=[s]);const e=[];return s.forEach(function(a){const n=this.__find__(a);if(n<0){if(i)return;throw new Error("Rules manager: invalid rule name "+a)}this.__rules__[n].enabled=!0,e.push(a)},this),this.__cache__=null,e};Ki.prototype.enableOnly=function(s,i){Array.isArray(s)||(s=[s]),this.__rules__.forEach(function(e){e.enabled=!1}),this.enable(s,i)};Ki.prototype.disable=function(s,i){Array.isArray(s)||(s=[s]);const e=[];return s.forEach(function(a){const n=this.__find__(a);if(n<0){if(i)return;throw new Error("Rules manager: invalid rule name "+a)}this.__rules__[n].enabled=!1,e.push(a)},this),this.__cache__=null,e};Ki.prototype.getRules=function(s){return this.__cache__===null&&this.__compile__(),this.__cache__[s]||[]};function Te(s,i,e){this.type=s,this.tag=i,this.attrs=null,this.map=null,this.nesting=e,this.level=0,this.children=null,this.content="",this.markup="",this.info="",this.meta=null,this.block=!1,this.hidden=!1}Te.prototype.attrIndex=function(i){if(!this.attrs)return-1;const e=this.attrs;for(let a=0,n=e.length;a<n;a++)if(e[a][0]===i)return a;return-1};Te.prototype.attrPush=function(i){this.attrs?this.attrs.push(i):this.attrs=[i]};Te.prototype.attrSet=function(i,e){const a=this.attrIndex(i),n=[i,e];a<0?this.attrPush(n):this.attrs[a]=n};Te.prototype.attrGet=function(i){const e=this.attrIndex(i);let a=null;return e>=0&&(a=this.attrs[e][1]),a};Te.prototype.attrJoin=function(i,e){const a=this.attrIndex(i);a<0?this.attrPush([i,e]):this.attrs[a][1]=this.attrs[a][1]+" "+e};function Tf(s,i,e){this.src=s,this.env=e,this.tokens=[],this.inlineMode=!1,this.md=i}Tf.prototype.Token=Te;const xL=/\r\n?|\n/g,TL=/\0/g;function SL(s){let i;i=s.src.replace(xL,`
`),i=i.replace(TL,"�"),s.src=i}function IL(s){let i;s.inlineMode?(i=new s.Token("inline","",0),i.content=s.src,i.map=[0,1],i.children=[],s.tokens.push(i)):s.md.block.parse(s.src,s.md,s.env,s.tokens)}function RL(s){const i=s.tokens;for(let e=0,a=i.length;e<a;e++){const n=i[e];n.type==="inline"&&s.md.inline.parse(n.content,s.md,s.env,n.children)}}function OL(s){return/^<a[>\s]/i.test(s)}function PL(s){return/^<\/a\s*>/i.test(s)}function LL(s){const i=s.tokens;if(s.md.options.linkify)for(let e=0,a=i.length;e<a;e++){if(i[e].type!=="inline"||!s.md.linkify.pretest(i[e].content))continue;let n=i[e].children,t=0;for(let l=n.length-1;l>=0;l--){const r=n[l];if(r.type==="link_close"){for(l--;n[l].level!==r.level&&n[l].type!=="link_open";)l--;continue}if(r.type==="html_inline"&&(OL(r.content)&&t>0&&t--,PL(r.content)&&t++),!(t>0)&&r.type==="text"&&s.md.linkify.test(r.content)){const h=r.content;let p=s.md.linkify.match(h);const k=[];let d=r.level,o=0;p.length>0&&p[0].index===0&&l>0&&n[l-1].type==="text_special"&&(p=p.slice(1));for(let u=0;u<p.length;u++){const c=p[u].url,A=s.md.normalizeLink(c);if(!s.md.validateLink(A))continue;let g=p[u].text;p[u].schema?p[u].schema==="mailto:"&&!/^mailto:/i.test(g)?g=s.md.normalizeLinkText("mailto:"+g).replace(/^mailto:/,""):g=s.md.normalizeLinkText(g):g=s.md.normalizeLinkText("http://"+g).replace(/^http:\/\//,"");const f=p[u].index;if(f>o){const _=new s.Token("text","",0);_.content=h.slice(o,f),_.level=d,k.push(_)}const m=new s.Token("link_open","a",1);m.attrs=[["href",A]],m.level=d++,m.markup="linkify",m.info="auto",k.push(m);const y=new s.Token("text","",0);y.content=g,y.level=d,k.push(y);const v=new s.Token("link_close","a",-1);v.level=--d,v.markup="linkify",v.info="auto",k.push(v),o=p[u].lastIndex}if(o<h.length){const u=new s.Token("text","",0);u.content=h.slice(o),u.level=d,k.push(u)}i[e].children=n=wf(n,l,k)}}}}const Sf=/\+-|\.\.|\?\?\?\?|!!!!|,,|--/,NL=/\((c|tm|r)\)/i,ML=/\((c|tm|r)\)/ig,VL={c:"©",r:"®",tm:"™"};function $L(s,i){return VL[i.toLowerCase()]}function zL(s){let i=0;for(let e=s.length-1;e>=0;e--){const a=s[e];a.type==="text"&&!i&&(a.content=a.content.replace(ML,$L)),a.type==="link_open"&&a.info==="auto"&&i--,a.type==="link_close"&&a.info==="auto"&&i++}}function qL(s){let i=0;for(let e=s.length-1;e>=0;e--){const a=s[e];a.type==="text"&&!i&&Sf.test(a.content)&&(a.content=a.content.replace(/\+-/g,"±").replace(/\.{2,}/g,"…").replace(/([?!])…/g,"$1..").replace(/([?!]){4,}/g,"$1$1$1").replace(/,{2,}/g,",").replace(/(^|[^-])---(?=[^-]|$)/mg,"$1—").replace(/(^|\s)--(?=\s|$)/mg,"$1–").replace(/(^|[^-\s])--(?=[^-\s]|$)/mg,"$1–")),a.type==="link_open"&&a.info==="auto"&&i--,a.type==="link_close"&&a.info==="auto"&&i++}}function HL(s){let i;if(s.md.options.typographer)for(i=s.tokens.length-1;i>=0;i--)s.tokens[i].type==="inline"&&(NL.test(s.tokens[i].content)&&zL(s.tokens[i].children),Sf.test(s.tokens[i].content)&&qL(s.tokens[i].children))}const jL=/['"]/,fB=/['"]/g,mB="’";function Wr(s,i,e){return s.slice(0,i)+e+s.slice(i+1)}function UL(s,i){let e;const a=[];for(let n=0;n<s.length;n++){const t=s[n],l=s[n].level;for(e=a.length-1;e>=0&&!(a[e].level<=l);e--);if(a.length=e+1,t.type!=="text")continue;let r=t.content,h=0,p=r.length;s:for(;h<p;){fB.lastIndex=h;const k=fB.exec(r);if(!k)break;let d=!0,o=!0;h=k.index+1;const u=k[0]==="'";let c=32;if(k.index-1>=0)c=r.charCodeAt(k.index-1);else for(e=n-1;e>=0&&!(s[e].type==="softbreak"||s[e].type==="hardbreak");e--)if(s[e].content){c=s[e].content.charCodeAt(s[e].content.length-1);break}let A=32;if(h<p)A=r.charCodeAt(h);else for(e=n+1;e<s.length&&!(s[e].type==="softbreak"||s[e].type==="hardbreak");e++)if(s[e].content){A=s[e].content.charCodeAt(0);break}const g=ql(c)||zl(String.fromCharCode(c)),f=ql(A)||zl(String.fromCharCode(A)),m=$l(c),y=$l(A);if(y?d=!1:f&&(m||g||(d=!1)),m?o=!1:g&&(y||f||(o=!1)),A===34&&k[0]==='"'&&c>=48&&c<=57&&(o=d=!1),d&&o&&(d=g,o=f),!d&&!o){u&&(t.content=Wr(t.content,k.index,mB));continue}if(o)for(e=a.length-1;e>=0;e--){let v=a[e];if(a[e].level<l)break;if(v.single===u&&a[e].level===l){v=a[e];let _,S;u?(_=i.md.options.quotes[2],S=i.md.options.quotes[3]):(_=i.md.options.quotes[0],S=i.md.options.quotes[1]),t.content=Wr(t.content,k.index,S),s[v.token].content=Wr(s[v.token].content,v.pos,_),h+=S.length-1,v.token===n&&(h+=_.length-1),r=t.content,p=r.length,a.length=e;continue s}}d?a.push({token:n,pos:k.index,single:u,level:l}):o&&u&&(t.content=Wr(t.content,k.index,mB))}}}function GL(s){if(s.md.options.typographer)for(let i=s.tokens.length-1;i>=0;i--)s.tokens[i].type!=="inline"||!jL.test(s.tokens[i].content)||UL(s.tokens[i].children,s)}function WL(s){let i,e;const a=s.tokens,n=a.length;for(let t=0;t<n;t++){if(a[t].type!=="inline")continue;const l=a[t].children,r=l.length;for(i=0;i<r;i++)l[i].type==="text_special"&&(l[i].type="text");for(i=e=0;i<r;i++)l[i].type==="text"&&i+1<r&&l[i+1].type==="text"?l[i+1].content=l[i].content+l[i+1].content:(i!==e&&(l[e]=l[i]),e++);i!==e&&(l.length=e)}}const Lk=[["normalize",SL],["block",IL],["inline",RL],["linkify",LL],["replacements",HL],["smartquotes",GL],["text_join",WL]];function Fc(){this.ruler=new Ki;for(let s=0;s<Lk.length;s++)this.ruler.push(Lk[s][0],Lk[s][1])}Fc.prototype.process=function(s){const i=this.ruler.getRules("");for(let e=0,a=i.length;e<a;e++)i[e](s)};Fc.prototype.State=Tf;function Je(s,i,e,a){this.src=s,this.md=i,this.env=e,this.tokens=a,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType="root",this.level=0;const n=this.src;for(let t=0,l=0,r=0,h=0,p=n.length,k=!1;l<p;l++){const d=n.charCodeAt(l);if(!k)if(si(d)){r++,d===9?h+=4-h%4:h++;continue}else k=!0;(d===10||l===p-1)&&(d!==10&&l++,this.bMarks.push(t),this.eMarks.push(l),this.tShift.push(r),this.sCount.push(h),this.bsCount.push(0),k=!1,r=0,h=0,t=l+1)}this.bMarks.push(n.length),this.eMarks.push(n.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}Je.prototype.push=function(s,i,e){const a=new Te(s,i,e);return a.block=!0,e<0&&this.level--,a.level=this.level,e>0&&this.level++,this.tokens.push(a),a};Je.prototype.isEmpty=function(i){return this.bMarks[i]+this.tShift[i]>=this.eMarks[i]};Je.prototype.skipEmptyLines=function(i){for(let e=this.lineMax;i<e&&!(this.bMarks[i]+this.tShift[i]<this.eMarks[i]);i++);return i};Je.prototype.skipSpaces=function(i){for(let e=this.src.length;i<e;i++){const a=this.src.charCodeAt(i);if(!si(a))break}return i};Je.prototype.skipSpacesBack=function(i,e){if(i<=e)return i;for(;i>e;)if(!si(this.src.charCodeAt(--i)))return i+1;return i};Je.prototype.skipChars=function(i,e){for(let a=this.src.length;i<a&&this.src.charCodeAt(i)===e;i++);return i};Je.prototype.skipCharsBack=function(i,e,a){if(i<=a)return i;for(;i>a;)if(e!==this.src.charCodeAt(--i))return i+1;return i};Je.prototype.getLines=function(i,e,a,n){if(i>=e)return"";const t=new Array(e-i);for(let l=0,r=i;r<e;r++,l++){let h=0;const p=this.bMarks[r];let k=p,d;for(r+1<e||n?d=this.eMarks[r]+1:d=this.eMarks[r];k<d&&h<a;){const o=this.src.charCodeAt(k);if(si(o))o===9?h+=4-(h+this.bsCount[r])%4:h++;else if(k-p<this.tShift[r])h++;else break;k++}h>a?t[l]=new Array(h-a+1).join(" ")+this.src.slice(k,d):t[l]=this.src.slice(k,d)}return t.join("")};Je.prototype.Token=Te;const KL=65536;function Nk(s,i){const e=s.bMarks[i]+s.tShift[i],a=s.eMarks[i];return s.src.slice(e,a)}function vB(s){const i=[],e=s.length;let a=0,n=s.charCodeAt(a),t=!1,l=0,r="";for(;a<e;)n===124&&(t?(r+=s.substring(l,a-1),l=a):(i.push(r+s.substring(l,a)),r="",l=a+1)),t=n===92,a++,n=s.charCodeAt(a);return i.push(r+s.substring(l)),i}function YL(s,i,e,a){if(i+2>e)return!1;let n=i+1;if(s.sCount[n]<s.blkIndent||s.sCount[n]-s.blkIndent>=4)return!1;let t=s.bMarks[n]+s.tShift[n];if(t>=s.eMarks[n])return!1;const l=s.src.charCodeAt(t++);if(l!==124&&l!==45&&l!==58||t>=s.eMarks[n])return!1;const r=s.src.charCodeAt(t++);if(r!==124&&r!==45&&r!==58&&!si(r)||l===45&&si(r))return!1;for(;t<s.eMarks[n];){const v=s.src.charCodeAt(t);if(v!==124&&v!==45&&v!==58&&!si(v))return!1;t++}let h=Nk(s,i+1),p=h.split("|");const k=[];for(let v=0;v<p.length;v++){const _=p[v].trim();if(!_){if(v===0||v===p.length-1)continue;return!1}if(!/^:?-+:?$/.test(_))return!1;_.charCodeAt(_.length-1)===58?k.push(_.charCodeAt(0)===58?"center":"right"):_.charCodeAt(0)===58?k.push("left"):k.push("")}if(h=Nk(s,i).trim(),h.indexOf("|")===-1||s.sCount[i]-s.blkIndent>=4)return!1;p=vB(h),p.length&&p[0]===""&&p.shift(),p.length&&p[p.length-1]===""&&p.pop();const d=p.length;if(d===0||d!==k.length)return!1;if(a)return!0;const o=s.parentType;s.parentType="table";const u=s.md.block.ruler.getRules("blockquote"),c=s.push("table_open","table",1),A=[i,0];c.map=A;const g=s.push("thead_open","thead",1);g.map=[i,i+1];const f=s.push("tr_open","tr",1);f.map=[i,i+1];for(let v=0;v<p.length;v++){const _=s.push("th_open","th",1);k[v]&&(_.attrs=[["style","text-align:"+k[v]]]);const S=s.push("inline","",0);S.content=p[v].trim(),S.children=[],s.push("th_close","th",-1)}s.push("tr_close","tr",-1),s.push("thead_close","thead",-1);let m,y=0;for(n=i+2;n<e&&!(s.sCount[n]<s.blkIndent);n++){let v=!1;for(let S=0,N=u.length;S<N;S++)if(u[S](s,n,e,!0)){v=!0;break}if(v||(h=Nk(s,n).trim(),!h)||s.sCount[n]-s.blkIndent>=4||(p=vB(h),p.length&&p[0]===""&&p.shift(),p.length&&p[p.length-1]===""&&p.pop(),y+=d-p.length,y>KL))break;if(n===i+2){const S=s.push("tbody_open","tbody",1);S.map=m=[i+2,0]}const _=s.push("tr_open","tr",1);_.map=[n,n+1];for(let S=0;S<d;S++){const N=s.push("td_open","td",1);k[S]&&(N.attrs=[["style","text-align:"+k[S]]]);const T=s.push("inline","",0);T.content=p[S]?p[S].trim():"",T.children=[],s.push("td_close","td",-1)}s.push("tr_close","tr",-1)}return m&&(s.push("tbody_close","tbody",-1),m[1]=n),s.push("table_close","table",-1),A[1]=n,s.parentType=o,s.line=n,!0}function XL(s,i,e){if(s.sCount[i]-s.blkIndent<4)return!1;let a=i+1,n=a;for(;a<e;){if(s.isEmpty(a)){a++;continue}if(s.sCount[a]-s.blkIndent>=4){a++,n=a;continue}break}s.line=n;const t=s.push("code_block","code",0);return t.content=s.getLines(i,n,4+s.blkIndent,!1)+`
`,t.map=[i,s.line],!0}function ZL(s,i,e,a){let n=s.bMarks[i]+s.tShift[i],t=s.eMarks[i];if(s.sCount[i]-s.blkIndent>=4||n+3>t)return!1;const l=s.src.charCodeAt(n);if(l!==126&&l!==96)return!1;let r=n;n=s.skipChars(n,l);let h=n-r;if(h<3)return!1;const p=s.src.slice(r,n),k=s.src.slice(n,t);if(l===96&&k.indexOf(String.fromCharCode(l))>=0)return!1;if(a)return!0;let d=i,o=!1;for(;d++,!(d>=e||(n=r=s.bMarks[d]+s.tShift[d],t=s.eMarks[d],n<t&&s.sCount[d]<s.blkIndent));)if(s.src.charCodeAt(n)===l&&!(s.sCount[d]-s.blkIndent>=4)&&(n=s.skipChars(n,l),!(n-r<h)&&(n=s.skipSpaces(n),!(n<t)))){o=!0;break}h=s.sCount[i],s.line=d+(o?1:0);const u=s.push("fence","code",0);return u.info=k,u.content=s.getLines(i+1,d,h,!0),u.markup=p,u.map=[i,s.line],!0}function JL(s,i,e,a){let n=s.bMarks[i]+s.tShift[i],t=s.eMarks[i];const l=s.lineMax;if(s.sCount[i]-s.blkIndent>=4||s.src.charCodeAt(n)!==62)return!1;if(a)return!0;const r=[],h=[],p=[],k=[],d=s.md.block.ruler.getRules("blockquote"),o=s.parentType;s.parentType="blockquote";let u=!1,c;for(c=i;c<e;c++){const y=s.sCount[c]<s.blkIndent;if(n=s.bMarks[c]+s.tShift[c],t=s.eMarks[c],n>=t)break;if(s.src.charCodeAt(n++)===62&&!y){let _=s.sCount[c]+1,S,N;s.src.charCodeAt(n)===32?(n++,_++,N=!1,S=!0):s.src.charCodeAt(n)===9?(S=!0,(s.bsCount[c]+_)%4===3?(n++,_++,N=!1):N=!0):S=!1;let T=_;for(r.push(s.bMarks[c]),s.bMarks[c]=n;n<t;){const C=s.src.charCodeAt(n);if(si(C))C===9?T+=4-(T+s.bsCount[c]+(N?1:0))%4:T++;else break;n++}u=n>=t,h.push(s.bsCount[c]),s.bsCount[c]=s.sCount[c]+1+(S?1:0),p.push(s.sCount[c]),s.sCount[c]=T-_,k.push(s.tShift[c]),s.tShift[c]=n-s.bMarks[c];continue}if(u)break;let v=!1;for(let _=0,S=d.length;_<S;_++)if(d[_](s,c,e,!0)){v=!0;break}if(v){s.lineMax=c,s.blkIndent!==0&&(r.push(s.bMarks[c]),h.push(s.bsCount[c]),k.push(s.tShift[c]),p.push(s.sCount[c]),s.sCount[c]-=s.blkIndent);break}r.push(s.bMarks[c]),h.push(s.bsCount[c]),k.push(s.tShift[c]),p.push(s.sCount[c]),s.sCount[c]=-1}const A=s.blkIndent;s.blkIndent=0;const g=s.push("blockquote_open","blockquote",1);g.markup=">";const f=[i,0];g.map=f,s.md.block.tokenize(s,i,c);const m=s.push("blockquote_close","blockquote",-1);m.markup=">",s.lineMax=l,s.parentType=o,f[1]=s.line;for(let y=0;y<k.length;y++)s.bMarks[y+i]=r[y],s.tShift[y+i]=k[y],s.sCount[y+i]=p[y],s.bsCount[y+i]=h[y];return s.blkIndent=A,!0}function QL(s,i,e,a){const n=s.eMarks[i];if(s.sCount[i]-s.blkIndent>=4)return!1;let t=s.bMarks[i]+s.tShift[i];const l=s.src.charCodeAt(t++);if(l!==42&&l!==45&&l!==95)return!1;let r=1;for(;t<n;){const p=s.src.charCodeAt(t++);if(p!==l&&!si(p))return!1;p===l&&r++}if(r<3)return!1;if(a)return!0;s.line=i+1;const h=s.push("hr","hr",0);return h.map=[i,s.line],h.markup=Array(r+1).join(String.fromCharCode(l)),!0}function FB(s,i){const e=s.eMarks[i];let a=s.bMarks[i]+s.tShift[i];const n=s.src.charCodeAt(a++);if(n!==42&&n!==45&&n!==43)return-1;if(a<e){const t=s.src.charCodeAt(a);if(!si(t))return-1}return a}function EB(s,i){const e=s.bMarks[i]+s.tShift[i],a=s.eMarks[i];let n=e;if(n+1>=a)return-1;let t=s.src.charCodeAt(n++);if(t<48||t>57)return-1;for(;;){if(n>=a)return-1;if(t=s.src.charCodeAt(n++),t>=48&&t<=57){if(n-e>=10)return-1;continue}if(t===41||t===46)break;return-1}return n<a&&(t=s.src.charCodeAt(n),!si(t))?-1:n}function sN(s,i){const e=s.level+2;for(let a=i+2,n=s.tokens.length-2;a<n;a++)s.tokens[a].level===e&&s.tokens[a].type==="paragraph_open"&&(s.tokens[a+2].hidden=!0,s.tokens[a].hidden=!0,a+=2)}function iN(s,i,e,a){let n,t,l,r,h=i,p=!0;if(s.sCount[h]-s.blkIndent>=4||s.listIndent>=0&&s.sCount[h]-s.listIndent>=4&&s.sCount[h]<s.blkIndent)return!1;let k=!1;a&&s.parentType==="paragraph"&&s.sCount[h]>=s.blkIndent&&(k=!0);let d,o,u;if((u=EB(s,h))>=0){if(d=!0,l=s.bMarks[h]+s.tShift[h],o=Number(s.src.slice(l,u-1)),k&&o!==1)return!1}else if((u=FB(s,h))>=0)d=!1;else return!1;if(k&&s.skipSpaces(u)>=s.eMarks[h])return!1;if(a)return!0;const c=s.src.charCodeAt(u-1),A=s.tokens.length;d?(r=s.push("ordered_list_open","ol",1),o!==1&&(r.attrs=[["start",o]])):r=s.push("bullet_list_open","ul",1);const g=[h,0];r.map=g,r.markup=String.fromCharCode(c);let f=!1;const m=s.md.block.ruler.getRules("list"),y=s.parentType;for(s.parentType="list";h<e;){t=u,n=s.eMarks[h];const v=s.sCount[h]+u-(s.bMarks[h]+s.tShift[h]);let _=v;for(;t<n;){const $=s.src.charCodeAt(t);if($===9)_+=4-(_+s.bsCount[h])%4;else if($===32)_++;else break;t++}const S=t;let N;S>=n?N=1:N=_-v,N>4&&(N=1);const T=v+N;r=s.push("list_item_open","li",1),r.markup=String.fromCharCode(c);const C=[h,0];r.map=C,d&&(r.info=s.src.slice(l,u-1));const I=s.tight,O=s.tShift[h],w=s.sCount[h],z=s.listIndent;if(s.listIndent=s.blkIndent,s.blkIndent=T,s.tight=!0,s.tShift[h]=S-s.bMarks[h],s.sCount[h]=_,S>=n&&s.isEmpty(h+1)?s.line=Math.min(s.line+2,e):s.md.block.tokenize(s,h,e,!0),(!s.tight||f)&&(p=!1),f=s.line-h>1&&s.isEmpty(s.line-1),s.blkIndent=s.listIndent,s.listIndent=z,s.tShift[h]=O,s.sCount[h]=w,s.tight=I,r=s.push("list_item_close","li",-1),r.markup=String.fromCharCode(c),h=s.line,C[1]=h,h>=e||s.sCount[h]<s.blkIndent||s.sCount[h]-s.blkIndent>=4)break;let b=!1;for(let $=0,R=m.length;$<R;$++)if(m[$](s,h,e,!0)){b=!0;break}if(b)break;if(d){if(u=EB(s,h),u<0)break;l=s.bMarks[h]+s.tShift[h]}else if(u=FB(s,h),u<0)break;if(c!==s.src.charCodeAt(u-1))break}return d?r=s.push("ordered_list_close","ol",-1):r=s.push("bullet_list_close","ul",-1),r.markup=String.fromCharCode(c),g[1]=h,s.line=h,s.parentType=y,p&&sN(s,A),!0}function eN(s,i,e,a){let n=s.bMarks[i]+s.tShift[i],t=s.eMarks[i],l=i+1;if(s.sCount[i]-s.blkIndent>=4||s.src.charCodeAt(n)!==91)return!1;function r(m){const y=s.lineMax;if(m>=y||s.isEmpty(m))return null;let v=!1;if(s.sCount[m]-s.blkIndent>3&&(v=!0),s.sCount[m]<0&&(v=!0),!v){const N=s.md.block.ruler.getRules("reference"),T=s.parentType;s.parentType="reference";let C=!1;for(let I=0,O=N.length;I<O;I++)if(N[I](s,m,y,!0)){C=!0;break}if(s.parentType=T,C)return null}const _=s.bMarks[m]+s.tShift[m],S=s.eMarks[m];return s.src.slice(_,S+1)}let h=s.src.slice(n,t+1);t=h.length;let p=-1;for(n=1;n<t;n++){const m=h.charCodeAt(n);if(m===91)return!1;if(m===93){p=n;break}else if(m===10){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}else if(m===92&&(n++,n<t&&h.charCodeAt(n)===10)){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}}if(p<0||h.charCodeAt(p+1)!==58)return!1;for(n=p+2;n<t;n++){const m=h.charCodeAt(n);if(m===10){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}else if(!si(m))break}const k=s.md.helpers.parseLinkDestination(h,n,t);if(!k.ok)return!1;const d=s.md.normalizeLink(k.str);if(!s.md.validateLink(d))return!1;n=k.pos;const o=n,u=l,c=n;for(;n<t;n++){const m=h.charCodeAt(n);if(m===10){const y=r(l);y!==null&&(h+=y,t=h.length,l++)}else if(!si(m))break}let A=s.md.helpers.parseLinkTitle(h,n,t);for(;A.can_continue;){const m=r(l);if(m===null)break;h+=m,n=t,t=h.length,l++,A=s.md.helpers.parseLinkTitle(h,n,t,A)}let g;for(n<t&&c!==n&&A.ok?(g=A.str,n=A.pos):(g="",n=o,l=u);n<t;){const m=h.charCodeAt(n);if(!si(m))break;n++}if(n<t&&h.charCodeAt(n)!==10&&g)for(g="",n=o,l=u;n<t;){const m=h.charCodeAt(n);if(!si(m))break;n++}if(n<t&&h.charCodeAt(n)!==10)return!1;const f=Pp(h.slice(1,p));return f?(a||(typeof s.env.references>"u"&&(s.env.references={}),typeof s.env.references[f]>"u"&&(s.env.references[f]={title:g,href:d}),s.line=l),!0):!1}const aN=["address","article","aside","base","basefont","blockquote","body","caption","center","col","colgroup","dd","details","dialog","dir","div","dl","dt","fieldset","figcaption","figure","footer","form","frame","frameset","h1","h2","h3","h4","h5","h6","head","header","hr","html","iframe","legend","li","link","main","menu","menuitem","nav","noframes","ol","optgroup","option","p","param","search","section","summary","table","tbody","td","tfoot","th","thead","title","tr","track","ul"],nN="[a-zA-Z_:][a-zA-Z0-9:._-]*",tN="[^\"'=<>`\\x00-\\x20]+",lN="'[^']*'",rN='"[^"]*"',hN="(?:"+tN+"|"+lN+"|"+rN+")",pN="(?:\\s+"+nN+"(?:\\s*=\\s*"+hN+")?)",If="<[A-Za-z][A-Za-z0-9\\-]*"+pN+"*\\s*\\/?>",Rf="<\\/[A-Za-z][A-Za-z0-9\\-]*\\s*>",kN="<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->",dN="<[?][\\s\\S]*?[?]>",oN="<![A-Za-z][^>]*>",uN="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",cN=new RegExp("^(?:"+If+"|"+Rf+"|"+kN+"|"+dN+"|"+oN+"|"+uN+")"),gN=new RegExp("^(?:"+If+"|"+Rf+")"),$n=[[/^<(script|pre|style|textarea)(?=(\s|>|$))/i,/<\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\?/,/\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\[CDATA\[/,/\]\]>/,!0],[new RegExp("^</?("+aN.join("|")+")(?=(\\s|/?>|$))","i"),/^$/,!0],[new RegExp(gN.source+"\\s*$"),/^$/,!1]];function BN(s,i,e,a){let n=s.bMarks[i]+s.tShift[i],t=s.eMarks[i];if(s.sCount[i]-s.blkIndent>=4||!s.md.options.html||s.src.charCodeAt(n)!==60)return!1;let l=s.src.slice(n,t),r=0;for(;r<$n.length&&!$n[r][0].test(l);r++);if(r===$n.length)return!1;if(a)return $n[r][2];let h=i+1;if(!$n[r][1].test(l)){for(;h<e&&!(s.sCount[h]<s.blkIndent);h++)if(n=s.bMarks[h]+s.tShift[h],t=s.eMarks[h],l=s.src.slice(n,t),$n[r][1].test(l)){l.length!==0&&h++;break}}s.line=h;const p=s.push("html_block","",0);return p.map=[i,h],p.content=s.getLines(i,h,s.blkIndent,!0),!0}function AN(s,i,e,a){let n=s.bMarks[i]+s.tShift[i],t=s.eMarks[i];if(s.sCount[i]-s.blkIndent>=4)return!1;let l=s.src.charCodeAt(n);if(l!==35||n>=t)return!1;let r=1;for(l=s.src.charCodeAt(++n);l===35&&n<t&&r<=6;)r++,l=s.src.charCodeAt(++n);if(r>6||n<t&&!si(l))return!1;if(a)return!0;t=s.skipSpacesBack(t,n);const h=s.skipCharsBack(t,35,n);h>n&&si(s.src.charCodeAt(h-1))&&(t=h),s.line=i+1;const p=s.push("heading_open","h"+String(r),1);p.markup="########".slice(0,r),p.map=[i,s.line];const k=s.push("inline","",0);k.content=s.src.slice(n,t).trim(),k.map=[i,s.line],k.children=[];const d=s.push("heading_close","h"+String(r),-1);return d.markup="########".slice(0,r),!0}function yN(s,i,e){const a=s.md.block.ruler.getRules("paragraph");if(s.sCount[i]-s.blkIndent>=4)return!1;const n=s.parentType;s.parentType="paragraph";let t=0,l,r=i+1;for(;r<e&&!s.isEmpty(r);r++){if(s.sCount[r]-s.blkIndent>3)continue;if(s.sCount[r]>=s.blkIndent){let u=s.bMarks[r]+s.tShift[r];const c=s.eMarks[r];if(u<c&&(l=s.src.charCodeAt(u),(l===45||l===61)&&(u=s.skipChars(u,l),u=s.skipSpaces(u),u>=c))){t=l===61?1:2;break}}if(s.sCount[r]<0)continue;let o=!1;for(let u=0,c=a.length;u<c;u++)if(a[u](s,r,e,!0)){o=!0;break}if(o)break}if(!t)return!1;const h=s.getLines(i,r,s.blkIndent,!1).trim();s.line=r+1;const p=s.push("heading_open","h"+String(t),1);p.markup=String.fromCharCode(l),p.map=[i,s.line];const k=s.push("inline","",0);k.content=h,k.map=[i,s.line-1],k.children=[];const d=s.push("heading_close","h"+String(t),-1);return d.markup=String.fromCharCode(l),s.parentType=n,!0}function fN(s,i,e){const a=s.md.block.ruler.getRules("paragraph"),n=s.parentType;let t=i+1;for(s.parentType="paragraph";t<e&&!s.isEmpty(t);t++){if(s.sCount[t]-s.blkIndent>3||s.sCount[t]<0)continue;let p=!1;for(let k=0,d=a.length;k<d;k++)if(a[k](s,t,e,!0)){p=!0;break}if(p)break}const l=s.getLines(i,t,s.blkIndent,!1).trim();s.line=t;const r=s.push("paragraph_open","p",1);r.map=[i,s.line];const h=s.push("inline","",0);return h.content=l,h.map=[i,s.line],h.children=[],s.push("paragraph_close","p",-1),s.parentType=n,!0}const Kr=[["table",YL,["paragraph","reference"]],["code",XL],["fence",ZL,["paragraph","reference","blockquote","list"]],["blockquote",JL,["paragraph","reference","blockquote","list"]],["hr",QL,["paragraph","reference","blockquote","list"]],["list",iN,["paragraph","reference","blockquote"]],["reference",eN],["html_block",BN,["paragraph","reference","blockquote"]],["heading",AN,["paragraph","reference","blockquote"]],["lheading",yN],["paragraph",fN]];function Lp(){this.ruler=new Ki;for(let s=0;s<Kr.length;s++)this.ruler.push(Kr[s][0],Kr[s][1],{alt:(Kr[s][2]||[]).slice()})}Lp.prototype.tokenize=function(s,i,e){const a=this.ruler.getRules(""),n=a.length,t=s.md.options.maxNesting;let l=i,r=!1;for(;l<e&&(s.line=l=s.skipEmptyLines(l),!(l>=e||s.sCount[l]<s.blkIndent));){if(s.level>=t){s.line=e;break}const h=s.line;let p=!1;for(let k=0;k<n;k++)if(p=a[k](s,l,e,!1),p){if(h>=s.line)throw new Error("block rule didn't increment state.line");break}if(!p)throw new Error("none of the block rules matched");s.tight=!r,s.isEmpty(s.line-1)&&(r=!0),l=s.line,l<e&&s.isEmpty(l)&&(r=!0,l++,s.line=l)}};Lp.prototype.parse=function(s,i,e,a){if(!s)return;const n=new this.State(s,i,e,a);this.tokenize(n,n.line,n.lineMax)};Lp.prototype.State=Je;function Er(s,i,e,a){this.src=s,this.env=e,this.md=i,this.tokens=a,this.tokens_meta=Array(a.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending="",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}Er.prototype.pushPending=function(){const s=new Te("text","",0);return s.content=this.pending,s.level=this.pendingLevel,this.tokens.push(s),this.pending="",s};Er.prototype.push=function(s,i,e){this.pending&&this.pushPending();const a=new Te(s,i,e);let n=null;return e<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),a.level=this.level,e>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],n={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(a),this.tokens_meta.push(n),a};Er.prototype.scanDelims=function(s,i){const e=this.posMax,a=this.src.charCodeAt(s),n=s>0?this.src.charCodeAt(s-1):32;let t=s;for(;t<e&&this.src.charCodeAt(t)===a;)t++;const l=t-s,r=t<e?this.src.charCodeAt(t):32,h=ql(n)||zl(String.fromCharCode(n)),p=ql(r)||zl(String.fromCharCode(r)),k=$l(n),d=$l(r),o=!d&&(!p||k||h),u=!k&&(!h||d||p);return{can_open:o&&(i||!u||h),can_close:u&&(i||!o||p),length:l}};Er.prototype.Token=Te;function mN(s){switch(s){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}function vN(s,i){let e=s.pos;for(;e<s.posMax&&!mN(s.src.charCodeAt(e));)e++;return e===s.pos?!1:(i||(s.pending+=s.src.slice(s.pos,e)),s.pos=e,!0)}const FN=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;function EN(s,i){if(!s.md.options.linkify||s.linkLevel>0)return!1;const e=s.pos,a=s.posMax;if(e+3>a||s.src.charCodeAt(e)!==58||s.src.charCodeAt(e+1)!==47||s.src.charCodeAt(e+2)!==47)return!1;const n=s.pending.match(FN);if(!n)return!1;const t=n[1],l=s.md.linkify.matchAtStart(s.src.slice(e-t.length));if(!l)return!1;let r=l.url;if(r.length<=t.length)return!1;r=r.replace(/\*+$/,"");const h=s.md.normalizeLink(r);if(!s.md.validateLink(h))return!1;if(!i){s.pending=s.pending.slice(0,-t.length);const p=s.push("link_open","a",1);p.attrs=[["href",h]],p.markup="linkify",p.info="auto";const k=s.push("text","",0);k.content=s.md.normalizeLinkText(r);const d=s.push("link_close","a",-1);d.markup="linkify",d.info="auto"}return s.pos+=r.length-t.length,!0}function bN(s,i){let e=s.pos;if(s.src.charCodeAt(e)!==10)return!1;const a=s.pending.length-1,n=s.posMax;if(!i)if(a>=0&&s.pending.charCodeAt(a)===32)if(a>=1&&s.pending.charCodeAt(a-1)===32){let t=a-1;for(;t>=1&&s.pending.charCodeAt(t-1)===32;)t--;s.pending=s.pending.slice(0,t),s.push("hardbreak","br",0)}else s.pending=s.pending.slice(0,-1),s.push("softbreak","br",0);else s.push("softbreak","br",0);for(e++;e<n&&si(s.src.charCodeAt(e));)e++;return s.pos=e,!0}const Ec=[];for(let s=0;s<256;s++)Ec.push(0);"\\!\"#$%&'()*+,./:;<=>?@[]^_`{|}~-".split("").forEach(function(s){Ec[s.charCodeAt(0)]=1});function CN(s,i){let e=s.pos;const a=s.posMax;if(s.src.charCodeAt(e)!==92||(e++,e>=a))return!1;let n=s.src.charCodeAt(e);if(n===10){for(i||s.push("hardbreak","br",0),e++;e<a&&(n=s.src.charCodeAt(e),!!si(n));)e++;return s.pos=e,!0}let t=s.src[e];if(n>=55296&&n<=56319&&e+1<a){const r=s.src.charCodeAt(e+1);r>=56320&&r<=57343&&(t+=s.src[e+1],e++)}const l="\\"+t;if(!i){const r=s.push("text_special","",0);n<256&&Ec[n]!==0?r.content=t:r.content=l,r.markup=l,r.info="escape"}return s.pos=e+1,!0}function _N(s,i){let e=s.pos;if(s.src.charCodeAt(e)!==96)return!1;const n=e;e++;const t=s.posMax;for(;e<t&&s.src.charCodeAt(e)===96;)e++;const l=s.src.slice(n,e),r=l.length;if(s.backticksScanned&&(s.backticks[r]||0)<=n)return i||(s.pending+=l),s.pos+=r,!0;let h=e,p;for(;(p=s.src.indexOf("`",h))!==-1;){for(h=p+1;h<t&&s.src.charCodeAt(h)===96;)h++;const k=h-p;if(k===r){if(!i){const d=s.push("code_inline","code",0);d.markup=l,d.content=s.src.slice(e,p).replace(/\n/g," ").replace(/^ (.+) $/,"$1")}return s.pos=h,!0}s.backticks[k]=p}return s.backticksScanned=!0,i||(s.pending+=l),s.pos+=r,!0}function DN(s,i){const e=s.pos,a=s.src.charCodeAt(e);if(i||a!==126)return!1;const n=s.scanDelims(s.pos,!0);let t=n.length;const l=String.fromCharCode(a);if(t<2)return!1;let r;t%2&&(r=s.push("text","",0),r.content=l,t--);for(let h=0;h<t;h+=2)r=s.push("text","",0),r.content=l+l,s.delimiters.push({marker:a,length:0,token:s.tokens.length-1,end:-1,open:n.can_open,close:n.can_close});return s.pos+=n.length,!0}function bB(s,i){let e;const a=[],n=i.length;for(let t=0;t<n;t++){const l=i[t];if(l.marker!==126||l.end===-1)continue;const r=i[l.end];e=s.tokens[l.token],e.type="s_open",e.tag="s",e.nesting=1,e.markup="~~",e.content="",e=s.tokens[r.token],e.type="s_close",e.tag="s",e.nesting=-1,e.markup="~~",e.content="",s.tokens[r.token-1].type==="text"&&s.tokens[r.token-1].content==="~"&&a.push(r.token-1)}for(;a.length;){const t=a.pop();let l=t+1;for(;l<s.tokens.length&&s.tokens[l].type==="s_close";)l++;l--,t!==l&&(e=s.tokens[l],s.tokens[l]=s.tokens[t],s.tokens[t]=e)}}function wN(s){const i=s.tokens_meta,e=s.tokens_meta.length;bB(s,s.delimiters);for(let a=0;a<e;a++)i[a]&&i[a].delimiters&&bB(s,i[a].delimiters)}const Of={tokenize:DN,postProcess:wN};function xN(s,i){const e=s.pos,a=s.src.charCodeAt(e);if(i||a!==95&&a!==42)return!1;const n=s.scanDelims(s.pos,a===42);for(let t=0;t<n.length;t++){const l=s.push("text","",0);l.content=String.fromCharCode(a),s.delimiters.push({marker:a,length:n.length,token:s.tokens.length-1,end:-1,open:n.can_open,close:n.can_close})}return s.pos+=n.length,!0}function CB(s,i){const e=i.length;for(let a=e-1;a>=0;a--){const n=i[a];if(n.marker!==95&&n.marker!==42||n.end===-1)continue;const t=i[n.end],l=a>0&&i[a-1].end===n.end+1&&i[a-1].marker===n.marker&&i[a-1].token===n.token-1&&i[n.end+1].token===t.token+1,r=String.fromCharCode(n.marker),h=s.tokens[n.token];h.type=l?"strong_open":"em_open",h.tag=l?"strong":"em",h.nesting=1,h.markup=l?r+r:r,h.content="";const p=s.tokens[t.token];p.type=l?"strong_close":"em_close",p.tag=l?"strong":"em",p.nesting=-1,p.markup=l?r+r:r,p.content="",l&&(s.tokens[i[a-1].token].content="",s.tokens[i[n.end+1].token].content="",a--)}}function TN(s){const i=s.tokens_meta,e=s.tokens_meta.length;CB(s,s.delimiters);for(let a=0;a<e;a++)i[a]&&i[a].delimiters&&CB(s,i[a].delimiters)}const Pf={tokenize:xN,postProcess:TN};function SN(s,i){let e,a,n,t,l="",r="",h=s.pos,p=!0;if(s.src.charCodeAt(s.pos)!==91)return!1;const k=s.pos,d=s.posMax,o=s.pos+1,u=s.md.helpers.parseLinkLabel(s,s.pos,!0);if(u<0)return!1;let c=u+1;if(c<d&&s.src.charCodeAt(c)===40){for(p=!1,c++;c<d&&(e=s.src.charCodeAt(c),!(!si(e)&&e!==10));c++);if(c>=d)return!1;if(h=c,n=s.md.helpers.parseLinkDestination(s.src,c,s.posMax),n.ok){for(l=s.md.normalizeLink(n.str),s.md.validateLink(l)?c=n.pos:l="",h=c;c<d&&(e=s.src.charCodeAt(c),!(!si(e)&&e!==10));c++);if(n=s.md.helpers.parseLinkTitle(s.src,c,s.posMax),c<d&&h!==c&&n.ok)for(r=n.str,c=n.pos;c<d&&(e=s.src.charCodeAt(c),!(!si(e)&&e!==10));c++);}(c>=d||s.src.charCodeAt(c)!==41)&&(p=!0),c++}if(p){if(typeof s.env.references>"u")return!1;if(c<d&&s.src.charCodeAt(c)===91?(h=c+1,c=s.md.helpers.parseLinkLabel(s,c),c>=0?a=s.src.slice(h,c++):c=u+1):c=u+1,a||(a=s.src.slice(o,u)),t=s.env.references[Pp(a)],!t)return s.pos=k,!1;l=t.href,r=t.title}if(!i){s.pos=o,s.posMax=u;const A=s.push("link_open","a",1),g=[["href",l]];A.attrs=g,r&&g.push(["title",r]),s.linkLevel++,s.md.inline.tokenize(s),s.linkLevel--,s.push("link_close","a",-1)}return s.pos=c,s.posMax=d,!0}function IN(s,i){let e,a,n,t,l,r,h,p,k="";const d=s.pos,o=s.posMax;if(s.src.charCodeAt(s.pos)!==33||s.src.charCodeAt(s.pos+1)!==91)return!1;const u=s.pos+2,c=s.md.helpers.parseLinkLabel(s,s.pos+1,!1);if(c<0)return!1;if(t=c+1,t<o&&s.src.charCodeAt(t)===40){for(t++;t<o&&(e=s.src.charCodeAt(t),!(!si(e)&&e!==10));t++);if(t>=o)return!1;for(p=t,r=s.md.helpers.parseLinkDestination(s.src,t,s.posMax),r.ok&&(k=s.md.normalizeLink(r.str),s.md.validateLink(k)?t=r.pos:k=""),p=t;t<o&&(e=s.src.charCodeAt(t),!(!si(e)&&e!==10));t++);if(r=s.md.helpers.parseLinkTitle(s.src,t,s.posMax),t<o&&p!==t&&r.ok)for(h=r.str,t=r.pos;t<o&&(e=s.src.charCodeAt(t),!(!si(e)&&e!==10));t++);else h="";if(t>=o||s.src.charCodeAt(t)!==41)return s.pos=d,!1;t++}else{if(typeof s.env.references>"u")return!1;if(t<o&&s.src.charCodeAt(t)===91?(p=t+1,t=s.md.helpers.parseLinkLabel(s,t),t>=0?n=s.src.slice(p,t++):t=c+1):t=c+1,n||(n=s.src.slice(u,c)),l=s.env.references[Pp(n)],!l)return s.pos=d,!1;k=l.href,h=l.title}if(!i){a=s.src.slice(u,c);const A=[];s.md.inline.parse(a,s.md,s.env,A);const g=s.push("image","img",0),f=[["src",k],["alt",""]];g.attrs=f,g.children=A,g.content=a,h&&f.push(["title",h])}return s.pos=t,s.posMax=o,!0}const RN=/^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,ON=/^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\x00-\x20]*)$/;function PN(s,i){let e=s.pos;if(s.src.charCodeAt(e)!==60)return!1;const a=s.pos,n=s.posMax;for(;;){if(++e>=n)return!1;const l=s.src.charCodeAt(e);if(l===60)return!1;if(l===62)break}const t=s.src.slice(a+1,e);if(ON.test(t)){const l=s.md.normalizeLink(t);if(!s.md.validateLink(l))return!1;if(!i){const r=s.push("link_open","a",1);r.attrs=[["href",l]],r.markup="autolink",r.info="auto";const h=s.push("text","",0);h.content=s.md.normalizeLinkText(t);const p=s.push("link_close","a",-1);p.markup="autolink",p.info="auto"}return s.pos+=t.length+2,!0}if(RN.test(t)){const l=s.md.normalizeLink("mailto:"+t);if(!s.md.validateLink(l))return!1;if(!i){const r=s.push("link_open","a",1);r.attrs=[["href",l]],r.markup="autolink",r.info="auto";const h=s.push("text","",0);h.content=s.md.normalizeLinkText(t);const p=s.push("link_close","a",-1);p.markup="autolink",p.info="auto"}return s.pos+=t.length+2,!0}return!1}function LN(s){return/^<a[>\s]/i.test(s)}function NN(s){return/^<\/a\s*>/i.test(s)}function MN(s){const i=s|32;return i>=97&&i<=122}function VN(s,i){if(!s.md.options.html)return!1;const e=s.posMax,a=s.pos;if(s.src.charCodeAt(a)!==60||a+2>=e)return!1;const n=s.src.charCodeAt(a+1);if(n!==33&&n!==63&&n!==47&&!MN(n))return!1;const t=s.src.slice(a).match(cN);if(!t)return!1;if(!i){const l=s.push("html_inline","",0);l.content=t[0],LN(l.content)&&s.linkLevel++,NN(l.content)&&s.linkLevel--}return s.pos+=t[0].length,!0}const $N=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,zN=/^&([a-z][a-z0-9]{1,31});/i;function qN(s,i){const e=s.pos,a=s.posMax;if(s.src.charCodeAt(e)!==38||e+1>=a)return!1;if(s.src.charCodeAt(e+1)===35){const t=s.src.slice(e).match($N);if(t){if(!i){const l=t[1][0].toLowerCase()==="x"?parseInt(t[1].slice(1),16):parseInt(t[1],10),r=s.push("text_special","",0);r.content=vc(l)?$h(l):$h(65533),r.markup=t[0],r.info="entity"}return s.pos+=t[0].length,!0}}else{const t=s.src.slice(e).match(zN);if(t){const l=Df(t[0]);if(l!==t[0]){if(!i){const r=s.push("text_special","",0);r.content=l,r.markup=t[0],r.info="entity"}return s.pos+=t[0].length,!0}}}return!1}function _B(s){const i={},e=s.length;if(!e)return;let a=0,n=-2;const t=[];for(let l=0;l<e;l++){const r=s[l];if(t.push(0),(s[a].marker!==r.marker||n!==r.token-1)&&(a=l),n=r.token,r.length=r.length||0,!r.close)continue;i.hasOwnProperty(r.marker)||(i[r.marker]=[-1,-1,-1,-1,-1,-1]);const h=i[r.marker][(r.open?3:0)+r.length%3];let p=a-t[a]-1,k=p;for(;p>h;p-=t[p]+1){const d=s[p];if(d.marker===r.marker&&d.open&&d.end<0){let o=!1;if((d.close||r.open)&&(d.length+r.length)%3===0&&(d.length%3!==0||r.length%3!==0)&&(o=!0),!o){const u=p>0&&!s[p-1].open?t[p-1]+1:0;t[l]=l-p+u,t[p]=u,r.open=!1,d.end=l,d.close=!1,k=-1,n=-2;break}}}k!==-1&&(i[r.marker][(r.open?3:0)+(r.length||0)%3]=k)}}function HN(s){const i=s.tokens_meta,e=s.tokens_meta.length;_B(s.delimiters);for(let a=0;a<e;a++)i[a]&&i[a].delimiters&&_B(i[a].delimiters)}function jN(s){let i,e,a=0;const n=s.tokens,t=s.tokens.length;for(i=e=0;i<t;i++)n[i].nesting<0&&a--,n[i].level=a,n[i].nesting>0&&a++,n[i].type==="text"&&i+1<t&&n[i+1].type==="text"?n[i+1].content=n[i].content+n[i+1].content:(i!==e&&(n[e]=n[i]),e++);i!==e&&(n.length=e)}const Mk=[["text",vN],["linkify",EN],["newline",bN],["escape",CN],["backticks",_N],["strikethrough",Of.tokenize],["emphasis",Pf.tokenize],["link",SN],["image",IN],["autolink",PN],["html_inline",VN],["entity",qN]],Vk=[["balance_pairs",HN],["strikethrough",Of.postProcess],["emphasis",Pf.postProcess],["fragments_join",jN]];function br(){this.ruler=new Ki;for(let s=0;s<Mk.length;s++)this.ruler.push(Mk[s][0],Mk[s][1]);this.ruler2=new Ki;for(let s=0;s<Vk.length;s++)this.ruler2.push(Vk[s][0],Vk[s][1])}br.prototype.skipToken=function(s){const i=s.pos,e=this.ruler.getRules(""),a=e.length,n=s.md.options.maxNesting,t=s.cache;if(typeof t[i]<"u"){s.pos=t[i];return}let l=!1;if(s.level<n){for(let r=0;r<a;r++)if(s.level++,l=e[r](s,!0),s.level--,l){if(i>=s.pos)throw new Error("inline rule didn't increment state.pos");break}}else s.pos=s.posMax;l||s.pos++,t[i]=s.pos};br.prototype.tokenize=function(s){const i=this.ruler.getRules(""),e=i.length,a=s.posMax,n=s.md.options.maxNesting;for(;s.pos<a;){const t=s.pos;let l=!1;if(s.level<n){for(let r=0;r<e;r++)if(l=i[r](s,!1),l){if(t>=s.pos)throw new Error("inline rule didn't increment state.pos");break}}if(l){if(s.pos>=a)break;continue}s.pending+=s.src[s.pos++]}s.pending&&s.pushPending()};br.prototype.parse=function(s,i,e,a){const n=new this.State(s,i,e,a);this.tokenize(n);const t=this.ruler2.getRules(""),l=t.length;for(let r=0;r<l;r++)t[r](n)};br.prototype.State=Er;function UN(s){const i={};s=s||{},i.src_Any=Ff.source,i.src_Cc=Ef.source,i.src_Z=Cf.source,i.src_P=fc.source,i.src_ZPCc=[i.src_Z,i.src_P,i.src_Cc].join("|"),i.src_ZCc=[i.src_Z,i.src_Cc].join("|");const e="[><｜]";return i.src_pseudo_letter="(?:(?!"+e+"|"+i.src_ZPCc+")"+i.src_Any+")",i.src_ip4="(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)",i.src_auth="(?:(?:(?!"+i.src_ZCc+"|[@/\\[\\]()]).)+@)?",i.src_port="(?::(?:6(?:[0-4]\\d{3}|5(?:[0-4]\\d{2}|5(?:[0-2]\\d|3[0-5])))|[1-5]?\\d{1,4}))?",i.src_host_terminator="(?=$|"+e+"|"+i.src_ZPCc+")(?!"+(s["---"]?"-(?!--)|":"-|")+"_|:\\d|\\.-|\\.(?!$|"+i.src_ZPCc+"))",i.src_path="(?:[/?#](?:(?!"+i.src_ZCc+"|"+e+`|[()[\\]{}.,"'?!\\-;]).|\\[(?:(?!`+i.src_ZCc+"|\\]).)*\\]|\\((?:(?!"+i.src_ZCc+"|[)]).)*\\)|\\{(?:(?!"+i.src_ZCc+'|[}]).)*\\}|\\"(?:(?!'+i.src_ZCc+`|["]).)+\\"|\\'(?:(?!`+i.src_ZCc+"|[']).)+\\'|\\'(?="+i.src_pseudo_letter+"|[-])|\\.{2,}[a-zA-Z0-9%/&]|\\.(?!"+i.src_ZCc+"|[.]|$)|"+(s["---"]?"\\-(?!--(?:[^-]|$))(?:-*)|":"\\-+|")+",(?!"+i.src_ZCc+"|$)|;(?!"+i.src_ZCc+"|$)|\\!+(?!"+i.src_ZCc+"|[!]|$)|\\?(?!"+i.src_ZCc+"|[?]|$))+|\\/)?",i.src_email_name='[\\-;:&=\\+\\$,\\.a-zA-Z0-9_][\\-;:&=\\+\\$,\\"\\.a-zA-Z0-9_]*',i.src_xn="xn--[a-z0-9\\-]{1,59}",i.src_domain_root="(?:"+i.src_xn+"|"+i.src_pseudo_letter+"{1,63})",i.src_domain="(?:"+i.src_xn+"|(?:"+i.src_pseudo_letter+")|(?:"+i.src_pseudo_letter+"(?:-|"+i.src_pseudo_letter+"){0,61}"+i.src_pseudo_letter+"))",i.src_host="(?:(?:(?:(?:"+i.src_domain+")\\.)*"+i.src_domain+"))",i.tpl_host_fuzzy="(?:"+i.src_ip4+"|(?:(?:(?:"+i.src_domain+")\\.)+(?:%TLDS%)))",i.tpl_host_no_ip_fuzzy="(?:(?:(?:"+i.src_domain+")\\.)+(?:%TLDS%))",i.src_host_strict=i.src_host+i.src_host_terminator,i.tpl_host_fuzzy_strict=i.tpl_host_fuzzy+i.src_host_terminator,i.src_host_port_strict=i.src_host+i.src_port+i.src_host_terminator,i.tpl_host_port_fuzzy_strict=i.tpl_host_fuzzy+i.src_port+i.src_host_terminator,i.tpl_host_port_no_ip_fuzzy_strict=i.tpl_host_no_ip_fuzzy+i.src_port+i.src_host_terminator,i.tpl_host_fuzzy_test="localhost|www\\.|\\.\\d{1,3}\\.|(?:\\.(?:%TLDS%)(?:"+i.src_ZPCc+"|>|$))",i.tpl_email_fuzzy="(^|"+e+'|"|\\(|'+i.src_ZCc+")("+i.src_email_name+"@"+i.tpl_host_fuzzy_strict+")",i.tpl_link_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+i.src_ZPCc+"))((?![$+<=>^`|｜])"+i.tpl_host_port_fuzzy_strict+i.src_path+")",i.tpl_link_no_ip_fuzzy="(^|(?![.:/\\-_@])(?:[$+<=>^`|｜]|"+i.src_ZPCc+"))((?![$+<=>^`|｜])"+i.tpl_host_port_no_ip_fuzzy_strict+i.src_path+")",i}function qo(s){return Array.prototype.slice.call(arguments,1).forEach(function(e){e&&Object.keys(e).forEach(function(a){s[a]=e[a]})}),s}function Np(s){return Object.prototype.toString.call(s)}function GN(s){return Np(s)==="[object String]"}function WN(s){return Np(s)==="[object Object]"}function KN(s){return Np(s)==="[object RegExp]"}function DB(s){return Np(s)==="[object Function]"}function YN(s){return s.replace(/[.?*+^$[\]\\(){}|-]/g,"\\$&")}const Lf={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};function XN(s){return Object.keys(s||{}).reduce(function(i,e){return i||Lf.hasOwnProperty(e)},!1)}const ZN={"http:":{validate:function(s,i,e){const a=s.slice(i);return e.re.http||(e.re.http=new RegExp("^\\/\\/"+e.re.src_auth+e.re.src_host_port_strict+e.re.src_path,"i")),e.re.http.test(a)?a.match(e.re.http)[0].length:0}},"https:":"http:","ftp:":"http:","//":{validate:function(s,i,e){const a=s.slice(i);return e.re.no_http||(e.re.no_http=new RegExp("^"+e.re.src_auth+"(?:localhost|(?:(?:"+e.re.src_domain+")\\.)+"+e.re.src_domain_root+")"+e.re.src_port+e.re.src_host_terminator+e.re.src_path,"i")),e.re.no_http.test(a)?i>=3&&s[i-3]===":"||i>=3&&s[i-3]==="/"?0:a.match(e.re.no_http)[0].length:0}},"mailto:":{validate:function(s,i,e){const a=s.slice(i);return e.re.mailto||(e.re.mailto=new RegExp("^"+e.re.src_email_name+"@"+e.re.src_host_strict,"i")),e.re.mailto.test(a)?a.match(e.re.mailto)[0].length:0}}},JN="a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]",QN="biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф".split("|");function sM(s){s.__index__=-1,s.__text_cache__=""}function iM(s){return function(i,e){const a=i.slice(e);return s.test(a)?a.match(s)[0].length:0}}function wB(){return function(s,i){i.normalize(s)}}function zh(s){const i=s.re=UN(s.__opts__),e=s.__tlds__.slice();s.onCompile(),s.__tlds_replaced__||e.push(JN),e.push(i.src_xn),i.src_tlds=e.join("|");function a(r){return r.replace("%TLDS%",i.src_tlds)}i.email_fuzzy=RegExp(a(i.tpl_email_fuzzy),"i"),i.link_fuzzy=RegExp(a(i.tpl_link_fuzzy),"i"),i.link_no_ip_fuzzy=RegExp(a(i.tpl_link_no_ip_fuzzy),"i"),i.host_fuzzy_test=RegExp(a(i.tpl_host_fuzzy_test),"i");const n=[];s.__compiled__={};function t(r,h){throw new Error('(LinkifyIt) Invalid schema "'+r+'": '+h)}Object.keys(s.__schemas__).forEach(function(r){const h=s.__schemas__[r];if(h===null)return;const p={validate:null,link:null};if(s.__compiled__[r]=p,WN(h)){KN(h.validate)?p.validate=iM(h.validate):DB(h.validate)?p.validate=h.validate:t(r,h),DB(h.normalize)?p.normalize=h.normalize:h.normalize?t(r,h):p.normalize=wB();return}if(GN(h)){n.push(r);return}t(r,h)}),n.forEach(function(r){s.__compiled__[s.__schemas__[r]]&&(s.__compiled__[r].validate=s.__compiled__[s.__schemas__[r]].validate,s.__compiled__[r].normalize=s.__compiled__[s.__schemas__[r]].normalize)}),s.__compiled__[""]={validate:null,normalize:wB()};const l=Object.keys(s.__compiled__).filter(function(r){return r.length>0&&s.__compiled__[r]}).map(YN).join("|");s.re.schema_test=RegExp("(^|(?!_)(?:[><｜]|"+i.src_ZPCc+"))("+l+")","i"),s.re.schema_search=RegExp("(^|(?!_)(?:[><｜]|"+i.src_ZPCc+"))("+l+")","ig"),s.re.schema_at_start=RegExp("^"+s.re.schema_search.source,"i"),s.re.pretest=RegExp("("+s.re.schema_test.source+")|("+s.re.host_fuzzy_test.source+")|@","i"),sM(s)}function eM(s,i){const e=s.__index__,a=s.__last_index__,n=s.__text_cache__.slice(e,a);this.schema=s.__schema__.toLowerCase(),this.index=e+i,this.lastIndex=a+i,this.raw=n,this.text=n,this.url=n}function Ho(s,i){const e=new eM(s,i);return s.__compiled__[e.schema].normalize(e,s),e}function re(s,i){if(!(this instanceof re))return new re(s,i);i||XN(s)&&(i=s,s={}),this.__opts__=qo({},Lf,i),this.__index__=-1,this.__last_index__=-1,this.__schema__="",this.__text_cache__="",this.__schemas__=qo({},ZN,s),this.__compiled__={},this.__tlds__=QN,this.__tlds_replaced__=!1,this.re={},zh(this)}re.prototype.add=function(i,e){return this.__schemas__[i]=e,zh(this),this};re.prototype.set=function(i){return this.__opts__=qo(this.__opts__,i),this};re.prototype.test=function(i){if(this.__text_cache__=i,this.__index__=-1,!i.length)return!1;let e,a,n,t,l,r,h,p,k;if(this.re.schema_test.test(i)){for(h=this.re.schema_search,h.lastIndex=0;(e=h.exec(i))!==null;)if(t=this.testSchemaAt(i,e[2],h.lastIndex),t){this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+t;break}}return this.__opts__.fuzzyLink&&this.__compiled__["http:"]&&(p=i.search(this.re.host_fuzzy_test),p>=0&&(this.__index__<0||p<this.__index__)&&(a=i.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))!==null&&(l=a.index+a[1].length,(this.__index__<0||l<this.__index__)&&(this.__schema__="",this.__index__=l,this.__last_index__=a.index+a[0].length))),this.__opts__.fuzzyEmail&&this.__compiled__["mailto:"]&&(k=i.indexOf("@"),k>=0&&(n=i.match(this.re.email_fuzzy))!==null&&(l=n.index+n[1].length,r=n.index+n[0].length,(this.__index__<0||l<this.__index__||l===this.__index__&&r>this.__last_index__)&&(this.__schema__="mailto:",this.__index__=l,this.__last_index__=r))),this.__index__>=0};re.prototype.pretest=function(i){return this.re.pretest.test(i)};re.prototype.testSchemaAt=function(i,e,a){return this.__compiled__[e.toLowerCase()]?this.__compiled__[e.toLowerCase()].validate(i,a,this):0};re.prototype.match=function(i){const e=[];let a=0;this.__index__>=0&&this.__text_cache__===i&&(e.push(Ho(this,a)),a=this.__last_index__);let n=a?i.slice(a):i;for(;this.test(n);)e.push(Ho(this,a)),n=n.slice(this.__last_index__),a+=this.__last_index__;return e.length?e:null};re.prototype.matchAtStart=function(i){if(this.__text_cache__=i,this.__index__=-1,!i.length)return null;const e=this.re.schema_at_start.exec(i);if(!e)return null;const a=this.testSchemaAt(i,e[2],e[0].length);return a?(this.__schema__=e[2],this.__index__=e.index+e[1].length,this.__last_index__=e.index+e[0].length+a,Ho(this,0)):null};re.prototype.tlds=function(i,e){return i=Array.isArray(i)?i:[i],e?(this.__tlds__=this.__tlds__.concat(i).sort().filter(function(a,n,t){return a!==t[n-1]}).reverse(),zh(this),this):(this.__tlds__=i.slice(),this.__tlds_replaced__=!0,zh(this),this)};re.prototype.normalize=function(i){i.schema||(i.url="http://"+i.url),i.schema==="mailto:"&&!/^mailto:/i.test(i.url)&&(i.url="mailto:"+i.url)};re.prototype.onCompile=function(){};const nt=2147483647,$e=36,bc=1,Hl=26,aM=38,nM=700,Nf=72,Mf=128,Vf="-",tM=/^xn--/,lM=/[^\0-\x7F]/,rM=/[\x2E\u3002\uFF0E\uFF61]/g,hM={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},$k=$e-bc,ze=Math.floor,zk=String.fromCharCode;function za(s){throw new RangeError(hM[s])}function pM(s,i){const e=[];let a=s.length;for(;a--;)e[a]=i(s[a]);return e}function $f(s,i){const e=s.split("@");let a="";e.length>1&&(a=e[0]+"@",s=e[1]),s=s.replace(rM,".");const n=s.split("."),t=pM(n,i).join(".");return a+t}function zf(s){const i=[];let e=0;const a=s.length;for(;e<a;){const n=s.charCodeAt(e++);if(n>=55296&&n<=56319&&e<a){const t=s.charCodeAt(e++);(t&64512)==56320?i.push(((n&1023)<<10)+(t&1023)+65536):(i.push(n),e--)}else i.push(n)}return i}const kM=s=>String.fromCodePoint(...s),dM=function(s){return s>=48&&s<58?26+(s-48):s>=65&&s<91?s-65:s>=97&&s<123?s-97:$e},xB=function(s,i){return s+22+75*(s<26)-((i!=0)<<5)},qf=function(s,i,e){let a=0;for(s=e?ze(s/nM):s>>1,s+=ze(s/i);s>$k*Hl>>1;a+=$e)s=ze(s/$k);return ze(a+($k+1)*s/(s+aM))},Hf=function(s){const i=[],e=s.length;let a=0,n=Mf,t=Nf,l=s.lastIndexOf(Vf);l<0&&(l=0);for(let r=0;r<l;++r)s.charCodeAt(r)>=128&&za("not-basic"),i.push(s.charCodeAt(r));for(let r=l>0?l+1:0;r<e;){const h=a;for(let k=1,d=$e;;d+=$e){r>=e&&za("invalid-input");const o=dM(s.charCodeAt(r++));o>=$e&&za("invalid-input"),o>ze((nt-a)/k)&&za("overflow"),a+=o*k;const u=d<=t?bc:d>=t+Hl?Hl:d-t;if(o<u)break;const c=$e-u;k>ze(nt/c)&&za("overflow"),k*=c}const p=i.length+1;t=qf(a-h,p,h==0),ze(a/p)>nt-n&&za("overflow"),n+=ze(a/p),a%=p,i.splice(a++,0,n)}return String.fromCodePoint(...i)},jf=function(s){const i=[];s=zf(s);const e=s.length;let a=Mf,n=0,t=Nf;for(const h of s)h<128&&i.push(zk(h));const l=i.length;let r=l;for(l&&i.push(Vf);r<e;){let h=nt;for(const k of s)k>=a&&k<h&&(h=k);const p=r+1;h-a>ze((nt-n)/p)&&za("overflow"),n+=(h-a)*p,a=h;for(const k of s)if(k<a&&++n>nt&&za("overflow"),k===a){let d=n;for(let o=$e;;o+=$e){const u=o<=t?bc:o>=t+Hl?Hl:o-t;if(d<u)break;const c=d-u,A=$e-u;i.push(zk(xB(u+c%A,0))),d=ze(c/A)}i.push(zk(xB(d,0))),t=qf(n,p,r===l),n=0,++r}++n,++a}return i.join("")},oM=function(s){return $f(s,function(i){return tM.test(i)?Hf(i.slice(4).toLowerCase()):i})},uM=function(s){return $f(s,function(i){return lM.test(i)?"xn--"+jf(i):i})},Uf={version:"2.3.1",ucs2:{decode:zf,encode:kM},decode:Hf,encode:jf,toASCII:uM,toUnicode:oM},cM={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}},gM={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["paragraph"]},inline:{rules:["text"],rules2:["balance_pairs","fragments_join"]}}},BM={options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:"language-",linkify:!1,typographer:!1,quotes:"“”‘’",highlight:null,maxNesting:20},components:{core:{rules:["normalize","block","inline","text_join"]},block:{rules:["blockquote","code","fence","heading","hr","html_block","lheading","list","reference","paragraph"]},inline:{rules:["autolink","backticks","emphasis","entity","escape","html_inline","image","link","newline","text"],rules2:["balance_pairs","emphasis","fragments_join"]}}},AM={default:cM,zero:gM,commonmark:BM},yM=/^(vbscript|javascript|file|data):/,fM=/^data:image\/(gif|png|jpeg|webp);/;function mM(s){const i=s.trim().toLowerCase();return yM.test(i)?fM.test(i):!0}const Gf=["http:","https:","mailto:"];function vM(s){const i=yc(s,!0);if(i.hostname&&(!i.protocol||Gf.indexOf(i.protocol)>=0))try{i.hostname=Uf.toASCII(i.hostname)}catch{}return Fr(Ac(i))}function FM(s){const i=yc(s,!0);if(i.hostname&&(!i.protocol||Gf.indexOf(i.protocol)>=0))try{i.hostname=Uf.toUnicode(i.hostname)}catch{}return mt(Ac(i),mt.defaultChars+"%")}function ge(s,i){if(!(this instanceof ge))return new ge(s,i);i||mc(s)||(i=s||{},s="default"),this.inline=new br,this.block=new Lp,this.core=new Fc,this.renderer=new Rt,this.linkify=new re,this.validateLink=mM,this.normalizeLink=vM,this.normalizeLinkText=FM,this.utils=bL,this.helpers=Op({},wL),this.options={},this.configure(s),i&&this.set(i)}ge.prototype.set=function(s){return Op(this.options,s),this};ge.prototype.configure=function(s){const i=this;if(mc(s)){const e=s;if(s=AM[e],!s)throw new Error('Wrong `markdown-it` preset "'+e+'", check name')}if(!s)throw new Error("Wrong `markdown-it` preset, can't be empty");return s.options&&i.set(s.options),s.components&&Object.keys(s.components).forEach(function(e){s.components[e].rules&&i[e].ruler.enableOnly(s.components[e].rules),s.components[e].rules2&&i[e].ruler2.enableOnly(s.components[e].rules2)}),this};ge.prototype.enable=function(s,i){let e=[];Array.isArray(s)||(s=[s]),["core","block","inline"].forEach(function(n){e=e.concat(this[n].ruler.enable(s,!0))},this),e=e.concat(this.inline.ruler2.enable(s,!0));const a=s.filter(function(n){return e.indexOf(n)<0});if(a.length&&!i)throw new Error("MarkdownIt. Failed to enable unknown rule(s): "+a);return this};ge.prototype.disable=function(s,i){let e=[];Array.isArray(s)||(s=[s]),["core","block","inline"].forEach(function(n){e=e.concat(this[n].ruler.disable(s,!0))},this),e=e.concat(this.inline.ruler2.disable(s,!0));const a=s.filter(function(n){return e.indexOf(n)<0});if(a.length&&!i)throw new Error("MarkdownIt. Failed to disable unknown rule(s): "+a);return this};ge.prototype.use=function(s){const i=[this].concat(Array.prototype.slice.call(arguments,1));return s.apply(s,i),this};ge.prototype.parse=function(s,i){if(typeof s!="string")throw new Error("Input data should be a String");const e=new this.core.State(s,this,i);return this.core.process(e),e.tokens};ge.prototype.render=function(s,i){return i=i||{},this.renderer.render(this.parse(s,i),this.options,i)};ge.prototype.parseInline=function(s,i){const e=new this.core.State(s,this,i);return e.inlineMode=!0,this.core.process(e),e.tokens};ge.prototype.renderInline=function(s,i){return i=i||{},this.renderer.render(this.parseInline(s,i),this.options,i)};const EM=ts({__name:"MarkdownItem",props:{data:{}},setup(s,{expose:i}){i();const e=s,a=Q();let n;function t(h){n=h}const l=ge();t((h,p,k)=>{p.classList.add("markdown-rendered");const d=l.render(h),o=document.createElement("div");p.appendChild(o),o.innerHTML=d}),ws(()=>{!a.value||!n||n(e.data.value,a.value)});const r={props:e,MdArea:a,get renderMarkdownFn(){return n},set renderMarkdownFn(h){n=h},redefine_renderMarkdown:t,md:l};return Object.defineProperty(r,"__isScriptSetup",{enumerable:!1,value:!0}),r}}),ai=(s,i)=>{const e=s.__vccOpts||s;for(const[a,n]of i)e[a]=n;return e},bM={key:0,class:"node-item-name"},CM={key:1,class:"node-item-value",ref:"MdArea"};function _M(s,i,e,a,n,t){return hs(),us("div",{class:Ps("markdown-item  node-item-slot "+a.props.data.refType)},[a.props.data.name?(hs(),us("span",bM,Ls(a.props.data.name),1)):ys("v-if",!0),a.props.data.value?(hs(),us("div",CM,[ys(" 脚本填充内容 ")],512)):ys("v-if",!0),i[0]||(i[0]=G("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const Wf=ai(EM,[["render",_M],["__scopeId","data-v-c080c403"],["__file","MarkdownItem.vue"]]),DM=ts({__name:"ObcanvasNode",props:{id:{},data:{}},setup(s,{expose:i}){i();const e=s,a=Q({name:"",value:e.data.label,refType:"value",valueType:"item-markdown"}),n={props:e,newData:a,get Handle(){return ma},get Position(){return Fs},MarkdownItem:Wf};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}}),wM={class:"obcanvas-node"};function xM(s,i,e,a,n,t){return hs(),us(Ds,null,[G("div",wM,[Bs(a.MarkdownItem,{data:a.newData},null,8,["data"])]),Bs(a.Handle,{id:"left",type:"target",position:a.Position.Left},null,8,["position"]),Bs(a.Handle,{id:"top",type:"target",position:a.Position.Top},null,8,["position"]),Bs(a.Handle,{id:"right",type:"source",position:a.Position.Right},null,8,["position"]),Bs(a.Handle,{id:"bottom",type:"source",position:a.Position.Bottom},null,8,["position"])],64)}const TM=ai(DM,[["render",xM],["__scopeId","data-v-ee6e5543"],["__file","ObcanvasNode.vue"]]),SM=ts({__name:"ComfyUINode",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(s,{expose:i}){var t,l,r,h;i();const e=s,a=Q(!1);a.value=((l=(t=e.data)==null?void 0:t.inputs)==null?void 0:l.length)!=0||((h=(r=e.data)==null?void 0:r.outputs)==null?void 0:h.length)!=0;const n={props:e,hasCustomHandle:a,get Handle(){return ma},get Position(){return Fs}};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}}),IM={class:"comfyui-node"},RM={class:"node-id"},OM=["aria-label"],PM={class:"node-title"},LM={style:{display:"inline-block","margin-left":"10px"}},NM={class:"node-content"},MM={class:"node-handle-name"},VM={class:"left"},$M={class:"item"},zM={class:"right"},qM={class:"item"},HM={class:"node-self-attr"},jM={class:"item-c"},UM={class:"item"};function GM(s,i,e,a,n,t){return hs(),us("div",IM,[G("div",RM,[G("div",null," #"+Ls(e.id),1)]),ys(` <NodeToolbar :is-visible="true" :position="Position.Top" class="comfyui-id">
      <div>
        #{{ id }}
      </div>
    </NodeToolbar> `),G("div",{class:"node-main","aria-label":e.data.label},[G("div",PM,[i[0]||(i[0]=G("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),G("span",LM,Ls(e.data.label),1)]),G("div",NM,[G("div",MM,[G("div",VM,[(hs(!0),us(Ds,null,bi(e.data.inputs,(l,r)=>(hs(),us("div",$M,Ls(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1))),256))]),G("div",zM,[(hs(!0),us(Ds,null,bi(e.data.outputs,(l,r)=>(hs(),us("div",qM,Ls(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1))),256))])]),G("div",HM,[(hs(!0),us(Ds,null,bi(e.data.widgets_values,(l,r)=>(hs(),us("div",jM,[G("div",UM,Ls(l),1)]))),256)),ys(" 注意data.widgets_values可能是列表也可能是json ")])]),ys(" Handle - 根据数据自动生成 "),(hs(!0),us(Ds,null,bi(e.data.inputs,(l,r)=>(hs(),ri(a.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"target-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type).toLowerCase().charCodeAt(0)%20,type:"target",position:a.Position.Left},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128)),(hs(!0),us(Ds,null,bi(e.data.outputs,(l,r)=>(hs(),ri(a.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"source-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type).toLowerCase().charCodeAt(0)%20,type:"source",position:a.Position.Right},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128))],8,OM)])}const WM=ai(SM,[["render",GM],["__file","ComfyUINode.vue"]]),KM=ts({__name:"ComfyUINodeGroup",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(s,{expose:i}){i();const a={props:s};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}}),YM=["aria-label"],XM={class:"comfyui-node-title"},ZM={style:{display:"inline-block","margin-left":"10px"}};function JM(s,i,e,a,n,t){return hs(),us("div",{class:"comfyui-node comfyui-group","aria-label":e.data.label},[G("div",XM,[i[0]||(i[0]=G("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),G("span",ZM,Ls(e.data.label),1)])],8,YM)}const QM=ai(KM,[["render",JM],["__scopeId","data-v-df954eaa"],["__file","ComfyUINodeGroup.vue"]]),sV=ts({__name:"CommonNode",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(s,{expose:i}){var t,l,r,h;i();const e=s,a=Q(!1);a.value=((l=(t=e.data)==null?void 0:t.inputs)==null?void 0:l.length)!=0||((h=(r=e.data)==null?void 0:r.outputs)==null?void 0:h.length)!=0;const n={props:e,hasCustomHandle:a,get Handle(){return ma},get Position(){return Fs}};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}}),iV={class:"common-node"},eV={class:"node-id"},aV=["aria-label"],nV={class:"node-title"},tV={style:{display:"inline-block","margin-left":"10px"}},lV={class:"node-content"},rV={class:"node-content-handle"},hV={class:"left"},pV={class:"line"},kV={class:"item-sub item-name"},dV={key:0,class:"item-sub item-value"},oV={class:"item-sub-sub"},uV={class:"left"},cV={class:"right"},gV={class:"line"},BV={class:"item-sub item-name"},AV={key:0,class:"item-sub item-value"},yV={class:"node-content-self"},fV={class:"line"},mV={class:"item-sub"},vV={class:"item-name"},FV={class:"item-value"};function EV(s,i,e,a,n,t){return hs(),us("div",iV,[ys(" 节点id "),G("div",eV,[G("div",null," #"+Ls(e.id),1)]),ys(` <NodeToolbar :is-visible="true" :position="Position.Top" class="common-id">
      <div>
        #{{ id }}
      </div>
    </NodeToolbar> `),ys(" 节点 "),G("div",{class:"node-main","aria-label":e.data.label},[ys(" 节点标题 "),G("div",nV,[i[0]||(i[0]=G("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),G("span",tV,Ls(e.data.label),1)]),ys(" 节点内容 "),G("div",lV,[G("div",rV,[G("div",hV,[(hs(!0),us(Ds,null,bi(e.data.inputs,(l,r)=>(hs(),us("div",pV,[G("span",kV,Ls(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1),l.value?(hs(),us("span",dV,[G("div",oV,[G("span",uV,Ls(l.value),1)])])):ys("v-if",!0)]))),256))]),G("div",cV,[(hs(!0),us(Ds,null,bi(e.data.outputs,(l,r)=>(hs(),us("div",gV,[G("span",BV,Ls(l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type),1),l.value?(hs(),us("span",AV,[G("div",null,Ls(l.value),1)])):ys("v-if",!0)]))),256))])]),G("div",yV,[(hs(!0),us(Ds,null,bi(e.data.values,(l,r)=>(hs(),us("div",fV,[G("div",mV,[G("span",vV,Ls(l.name),1),G("span",FV,Ls(l.value),1),i[1]||(i[1]=G("div",{style:{height:"0",clear:"both"}},null,-1))])]))),256))])]),ys(" Handle - 根据数据自动生成 "),ys(" 注意这里的MapAttr暂时用的id，而comfyui那边用的type "),(hs(!0),us(Ds,null,bi(e.data.inputs,(l,r)=>(hs(),ri(a.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"target-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("id")?l.id:"target-"+r).toLowerCase().charCodeAt(0)%20,type:"target",position:a.Position.Left},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128)),(hs(!0),us(Ds,null,bi(e.data.outputs,(l,r)=>(hs(),ri(a.Handle,{key:r,id:l.hasOwnProperty("id")?l.id:"source-"+r,class:"custom",indexAttr:r,nameAttr:l.hasOwnProperty("label")?l.label:l.hasOwnProperty("name")?l.name:l.type,nameMapAttr:(l.hasOwnProperty("id")?l.id:"target-"+r).toLowerCase().charCodeAt(0)%20,type:"source",position:a.Position.Right},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"]))),128)),ys(" Handle - 默认隐藏 "),di(Bs(a.Handle,{id:"l",class:"default",type:"target",position:a.Position.Left},null,8,["position"]),[[gn,!a.hasCustomHandle]]),di(Bs(a.Handle,{id:"t",class:"default",position:a.Position.Top},null,8,["position"]),[[gn,!a.hasCustomHandle]]),di(Bs(a.Handle,{id:"r",class:"default",type:"source",position:a.Position.Right},null,8,["position"]),[[gn,!a.hasCustomHandle]]),di(Bs(a.Handle,{id:"b",class:"default",position:a.Position.Bottom},null,8,["position"]),[[gn,!a.hasCustomHandle]])],8,aV)])}const bV=ai(sV,[["render",EV],["__file","CommonNode.vue"]]),CV=ts({__name:"ItemNodeSlot",props:{index:{type:Number,required:!0},item:{type:Object,required:!0}},setup(s,{expose:i}){i();const a={props:s,get Handle(){return ma},get Position(){return Fs}};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}});function _V(s,i,e,a,n,t){return hs(),us(Ds,null,[e.item.refType==="input"||e.item.refType==="i"?(hs(),ri(a.Handle,{key:0,class:"node-item-handle",id:e.item.hasOwnProperty("id")?e.item.id:"target-"+e.index,indexAttr:e.index,nameAttr:e.item.hasOwnProperty("label")?e.item.label:e.item.hasOwnProperty("name")?e.item.name:e.item.type,nameMapAttr:(e.item.hasOwnProperty("id")?e.item.id:"target-"+e.index).toLowerCase().charCodeAt(0)%20,type:"target",position:a.Position.Left},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"])):ys("v-if",!0),e.item.refType==="output"||e.item.refType==="o"?(hs(),ri(a.Handle,{key:1,class:"node-item-handle",id:e.item.hasOwnProperty("id")?e.item.id:"source-"+e.index,indexAttr:e.index,nameAttr:e.item.hasOwnProperty("label")?e.item.label:e.item.hasOwnProperty("name")?e.item.name:e.item.type,nameMapAttr:(e.item.hasOwnProperty("id")?e.item.id:"target-"+e.index).toLowerCase().charCodeAt(0)%20,type:"source",position:a.Position.Right},null,8,["id","indexAttr","nameAttr","nameMapAttr","position"])):ys("v-if",!0),ee(s.$slots,a.props.item.valueType,{id:a.props.item.id,data:a.props.item})],64)}const DV=ai(CV,[["render",_V],["__file","ItemNodeSlot.vue"]]),wV=ts({__name:"DefaultItem",props:{data:{}},setup(s,{expose:i}){i();const e=s,a=Q(null);function n(r){t(r.target)}function t(r){r&&(r.style.height="auto",r.scrollHeight&&(r.style.height=r.scrollHeight<30?"20px":r.scrollHeight+"px"),r.style.width="auto",r.scrollWidth&&(r.style.width=r.scrollWidth+12+"px"))}ws(()=>{t(a.value),qs(()=>{t(a.value)})});const l={props:e,TextArea3:a,handleInput:n,autoSize:t};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}}),xV={key:0,class:"node-item-name"},TV=["rows"];function SV(s,i,e,a,n,t){return hs(),us("div",{ref:"TextArea2",class:Ps("default-item  node-item-slot "+a.props.data.refType+(a.props.data.value?" has-value":""))},[a.props.data.name?(hs(),us("span",xV,Ls(a.props.data.name),1)):ys("v-if",!0),a.props.data.value?di((hs(),us("textarea",{key:1,class:"node-item-value","onUpdate:modelValue":i[0]||(i[0]=l=>a.props.data.value=l),rows:a.props.data.value.split(`
`).length,cols:"10",onInput:a.handleInput,ref:"TextArea3"},null,40,TV)),[[vF,a.props.data.value]]):ys("v-if",!0),i[1]||(i[1]=G("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const IV=ai(wV,[["render",SV],["__scopeId","data-v-7ae699f1"],["__file","DefaultItem.vue"]]),RV=ts({__name:"ColorItem",props:{data:{}},setup(s,{expose:i}){i();const e=s;function a(t){t=t.replace(/^#/,""),t.length===3&&(t=t.split("").map(k=>k+k).join(""));var l=parseInt(t.substr(0,2),16),r=parseInt(t.substr(2,2),16),h=parseInt(t.substr(4,2),16),p=(l+r+h)/3;return p>128?"black":"white"}const n={props:e,getHighContrastTextColor:a};return Object.defineProperty(n,"__isScriptSetup",{enumerable:!1,value:!0}),n}}),OV={key:0,class:"node-item-name"};function PV(s,i,e,a,n,t){return hs(),us("div",{class:Ps("color-item  node-item-slot "+a.props.data.refType+(a.props.data.value?" has-value":""))},[a.props.data.name?(hs(),us("span",OV,Ls(a.props.data.name),1)):ys("v-if",!0),a.props.data.value?(hs(),us("div",{key:1,class:"node-item-value",style:gi("background:"+a.props.data.value+"; color:"+a.getHighContrastTextColor(a.props.data.value))},Ls(a.props.data.value),5)):ys("v-if",!0),i[0]||(i[0]=G("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const LV=ai(RV,[["render",PV],["__scopeId","data-v-e91f1578"],["__file","ColorItem.vue"]]),NV=ts({__name:"DropdownItem",props:{data:{}},setup(s,{expose:i}){i();const e=s,a=V(()=>e.data.value.split("|"));a.value.length==0&&(e.data.value=[""]);const n=Q(a.value[0]),t={props:e,enum_data:a,enum_current:n};return Object.defineProperty(t,"__isScriptSetup",{enumerable:!1,value:!0}),t}}),MV={key:0,class:"node-item-name"},VV=["value"];function $V(s,i,e,a,n,t){return hs(),us("div",{class:Ps("dropdown-item  node-item-slot "+a.props.data.refType+(a.props.data.value?" has-value":""))},[a.props.data.name?(hs(),us("span",MV,Ls(a.props.data.name),1)):ys("v-if",!0),a.props.data.value?(hs(),us("div",{key:1,class:"node-item-value",style:gi("background:"+a.props.data.value)},[di(G("select",{"onUpdate:modelValue":i[0]||(i[0]=l=>a.enum_current=l)},[(hs(!0),us(Ds,null,bi(a.enum_data,l=>(hs(),us("option",{value:l},Ls(l),9,VV))),256))],512),[[b4,a.enum_current]])],4)):ys("v-if",!0),i[1]||(i[1]=G("div",{style:{height:"0",clear:"both"}},null,-1))],2)}const zV=ai(NV,[["render",$V],["__scopeId","data-v-6bbe612a"],["__file","DropdownItem.vue"]]),qV=ts({__name:"ItemNode",props:{id:{type:String,required:!0},data:{type:Object,required:!0}},setup(s,{expose:i}){var h,p;i();const e=s,a=V(()=>e.data.items.filter(k=>k.refType==="input")),n=V(()=>e.data.items.filter(k=>k.refType==="output")),t=V(()=>e.data.items.filter(k=>k.refType==="value")),l=Q(!1);l.value=((p=(h=e.data)==null?void 0:h.items)==null?void 0:p.length)!=0;const r={props:e,inputItems:a,outputItems:n,valueItems:t,hasCustomHandle:l,get Handle(){return ma},get Position(){return Fs},ItemNodeSlot:DV,DefaultItem:IV,MarkdownItem:Wf,ColorItem:LV,DropdownItem:zV};return Object.defineProperty(r,"__isScriptSetup",{enumerable:!1,value:!0}),r}}),HV={class:"item-node"},jV=["v-show"],UV=["aria-label"],GV={class:"node-title"},WV={style:{display:"inline-block","margin-left":"10px"}},KV={class:"node-content"};function YV(s,i,e,a,n,t){const l=Ws("ItemNode",!0);return hs(),us("div",HV,[ys(" id项 "),G("div",{"v-show":e.id!="",class:"node-id"},[G("div",null,"#"+Ls(e.id),1)],8,jV),G("div",{class:"common-node node-main","aria-label":e.data.label},[ys(" 标题项 "),G("div",GV,[i[0]||(i[0]=G("span",{style:{display:"inline-block",height:"10px",width:"10px","border-radius":"5px","background-color":"#666666"}},null,-1)),G("span",WV,Ls(e.data.hasOwnProperty("label")?e.data.label:e.data.hasOwnProperty("name")?e.data.name:e.data.id),1)]),ys(" 项集 "),G("div",KV,[(hs(!0),us(Ds,null,bi(e.data.items,(r,h)=>(hs(),us("div",{class:Ps("line node-item "+r.refType)},[Bs(a.ItemNodeSlot,{index:h,item:r},{"item-default":Hs(p=>[Bs(a.DefaultItem,{data:p.data},null,8,["data"])]),"item-markdown":Hs(p=>[Bs(a.MarkdownItem,{data:p.data},null,8,["data"])]),"item-color":Hs(p=>[Bs(a.ColorItem,{data:p.data},null,8,["data"])]),"item-dropdown":Hs(p=>[Bs(a.DropdownItem,{data:p.data},null,8,["data"])]),"item-item":Hs(p=>[Bs(l,{id:"",data:p.data},null,8,["data"])]),_:2},1032,["index","item"])],2))),256))]),ys(" Handle - 默认隐藏 "),di(G("div",null,[Bs(a.Handle,{id:"l",class:"default",type:"target",position:a.Position.Left},null,8,["position"]),Bs(a.Handle,{id:"t",class:"default",position:a.Position.Top},null,8,["position"]),Bs(a.Handle,{id:"r",class:"default",type:"source",position:a.Position.Right},null,8,["position"]),Bs(a.Handle,{id:"b",class:"default",position:a.Position.Bottom},null,8,["position"])],512),[[gn,!a.hasCustomHandle]])],8,UV)])}const XV=ai(qV,[["render",YV],["__file","ItemNode.vue"]]),ZV=ts({__name:"InteractionControls",setup(s,{expose:i}){i();const{nodesDraggable:e,nodesConnectable:a,elementsSelectable:n,zoomOnScroll:t,zoomOnDoubleClick:l,zoomOnPinch:r,panOnScroll:h,panOnScrollMode:p,panOnDrag:k,onConnect:d,onNodeDragStop:o,onPaneClick:u,onPaneScroll:c,onPaneContextMenu:A,onNodeDragStart:g,onMoveEnd:f,addEdges:m,zoomIn:y,zoomOut:v,setMinZoom:_,setMaxZoom:S}=Ks();let N=Q(!0);const T=()=>{S(3),y()};T();const C=()=>{_(.1),v()};C();const I=Q(!1),O=Q(!1);d(z=>m(z)),g(z=>Ma.isDebug),o(z=>Ma.isDebug),u(z=>Ma.isDebug),c(z=>Ma.isDebug),A(z=>Ma.isDebug),f(z=>Ma.isDebug);const w={nodesDraggable:e,nodesConnectable:a,elementsSelectable:n,zoomOnScroll:t,zoomOnDoubleClick:l,zoomOnPinch:r,panOnScroll:h,panOnScrollMode:p,panOnDrag:k,onConnect:d,onNodeDragStop:o,onPaneClick:u,onPaneScroll:c,onPaneContextMenu:A,onNodeDragStart:g,onMoveEnd:f,addEdges:m,zoomIn:y,zoomOut:v,setMinZoom:_,setMaxZoom:S,get isFold(){return N},set isFold(z){N=z},onZoomIn:T,onZoomOut:C,captureZoomClick:I,captureZoomScroll:O,get Panel(){return NP}};return Object.defineProperty(w,"__isScriptSetup",{enumerable:!1,value:!0}),w}}),JV={class:"fold-title"},QV={class:"fold-content"},s$={class:"label",for:"draggable"},i$={class:"label",for:"connectable"},e$={class:"label",for:"selectable"},a$={class:"label",for:"zoomonscroll"},n$={class:"label",for:"zoomonpinch"},t$={class:"label",for:"panonscroll"},l$={class:"label"},r$={class:"label",for:"zoomondbl"},h$={class:"label",for:"panemoveable"},p$={class:"label",for:"capturezoompaneclick"},k$={class:"label",for:"capturezoompanescroll"};function d$(s,i,e,a,n,t){return hs(),ri(a.Panel,{position:"top-right"},{default:Hs(()=>[G("div",JV,[G("button",{id:"zoomin",onClick:i[0]||(i[0]=l=>a.isFold=!a.isFold)},"Fold")]),di(G("div",QV,[G("div",null,[G("label",s$,[i[12]||(i[12]=ki(" Nodes draggable ")),di(G("input",{id:"draggable","onUpdate:modelValue":i[1]||(i[1]=l=>a.nodesDraggable=l),type:"checkbox",class:"vue-flow__draggable"},null,512),[[Re,a.nodesDraggable]])])]),G("div",null,[G("label",i$,[i[13]||(i[13]=ki(" Nodes connectable ")),di(G("input",{id:"connectable","onUpdate:modelValue":i[2]||(i[2]=l=>a.nodesConnectable=l),type:"checkbox",class:"vue-flow__connectable"},null,512),[[Re,a.nodesConnectable]])])]),G("div",null,[G("label",e$,[i[14]||(i[14]=ki(" Elements selectable ")),di(G("input",{id:"selectable","onUpdate:modelValue":i[3]||(i[3]=l=>a.elementsSelectable=l),type:"checkbox",class:"vue-flow__selectable"},null,512),[[Re,a.elementsSelectable]])])]),G("div",null,[G("label",a$,[i[15]||(i[15]=ki(" Zoom on scroll ")),di(G("input",{id:"zoomonscroll","onUpdate:modelValue":i[4]||(i[4]=l=>a.zoomOnScroll=l),type:"checkbox",class:"vue-flow__zoomonscroll"},null,512),[[Re,a.zoomOnScroll]])])]),G("div",null,[G("label",n$,[i[16]||(i[16]=ki(" Zoom on pinch ")),di(G("input",{id:"zoomonpinch","onUpdate:modelValue":i[5]||(i[5]=l=>a.zoomOnPinch=l),type:"checkbox",class:"vue-flow__zoomonpinch"},null,512),[[Re,a.zoomOnPinch]])])]),G("div",null,[G("label",t$,[i[17]||(i[17]=ki(" Pan on scroll ")),di(G("input",{id:"panonscroll","onUpdate:modelValue":i[6]||(i[6]=l=>a.panOnScroll=l),type:"checkbox",class:"vue-flow__panonscroll"},null,512),[[Re,a.panOnScroll]])])]),G("div",null,[G("label",l$,[i[19]||(i[19]=ki(" Pan on scroll mode ")),di(G("select",{id:"panonscrollmode","onUpdate:modelValue":i[7]||(i[7]=l=>a.panOnScrollMode=l),class:"vue-flow__panonscrollmode"},i[18]||(i[18]=[G("option",{value:"free"},"Free",-1),G("option",{value:"horizontal"},"Horizontal",-1),G("option",{value:"vertical"},"Vertical",-1)]),512),[[b4,a.panOnScrollMode]])])]),G("div",null,[G("label",r$,[i[20]||(i[20]=ki(" Zoom on double click ")),di(G("input",{id:"zoomondbl","onUpdate:modelValue":i[8]||(i[8]=l=>a.zoomOnDoubleClick=l),type:"checkbox",class:"vue-flow__zoomondbl"},null,512),[[Re,a.zoomOnDoubleClick]])])]),G("div",null,[G("label",h$,[i[21]||(i[21]=ki(" Pane movable ")),di(G("input",{id:"panemoveable","onUpdate:modelValue":i[9]||(i[9]=l=>a.panOnDrag=l),type:"checkbox",class:"vue-flow__panemoveable"},null,512),[[Re,a.panOnDrag]])])]),G("div",null,[G("label",p$,[i[22]||(i[22]=ki(" Capture on pane click ")),di(G("input",{id:"capturezoompaneclick","onUpdate:modelValue":i[10]||(i[10]=l=>a.captureZoomClick=l),type:"checkbox",class:"vue-flow__capturezoompaneclick"},null,512),[[Re,a.captureZoomClick]])])]),G("div",null,[G("label",k$,[i[23]||(i[23]=ki(" Capture on pane scroll ")),di(G("input",{id:"capturezoompanescroll","onUpdate:modelValue":i[11]||(i[11]=l=>a.captureZoomScroll=l),type:"checkbox",class:"vue-flow__capturezoompanescroll"},null,512),[[Re,a.captureZoomScroll]])])]),G("div",null,[G("label",{class:"label"},[i[24]||(i[24]=ki(" Zoom in ")),G("button",{id:"zoomin",onclick:a.onZoomIn,class:"vue-flow__capturezoompanescroll"},"+")])]),G("div",null,[G("label",{class:"label"},[i[25]||(i[25]=ki(" Zoom out ")),G("button",{id:"zoomout",onclick:a.onZoomOut,class:"vue-flow__capturezoompanescroll"},"-")])])],512),[[gn,!a.isFold]])]),_:1})}const o$=ai(ZV,[["render",d$],["__scopeId","data-v-c524bd80"],["__file","InteractionControls.vue"]]);var ga=(s=>(s.Lines="lines",s.Dots="dots",s))(ga||{});const Kf=function({dimensions:s,size:i,color:e}){return B("path",{stroke:e,"stroke-width":i,d:`M${s[0]/2} 0 V${s[1]} M0 ${s[1]/2} H${s[0]}`})},Yf=function({radius:s,color:i}){return B("circle",{cx:s,cy:s,r:s,fill:i})};ga.Lines+"",ga.Dots+"";const u$={[ga.Dots]:"#81818a",[ga.Lines]:"#eee"},c$=["id","x","y","width","height","patternTransform"],g$={key:2,height:"100",width:"100"},B$=["fill"],A$=["x","y","fill"],y$={name:"Background",compatConfig:{MODE:3}},f$=ts({...y$,props:{id:{},variant:{default:()=>ga.Dots},gap:{default:20},size:{default:1},lineWidth:{default:1},patternColor:{},color:{},bgColor:{},height:{default:100},width:{default:100},x:{default:0},y:{default:0},offset:{default:0}},setup(s){const{id:i,viewport:e}=Ks(),a=V(()=>{const l=e.value.zoom,[r,h]=Array.isArray(s.gap)?s.gap:[s.gap,s.gap],p=[r*l||1,h*l||1],k=s.size*l,[d,o]=Array.isArray(s.offset)?s.offset:[s.offset,s.offset],u=[d*l||1+p[0]/2,o*l||1+p[1]/2];return{scaledGap:p,offset:u,size:k}}),n=Ms(()=>`pattern-${i}${s.id?`-${s.id}`:""}`),t=Ms(()=>s.color||s.patternColor||u$[s.variant||ga.Dots]);return(l,r)=>(hs(),us("svg",{class:"vue-flow__background vue-flow__container",style:gi({height:`${l.height>100?100:l.height}%`,width:`${l.width>100?100:l.width}%`})},[ee(l.$slots,"pattern-container",{id:n.value},()=>[G("pattern",{id:n.value,x:ms(e).x%a.value.scaledGap[0],y:ms(e).y%a.value.scaledGap[1],width:a.value.scaledGap[0],height:a.value.scaledGap[1],patternTransform:`translate(-${a.value.offset[0]},-${a.value.offset[1]})`,patternUnits:"userSpaceOnUse"},[ee(l.$slots,"pattern",{},()=>[l.variant===ms(ga).Lines?(hs(),ri(ms(Kf),{key:0,size:l.lineWidth,color:t.value,dimensions:a.value.scaledGap},null,8,["size","color","dimensions"])):l.variant===ms(ga).Dots?(hs(),ri(ms(Yf),{key:1,color:t.value,radius:a.value.size/2},null,8,["color","radius"])):ys("",!0),l.bgColor?(hs(),us("svg",g$,[G("rect",{width:"100%",height:"100%",fill:l.bgColor},null,8,B$)])):ys("",!0)])],8,c$)]),G("rect",{x:l.x,y:l.y,width:"100%",height:"100%",fill:`url(#${n.value})`},null,8,A$),ee(l.$slots,"default",{id:n.value})],4))}});function m$(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var qk,TB;function Cc(){if(TB)return qk;TB=1;var s="\0",i="\0",e="";class a{constructor(k){hi(this,"_isDirected",!0);hi(this,"_isMultigraph",!1);hi(this,"_isCompound",!1);hi(this,"_label");hi(this,"_defaultNodeLabelFn",()=>{});hi(this,"_defaultEdgeLabelFn",()=>{});hi(this,"_nodes",{});hi(this,"_in",{});hi(this,"_preds",{});hi(this,"_out",{});hi(this,"_sucs",{});hi(this,"_edgeObjs",{});hi(this,"_edgeLabels",{});hi(this,"_nodeCount",0);hi(this,"_edgeCount",0);hi(this,"_parent");hi(this,"_children");k&&(this._isDirected=Object.hasOwn(k,"directed")?k.directed:!0,this._isMultigraph=Object.hasOwn(k,"multigraph")?k.multigraph:!1,this._isCompound=Object.hasOwn(k,"compound")?k.compound:!1),this._isCompound&&(this._parent={},this._children={},this._children[i]={})}isDirected(){return this._isDirected}isMultigraph(){return this._isMultigraph}isCompound(){return this._isCompound}setGraph(k){return this._label=k,this}graph(){return this._label}setDefaultNodeLabel(k){return this._defaultNodeLabelFn=k,typeof k!="function"&&(this._defaultNodeLabelFn=()=>k),this}nodeCount(){return this._nodeCount}nodes(){return Object.keys(this._nodes)}sources(){var k=this;return this.nodes().filter(d=>Object.keys(k._in[d]).length===0)}sinks(){var k=this;return this.nodes().filter(d=>Object.keys(k._out[d]).length===0)}setNodes(k,d){var o=arguments,u=this;return k.forEach(function(c){o.length>1?u.setNode(c,d):u.setNode(c)}),this}setNode(k,d){return Object.hasOwn(this._nodes,k)?(arguments.length>1&&(this._nodes[k]=d),this):(this._nodes[k]=arguments.length>1?d:this._defaultNodeLabelFn(k),this._isCompound&&(this._parent[k]=i,this._children[k]={},this._children[i][k]=!0),this._in[k]={},this._preds[k]={},this._out[k]={},this._sucs[k]={},++this._nodeCount,this)}node(k){return this._nodes[k]}hasNode(k){return Object.hasOwn(this._nodes,k)}removeNode(k){var d=this;if(Object.hasOwn(this._nodes,k)){var o=u=>d.removeEdge(d._edgeObjs[u]);delete this._nodes[k],this._isCompound&&(this._removeFromParentsChildList(k),delete this._parent[k],this.children(k).forEach(function(u){d.setParent(u)}),delete this._children[k]),Object.keys(this._in[k]).forEach(o),delete this._in[k],delete this._preds[k],Object.keys(this._out[k]).forEach(o),delete this._out[k],delete this._sucs[k],--this._nodeCount}return this}setParent(k,d){if(!this._isCompound)throw new Error("Cannot set parent in a non-compound graph");if(d===void 0)d=i;else{d+="";for(var o=d;o!==void 0;o=this.parent(o))if(o===k)throw new Error("Setting "+d+" as parent of "+k+" would create a cycle");this.setNode(d)}return this.setNode(k),this._removeFromParentsChildList(k),this._parent[k]=d,this._children[d][k]=!0,this}_removeFromParentsChildList(k){delete this._children[this._parent[k]][k]}parent(k){if(this._isCompound){var d=this._parent[k];if(d!==i)return d}}children(k=i){if(this._isCompound){var d=this._children[k];if(d)return Object.keys(d)}else{if(k===i)return this.nodes();if(this.hasNode(k))return[]}}predecessors(k){var d=this._preds[k];if(d)return Object.keys(d)}successors(k){var d=this._sucs[k];if(d)return Object.keys(d)}neighbors(k){var d=this.predecessors(k);if(d){const u=new Set(d);for(var o of this.successors(k))u.add(o);return Array.from(u.values())}}isLeaf(k){var d;return this.isDirected()?d=this.successors(k):d=this.neighbors(k),d.length===0}filterNodes(k){var d=new this.constructor({directed:this._isDirected,multigraph:this._isMultigraph,compound:this._isCompound});d.setGraph(this.graph());var o=this;Object.entries(this._nodes).forEach(function([A,g]){k(A)&&d.setNode(A,g)}),Object.values(this._edgeObjs).forEach(function(A){d.hasNode(A.v)&&d.hasNode(A.w)&&d.setEdge(A,o.edge(A))});var u={};function c(A){var g=o.parent(A);return g===void 0||d.hasNode(g)?(u[A]=g,g):g in u?u[g]:c(g)}return this._isCompound&&d.nodes().forEach(A=>d.setParent(A,c(A))),d}setDefaultEdgeLabel(k){return this._defaultEdgeLabelFn=k,typeof k!="function"&&(this._defaultEdgeLabelFn=()=>k),this}edgeCount(){return this._edgeCount}edges(){return Object.values(this._edgeObjs)}setPath(k,d){var o=this,u=arguments;return k.reduce(function(c,A){return u.length>1?o.setEdge(c,A,d):o.setEdge(c,A),A}),this}setEdge(){var k,d,o,u,c=!1,A=arguments[0];typeof A=="object"&&A!==null&&"v"in A?(k=A.v,d=A.w,o=A.name,arguments.length===2&&(u=arguments[1],c=!0)):(k=A,d=arguments[1],o=arguments[3],arguments.length>2&&(u=arguments[2],c=!0)),k=""+k,d=""+d,o!==void 0&&(o=""+o);var g=l(this._isDirected,k,d,o);if(Object.hasOwn(this._edgeLabels,g))return c&&(this._edgeLabels[g]=u),this;if(o!==void 0&&!this._isMultigraph)throw new Error("Cannot set a named edge when isMultigraph = false");this.setNode(k),this.setNode(d),this._edgeLabels[g]=c?u:this._defaultEdgeLabelFn(k,d,o);var f=r(this._isDirected,k,d,o);return k=f.v,d=f.w,Object.freeze(f),this._edgeObjs[g]=f,n(this._preds[d],k),n(this._sucs[k],d),this._in[d][g]=f,this._out[k][g]=f,this._edgeCount++,this}edge(k,d,o){var u=arguments.length===1?h(this._isDirected,arguments[0]):l(this._isDirected,k,d,o);return this._edgeLabels[u]}edgeAsObj(){const k=this.edge(...arguments);return typeof k!="object"?{label:k}:k}hasEdge(k,d,o){var u=arguments.length===1?h(this._isDirected,arguments[0]):l(this._isDirected,k,d,o);return Object.hasOwn(this._edgeLabels,u)}removeEdge(k,d,o){var u=arguments.length===1?h(this._isDirected,arguments[0]):l(this._isDirected,k,d,o),c=this._edgeObjs[u];return c&&(k=c.v,d=c.w,delete this._edgeLabels[u],delete this._edgeObjs[u],t(this._preds[d],k),t(this._sucs[k],d),delete this._in[d][u],delete this._out[k][u],this._edgeCount--),this}inEdges(k,d){var o=this._in[k];if(o){var u=Object.values(o);return d?u.filter(c=>c.v===d):u}}outEdges(k,d){var o=this._out[k];if(o){var u=Object.values(o);return d?u.filter(c=>c.w===d):u}}nodeEdges(k,d){var o=this.inEdges(k,d);if(o)return o.concat(this.outEdges(k,d))}}function n(p,k){p[k]?p[k]++:p[k]=1}function t(p,k){--p[k]||delete p[k]}function l(p,k,d,o){var u=""+k,c=""+d;if(!p&&u>c){var A=u;u=c,c=A}return u+e+c+e+(o===void 0?s:o)}function r(p,k,d,o){var u=""+k,c=""+d;if(!p&&u>c){var A=u;u=c,c=A}var g={v:u,w:c};return o&&(g.name=o),g}function h(p,k){return l(p,k.v,k.w,k.name)}return qk=a,qk}var Hk,SB;function v$(){return SB||(SB=1,Hk="2.2.4"),Hk}var jk,IB;function F$(){return IB||(IB=1,jk={Graph:Cc(),version:v$()}),jk}var Uk,RB;function E$(){if(RB)return Uk;RB=1;var s=Cc();Uk={write:i,read:n};function i(t){var l={options:{directed:t.isDirected(),multigraph:t.isMultigraph(),compound:t.isCompound()},nodes:e(t),edges:a(t)};return t.graph()!==void 0&&(l.value=structuredClone(t.graph())),l}function e(t){return t.nodes().map(function(l){var r=t.node(l),h=t.parent(l),p={v:l};return r!==void 0&&(p.value=r),h!==void 0&&(p.parent=h),p})}function a(t){return t.edges().map(function(l){var r=t.edge(l),h={v:l.v,w:l.w};return l.name!==void 0&&(h.name=l.name),r!==void 0&&(h.value=r),h})}function n(t){var l=new s(t.options).setGraph(t.value);return t.nodes.forEach(function(r){l.setNode(r.v,r.value),r.parent&&l.setParent(r.v,r.parent)}),t.edges.forEach(function(r){l.setEdge({v:r.v,w:r.w,name:r.name},r.value)}),l}return Uk}var Gk,OB;function b$(){if(OB)return Gk;OB=1,Gk=s;function s(i){var e={},a=[],n;function t(l){Object.hasOwn(e,l)||(e[l]=!0,n.push(l),i.successors(l).forEach(t),i.predecessors(l).forEach(t))}return i.nodes().forEach(function(l){n=[],t(l),n.length&&a.push(n)}),a}return Gk}var Wk,PB;function Xf(){if(PB)return Wk;PB=1;class s{constructor(){hi(this,"_arr",[]);hi(this,"_keyIndices",{})}size(){return this._arr.length}keys(){return this._arr.map(function(e){return e.key})}has(e){return Object.hasOwn(this._keyIndices,e)}priority(e){var a=this._keyIndices[e];if(a!==void 0)return this._arr[a].priority}min(){if(this.size()===0)throw new Error("Queue underflow");return this._arr[0].key}add(e,a){var n=this._keyIndices;if(e=String(e),!Object.hasOwn(n,e)){var t=this._arr,l=t.length;return n[e]=l,t.push({key:e,priority:a}),this._decrease(l),!0}return!1}removeMin(){this._swap(0,this._arr.length-1);var e=this._arr.pop();return delete this._keyIndices[e.key],this._heapify(0),e.key}decrease(e,a){var n=this._keyIndices[e];if(a>this._arr[n].priority)throw new Error("New priority is greater than current priority. Key: "+e+" Old: "+this._arr[n].priority+" New: "+a);this._arr[n].priority=a,this._decrease(n)}_heapify(e){var a=this._arr,n=2*e,t=n+1,l=e;n<a.length&&(l=a[n].priority<a[l].priority?n:l,t<a.length&&(l=a[t].priority<a[l].priority?t:l),l!==e&&(this._swap(e,l),this._heapify(l)))}_decrease(e){for(var a=this._arr,n=a[e].priority,t;e!==0&&(t=e>>1,!(a[t].priority<n));)this._swap(e,t),e=t}_swap(e,a){var n=this._arr,t=this._keyIndices,l=n[e],r=n[a];n[e]=r,n[a]=l,t[r.key]=e,t[l.key]=a}}return Wk=s,Wk}var Kk,LB;function Zf(){if(LB)return Kk;LB=1;var s=Xf();Kk=e;var i=()=>1;function e(n,t,l,r){return a(n,String(t),l||i,r||function(h){return n.outEdges(h)})}function a(n,t,l,r){var h={},p=new s,k,d,o=function(u){var c=u.v!==k?u.v:u.w,A=h[c],g=l(u),f=d.distance+g;if(g<0)throw new Error("dijkstra does not allow negative edge weights. Bad edge: "+u+" Weight: "+g);f<A.distance&&(A.distance=f,A.predecessor=k,p.decrease(c,f))};for(n.nodes().forEach(function(u){var c=u===t?0:Number.POSITIVE_INFINITY;h[u]={distance:c},p.add(u,c)});p.size()>0&&(k=p.removeMin(),d=h[k],d.distance!==Number.POSITIVE_INFINITY);)r(k).forEach(o);return h}return Kk}var Yk,NB;function C$(){if(NB)return Yk;NB=1;var s=Zf();Yk=i;function i(e,a,n){return e.nodes().reduce(function(t,l){return t[l]=s(e,l,a,n),t},{})}return Yk}var Xk,MB;function Jf(){if(MB)return Xk;MB=1,Xk=s;function s(i){var e=0,a=[],n={},t=[];function l(r){var h=n[r]={onStack:!0,lowlink:e,index:e++};if(a.push(r),i.successors(r).forEach(function(d){Object.hasOwn(n,d)?n[d].onStack&&(h.lowlink=Math.min(h.lowlink,n[d].index)):(l(d),h.lowlink=Math.min(h.lowlink,n[d].lowlink))}),h.lowlink===h.index){var p=[],k;do k=a.pop(),n[k].onStack=!1,p.push(k);while(r!==k);t.push(p)}}return i.nodes().forEach(function(r){Object.hasOwn(n,r)||l(r)}),t}return Xk}var Zk,VB;function _$(){if(VB)return Zk;VB=1;var s=Jf();Zk=i;function i(e){return s(e).filter(function(a){return a.length>1||a.length===1&&e.hasEdge(a[0],a[0])})}return Zk}var Jk,$B;function D$(){if($B)return Jk;$B=1,Jk=i;var s=()=>1;function i(a,n,t){return e(a,n||s,t||function(l){return a.outEdges(l)})}function e(a,n,t){var l={},r=a.nodes();return r.forEach(function(h){l[h]={},l[h][h]={distance:0},r.forEach(function(p){h!==p&&(l[h][p]={distance:Number.POSITIVE_INFINITY})}),t(h).forEach(function(p){var k=p.v===h?p.w:p.v,d=n(p);l[h][k]={distance:d,predecessor:h}})}),r.forEach(function(h){var p=l[h];r.forEach(function(k){var d=l[k];r.forEach(function(o){var u=d[h],c=p[o],A=d[o],g=u.distance+c.distance;g<A.distance&&(A.distance=g,A.predecessor=c.predecessor)})})}),l}return Jk}var Qk,zB;function Qf(){if(zB)return Qk;zB=1;function s(e){var a={},n={},t=[];function l(r){if(Object.hasOwn(n,r))throw new i;Object.hasOwn(a,r)||(n[r]=!0,a[r]=!0,e.predecessors(r).forEach(l),delete n[r],t.push(r))}if(e.sinks().forEach(l),Object.keys(a).length!==e.nodeCount())throw new i;return t}class i extends Error{constructor(){super(...arguments)}}return Qk=s,s.CycleException=i,Qk}var sd,qB;function w$(){if(qB)return sd;qB=1;var s=Qf();sd=i;function i(e){try{s(e)}catch(a){if(a instanceof s.CycleException)return!1;throw a}return!0}return sd}var id,HB;function s1(){if(HB)return id;HB=1,id=s;function s(n,t,l){Array.isArray(t)||(t=[t]);var r=n.isDirected()?d=>n.successors(d):d=>n.neighbors(d),h=l==="post"?i:e,p=[],k={};return t.forEach(d=>{if(!n.hasNode(d))throw new Error("Graph does not have node: "+d);h(d,r,k,p)}),p}function i(n,t,l,r){for(var h=[[n,!1]];h.length>0;){var p=h.pop();p[1]?r.push(p[0]):Object.hasOwn(l,p[0])||(l[p[0]]=!0,h.push([p[0],!0]),a(t(p[0]),k=>h.push([k,!1])))}}function e(n,t,l,r){for(var h=[n];h.length>0;){var p=h.pop();Object.hasOwn(l,p)||(l[p]=!0,r.push(p),a(t(p),k=>h.push(k)))}}function a(n,t){for(var l=n.length;l--;)t(n[l],l,n);return n}return id}var ed,jB;function x$(){if(jB)return ed;jB=1;var s=s1();ed=i;function i(e,a){return s(e,a,"post")}return ed}var ad,UB;function T$(){if(UB)return ad;UB=1;var s=s1();ad=i;function i(e,a){return s(e,a,"pre")}return ad}var nd,GB;function S$(){if(GB)return nd;GB=1;var s=Cc(),i=Xf();nd=e;function e(a,n){var t=new s,l={},r=new i,h;function p(d){var o=d.v===h?d.w:d.v,u=r.priority(o);if(u!==void 0){var c=n(d);c<u&&(l[o]=h,r.decrease(o,c))}}if(a.nodeCount()===0)return t;a.nodes().forEach(function(d){r.add(d,Number.POSITIVE_INFINITY),t.setNode(d)}),r.decrease(a.nodes()[0],0);for(var k=!1;r.size()>0;){if(h=r.removeMin(),Object.hasOwn(l,h))t.setEdge(h,l[h]);else{if(k)throw new Error("Input graph is not connected: "+a);k=!0}a.nodeEdges(h).forEach(p)}return t}return nd}var td,WB;function I$(){return WB||(WB=1,td={components:b$(),dijkstra:Zf(),dijkstraAll:C$(),findCycles:_$(),floydWarshall:D$(),isAcyclic:w$(),postorder:x$(),preorder:T$(),prim:S$(),tarjan:Jf(),topsort:Qf()}),td}var ld,KB;function _e(){if(KB)return ld;KB=1;var s=F$();return ld={Graph:s.Graph,json:E$(),alg:I$(),version:s.version},ld}var rd,YB;function R$(){if(YB)return rd;YB=1;class s{constructor(){let n={};n._next=n._prev=n,this._sentinel=n}dequeue(){let n=this._sentinel,t=n._prev;if(t!==n)return i(t),t}enqueue(n){let t=this._sentinel;n._prev&&n._next&&i(n),n._next=t._next,t._next._prev=n,t._next=n,n._prev=t}toString(){let n=[],t=this._sentinel,l=t._prev;for(;l!==t;)n.push(JSON.stringify(l,e)),l=l._prev;return"["+n.join(", ")+"]"}}function i(a){a._prev._next=a._next,a._next._prev=a._prev,delete a._next,delete a._prev}function e(a,n){if(a!=="_next"&&a!=="_prev")return n}return rd=s,rd}var hd,XB;function O$(){if(XB)return hd;XB=1;let s=_e().Graph,i=R$();hd=a;let e=()=>1;function a(p,k){if(p.nodeCount()<=1)return[];let d=l(p,k||e);return n(d.graph,d.buckets,d.zeroIdx).flatMap(u=>p.outEdges(u.v,u.w))}function n(p,k,d){let o=[],u=k[k.length-1],c=k[0],A;for(;p.nodeCount();){for(;A=c.dequeue();)t(p,k,d,A);for(;A=u.dequeue();)t(p,k,d,A);if(p.nodeCount()){for(let g=k.length-2;g>0;--g)if(A=k[g].dequeue(),A){o=o.concat(t(p,k,d,A,!0));break}}}return o}function t(p,k,d,o,u){let c=u?[]:void 0;return p.inEdges(o.v).forEach(A=>{let g=p.edge(A),f=p.node(A.v);u&&c.push({v:A.v,w:A.w}),f.out-=g,r(k,d,f)}),p.outEdges(o.v).forEach(A=>{let g=p.edge(A),f=A.w,m=p.node(f);m.in-=g,r(k,d,m)}),p.removeNode(o.v),c}function l(p,k){let d=new s,o=0,u=0;p.nodes().forEach(g=>{d.setNode(g,{v:g,in:0,out:0})}),p.edges().forEach(g=>{let f=d.edge(g.v,g.w)||0,m=k(g),y=f+m;d.setEdge(g.v,g.w,y),u=Math.max(u,d.node(g.v).out+=m),o=Math.max(o,d.node(g.w).in+=m)});let c=h(u+o+3).map(()=>new i),A=o+1;return d.nodes().forEach(g=>{r(c,A,d.node(g))}),{graph:d,buckets:c,zeroIdx:A}}function r(p,k,d){d.out?d.in?p[d.out-d.in+k].enqueue(d):p[p.length-1].enqueue(d):p[0].enqueue(d)}function h(p){const k=[];for(let d=0;d<p;d++)k.push(d);return k}return hd}var pd,ZB;function ci(){if(ZB)return pd;ZB=1;let s=_e().Graph;pd={addBorderNode:k,addDummyNode:i,applyWithChunking:u,asNonCompoundGraph:a,buildLayerMatrix:r,intersectRect:l,mapValues:S,maxRank:c,normalizeRanks:h,notime:f,partition:A,pick:_,predecessorWeights:t,range:v,removeEmptyRanks:p,simplify:e,successorWeights:n,time:g,uniqueId:y,zipObject:N};function i(T,C,I,O){let w;do w=y(O);while(T.hasNode(w));return I.dummy=C,T.setNode(w,I),w}function e(T){let C=new s().setGraph(T.graph());return T.nodes().forEach(I=>C.setNode(I,T.node(I))),T.edges().forEach(I=>{let O=C.edge(I.v,I.w)||{weight:0,minlen:1},w=T.edge(I);C.setEdge(I.v,I.w,{weight:O.weight+w.weight,minlen:Math.max(O.minlen,w.minlen)})}),C}function a(T){let C=new s({multigraph:T.isMultigraph()}).setGraph(T.graph());return T.nodes().forEach(I=>{T.children(I).length||C.setNode(I,T.node(I))}),T.edges().forEach(I=>{C.setEdge(I,T.edge(I))}),C}function n(T){let C=T.nodes().map(I=>{let O={};return T.outEdges(I).forEach(w=>{O[w.w]=(O[w.w]||0)+T.edge(w).weight}),O});return N(T.nodes(),C)}function t(T){let C=T.nodes().map(I=>{let O={};return T.inEdges(I).forEach(w=>{O[w.v]=(O[w.v]||0)+T.edge(w).weight}),O});return N(T.nodes(),C)}function l(T,C){let I=T.x,O=T.y,w=C.x-I,z=C.y-O,b=T.width/2,$=T.height/2;if(!w&&!z)throw new Error("Not possible to find intersection inside of the rectangle");let R,M;return Math.abs(z)*b>Math.abs(w)*$?(z<0&&($=-$),R=$*w/z,M=$):(w<0&&(b=-b),R=b,M=b*z/w),{x:I+R,y:O+M}}function r(T){let C=v(c(T)+1).map(()=>[]);return T.nodes().forEach(I=>{let O=T.node(I),w=O.rank;w!==void 0&&(C[w][O.order]=I)}),C}function h(T){let C=T.nodes().map(O=>{let w=T.node(O).rank;return w===void 0?Number.MAX_VALUE:w}),I=u(Math.min,C);T.nodes().forEach(O=>{let w=T.node(O);Object.hasOwn(w,"rank")&&(w.rank-=I)})}function p(T){let C=T.nodes().map(b=>T.node(b).rank),I=u(Math.min,C),O=[];T.nodes().forEach(b=>{let $=T.node(b).rank-I;O[$]||(O[$]=[]),O[$].push(b)});let w=0,z=T.graph().nodeRankFactor;Array.from(O).forEach((b,$)=>{b===void 0&&$%z!==0?--w:b!==void 0&&w&&b.forEach(R=>T.node(R).rank+=w)})}function k(T,C,I,O){let w={width:0,height:0};return arguments.length>=4&&(w.rank=I,w.order=O),i(T,"border",w,C)}function d(T,C=o){const I=[];for(let O=0;O<T.length;O+=C){const w=T.slice(O,O+C);I.push(w)}return I}const o=65535;function u(T,C){if(C.length>o){const I=d(C);return T.apply(null,I.map(O=>T.apply(null,O)))}else return T.apply(null,C)}function c(T){const I=T.nodes().map(O=>{let w=T.node(O).rank;return w===void 0?Number.MIN_VALUE:w});return u(Math.max,I)}function A(T,C){let I={lhs:[],rhs:[]};return T.forEach(O=>{C(O)?I.lhs.push(O):I.rhs.push(O)}),I}function g(T,C){let I=Date.now();try{return C()}finally{console.log(T+" time: "+(Date.now()-I)+"ms")}}function f(T,C){return C()}let m=0;function y(T){var C=++m;return toString(T)+C}function v(T,C,I=1){C==null&&(C=T,T=0);let O=z=>z<C;I<0&&(O=z=>C<z);const w=[];for(let z=T;O(z);z+=I)w.push(z);return w}function _(T,C){const I={};for(const O of C)T[O]!==void 0&&(I[O]=T[O]);return I}function S(T,C){let I=C;return typeof C=="string"&&(I=O=>O[C]),Object.entries(T).reduce((O,[w,z])=>(O[w]=I(z,w),O),{})}function N(T,C){return T.reduce((I,O,w)=>(I[O]=C[w],I),{})}return pd}var kd,JB;function P$(){if(JB)return kd;JB=1;let s=O$(),i=ci().uniqueId;kd={run:e,undo:n};function e(t){(t.graph().acyclicer==="greedy"?s(t,r(t)):a(t)).forEach(h=>{let p=t.edge(h);t.removeEdge(h),p.forwardName=h.name,p.reversed=!0,t.setEdge(h.w,h.v,p,i("rev"))});function r(h){return p=>h.edge(p).weight}}function a(t){let l=[],r={},h={};function p(k){Object.hasOwn(h,k)||(h[k]=!0,r[k]=!0,t.outEdges(k).forEach(d=>{Object.hasOwn(r,d.w)?l.push(d):p(d.w)}),delete r[k])}return t.nodes().forEach(p),l}function n(t){t.edges().forEach(l=>{let r=t.edge(l);if(r.reversed){t.removeEdge(l);let h=r.forwardName;delete r.reversed,delete r.forwardName,t.setEdge(l.w,l.v,r,h)}})}return kd}var dd,QB;function L$(){if(QB)return dd;QB=1;let s=ci();dd={run:i,undo:a};function i(n){n.graph().dummyChains=[],n.edges().forEach(t=>e(n,t))}function e(n,t){let l=t.v,r=n.node(l).rank,h=t.w,p=n.node(h).rank,k=t.name,d=n.edge(t),o=d.labelRank;if(p===r+1)return;n.removeEdge(t);let u,c,A;for(A=0,++r;r<p;++A,++r)d.points=[],c={width:0,height:0,edgeLabel:d,edgeObj:t,rank:r},u=s.addDummyNode(n,"edge",c,"_d"),r===o&&(c.width=d.width,c.height=d.height,c.dummy="edge-label",c.labelpos=d.labelpos),n.setEdge(l,u,{weight:d.weight},k),A===0&&n.graph().dummyChains.push(u),l=u;n.setEdge(l,h,{weight:d.weight},k)}function a(n){n.graph().dummyChains.forEach(t=>{let l=n.node(t),r=l.edgeLabel,h;for(n.setEdge(l.edgeObj,r);l.dummy;)h=n.successors(t)[0],n.removeNode(t),r.points.push({x:l.x,y:l.y}),l.dummy==="edge-label"&&(r.x=l.x,r.y=l.y,r.width=l.width,r.height=l.height),t=h,l=n.node(t)})}return dd}var od,sA;function qh(){if(sA)return od;sA=1;const{applyWithChunking:s}=ci();od={longestPath:i,slack:e};function i(a){var n={};function t(l){var r=a.node(l);if(Object.hasOwn(n,l))return r.rank;n[l]=!0;let h=a.outEdges(l).map(k=>k==null?Number.POSITIVE_INFINITY:t(k.w)-a.edge(k).minlen);var p=s(Math.min,h);return p===Number.POSITIVE_INFINITY&&(p=0),r.rank=p}a.sources().forEach(t)}function e(a,n){return a.node(n.w).rank-a.node(n.v).rank-a.edge(n).minlen}return od}var ud,iA;function i1(){if(iA)return ud;iA=1;var s=_e().Graph,i=qh().slack;ud=e;function e(l){var r=new s({directed:!1}),h=l.nodes()[0],p=l.nodeCount();r.setNode(h,{});for(var k,d;a(r,l)<p;)k=n(r,l),d=r.hasNode(k.v)?i(l,k):-i(l,k),t(r,l,d);return r}function a(l,r){function h(p){r.nodeEdges(p).forEach(k=>{var d=k.v,o=p===d?k.w:d;!l.hasNode(o)&&!i(r,k)&&(l.setNode(o,{}),l.setEdge(p,o,{}),h(o))})}return l.nodes().forEach(h),l.nodeCount()}function n(l,r){return r.edges().reduce((p,k)=>{let d=Number.POSITIVE_INFINITY;return l.hasNode(k.v)!==l.hasNode(k.w)&&(d=i(r,k)),d<p[0]?[d,k]:p},[Number.POSITIVE_INFINITY,null])[1]}function t(l,r,h){l.nodes().forEach(p=>r.node(p).rank+=h)}return ud}var cd,eA;function N$(){if(eA)return cd;eA=1;var s=i1(),i=qh().slack,e=qh().longestPath,a=_e().alg.preorder,n=_e().alg.postorder,t=ci().simplify;cd=l,l.initLowLimValues=k,l.initCutValues=r,l.calcCutValue=p,l.leaveEdge=o,l.enterEdge=u,l.exchangeEdges=c;function l(m){m=t(m),e(m);var y=s(m);k(y),r(y,m);for(var v,_;v=o(y);)_=u(y,m,v),c(y,m,v,_)}function r(m,y){var v=n(m,m.nodes());v=v.slice(0,v.length-1),v.forEach(_=>h(m,y,_))}function h(m,y,v){var _=m.node(v),S=_.parent;m.edge(v,S).cutvalue=p(m,y,v)}function p(m,y,v){var _=m.node(v),S=_.parent,N=!0,T=y.edge(v,S),C=0;return T||(N=!1,T=y.edge(S,v)),C=T.weight,y.nodeEdges(v).forEach(I=>{var O=I.v===v,w=O?I.w:I.v;if(w!==S){var z=O===N,b=y.edge(I).weight;if(C+=z?b:-b,g(m,v,w)){var $=m.edge(v,w).cutvalue;C+=z?-$:$}}}),C}function k(m,y){arguments.length<2&&(y=m.nodes()[0]),d(m,{},1,y)}function d(m,y,v,_,S){var N=v,T=m.node(_);return y[_]=!0,m.neighbors(_).forEach(C=>{Object.hasOwn(y,C)||(v=d(m,y,v,C,_))}),T.low=N,T.lim=v++,S?T.parent=S:delete T.parent,v}function o(m){return m.edges().find(y=>m.edge(y).cutvalue<0)}function u(m,y,v){var _=v.v,S=v.w;y.hasEdge(_,S)||(_=v.w,S=v.v);var N=m.node(_),T=m.node(S),C=N,I=!1;N.lim>T.lim&&(C=T,I=!0);var O=y.edges().filter(w=>I===f(m,m.node(w.v),C)&&I!==f(m,m.node(w.w),C));return O.reduce((w,z)=>i(y,z)<i(y,w)?z:w)}function c(m,y,v,_){var S=v.v,N=v.w;m.removeEdge(S,N),m.setEdge(_.v,_.w,{}),k(m),r(m,y),A(m,y)}function A(m,y){var v=m.nodes().find(S=>!y.node(S).parent),_=a(m,v);_=_.slice(1),_.forEach(S=>{var N=m.node(S).parent,T=y.edge(S,N),C=!1;T||(T=y.edge(N,S),C=!0),y.node(S).rank=y.node(N).rank+(C?T.minlen:-T.minlen)})}function g(m,y,v){return m.hasEdge(y,v)}function f(m,y,v){return v.low<=y.lim&&y.lim<=v.lim}return cd}var gd,aA;function M$(){if(aA)return gd;aA=1;var s=qh(),i=s.longestPath,e=i1(),a=N$();gd=n;function n(h){switch(h.graph().ranker){case"network-simplex":r(h);break;case"tight-tree":l(h);break;case"longest-path":t(h);break;default:r(h)}}var t=i;function l(h){i(h),e(h)}function r(h){a(h)}return gd}var Bd,nA;function V$(){if(nA)return Bd;nA=1,Bd=s;function s(a){let n=e(a);a.graph().dummyChains.forEach(t=>{let l=a.node(t),r=l.edgeObj,h=i(a,n,r.v,r.w),p=h.path,k=h.lca,d=0,o=p[d],u=!0;for(;t!==r.w;){if(l=a.node(t),u){for(;(o=p[d])!==k&&a.node(o).maxRank<l.rank;)d++;o===k&&(u=!1)}if(!u){for(;d<p.length-1&&a.node(o=p[d+1]).minRank<=l.rank;)d++;o=p[d]}a.setParent(t,o),t=a.successors(t)[0]}})}function i(a,n,t,l){let r=[],h=[],p=Math.min(n[t].low,n[l].low),k=Math.max(n[t].lim,n[l].lim),d,o;d=t;do d=a.parent(d),r.push(d);while(d&&(n[d].low>p||k>n[d].lim));for(o=d,d=l;(d=a.parent(d))!==o;)h.push(d);return{path:r.concat(h.reverse()),lca:o}}function e(a){let n={},t=0;function l(r){let h=t;a.children(r).forEach(l),n[r]={low:h,lim:t++}}return a.children().forEach(l),n}return Bd}var Ad,tA;function $$(){if(tA)return Ad;tA=1;let s=ci();Ad={run:i,cleanup:t};function i(l){let r=s.addDummyNode(l,"root",{},"_root"),h=a(l),p=Object.values(h),k=s.applyWithChunking(Math.max,p)-1,d=2*k+1;l.graph().nestingRoot=r,l.edges().forEach(u=>l.edge(u).minlen*=d);let o=n(l)+1;l.children().forEach(u=>e(l,r,d,o,k,h,u)),l.graph().nodeRankFactor=d}function e(l,r,h,p,k,d,o){let u=l.children(o);if(!u.length){o!==r&&l.setEdge(r,o,{weight:0,minlen:h});return}let c=s.addBorderNode(l,"_bt"),A=s.addBorderNode(l,"_bb"),g=l.node(o);l.setParent(c,o),g.borderTop=c,l.setParent(A,o),g.borderBottom=A,u.forEach(f=>{e(l,r,h,p,k,d,f);let m=l.node(f),y=m.borderTop?m.borderTop:f,v=m.borderBottom?m.borderBottom:f,_=m.borderTop?p:2*p,S=y!==v?1:k-d[o]+1;l.setEdge(c,y,{weight:_,minlen:S,nestingEdge:!0}),l.setEdge(v,A,{weight:_,minlen:S,nestingEdge:!0})}),l.parent(o)||l.setEdge(r,c,{weight:0,minlen:k+d[o]})}function a(l){var r={};function h(p,k){var d=l.children(p);d&&d.length&&d.forEach(o=>h(o,k+1)),r[p]=k}return l.children().forEach(p=>h(p,1)),r}function n(l){return l.edges().reduce((r,h)=>r+l.edge(h).weight,0)}function t(l){var r=l.graph();l.removeNode(r.nestingRoot),delete r.nestingRoot,l.edges().forEach(h=>{var p=l.edge(h);p.nestingEdge&&l.removeEdge(h)})}return Ad}var yd,lA;function z$(){if(lA)return yd;lA=1;let s=ci();yd=i;function i(a){function n(t){let l=a.children(t),r=a.node(t);if(l.length&&l.forEach(n),Object.hasOwn(r,"minRank")){r.borderLeft=[],r.borderRight=[];for(let h=r.minRank,p=r.maxRank+1;h<p;++h)e(a,"borderLeft","_bl",t,r,h),e(a,"borderRight","_br",t,r,h)}}a.children().forEach(n)}function e(a,n,t,l,r,h){let p={width:0,height:0,rank:h,borderType:n},k=r[n][h-1],d=s.addDummyNode(a,"border",p,t);r[n][h]=d,a.setParent(d,l),k&&a.setEdge(k,d,{weight:1})}return yd}var fd,rA;function q$(){if(rA)return fd;rA=1,fd={adjust:s,undo:i};function s(h){let p=h.graph().rankdir.toLowerCase();(p==="lr"||p==="rl")&&e(h)}function i(h){let p=h.graph().rankdir.toLowerCase();(p==="bt"||p==="rl")&&n(h),(p==="lr"||p==="rl")&&(l(h),e(h))}function e(h){h.nodes().forEach(p=>a(h.node(p))),h.edges().forEach(p=>a(h.edge(p)))}function a(h){let p=h.width;h.width=h.height,h.height=p}function n(h){h.nodes().forEach(p=>t(h.node(p))),h.edges().forEach(p=>{let k=h.edge(p);k.points.forEach(t),Object.hasOwn(k,"y")&&t(k)})}function t(h){h.y=-h.y}function l(h){h.nodes().forEach(p=>r(h.node(p))),h.edges().forEach(p=>{let k=h.edge(p);k.points.forEach(r),Object.hasOwn(k,"x")&&r(k)})}function r(h){let p=h.x;h.x=h.y,h.y=p}return fd}var md,hA;function H$(){if(hA)return md;hA=1;let s=ci();md=i;function i(e){let a={},n=e.nodes().filter(k=>!e.children(k).length),t=n.map(k=>e.node(k).rank),l=s.applyWithChunking(Math.max,t),r=s.range(l+1).map(()=>[]);function h(k){if(a[k])return;a[k]=!0;let d=e.node(k);r[d.rank].push(k),e.successors(k).forEach(h)}return n.sort((k,d)=>e.node(k).rank-e.node(d).rank).forEach(h),r}return md}var vd,pA;function j$(){if(pA)return vd;pA=1;let s=ci().zipObject;vd=i;function i(a,n){let t=0;for(let l=1;l<n.length;++l)t+=e(a,n[l-1],n[l]);return t}function e(a,n,t){let l=s(t,t.map((o,u)=>u)),r=n.flatMap(o=>a.outEdges(o).map(u=>({pos:l[u.w],weight:a.edge(u).weight})).sort((u,c)=>u.pos-c.pos)),h=1;for(;h<t.length;)h<<=1;let p=2*h-1;h-=1;let k=new Array(p).fill(0),d=0;return r.forEach(o=>{let u=o.pos+h;k[u]+=o.weight;let c=0;for(;u>0;)u%2&&(c+=k[u+1]),u=u-1>>1,k[u]+=o.weight;d+=o.weight*c}),d}return vd}var Fd,kA;function U$(){if(kA)return Fd;kA=1,Fd=s;function s(i,e=[]){return e.map(a=>{let n=i.inEdges(a);if(n.length){let t=n.reduce((l,r)=>{let h=i.edge(r),p=i.node(r.v);return{sum:l.sum+h.weight*p.order,weight:l.weight+h.weight}},{sum:0,weight:0});return{v:a,barycenter:t.sum/t.weight,weight:t.weight}}else return{v:a}})}return Fd}var Ed,dA;function G$(){if(dA)return Ed;dA=1;let s=ci();Ed=i;function i(n,t){let l={};n.forEach((h,p)=>{let k=l[h.v]={indegree:0,in:[],out:[],vs:[h.v],i:p};h.barycenter!==void 0&&(k.barycenter=h.barycenter,k.weight=h.weight)}),t.edges().forEach(h=>{let p=l[h.v],k=l[h.w];p!==void 0&&k!==void 0&&(k.indegree++,p.out.push(l[h.w]))});let r=Object.values(l).filter(h=>!h.indegree);return e(r)}function e(n){let t=[];function l(h){return p=>{p.merged||(p.barycenter===void 0||h.barycenter===void 0||p.barycenter>=h.barycenter)&&a(h,p)}}function r(h){return p=>{p.in.push(h),--p.indegree===0&&n.push(p)}}for(;n.length;){let h=n.pop();t.push(h),h.in.reverse().forEach(l(h)),h.out.forEach(r(h))}return t.filter(h=>!h.merged).map(h=>s.pick(h,["vs","i","barycenter","weight"]))}function a(n,t){let l=0,r=0;n.weight&&(l+=n.barycenter*n.weight,r+=n.weight),t.weight&&(l+=t.barycenter*t.weight,r+=t.weight),n.vs=t.vs.concat(n.vs),n.barycenter=l/r,n.weight=r,n.i=Math.min(t.i,n.i),t.merged=!0}return Ed}var bd,oA;function W$(){if(oA)return bd;oA=1;let s=ci();bd=i;function i(n,t){let l=s.partition(n,c=>Object.hasOwn(c,"barycenter")),r=l.lhs,h=l.rhs.sort((c,A)=>A.i-c.i),p=[],k=0,d=0,o=0;r.sort(a(!!t)),o=e(p,h,o),r.forEach(c=>{o+=c.vs.length,p.push(c.vs),k+=c.barycenter*c.weight,d+=c.weight,o=e(p,h,o)});let u={vs:p.flat(!0)};return d&&(u.barycenter=k/d,u.weight=d),u}function e(n,t,l){let r;for(;t.length&&(r=t[t.length-1]).i<=l;)t.pop(),n.push(r.vs),l++;return l}function a(n){return(t,l)=>t.barycenter<l.barycenter?-1:t.barycenter>l.barycenter?1:n?l.i-t.i:t.i-l.i}return bd}var Cd,uA;function K$(){if(uA)return Cd;uA=1;let s=U$(),i=G$(),e=W$();Cd=a;function a(l,r,h,p){let k=l.children(r),d=l.node(r),o=d?d.borderLeft:void 0,u=d?d.borderRight:void 0,c={};o&&(k=k.filter(m=>m!==o&&m!==u));let A=s(l,k);A.forEach(m=>{if(l.children(m.v).length){let y=a(l,m.v,h,p);c[m.v]=y,Object.hasOwn(y,"barycenter")&&t(m,y)}});let g=i(A,h);n(g,c);let f=e(g,p);if(o&&(f.vs=[o,f.vs,u].flat(!0),l.predecessors(o).length)){let m=l.node(l.predecessors(o)[0]),y=l.node(l.predecessors(u)[0]);Object.hasOwn(f,"barycenter")||(f.barycenter=0,f.weight=0),f.barycenter=(f.barycenter*f.weight+m.order+y.order)/(f.weight+2),f.weight+=2}return f}function n(l,r){l.forEach(h=>{h.vs=h.vs.flatMap(p=>r[p]?r[p].vs:p)})}function t(l,r){l.barycenter!==void 0?(l.barycenter=(l.barycenter*l.weight+r.barycenter*r.weight)/(l.weight+r.weight),l.weight+=r.weight):(l.barycenter=r.barycenter,l.weight=r.weight)}return Cd}var _d,cA;function Y$(){if(cA)return _d;cA=1;let s=_e().Graph,i=ci();_d=e;function e(n,t,l){let r=a(n),h=new s({compound:!0}).setGraph({root:r}).setDefaultNodeLabel(p=>n.node(p));return n.nodes().forEach(p=>{let k=n.node(p),d=n.parent(p);(k.rank===t||k.minRank<=t&&t<=k.maxRank)&&(h.setNode(p),h.setParent(p,d||r),n[l](p).forEach(o=>{let u=o.v===p?o.w:o.v,c=h.edge(u,p),A=c!==void 0?c.weight:0;h.setEdge(u,p,{weight:n.edge(o).weight+A})}),Object.hasOwn(k,"minRank")&&h.setNode(p,{borderLeft:k.borderLeft[t],borderRight:k.borderRight[t]}))}),h}function a(n){for(var t;n.hasNode(t=i.uniqueId("_root")););return t}return _d}var Dd,gA;function X$(){if(gA)return Dd;gA=1,Dd=s;function s(i,e,a){let n={},t;a.forEach(l=>{let r=i.parent(l),h,p;for(;r;){if(h=i.parent(r),h?(p=n[h],n[h]=r):(p=t,t=r),p&&p!==r){e.setEdge(p,r);return}r=h}})}return Dd}var wd,BA;function Z$(){if(BA)return wd;BA=1;let s=H$(),i=j$(),e=K$(),a=Y$(),n=X$(),t=_e().Graph,l=ci();wd=r;function r(d,o){if(o&&typeof o.customOrder=="function"){o.customOrder(d,r);return}let u=l.maxRank(d),c=h(d,l.range(1,u+1),"inEdges"),A=h(d,l.range(u-1,-1,-1),"outEdges"),g=s(d);if(k(d,g),o&&o.disableOptimalOrderHeuristic)return;let f=Number.POSITIVE_INFINITY,m;for(let y=0,v=0;v<4;++y,++v){p(y%2?c:A,y%4>=2),g=l.buildLayerMatrix(d);let _=i(d,g);_<f&&(v=0,m=Object.assign({},g),f=_)}k(d,m)}function h(d,o,u){return o.map(function(c){return a(d,c,u)})}function p(d,o){let u=new t;d.forEach(function(c){let A=c.graph().root,g=e(c,A,u,o);g.vs.forEach((f,m)=>c.node(f).order=m),n(c,u,g.vs)})}function k(d,o){Object.values(o).forEach(u=>u.forEach((c,A)=>d.node(c).order=A))}return wd}var xd,AA;function J$(){if(AA)return xd;AA=1;let s=_e().Graph,i=ci();xd={positionX:u,findType1Conflicts:e,findType2Conflicts:a,addConflict:t,hasConflict:l,verticalAlignment:r,horizontalCompaction:h,alignCoordinates:d,findSmallestWidthAlignment:k,balance:o};function e(g,f){let m={};function y(v,_){let S=0,N=0,T=v.length,C=_[_.length-1];return _.forEach((I,O)=>{let w=n(g,I),z=w?g.node(w).order:T;(w||I===C)&&(_.slice(N,O+1).forEach(b=>{g.predecessors(b).forEach($=>{let R=g.node($),M=R.order;(M<S||z<M)&&!(R.dummy&&g.node(b).dummy)&&t(m,$,b)})}),N=O+1,S=z)}),_}return f.length&&f.reduce(y),m}function a(g,f){let m={};function y(_,S,N,T,C){let I;i.range(S,N).forEach(O=>{I=_[O],g.node(I).dummy&&g.predecessors(I).forEach(w=>{let z=g.node(w);z.dummy&&(z.order<T||z.order>C)&&t(m,w,I)})})}function v(_,S){let N=-1,T,C=0;return S.forEach((I,O)=>{if(g.node(I).dummy==="border"){let w=g.predecessors(I);w.length&&(T=g.node(w[0]).order,y(S,C,O,N,T),C=O,N=T)}y(S,C,S.length,T,_.length)}),S}return f.length&&f.reduce(v),m}function n(g,f){if(g.node(f).dummy)return g.predecessors(f).find(m=>g.node(m).dummy)}function t(g,f,m){if(f>m){let v=f;f=m,m=v}let y=g[f];y||(g[f]=y={}),y[m]=!0}function l(g,f,m){if(f>m){let y=f;f=m,m=y}return!!g[f]&&Object.hasOwn(g[f],m)}function r(g,f,m,y){let v={},_={},S={};return f.forEach(N=>{N.forEach((T,C)=>{v[T]=T,_[T]=T,S[T]=C})}),f.forEach(N=>{let T=-1;N.forEach(C=>{let I=y(C);if(I.length){I=I.sort((w,z)=>S[w]-S[z]);let O=(I.length-1)/2;for(let w=Math.floor(O),z=Math.ceil(O);w<=z;++w){let b=I[w];_[C]===C&&T<S[b]&&!l(m,C,b)&&(_[b]=C,_[C]=v[C]=v[b],T=S[b])}}})}),{root:v,align:_}}function h(g,f,m,y,v){let _={},S=p(g,f,m,v),N=v?"borderLeft":"borderRight";function T(O,w){let z=S.nodes(),b=z.pop(),$={};for(;b;)$[b]?O(b):($[b]=!0,z.push(b),z=z.concat(w(b))),b=z.pop()}function C(O){_[O]=S.inEdges(O).reduce((w,z)=>Math.max(w,_[z.v]+S.edge(z)),0)}function I(O){let w=S.outEdges(O).reduce((b,$)=>Math.min(b,_[$.w]-S.edge($)),Number.POSITIVE_INFINITY),z=g.node(O);w!==Number.POSITIVE_INFINITY&&z.borderType!==N&&(_[O]=Math.max(_[O],w))}return T(C,S.predecessors.bind(S)),T(I,S.successors.bind(S)),Object.keys(y).forEach(O=>_[O]=_[m[O]]),_}function p(g,f,m,y){let v=new s,_=g.graph(),S=c(_.nodesep,_.edgesep,y);return f.forEach(N=>{let T;N.forEach(C=>{let I=m[C];if(v.setNode(I),T){var O=m[T],w=v.edge(O,I);v.setEdge(O,I,Math.max(S(g,C,T),w||0))}T=C})}),v}function k(g,f){return Object.values(f).reduce((m,y)=>{let v=Number.NEGATIVE_INFINITY,_=Number.POSITIVE_INFINITY;Object.entries(y).forEach(([N,T])=>{let C=A(g,N)/2;v=Math.max(T+C,v),_=Math.min(T-C,_)});const S=v-_;return S<m[0]&&(m=[S,y]),m},[Number.POSITIVE_INFINITY,null])[1]}function d(g,f){let m=Object.values(f),y=i.applyWithChunking(Math.min,m),v=i.applyWithChunking(Math.max,m);["u","d"].forEach(_=>{["l","r"].forEach(S=>{let N=_+S,T=g[N];if(T===f)return;let C=Object.values(T),I=y-i.applyWithChunking(Math.min,C);S!=="l"&&(I=v-i.applyWithChunking(Math.max,C)),I&&(g[N]=i.mapValues(T,O=>O+I))})})}function o(g,f){return i.mapValues(g.ul,(m,y)=>{if(f)return g[f.toLowerCase()][y];{let v=Object.values(g).map(_=>_[y]).sort((_,S)=>_-S);return(v[1]+v[2])/2}})}function u(g){let f=i.buildLayerMatrix(g),m=Object.assign(e(g,f),a(g,f)),y={},v;["u","d"].forEach(S=>{v=S==="u"?f:Object.values(f).reverse(),["l","r"].forEach(N=>{N==="r"&&(v=v.map(O=>Object.values(O).reverse()));let T=(S==="u"?g.predecessors:g.successors).bind(g),C=r(g,v,m,T),I=h(g,v,C.root,C.align,N==="r");N==="r"&&(I=i.mapValues(I,O=>-O)),y[S+N]=I})});let _=k(g,y);return d(y,_),o(y,g.graph().align)}function c(g,f,m){return(y,v,_)=>{let S=y.node(v),N=y.node(_),T=0,C;if(T+=S.width/2,Object.hasOwn(S,"labelpos"))switch(S.labelpos.toLowerCase()){case"l":C=-S.width/2;break;case"r":C=S.width/2;break}if(C&&(T+=m?C:-C),C=0,T+=(S.dummy?f:g)/2,T+=(N.dummy?f:g)/2,T+=N.width/2,Object.hasOwn(N,"labelpos"))switch(N.labelpos.toLowerCase()){case"l":C=N.width/2;break;case"r":C=-N.width/2;break}return C&&(T+=m?C:-C),C=0,T}}function A(g,f){return g.node(f).width}return xd}var Td,yA;function Q$(){if(yA)return Td;yA=1;let s=ci(),i=J$().positionX;Td=e;function e(n){n=s.asNonCompoundGraph(n),a(n),Object.entries(i(n)).forEach(([t,l])=>n.node(t).x=l)}function a(n){let t=s.buildLayerMatrix(n),l=n.graph().ranksep,r=0;t.forEach(h=>{const p=h.reduce((k,d)=>{const o=n.node(d).height;return k>o?k:o},0);h.forEach(k=>n.node(k).y=r+p/2),r+=p+l})}return Td}var Sd,fA;function sz(){if(fA)return Sd;fA=1;let s=P$(),i=L$(),e=M$(),a=ci().normalizeRanks,n=V$(),t=ci().removeEmptyRanks,l=$$(),r=z$(),h=q$(),p=Z$(),k=Q$(),d=ci(),o=_e().Graph;Sd=u;function u(q,U){let K=U&&U.debugTiming?d.time:d.notime;K("layout",()=>{let rs=K("  buildLayoutGraph",()=>T(q));K("  runLayout",()=>c(rs,K,U)),K("  updateInputGraph",()=>A(q,rs))})}function c(q,U,K){U("    makeSpaceForEdgeLabels",()=>C(q)),U("    removeSelfEdges",()=>W(q)),U("    acyclic",()=>s.run(q)),U("    nestingGraph.run",()=>l.run(q)),U("    rank",()=>e(d.asNonCompoundGraph(q))),U("    injectEdgeLabelProxies",()=>I(q)),U("    removeEmptyRanks",()=>t(q)),U("    nestingGraph.cleanup",()=>l.cleanup(q)),U("    normalizeRanks",()=>a(q)),U("    assignRankMinMax",()=>O(q)),U("    removeEdgeLabelProxies",()=>w(q)),U("    normalize.run",()=>i.run(q)),U("    parentDummyChains",()=>n(q)),U("    addBorderSegments",()=>r(q)),U("    order",()=>p(q,K)),U("    insertSelfEdges",()=>Y(q)),U("    adjustCoordinateSystem",()=>h.adjust(q)),U("    position",()=>k(q)),U("    positionSelfEdges",()=>ls(q)),U("    removeBorderNodes",()=>M(q)),U("    normalize.undo",()=>i.undo(q)),U("    fixupEdgeLabelCoords",()=>$(q)),U("    undoCoordinateSystem",()=>h.undo(q)),U("    translateGraph",()=>z(q)),U("    assignNodeIntersects",()=>b(q)),U("    reversePoints",()=>R(q)),U("    acyclic.undo",()=>s.undo(q))}function A(q,U){q.nodes().forEach(K=>{let rs=q.node(K),j=U.node(K);rs&&(rs.x=j.x,rs.y=j.y,rs.rank=j.rank,U.children(K).length&&(rs.width=j.width,rs.height=j.height))}),q.edges().forEach(K=>{let rs=q.edge(K),j=U.edge(K);rs.points=j.points,Object.hasOwn(j,"x")&&(rs.x=j.x,rs.y=j.y)}),q.graph().width=U.graph().width,q.graph().height=U.graph().height}let g=["nodesep","edgesep","ranksep","marginx","marginy"],f={ranksep:50,edgesep:20,nodesep:50,rankdir:"tb"},m=["acyclicer","ranker","rankdir","align"],y=["width","height"],v={width:0,height:0},_=["minlen","weight","width","height","labeloffset"],S={minlen:1,weight:1,width:0,height:0,labeloffset:10,labelpos:"r"},N=["labelpos"];function T(q){let U=new o({multigraph:!0,compound:!0}),K=es(q.graph());return U.setGraph(Object.assign({},f,ps(K,g),d.pick(K,m))),q.nodes().forEach(rs=>{let j=es(q.node(rs));const J=ps(j,y);Object.keys(v).forEach(Z=>{J[Z]===void 0&&(J[Z]=v[Z])}),U.setNode(rs,J),U.setParent(rs,q.parent(rs))}),q.edges().forEach(rs=>{let j=es(q.edge(rs));U.setEdge(rs,Object.assign({},S,ps(j,_),d.pick(j,N)))}),U}function C(q){let U=q.graph();U.ranksep/=2,q.edges().forEach(K=>{let rs=q.edge(K);rs.minlen*=2,rs.labelpos.toLowerCase()!=="c"&&(U.rankdir==="TB"||U.rankdir==="BT"?rs.width+=rs.labeloffset:rs.height+=rs.labeloffset)})}function I(q){q.edges().forEach(U=>{let K=q.edge(U);if(K.width&&K.height){let rs=q.node(U.v),J={rank:(q.node(U.w).rank-rs.rank)/2+rs.rank,e:U};d.addDummyNode(q,"edge-proxy",J,"_ep")}})}function O(q){let U=0;q.nodes().forEach(K=>{let rs=q.node(K);rs.borderTop&&(rs.minRank=q.node(rs.borderTop).rank,rs.maxRank=q.node(rs.borderBottom).rank,U=Math.max(U,rs.maxRank))}),q.graph().maxRank=U}function w(q){q.nodes().forEach(U=>{let K=q.node(U);K.dummy==="edge-proxy"&&(q.edge(K.e).labelRank=K.rank,q.removeNode(U))})}function z(q){let U=Number.POSITIVE_INFINITY,K=0,rs=Number.POSITIVE_INFINITY,j=0,J=q.graph(),Z=J.marginx||0,ks=J.marginy||0;function cs(X){let x=X.x,E=X.y,D=X.width,P=X.height;U=Math.min(U,x-D/2),K=Math.max(K,x+D/2),rs=Math.min(rs,E-P/2),j=Math.max(j,E+P/2)}q.nodes().forEach(X=>cs(q.node(X))),q.edges().forEach(X=>{let x=q.edge(X);Object.hasOwn(x,"x")&&cs(x)}),U-=Z,rs-=ks,q.nodes().forEach(X=>{let x=q.node(X);x.x-=U,x.y-=rs}),q.edges().forEach(X=>{let x=q.edge(X);x.points.forEach(E=>{E.x-=U,E.y-=rs}),Object.hasOwn(x,"x")&&(x.x-=U),Object.hasOwn(x,"y")&&(x.y-=rs)}),J.width=K-U+Z,J.height=j-rs+ks}function b(q){q.edges().forEach(U=>{let K=q.edge(U),rs=q.node(U.v),j=q.node(U.w),J,Z;K.points?(J=K.points[0],Z=K.points[K.points.length-1]):(K.points=[],J=j,Z=rs),K.points.unshift(d.intersectRect(rs,J)),K.points.push(d.intersectRect(j,Z))})}function $(q){q.edges().forEach(U=>{let K=q.edge(U);if(Object.hasOwn(K,"x"))switch((K.labelpos==="l"||K.labelpos==="r")&&(K.width-=K.labeloffset),K.labelpos){case"l":K.x-=K.width/2+K.labeloffset;break;case"r":K.x+=K.width/2+K.labeloffset;break}})}function R(q){q.edges().forEach(U=>{let K=q.edge(U);K.reversed&&K.points.reverse()})}function M(q){q.nodes().forEach(U=>{if(q.children(U).length){let K=q.node(U),rs=q.node(K.borderTop),j=q.node(K.borderBottom),J=q.node(K.borderLeft[K.borderLeft.length-1]),Z=q.node(K.borderRight[K.borderRight.length-1]);K.width=Math.abs(Z.x-J.x),K.height=Math.abs(j.y-rs.y),K.x=J.x+K.width/2,K.y=rs.y+K.height/2}}),q.nodes().forEach(U=>{q.node(U).dummy==="border"&&q.removeNode(U)})}function W(q){q.edges().forEach(U=>{if(U.v===U.w){var K=q.node(U.v);K.selfEdges||(K.selfEdges=[]),K.selfEdges.push({e:U,label:q.edge(U)}),q.removeEdge(U)}})}function Y(q){var U=d.buildLayerMatrix(q);U.forEach(K=>{var rs=0;K.forEach((j,J)=>{var Z=q.node(j);Z.order=J+rs,(Z.selfEdges||[]).forEach(ks=>{d.addDummyNode(q,"selfedge",{width:ks.label.width,height:ks.label.height,rank:Z.rank,order:J+ ++rs,e:ks.e,label:ks.label},"_se")}),delete Z.selfEdges})})}function ls(q){q.nodes().forEach(U=>{var K=q.node(U);if(K.dummy==="selfedge"){var rs=q.node(K.e.v),j=rs.x+rs.width/2,J=rs.y,Z=K.x-j,ks=rs.height/2;q.setEdge(K.e,K.label),q.removeNode(U),K.label.points=[{x:j+2*Z/3,y:J-ks},{x:j+5*Z/6,y:J-ks},{x:j+Z,y:J},{x:j+5*Z/6,y:J+ks},{x:j+2*Z/3,y:J+ks}],K.label.x=K.x,K.label.y=K.y}})}function ps(q,U){return d.mapValues(d.pick(q,U),Number)}function es(q){var U={};return q&&Object.entries(q).forEach(([K,rs])=>{typeof K=="string"&&(K=K.toLowerCase()),U[K]=rs}),U}return Sd}var Id,mA;function iz(){if(mA)return Id;mA=1;let s=ci(),i=_e().Graph;Id={debugOrdering:e};function e(a){let n=s.buildLayerMatrix(a),t=new i({compound:!0,multigraph:!0}).setGraph({});return a.nodes().forEach(l=>{t.setNode(l,{label:l}),t.setParent(l,"layer"+a.node(l).rank)}),a.edges().forEach(l=>t.setEdge(l.v,l.w,{},l.name)),n.forEach((l,r)=>{let h="layer"+r;t.setNode(h,{rank:"same"}),l.reduce((p,k)=>(t.setEdge(p,k,{style:"invis"}),k))}),t}return Id}var Rd,vA;function ez(){return vA||(vA=1,Rd="1.1.4"),Rd}var Od,FA;function az(){return FA||(FA=1,Od={graphlib:_e(),layout:sz(),debug:iz(),util:{time:ci().time,notime:ci().notime},version:ez()}),Od}var nz=az();const Pd=m$(nz);function tz(){const{findNode:s}=Ks(),i=Q(new Pd.graphlib.Graph),e=Q("LR");function a(n,t,l){var h,p;const r=new Pd.graphlib.Graph;r.setDefaultEdgeLabel(()=>({})),r.setGraph({rankdir:l}),i.value=r,e.value=l;for(const k of n){if(k.data.type=="group")continue;const d=s(k.id);r.setNode(k.id,{width:((h=d==null?void 0:d.dimensions)==null?void 0:h.width)??150,height:((p=d==null?void 0:d.dimensions)==null?void 0:p.height)??50})}for(const k of t)r.setEdge(k.source,k.target);return Pd.layout(r),n.map(k=>{if(k.data.type=="group")return k;const d=r.node(k.id);return{...k,targetPosition:l==="LR"?Fs.Left:Fs.Top,sourcePosition:l==="LR"?Fs.Right:Fs.Bottom,position:{x:d.x,y:d.y}}})}return{layout:a}}const lz=ts({__name:"NodeFlow",props:{jsonData:{},isMini:{type:Boolean}},setup(s,{expose:i}){const e=s;let a=Q([]),n=Q([]);{let d=!0;if(e.jsonData)try{a=Q(e.jsonData.nodes),n=Q(e.jsonData.edges),d=!1}catch(o){console.error("Failed to parse json:",o,"rawJson:",JSON.stringify(e.jsonData))}}if(e.isMini){const{zoomOnScroll:d,zoomOnDoubleClick:o}=Ks();d.value=!1,o.value=!1}const{layout:t}=tz();async function l(d){a.value=t(a.value,n.value,d);const{fitView:o}=Ks();qs(()=>{o()})}const r=Q(!1);bs(r,(d,o)=>{o==!1&&d==!0&&a.value.length>1&&a.value[0].position.x==0&&a.value[0].position.y==0&&a.value[1].position.x==0&&a.value[1].position.y==0&&l("LR")}),i({layoutGraph:l});const{findEdge:h}=Ks();function p(d){for(const o of d)if(o.hasOwnProperty("selected")){const u=h(o.id);u.animated=o.selected}}const k={props:e,get nodes(){return a},set nodes(d){a=d},get edges(){return n},set edges(d){n=d},layout:t,layoutGraph:l,isNodeInitialized:r,findEdge:h,edgeAnimated:p,ObcanvasNode:TM,ComfyUINode:WM,ComfyUINodeGroup:QM,CommonNode:bV,ItemNode:XV,InteractionControls:o$,get Background(){return f$},get VueFlow(){return PP}};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}});function rz(s,i,e,a,n,t){return hs(),ri(a.VueFlow,{class:"nf-node-flow",nodes:a.nodes,edges:a.edges,"prevent-scrolling":!0,"fit-view-on-init":"",onEdgesChange:a.edgeAnimated,onNodesInitialized:i[0]||(i[0]=l=>a.isNodeInitialized=!0)},{"node-obcanvas":Hs(l=>[Bs(a.ObcanvasNode,{id:l.id,data:l.data},null,8,["id","data"])]),"node-comfyui":Hs(l=>[Bs(a.ComfyUINode,{id:l.id,data:l.data},null,8,["id","data"])]),"node-comfyui-group":Hs(l=>[Bs(a.ComfyUINodeGroup,{id:l.id,data:l.data},null,8,["id","data"])]),"node-common":Hs(l=>[Bs(a.CommonNode,{id:l.id,data:l.data},null,8,["id","data"])]),"node-item":Hs(l=>[Bs(a.ItemNode,{id:l.id,data:l.data},null,8,["id","data"])]),default:Hs(()=>[Bs(a.Background,{style:{"background-color":"#222222"},"pattern-color":"#191919",variant:"lines",gap:16}),a.props.isMini?ys("v-if",!0):(hs(),ri(a.InteractionControls,{key:0}))]),_:1},8,["nodes","edges"])}const hz=ai(lz,[["render",rz],["__file","NodeFlow.vue"]]),pz=ts({__name:"dropdownButton",props:{label:{},fn:{type:Function}},setup(s,{expose:i}){i();const e=s,a=Q(e.label),n=Q(e.fn);function t(){l.value=!l.value}const l=Q(!1);function r(o,u){a.value=o,n.value=u,n.value&&n.value(),l.value=!1}function h(){n.value&&n.value()}function p(o){k.value&&!k.value.contains(o.target)&&(l.value=!1)}const k=Q(null);ws(()=>{document.addEventListener("click",p)}),Dt(()=>{document.removeEventListener("click",p)});const d={props:e,currentLabel:a,currentFn:n,toggleDropdown:t,isOpen:l,selectItem:r,onClickMainBtn:h,handleClickOutside:p,ddButtonRef:k};return Object.defineProperty(d,"__isScriptSetup",{enumerable:!1,value:!0}),d}}),kz={class:"dd-button",ref:"ddButtonRef"},dz={key:0,class:"dd-button-menu"};function oz(s,i,e,a,n,t){return hs(),us("div",kz,[ys(" 主按钮 "),G("button",{class:"dd-button-main",onClick:a.onClickMainBtn},Ls(a.currentLabel),1),ys(" 唤出菜单 "),G("button",{class:"dd-button-dropdown",onClick:a.toggleDropdown},"^"),ys(" 菜单 "),Bs(wn,{name:"fade"},{default:Hs(()=>[a.isOpen?(hs(),us("ul",dz,[ee(s.$slots,"default",{selectItem:a.selectItem})])):ys("v-if",!0)]),_:3})],512)}const uz=ai(pz,[["render",oz],["__file","dropdownButton.vue"]]);function cz(s,i){return new Promise((e,a)=>{s&&(i.value?(i.value=!1,s.requestFullscreen?s.requestFullscreen():s.webkitRequestFullScreen?s.webkitRequestFullScreen():s.mozRequestFullScreen?s.mozRequestFullScreen():s.msRequestFullscreen&&s.msRequestFullscreen(),gz(i)):(i.value=!0,document.exitFullscreen?document.exitFullscreen():s.webkitCancelFullScreen?s.webkitCancelFullScreen():s.mozCancelFullScreen?s.mozCancelFullScreen():s.msExitFullscreen&&s.msExitFullscreen()))})}function gz(s){document.addEventListener("fullscreenchange",i),document.addEventListener("webkitfullscreenchange",i),document.addEventListener("mozfullscreenchange",i),document.addEventListener("MSFullscreenChange",i);function i(){document.fullscreenElement||(s.value=!0,document.removeEventListener("fullscreenchange",i),document.removeEventListener("webkitfullscreenchange",i),document.removeEventListener("mozfullscreenchange",i),document.removeEventListener("MSFullscreenChange",i))}}const Bz=ts({__name:"NodeFlowContainerS",props:{rawData:{},mdData:{},jsonType:{},jsonData:{},isMini:{type:Boolean},fn_newView:{type:Function}},setup(s,{expose:i}){i();const e=s,a=V(()=>e.fn_newView||k),n=Q(e.isMini),t=Q();function l(c){var A;(A=t.value)==null||A.layoutGraph(c)}const r=Q(!0);function h(){const c=document.body,A=document.querySelector(".markdown-source-view .cm-scroller");r.value?(r.value=!1,c&&c.classList.add("nf-style-overflow-hidden"),A&&A.classList.add("nf-style-overflow-hidden")):(r.value=!0,c&&c.classList.remove("nf-style-overflow-hidden"),A&&A.classList.remove("nf-style-overflow-hidden"))}const p=Q();function k(){cz(p.value,n)}function d(c){let A;c=="mdData"?A=`
`+e.mdData:c=="rawData"?A=`
`+e.rawData:A=e.jsonData,console.log("Debug json:",A)}function o(c){let A;c=="mdData"?A=e.mdData:c=="rawData"?A=e.rawData:A=V(()=>e.rawData||"error: get raw data error").value,navigator.clipboard.writeText(A).then(()=>{console.log("Info: copy success")},()=>{console.error("Error: copy fail")})}const u={props:e,_fn_newView:a,_isMini:n,RefChild:t,fn_autoPos:l,isAllowScroll:r,fn_switchAllowScroll:h,CanFullScreen:p,fn_fullScreen:k,fn_printData:d,fn_copyData:o,NodeFlow:hz,DropdownButton:uz};return Object.defineProperty(u,"__isScriptSetup",{enumerable:!1,value:!0}),u}}),Az={class:"nf-toolbar"},yz=["onClick"],fz=["onClick"],mz=["onClick"],vz=["onClick"],Fz=["onClick"],Ez=["onClick"],bz=["onClick"],Cz=["onClick"];function _z(s,i,e,a,n,t){return hs(),us("div",{ref:"CanFullScreen",class:Ps(a._isMini?"normal-size":"full-size")},[ys(" 主画布 "),ys(" TODO 有空捋一下这里，全屏这块有些代码应该抽离复用 "),G("div",{class:Ps(a._isMini?"nf-shell-mini":"nf-shell-view")},[Bs(a.NodeFlow,{ref:"RefChild",jsonData:e.jsonData,isMini:a._isMini},null,8,["jsonData","isMini"])],2),ys(" 工具栏 "),G("div",Az,[G("button",{class:"nf-btn",onClick:i[0]||(i[0]=l=>a.fn_fullScreen())},"Full screen"),G("button",{class:"nf-btn",onClick:i[1]||(i[1]=l=>a._fn_newView())},"New view"),Bs(a.DropdownButton,{class:"nf-btn",label:"LR layout",fn:()=>a.fn_autoPos("LR")},{default:Hs(({selectItem:l})=>[G("button",{class:"nf-btn",onClick:r=>l("LR layout",()=>a.fn_autoPos("LR"))},"LR layout",8,yz),G("button",{class:"nf-btn",onClick:r=>l("TB layout",()=>a.fn_autoPos("TB"))},"TB layout",8,fz)]),_:1},8,["fn"]),Bs(a.DropdownButton,{class:"nf-btn",label:"Copy md",fn:()=>a.fn_copyData("mdData")},{default:Hs(({selectItem:l})=>[G("button",{class:"nf-btn",onClick:r=>l("Print json",()=>a.fn_printData("jsonData"))},"Print json",8,mz),G("button",{class:"nf-btn",onClick:r=>l("Print md",()=>a.fn_printData("mdData"))},"Print md",8,vz),G("button",{class:"nf-btn",onClick:r=>l("Print raw",()=>a.fn_printData("rawData"))},"Print raw",8,Fz),G("button",{class:"nf-btn",onClick:r=>l("Copy json",()=>a.fn_copyData("jsonData"))},"Copy json",8,Ez),G("button",{class:"nf-btn",onClick:r=>l("Copy md",()=>a.fn_copyData("mdData"))},"Copy md",8,bz),G("button",{class:"nf-btn",onClick:r=>l("Copy raw",()=>a.fn_copyData("rawData"))},"Copy raw",8,Cz)]),_:1},8,["fn"]),G("button",{class:"nf-btn",onClick:i[2]||(i[2]=l=>a.fn_switchAllowScroll())},"Ex lock")])],2)}const Dz=ai(Bz,[["render",_z],["__scopeId","data-v-35bb69e2"],["__file","NodeFlowContainerS.vue"]]),wz=ts({__name:"MyVueFlow",props:{type:{},data:{}},setup(s,{expose:i}){i();const e=s,a=Lx(e.type,e.data.trim());let n=Q({});a.code==0?n.value=a.data:n.value={nodes:[],edges:[]};const t={props:e,result:a,get jsonData(){return n},set jsonData(l){n=l},NodeFlowContainer:Dz};return Object.defineProperty(t,"__isScriptSetup",{enumerable:!1,value:!0}),t}}),xz={key:0};function Tz(s,i,e,a,n,t){return hs(),us(Ds,null,[G("div",null,[a.result.code==0?(hs(),ri(a.NodeFlowContainer,{key:0,jsonData:a.jsonData,jsonType:a.props.type,isMini:!0,rawData:e.data},null,8,["jsonData","jsonType","rawData"])):ys("v-if",!0)]),a.result.code!=0?(hs(),us("div",xz,Ls(a.result.msg),1)):ys("v-if",!0)],64)}const Sz=ai(wz,[["render",Tz],["__file","MyVueFlow.vue"]]),Iz=Ti({enhance:({app:s,router:i,siteData:e})=>{s.component("VueFlow",Sz)}}),Rz=Object.freeze(Object.defineProperty({__proto__:null,default:Iz},Symbol.toStringTag,{value:"Module"})),Oz=ts({__name:"Tikz",props:{data:{}},setup(s,{expose:i}){i();const e=s;function a(){var u;if(document.querySelector("#tikzjax")){console.log("window.tikzJax2",window,window.tikzjax,(u=window.tikzjax)==null?void 0:u.render),n(),a();return}r();const d=document.createElement("link");document.head.appendChild(d),d.rel="stylesheet",d.type="text/css",d.href="https://tikzjax.com/v1/fonts.css";const o=document.createElement("script");document.head.appendChild(o),o.id="tikzjax",o.type="text/javascript",o.src="https://tikzjax.com/v1/tikzjax.js",o.onload=()=>{console.log("TikZJax loaded successfully")},o.onerror=()=>{console.error("Failed to load TikZJax")},document.addEventListener("tikzjax-load-finished",p)}function n(){const d=document.querySelectorAll("#tikzjax");for(const o of d)o.remove();document.removeEventListener("tikzjax-load-finished",p)}async function t(){n(),await setTimeout(()=>{a()},2e3)}ws(()=>{a()}),_i(()=>{n()});const l=Q(null);function r(){if(!l.value)return;const d=document.createElement("script");l.value.appendChild(d),d.setAttribute("type","text/tikz"),d.setAttribute("data-show-console","true"),d.textContent=h(e.data),console.log("readyTikzscript yet")}function h(d){d=d.replaceAll("&nbsp;","");let u=d.split(`
`);return u=u.map(c=>c.trim()),u=u.filter(c=>c),u.join(`
`)}function p(d){console.log(`tikz finish-------------------------------
`,d)}const k={props:e,loadTikZJax:a,unloadTikZJax:n,reloadTikZJax:t,ref_tikz:l,readyTikzScript:r,readyTikzScript_tidy:h,onTikzFinish:p};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}}),Pz={class:"tikz"},Lz={class:"tikz-ref",ref:"ref_tikz"};function Nz(s,i,e,a,n,t){return hs(),us("div",Pz,[G("div",Lz,null,512),ys(" TODO 在未加载出来之前，给个占位和提示文字 "),ys(` <button @click="readyTikzScript">准备Tikz内容</button>
    <button @click="reloadTikZJax">重新加载Tikz</button> `)])}const Mz=ai(Oz,[["render",Nz],["__file","Tikz.vue"]]),Vz=Ti({enhance:({app:s,router:i,siteData:e})=>{s.component("Tikz",Mz)}}),$z=Object.freeze(Object.defineProperty({__proto__:null,default:Vz},Symbol.toStringTag,{value:"Module"})),zz=ts({__name:"backlink",setup(s,{expose:i}){var r;i();const e=Bi(),a=(r=e.value)==null?void 0:r.bioChainData,n=V(()=>{var h;return(a==null?void 0:a.backlink)&&((h=a==null?void 0:a.backlink)==null?void 0:h.length)>0}),t=V(()=>{var h;return(h=a==null?void 0:a.backlink)==null?void 0:h.length}),l={data:e,biodata:a,hasBacklink:n,tot_link:t,get withBase(){return Gs}};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}}),qz={class:"backlink-container"},Hz={class:"backlink-header"},jz={key:0},Uz={key:1},Gz={class:"backlink-item"};function Wz(s,i,e,a,n,t){const l=Ws("router-link");return hs(),us("div",qz,[G("div",Hz,[i[0]||(i[0]=G("span",null,"链接到当前文件 ",-1)),G("span",null,Ls(a.tot_link),1)]),a.hasBacklink?(hs(),us("div",Uz,[(hs(!0),us(Ds,null,bi(a.biodata.backlink,r=>(hs(),us("div",Gz,[Bs(l,{to:a.withBase(r.link)},{default:Hs(()=>[ki(Ls(r.title),1)]),_:2},1032,["to"])]))),256))])):(hs(),us("div",jz,"没有文件链接到当前文件"))])}const e1=ai(zz,[["render",Wz],["__scopeId","data-v-dd26a662"],["__file","backlink.vue"]]);var Kz={value:()=>{}};function Mp(){for(var s=0,i=arguments.length,e={},a;s<i;++s){if(!(a=arguments[s]+"")||a in e||/[\s.]/.test(a))throw new Error("illegal type: "+a);e[a]=[]}return new oh(e)}function oh(s){this._=s}function Yz(s,i){return s.trim().split(/^|\s+/).map(function(e){var a="",n=e.indexOf(".");if(n>=0&&(a=e.slice(n+1),e=e.slice(0,n)),e&&!i.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:a}})}oh.prototype=Mp.prototype={constructor:oh,on:function(s,i){var e=this._,a=Yz(s+"",e),n,t=-1,l=a.length;if(arguments.length<2){for(;++t<l;)if((n=(s=a[t]).type)&&(n=Xz(e[n],s.name)))return n;return}if(i!=null&&typeof i!="function")throw new Error("invalid callback: "+i);for(;++t<l;)if(n=(s=a[t]).type)e[n]=EA(e[n],s.name,i);else if(i==null)for(n in e)e[n]=EA(e[n],s.name,null);return this},copy:function(){var s={},i=this._;for(var e in i)s[e]=i[e].slice();return new oh(s)},call:function(s,i){if((n=arguments.length-2)>0)for(var e=new Array(n),a=0,n,t;a<n;++a)e[a]=arguments[a+2];if(!this._.hasOwnProperty(s))throw new Error("unknown type: "+s);for(t=this._[s],a=0,n=t.length;a<n;++a)t[a].value.apply(i,e)},apply:function(s,i,e){if(!this._.hasOwnProperty(s))throw new Error("unknown type: "+s);for(var a=this._[s],n=0,t=a.length;n<t;++n)a[n].value.apply(i,e)}};function Xz(s,i){for(var e=0,a=s.length,n;e<a;++e)if((n=s[e]).name===i)return n.value}function EA(s,i,e){for(var a=0,n=s.length;a<n;++a)if(s[a].name===i){s[a]=Kz,s=s.slice(0,a).concat(s.slice(a+1));break}return e!=null&&s.push({name:i,value:e}),s}var jo="http://www.w3.org/1999/xhtml";const bA={svg:"http://www.w3.org/2000/svg",xhtml:jo,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function Vp(s){var i=s+="",e=i.indexOf(":");return e>=0&&(i=s.slice(0,e))!=="xmlns"&&(s=s.slice(e+1)),bA.hasOwnProperty(i)?{space:bA[i],local:s}:s}function Zz(s){return function(){var i=this.ownerDocument,e=this.namespaceURI;return e===jo&&i.documentElement.namespaceURI===jo?i.createElement(s):i.createElementNS(e,s)}}function Jz(s){return function(){return this.ownerDocument.createElementNS(s.space,s.local)}}function a1(s){var i=Vp(s);return(i.local?Jz:Zz)(i)}function Qz(){}function _c(s){return s==null?Qz:function(){return this.querySelector(s)}}function sq(s){typeof s!="function"&&(s=_c(s));for(var i=this._groups,e=i.length,a=new Array(e),n=0;n<e;++n)for(var t=i[n],l=t.length,r=a[n]=new Array(l),h,p,k=0;k<l;++k)(h=t[k])&&(p=s.call(h,h.__data__,k,t))&&("__data__"in h&&(p.__data__=h.__data__),r[k]=p);return new he(a,this._parents)}function iq(s){return s==null?[]:Array.isArray(s)?s:Array.from(s)}function eq(){return[]}function n1(s){return s==null?eq:function(){return this.querySelectorAll(s)}}function aq(s){return function(){return iq(s.apply(this,arguments))}}function nq(s){typeof s=="function"?s=aq(s):s=n1(s);for(var i=this._groups,e=i.length,a=[],n=[],t=0;t<e;++t)for(var l=i[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&(a.push(s.call(h,h.__data__,p,l)),n.push(h));return new he(a,n)}function t1(s){return function(){return this.matches(s)}}function l1(s){return function(i){return i.matches(s)}}var tq=Array.prototype.find;function lq(s){return function(){return tq.call(this.children,s)}}function rq(){return this.firstElementChild}function hq(s){return this.select(s==null?rq:lq(typeof s=="function"?s:l1(s)))}var pq=Array.prototype.filter;function kq(){return Array.from(this.children)}function dq(s){return function(){return pq.call(this.children,s)}}function oq(s){return this.selectAll(s==null?kq:dq(typeof s=="function"?s:l1(s)))}function uq(s){typeof s!="function"&&(s=t1(s));for(var i=this._groups,e=i.length,a=new Array(e),n=0;n<e;++n)for(var t=i[n],l=t.length,r=a[n]=[],h,p=0;p<l;++p)(h=t[p])&&s.call(h,h.__data__,p,t)&&r.push(h);return new he(a,this._parents)}function r1(s){return new Array(s.length)}function cq(){return new he(this._enter||this._groups.map(r1),this._parents)}function Hh(s,i){this.ownerDocument=s.ownerDocument,this.namespaceURI=s.namespaceURI,this._next=null,this._parent=s,this.__data__=i}Hh.prototype={constructor:Hh,appendChild:function(s){return this._parent.insertBefore(s,this._next)},insertBefore:function(s,i){return this._parent.insertBefore(s,i)},querySelector:function(s){return this._parent.querySelector(s)},querySelectorAll:function(s){return this._parent.querySelectorAll(s)}};function gq(s){return function(){return s}}function Bq(s,i,e,a,n,t){for(var l=0,r,h=i.length,p=t.length;l<p;++l)(r=i[l])?(r.__data__=t[l],a[l]=r):e[l]=new Hh(s,t[l]);for(;l<h;++l)(r=i[l])&&(n[l]=r)}function Aq(s,i,e,a,n,t,l){var r,h,p=new Map,k=i.length,d=t.length,o=new Array(k),u;for(r=0;r<k;++r)(h=i[r])&&(o[r]=u=l.call(h,h.__data__,r,i)+"",p.has(u)?n[r]=h:p.set(u,h));for(r=0;r<d;++r)u=l.call(s,t[r],r,t)+"",(h=p.get(u))?(a[r]=h,h.__data__=t[r],p.delete(u)):e[r]=new Hh(s,t[r]);for(r=0;r<k;++r)(h=i[r])&&p.get(o[r])===h&&(n[r]=h)}function yq(s){return s.__data__}function fq(s,i){if(!arguments.length)return Array.from(this,yq);var e=i?Aq:Bq,a=this._parents,n=this._groups;typeof s!="function"&&(s=gq(s));for(var t=n.length,l=new Array(t),r=new Array(t),h=new Array(t),p=0;p<t;++p){var k=a[p],d=n[p],o=d.length,u=mq(s.call(k,k&&k.__data__,p,a)),c=u.length,A=r[p]=new Array(c),g=l[p]=new Array(c),f=h[p]=new Array(o);e(k,d,A,g,f,u,i);for(var m=0,y=0,v,_;m<c;++m)if(v=A[m]){for(m>=y&&(y=m+1);!(_=g[y])&&++y<c;);v._next=_||null}}return l=new he(l,a),l._enter=r,l._exit=h,l}function mq(s){return typeof s=="object"&&"length"in s?s:Array.from(s)}function vq(){return new he(this._exit||this._groups.map(r1),this._parents)}function Fq(s,i,e){var a=this.enter(),n=this,t=this.exit();return typeof s=="function"?(a=s(a),a&&(a=a.selection())):a=a.append(s+""),i!=null&&(n=i(n),n&&(n=n.selection())),e==null?t.remove():e(t),a&&n?a.merge(n).order():n}function Eq(s){for(var i=s.selection?s.selection():s,e=this._groups,a=i._groups,n=e.length,t=a.length,l=Math.min(n,t),r=new Array(n),h=0;h<l;++h)for(var p=e[h],k=a[h],d=p.length,o=r[h]=new Array(d),u,c=0;c<d;++c)(u=p[c]||k[c])&&(o[c]=u);for(;h<n;++h)r[h]=e[h];return new he(r,this._parents)}function bq(){for(var s=this._groups,i=-1,e=s.length;++i<e;)for(var a=s[i],n=a.length-1,t=a[n],l;--n>=0;)(l=a[n])&&(t&&l.compareDocumentPosition(t)^4&&t.parentNode.insertBefore(l,t),t=l);return this}function Cq(s){s||(s=_q);function i(d,o){return d&&o?s(d.__data__,o.__data__):!d-!o}for(var e=this._groups,a=e.length,n=new Array(a),t=0;t<a;++t){for(var l=e[t],r=l.length,h=n[t]=new Array(r),p,k=0;k<r;++k)(p=l[k])&&(h[k]=p);h.sort(i)}return new he(n,this._parents).order()}function _q(s,i){return s<i?-1:s>i?1:s>=i?0:NaN}function Dq(){var s=arguments[0];return arguments[0]=this,s.apply(null,arguments),this}function wq(){return Array.from(this)}function xq(){for(var s=this._groups,i=0,e=s.length;i<e;++i)for(var a=s[i],n=0,t=a.length;n<t;++n){var l=a[n];if(l)return l}return null}function Tq(){let s=0;for(const i of this)++s;return s}function Sq(){return!this.node()}function Iq(s){for(var i=this._groups,e=0,a=i.length;e<a;++e)for(var n=i[e],t=0,l=n.length,r;t<l;++t)(r=n[t])&&s.call(r,r.__data__,t,n);return this}function Rq(s){return function(){this.removeAttribute(s)}}function Oq(s){return function(){this.removeAttributeNS(s.space,s.local)}}function Pq(s,i){return function(){this.setAttribute(s,i)}}function Lq(s,i){return function(){this.setAttributeNS(s.space,s.local,i)}}function Nq(s,i){return function(){var e=i.apply(this,arguments);e==null?this.removeAttribute(s):this.setAttribute(s,e)}}function Mq(s,i){return function(){var e=i.apply(this,arguments);e==null?this.removeAttributeNS(s.space,s.local):this.setAttributeNS(s.space,s.local,e)}}function Vq(s,i){var e=Vp(s);if(arguments.length<2){var a=this.node();return e.local?a.getAttributeNS(e.space,e.local):a.getAttribute(e)}return this.each((i==null?e.local?Oq:Rq:typeof i=="function"?e.local?Mq:Nq:e.local?Lq:Pq)(e,i))}function h1(s){return s.ownerDocument&&s.ownerDocument.defaultView||s.document&&s||s.defaultView}function $q(s){return function(){this.style.removeProperty(s)}}function zq(s,i,e){return function(){this.style.setProperty(s,i,e)}}function qq(s,i,e){return function(){var a=i.apply(this,arguments);a==null?this.style.removeProperty(s):this.style.setProperty(s,a,e)}}function Hq(s,i,e){return arguments.length>1?this.each((i==null?$q:typeof i=="function"?qq:zq)(s,i,e??"")):Ft(this.node(),s)}function Ft(s,i){return s.style.getPropertyValue(i)||h1(s).getComputedStyle(s,null).getPropertyValue(i)}function jq(s){return function(){delete this[s]}}function Uq(s,i){return function(){this[s]=i}}function Gq(s,i){return function(){var e=i.apply(this,arguments);e==null?delete this[s]:this[s]=e}}function Wq(s,i){return arguments.length>1?this.each((i==null?jq:typeof i=="function"?Gq:Uq)(s,i)):this.node()[s]}function p1(s){return s.trim().split(/^|\s+/)}function Dc(s){return s.classList||new k1(s)}function k1(s){this._node=s,this._names=p1(s.getAttribute("class")||"")}k1.prototype={add:function(s){var i=this._names.indexOf(s);i<0&&(this._names.push(s),this._node.setAttribute("class",this._names.join(" ")))},remove:function(s){var i=this._names.indexOf(s);i>=0&&(this._names.splice(i,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(s){return this._names.indexOf(s)>=0}};function d1(s,i){for(var e=Dc(s),a=-1,n=i.length;++a<n;)e.add(i[a])}function o1(s,i){for(var e=Dc(s),a=-1,n=i.length;++a<n;)e.remove(i[a])}function Kq(s){return function(){d1(this,s)}}function Yq(s){return function(){o1(this,s)}}function Xq(s,i){return function(){(i.apply(this,arguments)?d1:o1)(this,s)}}function Zq(s,i){var e=p1(s+"");if(arguments.length<2){for(var a=Dc(this.node()),n=-1,t=e.length;++n<t;)if(!a.contains(e[n]))return!1;return!0}return this.each((typeof i=="function"?Xq:i?Kq:Yq)(e,i))}function Jq(){this.textContent=""}function Qq(s){return function(){this.textContent=s}}function sH(s){return function(){var i=s.apply(this,arguments);this.textContent=i??""}}function iH(s){return arguments.length?this.each(s==null?Jq:(typeof s=="function"?sH:Qq)(s)):this.node().textContent}function eH(){this.innerHTML=""}function aH(s){return function(){this.innerHTML=s}}function nH(s){return function(){var i=s.apply(this,arguments);this.innerHTML=i??""}}function tH(s){return arguments.length?this.each(s==null?eH:(typeof s=="function"?nH:aH)(s)):this.node().innerHTML}function lH(){this.nextSibling&&this.parentNode.appendChild(this)}function rH(){return this.each(lH)}function hH(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function pH(){return this.each(hH)}function kH(s){var i=typeof s=="function"?s:a1(s);return this.select(function(){return this.appendChild(i.apply(this,arguments))})}function dH(){return null}function oH(s,i){var e=typeof s=="function"?s:a1(s),a=i==null?dH:typeof i=="function"?i:_c(i);return this.select(function(){return this.insertBefore(e.apply(this,arguments),a.apply(this,arguments)||null)})}function uH(){var s=this.parentNode;s&&s.removeChild(this)}function cH(){return this.each(uH)}function gH(){var s=this.cloneNode(!1),i=this.parentNode;return i?i.insertBefore(s,this.nextSibling):s}function BH(){var s=this.cloneNode(!0),i=this.parentNode;return i?i.insertBefore(s,this.nextSibling):s}function AH(s){return this.select(s?BH:gH)}function yH(s){return arguments.length?this.property("__data__",s):this.node().__data__}function fH(s){return function(i){s.call(this,i,this.__data__)}}function mH(s){return s.trim().split(/^|\s+/).map(function(i){var e="",a=i.indexOf(".");return a>=0&&(e=i.slice(a+1),i=i.slice(0,a)),{type:i,name:e}})}function vH(s){return function(){var i=this.__on;if(i){for(var e=0,a=-1,n=i.length,t;e<n;++e)t=i[e],(!s.type||t.type===s.type)&&t.name===s.name?this.removeEventListener(t.type,t.listener,t.options):i[++a]=t;++a?i.length=a:delete this.__on}}}function FH(s,i,e){return function(){var a=this.__on,n,t=fH(i);if(a){for(var l=0,r=a.length;l<r;++l)if((n=a[l]).type===s.type&&n.name===s.name){this.removeEventListener(n.type,n.listener,n.options),this.addEventListener(n.type,n.listener=t,n.options=e),n.value=i;return}}this.addEventListener(s.type,t,e),n={type:s.type,name:s.name,value:i,listener:t,options:e},a?a.push(n):this.__on=[n]}}function EH(s,i,e){var a=mH(s+""),n,t=a.length,l;if(arguments.length<2){var r=this.node().__on;if(r){for(var h=0,p=r.length,k;h<p;++h)for(n=0,k=r[h];n<t;++n)if((l=a[n]).type===k.type&&l.name===k.name)return k.value}return}for(r=i?FH:vH,n=0;n<t;++n)this.each(r(a[n],i,e));return this}function u1(s,i,e){var a=h1(s),n=a.CustomEvent;typeof n=="function"?n=new n(i,e):(n=a.document.createEvent("Event"),e?(n.initEvent(i,e.bubbles,e.cancelable),n.detail=e.detail):n.initEvent(i,!1,!1)),s.dispatchEvent(n)}function bH(s,i){return function(){return u1(this,s,i)}}function CH(s,i){return function(){return u1(this,s,i.apply(this,arguments))}}function _H(s,i){return this.each((typeof i=="function"?CH:bH)(s,i))}function*DH(){for(var s=this._groups,i=0,e=s.length;i<e;++i)for(var a=s[i],n=0,t=a.length,l;n<t;++n)(l=a[n])&&(yield l)}var c1=[null];function he(s,i){this._groups=s,this._parents=i}function Cr(){return new he([[document.documentElement]],c1)}function wH(){return this}he.prototype=Cr.prototype={constructor:he,select:sq,selectAll:nq,selectChild:hq,selectChildren:oq,filter:uq,data:fq,enter:cq,exit:vq,join:Fq,merge:Eq,selection:wH,order:bq,sort:Cq,call:Dq,nodes:wq,node:xq,size:Tq,empty:Sq,each:Iq,attr:Vq,style:Hq,property:Wq,classed:Zq,text:iH,html:tH,raise:rH,lower:pH,append:kH,insert:oH,remove:cH,clone:AH,datum:yH,on:EH,dispatch:_H,[Symbol.iterator]:DH};function ua(s){return typeof s=="string"?new he([[document.querySelector(s)]],[document.documentElement]):new he([[s]],c1)}function xH(s){let i;for(;i=s.sourceEvent;)s=i;return s}function ra(s,i){if(s=xH(s),i===void 0&&(i=s.currentTarget),i){var e=i.ownerSVGElement||i;if(e.createSVGPoint){var a=e.createSVGPoint();return a.x=s.clientX,a.y=s.clientY,a=a.matrixTransform(i.getScreenCTM().inverse()),[a.x,a.y]}if(i.getBoundingClientRect){var n=i.getBoundingClientRect();return[s.clientX-n.left-i.clientLeft,s.clientY-n.top-i.clientTop]}}return[s.pageX,s.pageY]}const Uo={capture:!0,passive:!1};function Go(s){s.preventDefault(),s.stopImmediatePropagation()}function TH(s){var i=s.document.documentElement,e=ua(s).on("dragstart.drag",Go,Uo);"onselectstart"in i?e.on("selectstart.drag",Go,Uo):(i.__noselect=i.style.MozUserSelect,i.style.MozUserSelect="none")}function SH(s,i){var e=s.document.documentElement,a=ua(s).on("dragstart.drag",null);i&&(a.on("click.drag",Go,Uo),setTimeout(function(){a.on("click.drag",null)},0)),"onselectstart"in e?a.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}function wc(s,i,e){s.prototype=i.prototype=e,e.constructor=s}function g1(s,i){var e=Object.create(s.prototype);for(var a in i)e[a]=i[a];return e}function _r(){}var jl=.7,jh=1/jl,tt="\\s*([+-]?\\d+)\\s*",Ul="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",je="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",IH=/^#([0-9a-f]{3,8})$/,RH=new RegExp(`^rgb\\(${tt},${tt},${tt}\\)$`),OH=new RegExp(`^rgb\\(${je},${je},${je}\\)$`),PH=new RegExp(`^rgba\\(${tt},${tt},${tt},${Ul}\\)$`),LH=new RegExp(`^rgba\\(${je},${je},${je},${Ul}\\)$`),NH=new RegExp(`^hsl\\(${Ul},${je},${je}\\)$`),MH=new RegExp(`^hsla\\(${Ul},${je},${je},${Ul}\\)$`),CA={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};wc(_r,Gl,{copy(s){return Object.assign(new this.constructor,this,s)},displayable(){return this.rgb().displayable()},hex:_A,formatHex:_A,formatHex8:VH,formatHsl:$H,formatRgb:DA,toString:DA});function _A(){return this.rgb().formatHex()}function VH(){return this.rgb().formatHex8()}function $H(){return B1(this).formatHsl()}function DA(){return this.rgb().formatRgb()}function Gl(s){var i,e;return s=(s+"").trim().toLowerCase(),(i=IH.exec(s))?(e=i[1].length,i=parseInt(i[1],16),e===6?wA(i):e===3?new Ui(i>>8&15|i>>4&240,i>>4&15|i&240,(i&15)<<4|i&15,1):e===8?Yr(i>>24&255,i>>16&255,i>>8&255,(i&255)/255):e===4?Yr(i>>12&15|i>>8&240,i>>8&15|i>>4&240,i>>4&15|i&240,((i&15)<<4|i&15)/255):null):(i=RH.exec(s))?new Ui(i[1],i[2],i[3],1):(i=OH.exec(s))?new Ui(i[1]*255/100,i[2]*255/100,i[3]*255/100,1):(i=PH.exec(s))?Yr(i[1],i[2],i[3],i[4]):(i=LH.exec(s))?Yr(i[1]*255/100,i[2]*255/100,i[3]*255/100,i[4]):(i=NH.exec(s))?SA(i[1],i[2]/100,i[3]/100,1):(i=MH.exec(s))?SA(i[1],i[2]/100,i[3]/100,i[4]):CA.hasOwnProperty(s)?wA(CA[s]):s==="transparent"?new Ui(NaN,NaN,NaN,0):null}function wA(s){return new Ui(s>>16&255,s>>8&255,s&255,1)}function Yr(s,i,e,a){return a<=0&&(s=i=e=NaN),new Ui(s,i,e,a)}function zH(s){return s instanceof _r||(s=Gl(s)),s?(s=s.rgb(),new Ui(s.r,s.g,s.b,s.opacity)):new Ui}function Wo(s,i,e,a){return arguments.length===1?zH(s):new Ui(s,i,e,a??1)}function Ui(s,i,e,a){this.r=+s,this.g=+i,this.b=+e,this.opacity=+a}wc(Ui,Wo,g1(_r,{brighter(s){return s=s==null?jh:Math.pow(jh,s),new Ui(this.r*s,this.g*s,this.b*s,this.opacity)},darker(s){return s=s==null?jl:Math.pow(jl,s),new Ui(this.r*s,this.g*s,this.b*s,this.opacity)},rgb(){return this},clamp(){return new Ui(Cn(this.r),Cn(this.g),Cn(this.b),Uh(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:xA,formatHex:xA,formatHex8:qH,formatRgb:TA,toString:TA}));function xA(){return`#${fn(this.r)}${fn(this.g)}${fn(this.b)}`}function qH(){return`#${fn(this.r)}${fn(this.g)}${fn(this.b)}${fn((isNaN(this.opacity)?1:this.opacity)*255)}`}function TA(){const s=Uh(this.opacity);return`${s===1?"rgb(":"rgba("}${Cn(this.r)}, ${Cn(this.g)}, ${Cn(this.b)}${s===1?")":`, ${s})`}`}function Uh(s){return isNaN(s)?1:Math.max(0,Math.min(1,s))}function Cn(s){return Math.max(0,Math.min(255,Math.round(s)||0))}function fn(s){return s=Cn(s),(s<16?"0":"")+s.toString(16)}function SA(s,i,e,a){return a<=0?s=i=e=NaN:e<=0||e>=1?s=i=NaN:i<=0&&(s=NaN),new ve(s,i,e,a)}function B1(s){if(s instanceof ve)return new ve(s.h,s.s,s.l,s.opacity);if(s instanceof _r||(s=Gl(s)),!s)return new ve;if(s instanceof ve)return s;s=s.rgb();var i=s.r/255,e=s.g/255,a=s.b/255,n=Math.min(i,e,a),t=Math.max(i,e,a),l=NaN,r=t-n,h=(t+n)/2;return r?(i===t?l=(e-a)/r+(e<a)*6:e===t?l=(a-i)/r+2:l=(i-e)/r+4,r/=h<.5?t+n:2-t-n,l*=60):r=h>0&&h<1?0:l,new ve(l,r,h,s.opacity)}function HH(s,i,e,a){return arguments.length===1?B1(s):new ve(s,i,e,a??1)}function ve(s,i,e,a){this.h=+s,this.s=+i,this.l=+e,this.opacity=+a}wc(ve,HH,g1(_r,{brighter(s){return s=s==null?jh:Math.pow(jh,s),new ve(this.h,this.s,this.l*s,this.opacity)},darker(s){return s=s==null?jl:Math.pow(jl,s),new ve(this.h,this.s,this.l*s,this.opacity)},rgb(){var s=this.h%360+(this.h<0)*360,i=isNaN(s)||isNaN(this.s)?0:this.s,e=this.l,a=e+(e<.5?e:1-e)*i,n=2*e-a;return new Ui(Ld(s>=240?s-240:s+120,n,a),Ld(s,n,a),Ld(s<120?s+240:s-120,n,a),this.opacity)},clamp(){return new ve(IA(this.h),Xr(this.s),Xr(this.l),Uh(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const s=Uh(this.opacity);return`${s===1?"hsl(":"hsla("}${IA(this.h)}, ${Xr(this.s)*100}%, ${Xr(this.l)*100}%${s===1?")":`, ${s})`}`}}));function IA(s){return s=(s||0)%360,s<0?s+360:s}function Xr(s){return Math.max(0,Math.min(1,s||0))}function Ld(s,i,e){return(s<60?i+(e-i)*s/60:s<180?e:s<240?i+(e-i)*(240-s)/60:i)*255}const A1=s=>()=>s;function jH(s,i){return function(e){return s+e*i}}function UH(s,i,e){return s=Math.pow(s,e),i=Math.pow(i,e)-s,e=1/e,function(a){return Math.pow(s+a*i,e)}}function GH(s){return(s=+s)==1?y1:function(i,e){return e-i?UH(i,e,s):A1(isNaN(i)?e:i)}}function y1(s,i){var e=i-s;return e?jH(s,e):A1(isNaN(s)?i:s)}const RA=function s(i){var e=GH(i);function a(n,t){var l=e((n=Wo(n)).r,(t=Wo(t)).r),r=e(n.g,t.g),h=e(n.b,t.b),p=y1(n.opacity,t.opacity);return function(k){return n.r=l(k),n.g=r(k),n.b=h(k),n.opacity=p(k),n+""}}return a.gamma=s,a}(1);function qa(s,i){return s=+s,i=+i,function(e){return s*(1-e)+i*e}}var Ko=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Nd=new RegExp(Ko.source,"g");function WH(s){return function(){return s}}function KH(s){return function(i){return s(i)+""}}function YH(s,i){var e=Ko.lastIndex=Nd.lastIndex=0,a,n,t,l=-1,r=[],h=[];for(s=s+"",i=i+"";(a=Ko.exec(s))&&(n=Nd.exec(i));)(t=n.index)>e&&(t=i.slice(e,t),r[l]?r[l]+=t:r[++l]=t),(a=a[0])===(n=n[0])?r[l]?r[l]+=n:r[++l]=n:(r[++l]=null,h.push({i:l,x:qa(a,n)})),e=Nd.lastIndex;return e<i.length&&(t=i.slice(e),r[l]?r[l]+=t:r[++l]=t),r.length<2?h[0]?KH(h[0].x):WH(i):(i=h.length,function(p){for(var k=0,d;k<i;++k)r[(d=h[k]).i]=d.x(p);return r.join("")})}var OA=180/Math.PI,Yo={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function f1(s,i,e,a,n,t){var l,r,h;return(l=Math.sqrt(s*s+i*i))&&(s/=l,i/=l),(h=s*e+i*a)&&(e-=s*h,a-=i*h),(r=Math.sqrt(e*e+a*a))&&(e/=r,a/=r,h/=r),s*a<i*e&&(s=-s,i=-i,h=-h,l=-l),{translateX:n,translateY:t,rotate:Math.atan2(i,s)*OA,skewX:Math.atan(h)*OA,scaleX:l,scaleY:r}}var Zr;function XH(s){const i=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(s+"");return i.isIdentity?Yo:f1(i.a,i.b,i.c,i.d,i.e,i.f)}function ZH(s){return s==null||(Zr||(Zr=document.createElementNS("http://www.w3.org/2000/svg","g")),Zr.setAttribute("transform",s),!(s=Zr.transform.baseVal.consolidate()))?Yo:(s=s.matrix,f1(s.a,s.b,s.c,s.d,s.e,s.f))}function m1(s,i,e,a){function n(p){return p.length?p.pop()+" ":""}function t(p,k,d,o,u,c){if(p!==d||k!==o){var A=u.push("translate(",null,i,null,e);c.push({i:A-4,x:qa(p,d)},{i:A-2,x:qa(k,o)})}else(d||o)&&u.push("translate("+d+i+o+e)}function l(p,k,d,o){p!==k?(p-k>180?k+=360:k-p>180&&(p+=360),o.push({i:d.push(n(d)+"rotate(",null,a)-2,x:qa(p,k)})):k&&d.push(n(d)+"rotate("+k+a)}function r(p,k,d,o){p!==k?o.push({i:d.push(n(d)+"skewX(",null,a)-2,x:qa(p,k)}):k&&d.push(n(d)+"skewX("+k+a)}function h(p,k,d,o,u,c){if(p!==d||k!==o){var A=u.push(n(u)+"scale(",null,",",null,")");c.push({i:A-4,x:qa(p,d)},{i:A-2,x:qa(k,o)})}else(d!==1||o!==1)&&u.push(n(u)+"scale("+d+","+o+")")}return function(p,k){var d=[],o=[];return p=s(p),k=s(k),t(p.translateX,p.translateY,k.translateX,k.translateY,d,o),l(p.rotate,k.rotate,d,o),r(p.skewX,k.skewX,d,o),h(p.scaleX,p.scaleY,k.scaleX,k.scaleY,d,o),p=k=null,function(u){for(var c=-1,A=o.length,g;++c<A;)d[(g=o[c]).i]=g.x(u);return d.join("")}}}var JH=m1(XH,"px, ","px)","deg)"),QH=m1(ZH,", ",")",")"),sj=1e-12;function PA(s){return((s=Math.exp(s))+1/s)/2}function ij(s){return((s=Math.exp(s))-1/s)/2}function ej(s){return((s=Math.exp(2*s))-1)/(s+1)}const aj=function s(i,e,a){function n(t,l){var r=t[0],h=t[1],p=t[2],k=l[0],d=l[1],o=l[2],u=k-r,c=d-h,A=u*u+c*c,g,f;if(A<sj)f=Math.log(o/p)/i,g=function(N){return[r+N*u,h+N*c,p*Math.exp(i*N*f)]};else{var m=Math.sqrt(A),y=(o*o-p*p+a*A)/(2*p*e*m),v=(o*o-p*p-a*A)/(2*o*e*m),_=Math.log(Math.sqrt(y*y+1)-y),S=Math.log(Math.sqrt(v*v+1)-v);f=(S-_)/i,g=function(N){var T=N*f,C=PA(_),I=p/(e*m)*(C*ej(i*T+_)-ij(_));return[r+I*u,h+I*c,p*C/PA(i*T+_)]}}return g.duration=f*1e3*i/Math.SQRT2,g}return n.rho=function(t){var l=Math.max(.001,+t),r=l*l,h=r*r;return s(l,r,h)},n}(Math.SQRT2,2,4);var Et=0,Jt=0,Ht=0,v1=1e3,Gh,Qt,Wh=0,In=0,$p=0,Wl=typeof performance=="object"&&performance.now?performance:Date,F1=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(s){setTimeout(s,17)};function xc(){return In||(F1(nj),In=Wl.now()+$p)}function nj(){In=0}function Kh(){this._call=this._time=this._next=null}Kh.prototype=Tc.prototype={constructor:Kh,restart:function(s,i,e){if(typeof s!="function")throw new TypeError("callback is not a function");e=(e==null?xc():+e)+(i==null?0:+i),!this._next&&Qt!==this&&(Qt?Qt._next=this:Gh=this,Qt=this),this._call=s,this._time=e,Xo()},stop:function(){this._call&&(this._call=null,this._time=1/0,Xo())}};function Tc(s,i,e){var a=new Kh;return a.restart(s,i,e),a}function tj(){xc(),++Et;for(var s=Gh,i;s;)(i=In-s._time)>=0&&s._call.call(void 0,i),s=s._next;--Et}function LA(){In=(Wh=Wl.now())+$p,Et=Jt=0;try{tj()}finally{Et=0,rj(),In=0}}function lj(){var s=Wl.now(),i=s-Wh;i>v1&&($p-=i,Wh=s)}function rj(){for(var s,i=Gh,e,a=1/0;i;)i._call?(a>i._time&&(a=i._time),s=i,i=i._next):(e=i._next,i._next=null,i=s?s._next=e:Gh=e);Qt=s,Xo(a)}function Xo(s){if(!Et){Jt&&(Jt=clearTimeout(Jt));var i=s-In;i>24?(s<1/0&&(Jt=setTimeout(LA,s-Wl.now()-$p)),Ht&&(Ht=clearInterval(Ht))):(Ht||(Wh=Wl.now(),Ht=setInterval(lj,v1)),Et=1,F1(LA))}}function NA(s,i,e){var a=new Kh;return i=i==null?0:+i,a.restart(n=>{a.stop(),s(n+i)},i,e),a}var hj=Mp("start","end","cancel","interrupt"),pj=[],E1=0,MA=1,Zo=2,uh=3,VA=4,Jo=5,ch=6;function zp(s,i,e,a,n,t){var l=s.__transition;if(!l)s.__transition={};else if(e in l)return;kj(s,e,{name:i,index:a,group:n,on:hj,tween:pj,time:t.time,delay:t.delay,duration:t.duration,ease:t.ease,timer:null,state:E1})}function Sc(s,i){var e=Se(s,i);if(e.state>E1)throw new Error("too late; already scheduled");return e}function Qe(s,i){var e=Se(s,i);if(e.state>uh)throw new Error("too late; already running");return e}function Se(s,i){var e=s.__transition;if(!e||!(e=e[i]))throw new Error("transition not found");return e}function kj(s,i,e){var a=s.__transition,n;a[i]=e,e.timer=Tc(t,0,e.time);function t(p){e.state=MA,e.timer.restart(l,e.delay,e.time),e.delay<=p&&l(p-e.delay)}function l(p){var k,d,o,u;if(e.state!==MA)return h();for(k in a)if(u=a[k],u.name===e.name){if(u.state===uh)return NA(l);u.state===VA?(u.state=ch,u.timer.stop(),u.on.call("interrupt",s,s.__data__,u.index,u.group),delete a[k]):+k<i&&(u.state=ch,u.timer.stop(),u.on.call("cancel",s,s.__data__,u.index,u.group),delete a[k])}if(NA(function(){e.state===uh&&(e.state=VA,e.timer.restart(r,e.delay,e.time),r(p))}),e.state=Zo,e.on.call("start",s,s.__data__,e.index,e.group),e.state===Zo){for(e.state=uh,n=new Array(o=e.tween.length),k=0,d=-1;k<o;++k)(u=e.tween[k].value.call(s,s.__data__,e.index,e.group))&&(n[++d]=u);n.length=d+1}}function r(p){for(var k=p<e.duration?e.ease.call(null,p/e.duration):(e.timer.restart(h),e.state=Jo,1),d=-1,o=n.length;++d<o;)n[d].call(s,k);e.state===Jo&&(e.on.call("end",s,s.__data__,e.index,e.group),h())}function h(){e.state=ch,e.timer.stop(),delete a[i];for(var p in a)return;delete s.__transition}}function gh(s,i){var e=s.__transition,a,n,t=!0,l;if(e){i=i==null?null:i+"";for(l in e){if((a=e[l]).name!==i){t=!1;continue}n=a.state>Zo&&a.state<Jo,a.state=ch,a.timer.stop(),a.on.call(n?"interrupt":"cancel",s,s.__data__,a.index,a.group),delete e[l]}t&&delete s.__transition}}function dj(s){return this.each(function(){gh(this,s)})}function oj(s,i){var e,a;return function(){var n=Qe(this,s),t=n.tween;if(t!==e){a=e=t;for(var l=0,r=a.length;l<r;++l)if(a[l].name===i){a=a.slice(),a.splice(l,1);break}}n.tween=a}}function uj(s,i,e){var a,n;if(typeof e!="function")throw new Error;return function(){var t=Qe(this,s),l=t.tween;if(l!==a){n=(a=l).slice();for(var r={name:i,value:e},h=0,p=n.length;h<p;++h)if(n[h].name===i){n[h]=r;break}h===p&&n.push(r)}t.tween=n}}function cj(s,i){var e=this._id;if(s+="",arguments.length<2){for(var a=Se(this.node(),e).tween,n=0,t=a.length,l;n<t;++n)if((l=a[n]).name===s)return l.value;return null}return this.each((i==null?oj:uj)(e,s,i))}function Ic(s,i,e){var a=s._id;return s.each(function(){var n=Qe(this,a);(n.value||(n.value={}))[i]=e.apply(this,arguments)}),function(n){return Se(n,a).value[i]}}function b1(s,i){var e;return(typeof i=="number"?qa:i instanceof Gl?RA:(e=Gl(i))?(i=e,RA):YH)(s,i)}function gj(s){return function(){this.removeAttribute(s)}}function Bj(s){return function(){this.removeAttributeNS(s.space,s.local)}}function Aj(s,i,e){var a,n=e+"",t;return function(){var l=this.getAttribute(s);return l===n?null:l===a?t:t=i(a=l,e)}}function yj(s,i,e){var a,n=e+"",t;return function(){var l=this.getAttributeNS(s.space,s.local);return l===n?null:l===a?t:t=i(a=l,e)}}function fj(s,i,e){var a,n,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttribute(s):(l=this.getAttribute(s),h=r+"",l===h?null:l===a&&h===n?t:(n=h,t=i(a=l,r)))}}function mj(s,i,e){var a,n,t;return function(){var l,r=e(this),h;return r==null?void this.removeAttributeNS(s.space,s.local):(l=this.getAttributeNS(s.space,s.local),h=r+"",l===h?null:l===a&&h===n?t:(n=h,t=i(a=l,r)))}}function vj(s,i){var e=Vp(s),a=e==="transform"?QH:b1;return this.attrTween(s,typeof i=="function"?(e.local?mj:fj)(e,a,Ic(this,"attr."+s,i)):i==null?(e.local?Bj:gj)(e):(e.local?yj:Aj)(e,a,i))}function Fj(s,i){return function(e){this.setAttribute(s,i.call(this,e))}}function Ej(s,i){return function(e){this.setAttributeNS(s.space,s.local,i.call(this,e))}}function bj(s,i){var e,a;function n(){var t=i.apply(this,arguments);return t!==a&&(e=(a=t)&&Ej(s,t)),e}return n._value=i,n}function Cj(s,i){var e,a;function n(){var t=i.apply(this,arguments);return t!==a&&(e=(a=t)&&Fj(s,t)),e}return n._value=i,n}function _j(s,i){var e="attr."+s;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(i==null)return this.tween(e,null);if(typeof i!="function")throw new Error;var a=Vp(s);return this.tween(e,(a.local?bj:Cj)(a,i))}function Dj(s,i){return function(){Sc(this,s).delay=+i.apply(this,arguments)}}function wj(s,i){return i=+i,function(){Sc(this,s).delay=i}}function xj(s){var i=this._id;return arguments.length?this.each((typeof s=="function"?Dj:wj)(i,s)):Se(this.node(),i).delay}function Tj(s,i){return function(){Qe(this,s).duration=+i.apply(this,arguments)}}function Sj(s,i){return i=+i,function(){Qe(this,s).duration=i}}function Ij(s){var i=this._id;return arguments.length?this.each((typeof s=="function"?Tj:Sj)(i,s)):Se(this.node(),i).duration}function Rj(s,i){if(typeof i!="function")throw new Error;return function(){Qe(this,s).ease=i}}function Oj(s){var i=this._id;return arguments.length?this.each(Rj(i,s)):Se(this.node(),i).ease}function Pj(s,i){return function(){var e=i.apply(this,arguments);if(typeof e!="function")throw new Error;Qe(this,s).ease=e}}function Lj(s){if(typeof s!="function")throw new Error;return this.each(Pj(this._id,s))}function Nj(s){typeof s!="function"&&(s=t1(s));for(var i=this._groups,e=i.length,a=new Array(e),n=0;n<e;++n)for(var t=i[n],l=t.length,r=a[n]=[],h,p=0;p<l;++p)(h=t[p])&&s.call(h,h.__data__,p,t)&&r.push(h);return new va(a,this._parents,this._name,this._id)}function Mj(s){if(s._id!==this._id)throw new Error;for(var i=this._groups,e=s._groups,a=i.length,n=e.length,t=Math.min(a,n),l=new Array(a),r=0;r<t;++r)for(var h=i[r],p=e[r],k=h.length,d=l[r]=new Array(k),o,u=0;u<k;++u)(o=h[u]||p[u])&&(d[u]=o);for(;r<a;++r)l[r]=i[r];return new va(l,this._parents,this._name,this._id)}function Vj(s){return(s+"").trim().split(/^|\s+/).every(function(i){var e=i.indexOf(".");return e>=0&&(i=i.slice(0,e)),!i||i==="start"})}function $j(s,i,e){var a,n,t=Vj(i)?Sc:Qe;return function(){var l=t(this,s),r=l.on;r!==a&&(n=(a=r).copy()).on(i,e),l.on=n}}function zj(s,i){var e=this._id;return arguments.length<2?Se(this.node(),e).on.on(s):this.each($j(e,s,i))}function qj(s){return function(){var i=this.parentNode;for(var e in this.__transition)if(+e!==s)return;i&&i.removeChild(this)}}function Hj(){return this.on("end.remove",qj(this._id))}function jj(s){var i=this._name,e=this._id;typeof s!="function"&&(s=_c(s));for(var a=this._groups,n=a.length,t=new Array(n),l=0;l<n;++l)for(var r=a[l],h=r.length,p=t[l]=new Array(h),k,d,o=0;o<h;++o)(k=r[o])&&(d=s.call(k,k.__data__,o,r))&&("__data__"in k&&(d.__data__=k.__data__),p[o]=d,zp(p[o],i,e,o,p,Se(k,e)));return new va(t,this._parents,i,e)}function Uj(s){var i=this._name,e=this._id;typeof s!="function"&&(s=n1(s));for(var a=this._groups,n=a.length,t=[],l=[],r=0;r<n;++r)for(var h=a[r],p=h.length,k,d=0;d<p;++d)if(k=h[d]){for(var o=s.call(k,k.__data__,d,h),u,c=Se(k,e),A=0,g=o.length;A<g;++A)(u=o[A])&&zp(u,i,e,A,o,c);t.push(o),l.push(k)}return new va(t,l,i,e)}var Gj=Cr.prototype.constructor;function Wj(){return new Gj(this._groups,this._parents)}function Kj(s,i){var e,a,n;return function(){var t=Ft(this,s),l=(this.style.removeProperty(s),Ft(this,s));return t===l?null:t===e&&l===a?n:n=i(e=t,a=l)}}function C1(s){return function(){this.style.removeProperty(s)}}function Yj(s,i,e){var a,n=e+"",t;return function(){var l=Ft(this,s);return l===n?null:l===a?t:t=i(a=l,e)}}function Xj(s,i,e){var a,n,t;return function(){var l=Ft(this,s),r=e(this),h=r+"";return r==null&&(h=r=(this.style.removeProperty(s),Ft(this,s))),l===h?null:l===a&&h===n?t:(n=h,t=i(a=l,r))}}function Zj(s,i){var e,a,n,t="style."+i,l="end."+t,r;return function(){var h=Qe(this,s),p=h.on,k=h.value[t]==null?r||(r=C1(i)):void 0;(p!==e||n!==k)&&(a=(e=p).copy()).on(l,n=k),h.on=a}}function Jj(s,i,e){var a=(s+="")=="transform"?JH:b1;return i==null?this.styleTween(s,Kj(s,a)).on("end.style."+s,C1(s)):typeof i=="function"?this.styleTween(s,Xj(s,a,Ic(this,"style."+s,i))).each(Zj(this._id,s)):this.styleTween(s,Yj(s,a,i),e).on("end.style."+s,null)}function Qj(s,i,e){return function(a){this.style.setProperty(s,i.call(this,a),e)}}function sU(s,i,e){var a,n;function t(){var l=i.apply(this,arguments);return l!==n&&(a=(n=l)&&Qj(s,l,e)),a}return t._value=i,t}function iU(s,i,e){var a="style."+(s+="");if(arguments.length<2)return(a=this.tween(a))&&a._value;if(i==null)return this.tween(a,null);if(typeof i!="function")throw new Error;return this.tween(a,sU(s,i,e??""))}function eU(s){return function(){this.textContent=s}}function aU(s){return function(){var i=s(this);this.textContent=i??""}}function nU(s){return this.tween("text",typeof s=="function"?aU(Ic(this,"text",s)):eU(s==null?"":s+""))}function tU(s){return function(i){this.textContent=s.call(this,i)}}function lU(s){var i,e;function a(){var n=s.apply(this,arguments);return n!==e&&(i=(e=n)&&tU(n)),i}return a._value=s,a}function rU(s){var i="text";if(arguments.length<1)return(i=this.tween(i))&&i._value;if(s==null)return this.tween(i,null);if(typeof s!="function")throw new Error;return this.tween(i,lU(s))}function hU(){for(var s=this._name,i=this._id,e=_1(),a=this._groups,n=a.length,t=0;t<n;++t)for(var l=a[t],r=l.length,h,p=0;p<r;++p)if(h=l[p]){var k=Se(h,i);zp(h,s,e,p,l,{time:k.time+k.delay+k.duration,delay:0,duration:k.duration,ease:k.ease})}return new va(a,this._parents,s,e)}function pU(){var s,i,e=this,a=e._id,n=e.size();return new Promise(function(t,l){var r={value:l},h={value:function(){--n===0&&t()}};e.each(function(){var p=Qe(this,a),k=p.on;k!==s&&(i=(s=k).copy(),i._.cancel.push(r),i._.interrupt.push(r),i._.end.push(h)),p.on=i}),n===0&&t()})}var kU=0;function va(s,i,e,a){this._groups=s,this._parents=i,this._name=e,this._id=a}function _1(){return++kU}var na=Cr.prototype;va.prototype={constructor:va,select:jj,selectAll:Uj,selectChild:na.selectChild,selectChildren:na.selectChildren,filter:Nj,merge:Mj,selection:Wj,transition:hU,call:na.call,nodes:na.nodes,node:na.node,size:na.size,empty:na.empty,each:na.each,on:zj,attr:vj,attrTween:_j,style:Jj,styleTween:iU,text:nU,textTween:rU,remove:Hj,tween:cj,delay:xj,duration:Ij,ease:Oj,easeVarying:Lj,end:pU,[Symbol.iterator]:na[Symbol.iterator]};function dU(s){return((s*=2)<=1?s*s*s:(s-=2)*s*s+2)/2}var oU={time:null,delay:0,duration:250,ease:dU};function uU(s,i){for(var e;!(e=s.__transition)||!(e=e[i]);)if(!(s=s.parentNode))throw new Error(`transition ${i} not found`);return e}function cU(s){var i,e;s instanceof va?(i=s._id,s=s._name):(i=_1(),(e=oU).time=xc(),s=s==null?null:s+"");for(var a=this._groups,n=a.length,t=0;t<n;++t)for(var l=a[t],r=l.length,h,p=0;p<r;++p)(h=l[p])&&zp(h,s,i,p,l,e||uU(h,i));return new va(a,this._parents,s,i)}Cr.prototype.interrupt=dj;Cr.prototype.transition=cU;function $A(s,i){var e,a=1;s==null&&(s=0),i==null&&(i=0);function n(){var t,l=e.length,r,h=0,p=0;for(t=0;t<l;++t)r=e[t],h+=r.x,p+=r.y;for(h=(h/l-s)*a,p=(p/l-i)*a,t=0;t<l;++t)r=e[t],r.x-=h,r.y-=p}return n.initialize=function(t){e=t},n.x=function(t){return arguments.length?(s=+t,n):s},n.y=function(t){return arguments.length?(i=+t,n):i},n.strength=function(t){return arguments.length?(a=+t,n):a},n}function gU(s){const i=+this._x.call(null,s),e=+this._y.call(null,s);return D1(this.cover(i,e),i,e,s)}function D1(s,i,e,a){if(isNaN(i)||isNaN(e))return s;var n,t=s._root,l={data:a},r=s._x0,h=s._y0,p=s._x1,k=s._y1,d,o,u,c,A,g,f,m;if(!t)return s._root=l,s;for(;t.length;)if((A=i>=(d=(r+p)/2))?r=d:p=d,(g=e>=(o=(h+k)/2))?h=o:k=o,n=t,!(t=t[f=g<<1|A]))return n[f]=l,s;if(u=+s._x.call(null,t.data),c=+s._y.call(null,t.data),i===u&&e===c)return l.next=t,n?n[f]=l:s._root=l,s;do n=n?n[f]=new Array(4):s._root=new Array(4),(A=i>=(d=(r+p)/2))?r=d:p=d,(g=e>=(o=(h+k)/2))?h=o:k=o;while((f=g<<1|A)===(m=(c>=o)<<1|u>=d));return n[m]=t,n[f]=l,s}function BU(s){var i,e,a=s.length,n,t,l=new Array(a),r=new Array(a),h=1/0,p=1/0,k=-1/0,d=-1/0;for(e=0;e<a;++e)isNaN(n=+this._x.call(null,i=s[e]))||isNaN(t=+this._y.call(null,i))||(l[e]=n,r[e]=t,n<h&&(h=n),n>k&&(k=n),t<p&&(p=t),t>d&&(d=t));if(h>k||p>d)return this;for(this.cover(h,p).cover(k,d),e=0;e<a;++e)D1(this,l[e],r[e],s[e]);return this}function AU(s,i){if(isNaN(s=+s)||isNaN(i=+i))return this;var e=this._x0,a=this._y0,n=this._x1,t=this._y1;if(isNaN(e))n=(e=Math.floor(s))+1,t=(a=Math.floor(i))+1;else{for(var l=n-e||1,r=this._root,h,p;e>s||s>=n||a>i||i>=t;)switch(p=(i<a)<<1|s<e,h=new Array(4),h[p]=r,r=h,l*=2,p){case 0:n=e+l,t=a+l;break;case 1:e=n-l,t=a+l;break;case 2:n=e+l,a=t-l;break;case 3:e=n-l,a=t-l;break}this._root&&this._root.length&&(this._root=r)}return this._x0=e,this._y0=a,this._x1=n,this._y1=t,this}function yU(){var s=[];return this.visit(function(i){if(!i.length)do s.push(i.data);while(i=i.next)}),s}function fU(s){return arguments.length?this.cover(+s[0][0],+s[0][1]).cover(+s[1][0],+s[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}function $i(s,i,e,a,n){this.node=s,this.x0=i,this.y0=e,this.x1=a,this.y1=n}function mU(s,i,e){var a,n=this._x0,t=this._y0,l,r,h,p,k=this._x1,d=this._y1,o=[],u=this._root,c,A;for(u&&o.push(new $i(u,n,t,k,d)),e==null?e=1/0:(n=s-e,t=i-e,k=s+e,d=i+e,e*=e);c=o.pop();)if(!(!(u=c.node)||(l=c.x0)>k||(r=c.y0)>d||(h=c.x1)<n||(p=c.y1)<t))if(u.length){var g=(l+h)/2,f=(r+p)/2;o.push(new $i(u[3],g,f,h,p),new $i(u[2],l,f,g,p),new $i(u[1],g,r,h,f),new $i(u[0],l,r,g,f)),(A=(i>=f)<<1|s>=g)&&(c=o[o.length-1],o[o.length-1]=o[o.length-1-A],o[o.length-1-A]=c)}else{var m=s-+this._x.call(null,u.data),y=i-+this._y.call(null,u.data),v=m*m+y*y;if(v<e){var _=Math.sqrt(e=v);n=s-_,t=i-_,k=s+_,d=i+_,a=u.data}}return a}function vU(s){if(isNaN(k=+this._x.call(null,s))||isNaN(d=+this._y.call(null,s)))return this;var i,e=this._root,a,n,t,l=this._x0,r=this._y0,h=this._x1,p=this._y1,k,d,o,u,c,A,g,f;if(!e)return this;if(e.length)for(;;){if((c=k>=(o=(l+h)/2))?l=o:h=o,(A=d>=(u=(r+p)/2))?r=u:p=u,i=e,!(e=e[g=A<<1|c]))return this;if(!e.length)break;(i[g+1&3]||i[g+2&3]||i[g+3&3])&&(a=i,f=g)}for(;e.data!==s;)if(n=e,!(e=e.next))return this;return(t=e.next)&&delete e.next,n?(t?n.next=t:delete n.next,this):i?(t?i[g]=t:delete i[g],(e=i[0]||i[1]||i[2]||i[3])&&e===(i[3]||i[2]||i[1]||i[0])&&!e.length&&(a?a[f]=e:this._root=e),this):(this._root=t,this)}function FU(s){for(var i=0,e=s.length;i<e;++i)this.remove(s[i]);return this}function EU(){return this._root}function bU(){var s=0;return this.visit(function(i){if(!i.length)do++s;while(i=i.next)}),s}function CU(s){var i=[],e,a=this._root,n,t,l,r,h;for(a&&i.push(new $i(a,this._x0,this._y0,this._x1,this._y1));e=i.pop();)if(!s(a=e.node,t=e.x0,l=e.y0,r=e.x1,h=e.y1)&&a.length){var p=(t+r)/2,k=(l+h)/2;(n=a[3])&&i.push(new $i(n,p,k,r,h)),(n=a[2])&&i.push(new $i(n,t,k,p,h)),(n=a[1])&&i.push(new $i(n,p,l,r,k)),(n=a[0])&&i.push(new $i(n,t,l,p,k))}return this}function _U(s){var i=[],e=[],a;for(this._root&&i.push(new $i(this._root,this._x0,this._y0,this._x1,this._y1));a=i.pop();){var n=a.node;if(n.length){var t,l=a.x0,r=a.y0,h=a.x1,p=a.y1,k=(l+h)/2,d=(r+p)/2;(t=n[0])&&i.push(new $i(t,l,r,k,d)),(t=n[1])&&i.push(new $i(t,k,r,h,d)),(t=n[2])&&i.push(new $i(t,l,d,k,p)),(t=n[3])&&i.push(new $i(t,k,d,h,p))}e.push(a)}for(;a=e.pop();)s(a.node,a.x0,a.y0,a.x1,a.y1);return this}function DU(s){return s[0]}function wU(s){return arguments.length?(this._x=s,this):this._x}function xU(s){return s[1]}function TU(s){return arguments.length?(this._y=s,this):this._y}function Rc(s,i,e){var a=new Oc(i??DU,e??xU,NaN,NaN,NaN,NaN);return s==null?a:a.addAll(s)}function Oc(s,i,e,a,n,t){this._x=s,this._y=i,this._x0=e,this._y0=a,this._x1=n,this._y1=t,this._root=void 0}function zA(s){for(var i={data:s.data},e=i;s=s.next;)e=e.next={data:s.data};return i}var Hi=Rc.prototype=Oc.prototype;Hi.copy=function(){var s=new Oc(this._x,this._y,this._x0,this._y0,this._x1,this._y1),i=this._root,e,a;if(!i)return s;if(!i.length)return s._root=zA(i),s;for(e=[{source:i,target:s._root=new Array(4)}];i=e.pop();)for(var n=0;n<4;++n)(a=i.source[n])&&(a.length?e.push({source:a,target:i.target[n]=new Array(4)}):i.target[n]=zA(a));return s};Hi.add=gU;Hi.addAll=BU;Hi.cover=AU;Hi.data=yU;Hi.extent=fU;Hi.find=mU;Hi.remove=vU;Hi.removeAll=FU;Hi.root=EU;Hi.size=bU;Hi.visit=CU;Hi.visitAfter=_U;Hi.x=wU;Hi.y=TU;function qi(s){return function(){return s}}function Ga(s){return(s()-.5)*1e-6}function SU(s){return s.x+s.vx}function IU(s){return s.y+s.vy}function RU(s){var i,e,a,n=1,t=1;typeof s!="function"&&(s=qi(s==null?1:+s));function l(){for(var p,k=i.length,d,o,u,c,A,g,f=0;f<t;++f)for(d=Rc(i,SU,IU).visitAfter(r),p=0;p<k;++p)o=i[p],A=e[o.index],g=A*A,u=o.x+o.vx,c=o.y+o.vy,d.visit(m);function m(y,v,_,S,N){var T=y.data,C=y.r,I=A+C;if(T){if(T.index>o.index){var O=u-T.x-T.vx,w=c-T.y-T.vy,z=O*O+w*w;z<I*I&&(O===0&&(O=Ga(a),z+=O*O),w===0&&(w=Ga(a),z+=w*w),z=(I-(z=Math.sqrt(z)))/z*n,o.vx+=(O*=z)*(I=(C*=C)/(g+C)),o.vy+=(w*=z)*I,T.vx-=O*(I=1-I),T.vy-=w*I)}return}return v>u+I||S<u-I||_>c+I||N<c-I}}function r(p){if(p.data)return p.r=e[p.data.index];for(var k=p.r=0;k<4;++k)p[k]&&p[k].r>p.r&&(p.r=p[k].r)}function h(){if(i){var p,k=i.length,d;for(e=new Array(k),p=0;p<k;++p)d=i[p],e[d.index]=+s(d,p,i)}}return l.initialize=function(p,k){i=p,a=k,h()},l.iterations=function(p){return arguments.length?(t=+p,l):t},l.strength=function(p){return arguments.length?(n=+p,l):n},l.radius=function(p){return arguments.length?(s=typeof p=="function"?p:qi(+p),h(),l):s},l}function OU(s){return s.index}function qA(s,i){var e=s.get(i);if(!e)throw new Error("node not found: "+i);return e}function PU(s){var i=OU,e=d,a,n=qi(30),t,l,r,h,p,k=1;s==null&&(s=[]);function d(g){return 1/Math.min(r[g.source.index],r[g.target.index])}function o(g){for(var f=0,m=s.length;f<k;++f)for(var y=0,v,_,S,N,T,C,I;y<m;++y)v=s[y],_=v.source,S=v.target,N=S.x+S.vx-_.x-_.vx||Ga(p),T=S.y+S.vy-_.y-_.vy||Ga(p),C=Math.sqrt(N*N+T*T),C=(C-t[y])/C*g*a[y],N*=C,T*=C,S.vx-=N*(I=h[y]),S.vy-=T*I,_.vx+=N*(I=1-I),_.vy+=T*I}function u(){if(l){var g,f=l.length,m=s.length,y=new Map(l.map((_,S)=>[i(_,S,l),_])),v;for(g=0,r=new Array(f);g<m;++g)v=s[g],v.index=g,typeof v.source!="object"&&(v.source=qA(y,v.source)),typeof v.target!="object"&&(v.target=qA(y,v.target)),r[v.source.index]=(r[v.source.index]||0)+1,r[v.target.index]=(r[v.target.index]||0)+1;for(g=0,h=new Array(m);g<m;++g)v=s[g],h[g]=r[v.source.index]/(r[v.source.index]+r[v.target.index]);a=new Array(m),c(),t=new Array(m),A()}}function c(){if(l)for(var g=0,f=s.length;g<f;++g)a[g]=+e(s[g],g,s)}function A(){if(l)for(var g=0,f=s.length;g<f;++g)t[g]=+n(s[g],g,s)}return o.initialize=function(g,f){l=g,p=f,u()},o.links=function(g){return arguments.length?(s=g,u(),o):s},o.id=function(g){return arguments.length?(i=g,o):i},o.iterations=function(g){return arguments.length?(k=+g,o):k},o.strength=function(g){return arguments.length?(e=typeof g=="function"?g:qi(+g),c(),o):e},o.distance=function(g){return arguments.length?(n=typeof g=="function"?g:qi(+g),A(),o):n},o}const LU=1664525,NU=1013904223,HA=4294967296;function MU(){let s=1;return()=>(s=(LU*s+NU)%HA)/HA}function VU(s){return s.x}function $U(s){return s.y}var zU=10,qU=Math.PI*(3-Math.sqrt(5));function HU(s){var i,e=1,a=.001,n=1-Math.pow(a,1/300),t=0,l=.6,r=new Map,h=Tc(d),p=Mp("tick","end"),k=MU();s==null&&(s=[]);function d(){o(),p.call("tick",i),e<a&&(h.stop(),p.call("end",i))}function o(A){var g,f=s.length,m;A===void 0&&(A=1);for(var y=0;y<A;++y)for(e+=(t-e)*n,r.forEach(function(v){v(e)}),g=0;g<f;++g)m=s[g],m.fx==null?m.x+=m.vx*=l:(m.x=m.fx,m.vx=0),m.fy==null?m.y+=m.vy*=l:(m.y=m.fy,m.vy=0);return i}function u(){for(var A=0,g=s.length,f;A<g;++A){if(f=s[A],f.index=A,f.fx!=null&&(f.x=f.fx),f.fy!=null&&(f.y=f.fy),isNaN(f.x)||isNaN(f.y)){var m=zU*Math.sqrt(.5+A),y=A*qU;f.x=m*Math.cos(y),f.y=m*Math.sin(y)}(isNaN(f.vx)||isNaN(f.vy))&&(f.vx=f.vy=0)}}function c(A){return A.initialize&&A.initialize(s,k),A}return u(),i={tick:o,restart:function(){return h.restart(d),i},stop:function(){return h.stop(),i},nodes:function(A){return arguments.length?(s=A,u(),r.forEach(c),i):s},alpha:function(A){return arguments.length?(e=+A,i):e},alphaMin:function(A){return arguments.length?(a=+A,i):a},alphaDecay:function(A){return arguments.length?(n=+A,i):+n},alphaTarget:function(A){return arguments.length?(t=+A,i):t},velocityDecay:function(A){return arguments.length?(l=1-A,i):1-l},randomSource:function(A){return arguments.length?(k=A,r.forEach(c),i):k},force:function(A,g){return arguments.length>1?(g==null?r.delete(A):r.set(A,c(g)),i):r.get(A)},find:function(A,g,f){var m=0,y=s.length,v,_,S,N,T;for(f==null?f=1/0:f*=f,m=0;m<y;++m)N=s[m],v=A-N.x,_=g-N.y,S=v*v+_*_,S<f&&(T=N,f=S);return T},on:function(A,g){return arguments.length>1?(p.on(A,g),i):p.on(A)}}}function jU(){var s,i,e,a,n=qi(-30),t,l=1,r=1/0,h=.81;function p(u){var c,A=s.length,g=Rc(s,VU,$U).visitAfter(d);for(a=u,c=0;c<A;++c)i=s[c],g.visit(o)}function k(){if(s){var u,c=s.length,A;for(t=new Array(c),u=0;u<c;++u)A=s[u],t[A.index]=+n(A,u,s)}}function d(u){var c=0,A,g,f=0,m,y,v;if(u.length){for(m=y=v=0;v<4;++v)(A=u[v])&&(g=Math.abs(A.value))&&(c+=A.value,f+=g,m+=g*A.x,y+=g*A.y);u.x=m/f,u.y=y/f}else{A=u,A.x=A.data.x,A.y=A.data.y;do c+=t[A.data.index];while(A=A.next)}u.value=c}function o(u,c,A,g){if(!u.value)return!0;var f=u.x-i.x,m=u.y-i.y,y=g-c,v=f*f+m*m;if(y*y/h<v)return v<r&&(f===0&&(f=Ga(e),v+=f*f),m===0&&(m=Ga(e),v+=m*m),v<l&&(v=Math.sqrt(l*v)),i.vx+=f*u.value*a/v,i.vy+=m*u.value*a/v),!0;if(u.length||v>=r)return;(u.data!==i||u.next)&&(f===0&&(f=Ga(e),v+=f*f),m===0&&(m=Ga(e),v+=m*m),v<l&&(v=Math.sqrt(l*v)));do u.data!==i&&(y=t[u.data.index]*a/v,i.vx+=f*y,i.vy+=m*y);while(u=u.next)}return p.initialize=function(u,c){s=u,e=c,k()},p.strength=function(u){return arguments.length?(n=typeof u=="function"?u:qi(+u),k(),p):n},p.distanceMin=function(u){return arguments.length?(l=u*u,p):Math.sqrt(l)},p.distanceMax=function(u){return arguments.length?(r=u*u,p):Math.sqrt(r)},p.theta=function(u){return arguments.length?(h=u*u,p):Math.sqrt(h)},p}function UU(s){var i=qi(.1),e,a,n;typeof s!="function"&&(s=qi(s==null?0:+s));function t(r){for(var h=0,p=e.length,k;h<p;++h)k=e[h],k.vx+=(n[h]-k.x)*a[h]*r}function l(){if(e){var r,h=e.length;for(a=new Array(h),n=new Array(h),r=0;r<h;++r)a[r]=isNaN(n[r]=+s(e[r],r,e))?0:+i(e[r],r,e)}}return t.initialize=function(r){e=r,l()},t.strength=function(r){return arguments.length?(i=typeof r=="function"?r:qi(+r),l(),t):i},t.x=function(r){return arguments.length?(s=typeof r=="function"?r:qi(+r),l(),t):s},t}function GU(s){var i=qi(.1),e,a,n;typeof s!="function"&&(s=qi(s==null?0:+s));function t(r){for(var h=0,p=e.length,k;h<p;++h)k=e[h],k.vy+=(n[h]-k.y)*a[h]*r}function l(){if(e){var r,h=e.length;for(a=new Array(h),n=new Array(h),r=0;r<h;++r)a[r]=isNaN(n[r]=+s(e[r],r,e))?0:+i(e[r],r,e)}}return t.initialize=function(r){e=r,l()},t.strength=function(r){return arguments.length?(i=typeof r=="function"?r:qi(+r),l(),t):i},t.y=function(r){return arguments.length?(s=typeof r=="function"?r:qi(+r),l(),t):s},t}const Jr=s=>()=>s;function WU(s,{sourceEvent:i,target:e,transform:a,dispatch:n}){Object.defineProperties(this,{type:{value:s,enumerable:!0,configurable:!0},sourceEvent:{value:i,enumerable:!0,configurable:!0},target:{value:e,enumerable:!0,configurable:!0},transform:{value:a,enumerable:!0,configurable:!0},_:{value:n}})}function Ba(s,i,e){this.k=s,this.x=i,this.y=e}Ba.prototype={constructor:Ba,scale:function(s){return s===1?this:new Ba(this.k*s,this.x,this.y)},translate:function(s,i){return s===0&i===0?this:new Ba(this.k,this.x+this.k*s,this.y+this.k*i)},apply:function(s){return[s[0]*this.k+this.x,s[1]*this.k+this.y]},applyX:function(s){return s*this.k+this.x},applyY:function(s){return s*this.k+this.y},invert:function(s){return[(s[0]-this.x)/this.k,(s[1]-this.y)/this.k]},invertX:function(s){return(s-this.x)/this.k},invertY:function(s){return(s-this.y)/this.k},rescaleX:function(s){return s.copy().domain(s.range().map(this.invertX,this).map(s.invert,s))},rescaleY:function(s){return s.copy().domain(s.range().map(this.invertY,this).map(s.invert,s))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var qp=new Ba(1,0,0);KU.prototype=Ba.prototype;function KU(s){for(;!s.__zoom;)if(!(s=s.parentNode))return qp;return s.__zoom}function Md(s){s.stopImmediatePropagation()}function jt(s){s.preventDefault(),s.stopImmediatePropagation()}function YU(s){return(!s.ctrlKey||s.type==="wheel")&&!s.button}function XU(){var s=this;return s instanceof SVGElement?(s=s.ownerSVGElement||s,s.hasAttribute("viewBox")?(s=s.viewBox.baseVal,[[s.x,s.y],[s.x+s.width,s.y+s.height]]):[[0,0],[s.width.baseVal.value,s.height.baseVal.value]]):[[0,0],[s.clientWidth,s.clientHeight]]}function jA(){return this.__zoom||qp}function ZU(s){return-s.deltaY*(s.deltaMode===1?.05:s.deltaMode?1:.002)*(s.ctrlKey?10:1)}function JU(){return navigator.maxTouchPoints||"ontouchstart"in this}function QU(s,i,e){var a=s.invertX(i[0][0])-e[0][0],n=s.invertX(i[1][0])-e[1][0],t=s.invertY(i[0][1])-e[0][1],l=s.invertY(i[1][1])-e[1][1];return s.translate(n>a?(a+n)/2:Math.min(0,a)||Math.max(0,n),l>t?(t+l)/2:Math.min(0,t)||Math.max(0,l))}function sG(){var s=YU,i=XU,e=QU,a=ZU,n=JU,t=[0,1/0],l=[[-1/0,-1/0],[1/0,1/0]],r=250,h=aj,p=Mp("start","zoom","end"),k,d,o,u=500,c=150,A=0,g=10;function f(b){b.property("__zoom",jA).on("wheel.zoom",T,{passive:!1}).on("mousedown.zoom",C).on("dblclick.zoom",I).filter(n).on("touchstart.zoom",O).on("touchmove.zoom",w).on("touchend.zoom touchcancel.zoom",z).style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}f.transform=function(b,$,R,M){var W=b.selection?b.selection():b;W.property("__zoom",jA),b!==W?_(b,$,R,M):W.interrupt().each(function(){S(this,arguments).event(M).start().zoom(null,typeof $=="function"?$.apply(this,arguments):$).end()})},f.scaleBy=function(b,$,R,M){f.scaleTo(b,function(){var W=this.__zoom.k,Y=typeof $=="function"?$.apply(this,arguments):$;return W*Y},R,M)},f.scaleTo=function(b,$,R,M){f.transform(b,function(){var W=i.apply(this,arguments),Y=this.__zoom,ls=R==null?v(W):typeof R=="function"?R.apply(this,arguments):R,ps=Y.invert(ls),es=typeof $=="function"?$.apply(this,arguments):$;return e(y(m(Y,es),ls,ps),W,l)},R,M)},f.translateBy=function(b,$,R,M){f.transform(b,function(){return e(this.__zoom.translate(typeof $=="function"?$.apply(this,arguments):$,typeof R=="function"?R.apply(this,arguments):R),i.apply(this,arguments),l)},null,M)},f.translateTo=function(b,$,R,M,W){f.transform(b,function(){var Y=i.apply(this,arguments),ls=this.__zoom,ps=M==null?v(Y):typeof M=="function"?M.apply(this,arguments):M;return e(qp.translate(ps[0],ps[1]).scale(ls.k).translate(typeof $=="function"?-$.apply(this,arguments):-$,typeof R=="function"?-R.apply(this,arguments):-R),Y,l)},M,W)};function m(b,$){return $=Math.max(t[0],Math.min(t[1],$)),$===b.k?b:new Ba($,b.x,b.y)}function y(b,$,R){var M=$[0]-R[0]*b.k,W=$[1]-R[1]*b.k;return M===b.x&&W===b.y?b:new Ba(b.k,M,W)}function v(b){return[(+b[0][0]+ +b[1][0])/2,(+b[0][1]+ +b[1][1])/2]}function _(b,$,R,M){b.on("start.zoom",function(){S(this,arguments).event(M).start()}).on("interrupt.zoom end.zoom",function(){S(this,arguments).event(M).end()}).tween("zoom",function(){var W=this,Y=arguments,ls=S(W,Y).event(M),ps=i.apply(W,Y),es=R==null?v(ps):typeof R=="function"?R.apply(W,Y):R,q=Math.max(ps[1][0]-ps[0][0],ps[1][1]-ps[0][1]),U=W.__zoom,K=typeof $=="function"?$.apply(W,Y):$,rs=h(U.invert(es).concat(q/U.k),K.invert(es).concat(q/K.k));return function(j){if(j===1)j=K;else{var J=rs(j),Z=q/J[2];j=new Ba(Z,es[0]-J[0]*Z,es[1]-J[1]*Z)}ls.zoom(null,j)}})}function S(b,$,R){return!R&&b.__zooming||new N(b,$)}function N(b,$){this.that=b,this.args=$,this.active=0,this.sourceEvent=null,this.extent=i.apply(b,$),this.taps=0}N.prototype={event:function(b){return b&&(this.sourceEvent=b),this},start:function(){return++this.active===1&&(this.that.__zooming=this,this.emit("start")),this},zoom:function(b,$){return this.mouse&&b!=="mouse"&&(this.mouse[1]=$.invert(this.mouse[0])),this.touch0&&b!=="touch"&&(this.touch0[1]=$.invert(this.touch0[0])),this.touch1&&b!=="touch"&&(this.touch1[1]=$.invert(this.touch1[0])),this.that.__zoom=$,this.emit("zoom"),this},end:function(){return--this.active===0&&(delete this.that.__zooming,this.emit("end")),this},emit:function(b){var $=ua(this.that).datum();p.call(b,this.that,new WU(b,{sourceEvent:this.sourceEvent,target:f,transform:this.that.__zoom,dispatch:p}),$)}};function T(b,...$){if(!s.apply(this,arguments))return;var R=S(this,$).event(b),M=this.__zoom,W=Math.max(t[0],Math.min(t[1],M.k*Math.pow(2,a.apply(this,arguments)))),Y=ra(b);if(R.wheel)(R.mouse[0][0]!==Y[0]||R.mouse[0][1]!==Y[1])&&(R.mouse[1]=M.invert(R.mouse[0]=Y)),clearTimeout(R.wheel);else{if(M.k===W)return;R.mouse=[Y,M.invert(Y)],gh(this),R.start()}jt(b),R.wheel=setTimeout(ls,c),R.zoom("mouse",e(y(m(M,W),R.mouse[0],R.mouse[1]),R.extent,l));function ls(){R.wheel=null,R.end()}}function C(b,...$){if(o||!s.apply(this,arguments))return;var R=b.currentTarget,M=S(this,$,!0).event(b),W=ua(b.view).on("mousemove.zoom",es,!0).on("mouseup.zoom",q,!0),Y=ra(b,R),ls=b.clientX,ps=b.clientY;TH(b.view),Md(b),M.mouse=[Y,this.__zoom.invert(Y)],gh(this),M.start();function es(U){if(jt(U),!M.moved){var K=U.clientX-ls,rs=U.clientY-ps;M.moved=K*K+rs*rs>A}M.event(U).zoom("mouse",e(y(M.that.__zoom,M.mouse[0]=ra(U,R),M.mouse[1]),M.extent,l))}function q(U){W.on("mousemove.zoom mouseup.zoom",null),SH(U.view,M.moved),jt(U),M.event(U).end()}}function I(b,...$){if(s.apply(this,arguments)){var R=this.__zoom,M=ra(b.changedTouches?b.changedTouches[0]:b,this),W=R.invert(M),Y=R.k*(b.shiftKey?.5:2),ls=e(y(m(R,Y),M,W),i.apply(this,$),l);jt(b),r>0?ua(this).transition().duration(r).call(_,ls,M,b):ua(this).call(f.transform,ls,M,b)}}function O(b,...$){if(s.apply(this,arguments)){var R=b.touches,M=R.length,W=S(this,$,b.changedTouches.length===M).event(b),Y,ls,ps,es;for(Md(b),ls=0;ls<M;++ls)ps=R[ls],es=ra(ps,this),es=[es,this.__zoom.invert(es),ps.identifier],W.touch0?!W.touch1&&W.touch0[2]!==es[2]&&(W.touch1=es,W.taps=0):(W.touch0=es,Y=!0,W.taps=1+!!k);k&&(k=clearTimeout(k)),Y&&(W.taps<2&&(d=es[0],k=setTimeout(function(){k=null},u)),gh(this),W.start())}}function w(b,...$){if(this.__zooming){var R=S(this,$).event(b),M=b.changedTouches,W=M.length,Y,ls,ps,es;for(jt(b),Y=0;Y<W;++Y)ls=M[Y],ps=ra(ls,this),R.touch0&&R.touch0[2]===ls.identifier?R.touch0[0]=ps:R.touch1&&R.touch1[2]===ls.identifier&&(R.touch1[0]=ps);if(ls=R.that.__zoom,R.touch1){var q=R.touch0[0],U=R.touch0[1],K=R.touch1[0],rs=R.touch1[1],j=(j=K[0]-q[0])*j+(j=K[1]-q[1])*j,J=(J=rs[0]-U[0])*J+(J=rs[1]-U[1])*J;ls=m(ls,Math.sqrt(j/J)),ps=[(q[0]+K[0])/2,(q[1]+K[1])/2],es=[(U[0]+rs[0])/2,(U[1]+rs[1])/2]}else if(R.touch0)ps=R.touch0[0],es=R.touch0[1];else return;R.zoom("touch",e(y(ls,ps,es),R.extent,l))}}function z(b,...$){if(this.__zooming){var R=S(this,$).event(b),M=b.changedTouches,W=M.length,Y,ls;for(Md(b),o&&clearTimeout(o),o=setTimeout(function(){o=null},u),Y=0;Y<W;++Y)ls=M[Y],R.touch0&&R.touch0[2]===ls.identifier?delete R.touch0:R.touch1&&R.touch1[2]===ls.identifier&&delete R.touch1;if(R.touch1&&!R.touch0&&(R.touch0=R.touch1,delete R.touch1),R.touch0)R.touch0[1]=this.__zoom.invert(R.touch0[0]);else if(R.end(),R.taps===2&&(ls=ra(ls,this),Math.hypot(d[0]-ls[0],d[1]-ls[1])<g)){var ps=ua(this).on("dblclick.zoom");ps&&ps.apply(this,arguments)}}}return f.wheelDelta=function(b){return arguments.length?(a=typeof b=="function"?b:Jr(+b),f):a},f.filter=function(b){return arguments.length?(s=typeof b=="function"?b:Jr(!!b),f):s},f.touchable=function(b){return arguments.length?(n=typeof b=="function"?b:Jr(!!b),f):n},f.extent=function(b){return arguments.length?(i=typeof b=="function"?b:Jr([[+b[0][0],+b[0][1]],[+b[1][0],+b[1][1]]]),f):i},f.scaleExtent=function(b){return arguments.length?(t[0]=+b[0],t[1]=+b[1],f):[t[0],t[1]]},f.translateExtent=function(b){return arguments.length?(l[0][0]=+b[0][0],l[1][0]=+b[1][0],l[0][1]=+b[0][1],l[1][1]=+b[1][1],f):[[l[0][0],l[0][1]],[l[1][0],l[1][1]]]},f.constrain=function(b){return arguments.length?(e=b,f):e},f.duration=function(b){return arguments.length?(r=+b,f):r},f.interpolate=function(b){return arguments.length?(h=b,f):h},f.on=function(){var b=p.on.apply(p,arguments);return b===p?f:b},f.clickDistance=function(b){return arguments.length?(A=(b=+b)*b,f):Math.sqrt(A)},f.tapDistance=function(b){return arguments.length?(g=+b,f):g},f}const iG=ts({__name:"relationGraph",props:{data:{},currentPath:{},canvasWidth:{},canvasHeight:{}},emits:["nodeClick"],setup(s,{expose:i,emit:e}){const a=e;let n=null;const t=()=>{n&&n.alpha(r.simulation.restart.alpha).alphaTarget(r.simulation.restart.alphaTarget).restart()};i({restartSimulation:t});const l={defaultWidth:300,defaultHeight:300,nodeRadius:5,nodePadding:5,zoomExtent:[.1,10],nodeClickRadius:15,hoverNodeRadius:8},r={link:PU().id(v=>v.id).distance(100).strength(.8),charge:jU().strength(v=>-50-250*(Math.min(v.linkCount,10)-1||0)).distanceMin(10).distanceMax(400),collision:RU().radius(30).strength(.7),x:UU().strength(v=>v.isIsolated?.02:.1),y:GU().strength(v=>v.isIsolated?.02:.1),simulation:{alphaDecay:.01,alphaMin:.001,velocityDecay:.6,restart:{alpha:1,alphaTarget:.3,watchAlpha:.3,dataChangeAlpha:1,dragEndAlphaTarget:0,dragEndAlpha:.3}}},h={link:{color:"#aaa",normalOpacity:.3,highlightOpacity:1},node:{normalOpacity:.3,highlightOpacity:.8},text:{font:"12px 'Microsoft YaHei', 'Heiti SC', 'SimHei', -apple-system, sans-serif",offset:25,minScale:.5,maxScale:1.5},currentNode:{strokeWidth:2}};function p(v,_){const N=decodeURIComponent(v).replace(/\.[^/.]+$/,""),T=_.replace(/\.[^/.]+$/,""),C=N.replace(/^\//,""),I=T.replace(/^\//,"");return C===I}const k=s,d=Q({nodes:[],links:[]});function o(v,_){const S=JSON.parse(JSON.stringify(v.nodes)),N=JSON.parse(JSON.stringify(v.links));if(S.forEach(T=>{T.linkCount=N.reduce((C,I)=>(((typeof I.source=="string"?I.source:I.source.id)===T.id||(typeof I.target=="string"?I.target:I.target.id)===T.id)&&(C+=1),C),0)}),S.forEach(T=>{T.isCurrent=!1,T.fx=null,T.fy=null,T.isIsolated=!N.some(C=>(typeof C.source=="string"?C.source===T.id:C.source.id===T.id)||(typeof C.target=="string"?C.target===T.id:C.target.id===T.id)),T.x=u.value.width/2,T.y=u.value.height/2}),_){const T=S.find(C=>p(_,C.value.path));T&&(T.isCurrent=!0,T.fx=u.value.width/2,T.fy=u.value.height/2,setTimeout(()=>{T&&(T.fx=null,T.fy=null)},1e3))}d.value={nodes:S,links:N}}const u=V(()=>({width:k.canvasWidth,height:k.canvasHeight})),c=Q(null),A=Q(0),g=Q({x:0,y:0}),f=Q({accent:"",text:"",cssVariableName:{accent:"",text:""}});function m(){const v=getComputedStyle(document.documentElement);v.getPropertyValue("--vp-c-accent").trim()?(f.value.accent=v.getPropertyValue("--vp-c-accent").trim(),f.value.cssVariableName.accent="--vp-c-accent"):v.getPropertyValue("--theme-color").trim()?(f.value.accent=v.getPropertyValue("--theme-color").trim(),f.value.cssVariableName.accent="--theme-color"):(f.value.accent="#299764",f.value.cssVariableName.accent=""),v.getPropertyValue("--vp-c-text").trim()?(f.value.text=v.getPropertyValue("--vp-c-text").trim(),f.value.cssVariableName.text="--vp-c-text"):v.getPropertyValue("--text-color").trim()?(f.value.text=v.getPropertyValue("--text-color").trim(),f.value.cssVariableName.text="--text-color"):(f.value.text="#000000",f.value.cssVariableName.text="")}ws(()=>{m(),o(k.data,k.currentPath);const v=new MutationObserver(()=>{const X=getComputedStyle(document.documentElement);let x=!1;f.value.cssVariableName.accent&&X.getPropertyValue(f.value.cssVariableName.accent).trim()!==f.value.accent&&(x=!0),f.value.cssVariableName.text&&X.getPropertyValue(f.value.cssVariableName.text).trim()!==f.value.text&&(x=!0),x&&(m(),n&&ps())});if(v.observe(document.documentElement,{attributes:!0,attributeFilter:["style","class","data-theme"]}),_i(()=>{v.disconnect()}),!d.value)return;const _=c.value,S=_.getContext("2d");let N=!1,T=null,C=qp,I=null,O=null;function w(){const X=sG().scaleExtent(l.zoomExtent).filter(E=>$(E)).touchable(!0).on("zoom",E=>{C=E.transform,ps()}),x={passive:!0,capture:!1};ua(_).on("touchstart touchmove",null).call(X),_.addEventListener("mousedown",R),_.addEventListener("touchstart",R,x),_.addEventListener("click",rs),_.addEventListener("touchend",rs),_.addEventListener("mousemove",j),_.addEventListener("touchmove",j,x),_.addEventListener("mouseleave",J),_.addEventListener("touchend",J)}O=new MutationObserver(()=>{_&&S&&ps()}),O.observe(document.documentElement,{attributes:!0,attributeFilter:["style","class","data-theme"]}),_i(()=>{O&&O.disconnect(),n&&n.stop(),_.removeEventListener("mousedown",R),_.removeEventListener("click",rs),_.removeEventListener("mousemove",j),_.removeEventListener("mouseleave",J),_.removeEventListener("touchstart",R),_.removeEventListener("touchend",rs),_.removeEventListener("touchmove",j),_.removeEventListener("touchend",J),ua(_).on(".zoom",null)}),n=b(),w();function b(){d.value.nodes.forEach(x=>{x.isIsolated=!d.value.links.some(E=>(typeof E.source=="string"?E.source===x.id:E.source===x)||(typeof E.target=="string"?E.target===x.id:E.target===x)),x.x=u.value.width/2,x.y=u.value.height/2});const X=$A(u.value.width/2,u.value.height/2).strength(.002);return window.simulation=HU(d.value.nodes).force("link",r.link.links(d.value.links)).force("charge",r.charge).force("collision",r.collision).force("center",X).force("x",r.x.x(u.value.width/2)).force("y",r.y.y(u.value.height/2)).alphaDecay(r.simulation.alphaDecay).alphaMin(r.simulation.alphaMin).velocityDecay(r.simulation.velocityDecay).on("tick",()=>{ps()}),window.simulation}function $(X){const x=X.sourceEvent||X;if(x.type==="touchstart"){const E=x.touches[0],D=_.getBoundingClientRect(),P=(E.clientX-D.left-C.x)/C.k,L=(E.clientY-D.top-C.y)/C.k;return!n.find(P,L,l.nodeClickRadius)}if(x.type==="mousedown"){const[E,D]=C.invert(ra(x,_));return!K(E,D)&&!T}return!0}function R(X){X.type==="touchstart"&&X.preventDefault();const x=X.touches?X.touches[0]:X,[E,D]=C.invert(ra(x,_));if(T=n.find(E,D,l.nodeClickRadius),A.value=Date.now(),g.value={x:x.clientX,y:x.clientY},T){I=T,X.stopPropagation(),document.body.style.userSelect="none",T.fx=E,T.fy=D,n.alphaTarget(r.simulation.restart.alphaTarget).restart();const P={passive:!1,capture:!1};X.touches?(window.addEventListener("touchmove",M,P),window.addEventListener("touchend",W)):(window.addEventListener("mousemove",M),window.addEventListener("mouseup",W))}}function M(X){if(T){const x=X.touches?X.touches[0]:X;if(Math.sqrt(Math.pow(x.clientX-g.value.x,2)+Math.pow(x.clientY-g.value.y,2))>5){N=!0;const D=_.getBoundingClientRect(),P=(x.clientX-D.left-C.x)/C.k,L=(x.clientY-D.top-C.y)/C.k,H=Y(P,L);ls(H),n.alphaTarget(r.simulation.restart.alphaTarget)}X.preventDefault()}}function W(){T&&(T.fx=null,T.fy=null,document.body.style.userSelect="",I=null,T=null,n.alphaTarget(r.simulation.restart.dragEndAlphaTarget).alpha(r.simulation.restart.dragEndAlpha),event.type==="touchend"?(window.removeEventListener("touchmove",M),window.removeEventListener("touchend",W)):(window.removeEventListener("mousemove",M),window.removeEventListener("mouseup",W)))}function Y(X,x){const E={left:-C.x/C.k,top:-C.y/C.k,right:(u.value.width-C.x)/C.k,bottom:(u.value.height-C.y)/C.k};return{x:Math.max(E.left+l.nodePadding,Math.min(E.right-l.nodePadding,X)),y:Math.max(E.top+l.nodePadding,Math.min(E.bottom-l.nodePadding,x))}}function ls({x:X,y:x}){T.x=X,T.y=x,T.fx=X,T.fy=x}function ps(){S.clearRect(0,0,u.value.width,u.value.height),S.save(),es(),Z(),ks(),cs(),S.restore()}function es(){S.translate(C.x,C.y),S.scale(C.k,C.k)}function q(X){S.moveTo(X.source.x,X.source.y),S.lineTo(X.target.x,X.target.y)}function U(X,x){const E=x+(X.linkCount-1||0)*.4;S.moveTo(X.x+E,X.y),S.arc(X.x,X.y,E,0,2*Math.PI)}function K(X,x){return d.value.nodes.some(E=>{const D=E.x-X,P=E.y-x;return Math.sqrt(D*D+P*P)<l.nodeClickRadius})}function rs(X){const x=X.changedTouches?X.changedTouches[0]:X,E=Date.now()-A.value,D=Math.sqrt(Math.pow(x.clientX-g.value.x,2)+Math.pow(x.clientY-g.value.y,2));if(E<300&&D<5){const P=_.getBoundingClientRect(),L=(x.clientX-P.left-C.x)/C.k,H=(x.clientY-P.top-C.y)/C.k,is=n.find(L,H,l.nodeClickRadius);is&&!N&&(is.isCurrent||a("nodeClick",is.value.path))}N=!1}function j(X){if(T)return;const x=X.touches?X.touches[0]:X,E=_.getBoundingClientRect(),D=(x.clientX-E.left-C.x)/C.k,P=(x.clientY-E.top-C.y)/C.k,L=n.find(D,P,l.nodeClickRadius);L!==I&&(I=L,ps())}function J(){I&&(I=null,ps())}function Z(){const{accent:X}=f.value;d.value.links.forEach(x=>{S.beginPath(),q(x),I&&(x.source===I||x.target===I)?(S.strokeStyle=X,S.globalAlpha=h.link.highlightOpacity):(S.strokeStyle=h.link.color,S.globalAlpha=I?h.link.normalOpacity:h.link.highlightOpacity),S.stroke()}),S.globalAlpha=1}function ks(){const{accent:X,text:x}=f.value,E=new Set;I&&d.value.links.forEach(P=>{P.source===I&&E.add(P.target),P.target===I&&E.add(P.source)}),S.beginPath(),d.value.nodes.filter(P=>!P.isCurrent&&P!==I).forEach(P=>{U(P,l.nodeRadius)}),S.fillStyle=x,S.globalAlpha=I?h.node.normalOpacity:h.node.highlightOpacity,S.fill(),I&&(S.beginPath(),Array.from(E).forEach(P=>{P.isCurrent||U(P,l.nodeRadius)}),S.fillStyle=x,S.globalAlpha=h.node.highlightOpacity,S.fill()),I&&!I.isCurrent&&(S.beginPath(),U(I,l.hoverNodeRadius),S.fillStyle=X,S.globalAlpha=h.node.highlightOpacity,S.fill());const D=d.value.nodes.find(P=>P.isCurrent);D&&(S.beginPath(),U(D,D===I?l.hoverNodeRadius:l.nodeRadius),S.fillStyle=X,S.globalAlpha=I&&D!==I&&!E.has(D)?h.node.normalOpacity:h.node.highlightOpacity,S.fill()),S.globalAlpha=1}function cs(){S.font=h.text.font;const{text:X}=f.value,x=new Set;I&&d.value.links.forEach(E=>{E.source===I&&x.add(E.target),E.target===I&&x.add(E.source)}),d.value.nodes.forEach(E=>{let D=!1,P=1;if(C.k>h.text.minScale&&(D=!0,P=Math.min((C.k-h.text.minScale)/(h.text.maxScale-h.text.minScale),1),I&&(E===I||x.has(E)||(P=P*h.node.normalOpacity))),D){const L=S.measureText(E.value.title).width;S.fillStyle=X,S.globalAlpha=P,S.fillText(E.value.title,E.x-L/2,E.y+h.text.offset),S.globalAlpha=1}})}qs(()=>{n&&(n.alphaTarget(r.simulation.restart.alphaTarget).restart(),setTimeout(()=>{n.alphaTarget(r.simulation.restart.dragEndAlphaTarget).alpha(r.simulation.restart.dragEndAlpha)},100))})}),bs(()=>u.value,()=>{if(window.simulation){const v=$A(u.value.width/2,u.value.height/2).strength(.002);window.simulation.force("center",v).force("x",r.x.x(u.value.width/2)).force("y",r.y.y(u.value.height/2)),window.simulation.alpha(r.simulation.restart.watchAlpha).restart()}}),_i(()=>{n&&n.stop()}),bs(()=>[k.data,k.currentPath],([v,_])=>{!v||!n||(o(v,_),n.nodes(d.value.nodes).force("link",r.link.links(d.value.links)),n.alpha(r.simulation.restart.dataChangeAlpha).restart())});const y={emit:a,get simulation(){return n},set simulation(v){n=v},restartSimulation:t,CANVAS_CONFIG:l,FORCE_CONFIG:r,STYLE_CONFIG:h,isPathMatch:p,props:k,map_data:d,initializeMapData:o,canvasSize:u,canvasRef:c,mouseDownTime:A,mouseDownPosition:g,themeColors:f,initThemeColors:m};return Object.defineProperty(y,"__isScriptSetup",{enumerable:!1,value:!0}),y}}),eG=["width","height"];function aG(s,i,e,a,n,t){return hs(),us("canvas",{ref:"canvasRef",width:a.canvasSize.width,height:a.canvasSize.height,style:gi({width:a.canvasSize.width+"px",height:a.canvasSize.height+"px"})},null,12,eG)}const w1=ai(iG,[["render",aG],["__scopeId","data-v-e09ca1ab"],["__file","relationGraph.vue"]]),nG="globalRelationalGraph.json",Bh=Q(!1);async function tG(s,i,e={target:""}){try{if(s){const a=await F(()=>import(`/${e.target}`),[]);return(a==null?void 0:a.default)||null}else{const a=await fetch(i(`${nG}`));return a.ok&&await a.json()||null}}catch(a){return console.error(a),null}}const lG=ts({__name:"localRelationshipMap",setup(s,{expose:i}){i();const e=Bi(),a=V(()=>{var I;const C=(I=e.value)==null?void 0:I.bioChainData;return C==null?void 0:C.localMap}),n=De(),t=Q(null),l=Q(null),r=V(()=>({foldEmptyGraph:!0,localGraphDeep:1,enableGlobalGraph:!0,graphSize:{height:300,maxWidth:300}})),h=V(()=>{var C;return r.value.foldEmptyGraph?((C=a.value)==null?void 0:C.nodes.length)>1:!0}),p=C=>{n.push(`/${C}`)},k=Q(null),d=Q(null),o=Q({width:300,height:r.value.graphSize.height}),u=Q(0),c=Q(!1),A=Q(!1),g=Q({width:800,height:600});function f(){c.value=window.matchMedia("(min-width: 1440px)").matches}function m(){if(k.value){const C=k.value.parentElement;if(!C)return;const I=C.getBoundingClientRect(),O=window.getComputedStyle(C),w=parseFloat(O.paddingLeft)+parseFloat(O.paddingRight);c.value?r.value.graphSize.maxWidth?u.value=Math.min(r.value.graphSize.maxWidth,document.documentElement.clientWidth-I.left-40):u.value=document.documentElement.clientWidth-I.left-40:u.value=Math.max(300,I.width-w-20),o.value={width:u.value,height:r.value.graphSize.height},qs(()=>{var z;(z=t.value)==null||z.restartSimulation()})}}function y(){A.value=!A.value,A.value&&qs(()=>{var C;m(),(C=t.value)==null||C.restartSimulation()})}let v=null,_=null;const S=()=>{if(d.value){const C=d.value.getBoundingClientRect();g.value={width:Math.floor(C.width),height:Math.floor(C.height)},qs(()=>{l.value&&l.value.restartSimulation()})}};ws(()=>{f(),v=window.matchMedia("(min-width: 1440px)"),v.addEventListener("change",f),qs(()=>{var C;m(),(C=t.value)==null||C.restartSimulation()}),window.addEventListener("resize",m),_=new ResizeObserver(C=>{for(const I of C)I.target===k.value?m():I.target===d.value&&(S(),qs(()=>{var O;(O=l.value)==null||O.restartSimulation()}))}),k.value&&_.observe(k.value)}),_i(()=>{var C,I;window.removeEventListener("resize",m),window.removeEventListener("resize",S),v&&v.removeEventListener("change",f),_&&_.disconnect(),(I=(C=t.value)==null?void 0:C.stopSimulation)==null||I.call(C)});const N=Q(!1);bs(N,C=>{C?(window.addEventListener("resize",S),qs(()=>{d.value&&(S(),_&&_.observe(d.value))})):(window.removeEventListener("resize",S),d.value&&_&&_.unobserve(d.value))});const T={data:e,map_data:a,router:n,graphRef:t,fullscreenGraphRef:l,options:r,shouldFoldEmptyGraph:h,handleNodeClick:p,containerRef:k,fullscreenContainerRef:d,canvasSize:o,containerWidth:u,isLargeScreen:c,isExpanded:A,fullscreenCanvasSize:g,updateScreenSize:f,updateContainerWidth:m,toggleExpand:y,get mediaQuery(){return v},set mediaQuery(C){v=C},get resizeObserver(){return _},set resizeObserver(C){_=C},updateFullscreenSize:S,isLocalGraphFullScreen:N,RelationGraph:w1,get showGlobalGraph(){return Bh}};return Object.defineProperty(T,"__isScriptSetup",{enumerable:!1,value:!0}),T}}),rG={key:0,class:"relationship-map"},hG={ref:"fullscreenContainerRef",class:"relationship-map-fullscreen__container"};function pG(s,i,e,a,n,t){return hs(),us(Ds,null,[a.shouldFoldEmptyGraph?(hs(),us("div",rG,[a.isLargeScreen?ys("v-if",!0):(hs(),us("button",{key:0,class:"relationship-map__toggle-btn",onClick:a.toggleExpand}," 查看关系图谱 "+Ls(a.isExpanded?"▼":"▶"),1)),G("div",{ref:"containerRef",class:Ps([{"relationship-map__container--expanded":a.isExpanded||a.isLargeScreen},"relationship-map__container"]),style:gi(a.isLargeScreen?{width:a.containerWidth+"px",height:a.options.graphSize.height+"px"}:"")},[G("button",{class:"relationship-map__btn relationship-map__btn--fullscreen",onClick:i[0]||(i[0]=l=>a.isLocalGraphFullScreen=!0)},i[4]||(i[4]=[G("svg",{fill:"none",height:"24","stroke-width":"1.5",viewBox:"0 0 24 24",width:"24",xmlns:"http://www.w3.org/2000/svg"},[G("path",{d:"M6.00005 19L19 5.99996M19 5.99996V18.48M19 5.99996H6.52005",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"})],-1)])),a.options.enableGlobalGraph?(hs(),us("button",{key:0,class:"relationship-map__btn relationship-map__btn--global",onClick:i[1]||(i[1]=l=>a.showGlobalGraph=!0)},i[5]||(i[5]=[ha('<svg class="svg-icon lucide-git-fork" fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg" data-v-d08c3b8f><circle cx="12" cy="18" r="3" data-v-d08c3b8f></circle><circle cx="6" cy="6" r="3" data-v-d08c3b8f></circle><circle cx="18" cy="6" r="3" data-v-d08c3b8f></circle><path d="M18 9v2c0 .6-.4 1-1 1H7c-.6 0-1-.4-1-1V9" data-v-d08c3b8f></path><path d="M12 12v3" data-v-d08c3b8f></path></svg>',1)]))):ys("v-if",!0),a.isLocalGraphFullScreen?ys("v-if",!0):(hs(),ri(a.RelationGraph,{key:1,ref:"graphRef","canvas-height":a.canvasSize.height,"canvas-width":a.canvasSize.width,"current-path":a.router.currentRoute.value.path,data:a.map_data,onNodeClick:a.handleNodeClick},null,8,["canvas-height","canvas-width","current-path","data"]))],6)])):ys("v-if",!0),a.isLocalGraphFullScreen?(hs(),us("div",{key:1,class:"relationship-map-fullscreen",onClick:i[3]||(i[3]=_4(l=>a.isLocalGraphFullScreen=!1,["self"]))},[G("div",hG,[G("button",{class:"relationship-map__btn relationship-map__btn--close",onClick:i[2]||(i[2]=l=>a.isLocalGraphFullScreen=!1)},i[6]||(i[6]=[G("svg",{fill:"none",height:"24","stroke-width":"1.5",viewBox:"0 0 24 24",width:"24",xmlns:"http://www.w3.org/2000/svg"},[G("path",{d:"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),G("path",{d:"M15 16L9 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),G("path",{d:"M9 16L15 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"})],-1)])),Bs(a.RelationGraph,{ref:"fullscreenGraphRef","canvas-height":a.fullscreenCanvasSize.height,"canvas-width":a.fullscreenCanvasSize.width,"current-path":a.router.currentRoute.value.path,data:a.map_data,onNodeClick:a.handleNodeClick},null,8,["canvas-height","canvas-width","current-path","data"])],512)])):ys("v-if",!0)],64)}const x1=ai(lG,[["render",pG],["__scopeId","data-v-d08c3b8f"],["__file","localRelationshipMap.vue"]]);var kG={target:".vuepress/.temp/globalRelationalGraph.json"};const dG=ts({__name:"globalGraph",setup(s,{expose:i}){i();const e=V(()=>({isDev:!1,graphPath:kG})),a=Q(!1),n=Q(null);let t=!1,l=null;const r=Q(null),h=Q(null),p=Q({width:800,height:600}),k=De(),d=V(()=>!a.value&&!n.value),o=V(()=>a.value&&!n.value);async function u(){if(!(n.value||t))try{t=!0,n.value=await tG(e.value.isDev,Gs,e.value.graphPath)}finally{t=!1,a.value=!0}}const c=async()=>{a.value=!1,n.value=null,await u()},A=()=>{if(r.value){const v=r.value.getBoundingClientRect();p.value={width:Math.floor(v.width),height:Math.floor(v.height)},qs(()=>{h.value&&h.value.restartSimulation()})}},g=()=>{var v,_;window.removeEventListener("resize",A),l&&(l.disconnect(),l=null),(_=(v=h.value)==null?void 0:v.stopSimulation)==null||_.call(v)},f=()=>{window.addEventListener("resize",A),l=new ResizeObserver(()=>{A()}),r.value&&l.observe(r.value),qs(()=>{A()})};bs(Bh,async v=>{v?(await u(),f()):g()},{immediate:!0});const y={options:e,first_loaded:a,data:n,get is_loading(){return t},set is_loading(v){t=v},get resizeObserver(){return l},set resizeObserver(v){l=v},containerRef:r,graphRef:h,canvasSize:p,router:k,isLoading:d,hasError:o,getGlobalGraphData:u,reloadData:c,updateCanvasSize:A,cleanup:g,initialize:f,handleNodeClick:v=>{k.push(`/${v}`),Bh.value=!1},get showGlobalGraph(){return Bh},RelationGraph:w1};return Object.defineProperty(y,"__isScriptSetup",{enumerable:!1,value:!0}),y}}),oG={id:"globalGraphContainer",ref:"containerRef"},uG={key:0,class:"loading-container"};function cG(s,i,e,a,n,t){return a.showGlobalGraph?(hs(),us("div",{key:0,id:"globalGraphMask",onClick:i[1]||(i[1]=_4(l=>a.showGlobalGraph=!1,["self"]))},[G("div",oG,[G("button",{class:"fullscreen-map-button",onClick:i[0]||(i[0]=l=>a.showGlobalGraph=!1)},i[2]||(i[2]=[G("svg",{fill:"none",height:"24","stroke-width":"1.5",viewBox:"0 0 24 24",width:"24",xmlns:"http://www.w3.org/2000/svg"},[G("path",{d:"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),G("path",{d:"M15 16L9 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"}),G("path",{d:"M9 16L15 8",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round"})],-1)])),ys(" 加载动画 "),a.isLoading?(hs(),us("div",uG,i[3]||(i[3]=[G("div",{class:"loading-spinner"},null,-1)]))):a.hasError?(hs(),us(Ds,{key:1},[ys(" 错误提示 "),G("div",{class:"error-container"},[i[4]||(i[4]=ha('<svg class="error-icon" fill="none" height="48" stroke-width="1.5" viewBox="0 0 24 24" width="48" xmlns="http://www.w3.org/2000/svg" data-v-d8b059e0><path d="M14 11.9976C14 9.5059 11.683 7 8.85714 7C8.52241 7 7.41904 7.00001 7.14286 7.00001C4.30254 7.00001 2 9.23752 2 11.9976C2 14.376 3.70973 16.3664 6 16.8714C6.36756 16.9525 6.75006 16.9952 7.14286 16.9952" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path><path d="M16.8571 6.99996C17.2499 6.99996 17.6324 7.04275 18 7.1238C20.2903 7.62881 22 9.61917 22 11.9976C22 13.4395 21.3716 14.7388 20.3664 15.651" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path><path d="M10.0002 11.9976C10.0002 14.4893 12.3172 16.9952 15.1431 16.9952" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path><path d="M18 22.2426L20.1213 20.1213M20.1213 20.1213L22.2426 18M20.1213 20.1213L18 18M20.1213 20.1213L22.2426 22.2426" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" data-v-d8b059e0></path></svg><p class="error-text" data-v-d8b059e0>数据加载失败</p>',2)),G("button",{class:"retry-button",onClick:a.reloadData},"重新加载")])],2112)):ys("v-if",!0),a.data?(hs(),ri(a.RelationGraph,{key:2,ref:"graphRef","canvas-height":a.canvasSize.height,"canvas-width":a.canvasSize.width,"current-path":a.router.currentRoute.value.path,data:a.data,onNodeClick:a.handleNodeClick},null,8,["canvas-height","canvas-width","current-path","data"])):ys("v-if",!0)],512)])):ys("v-if",!0)}const T1=ai(dG,[["render",cG],["__scopeId","data-v-d8b059e0"],["__file","globalGraph.vue"]]),gG=ts({__name:"Layout",setup(s,{expose:i}){i();const a={options:V(()=>({enableLocalGraph:!0,enableGlobalGraph:!0})),get Layout(){return yp},Backlink:e1,LocalRelationshipMap:x1,GlobalGraph:T1};return Object.defineProperty(a,"__isScriptSetup",{enumerable:!1,value:!0}),a}});function BG(s,i,e,a,n,t){return hs(),us(Ds,null,[Bs(a.GlobalGraph),Bs(a.Layout,null,{contentAfter:Hs(()=>[Bs(a.Backlink)]),tocBefore:Hs(()=>[Bs(a.LocalRelationshipMap)]),_:1})],64)}const AG=ai(gG,[["render",BG],["__file","Layout.vue"]]),yG=Ti({enhance({app:s,router:i,siteData:e}){},setup(){},layouts:{Layout:AG},rootComponents:[]}),fG=Object.freeze(Object.defineProperty({__proto__:null,default:yG},Symbol.toStringTag,{value:"Module"})),mG=ts({__name:"RootSidebarItem",props:{deep_from_target:{},prefix_from_root:{},sidebarData:{},currentPath:{},isH1:{type:Boolean,default:!1}},setup(s,{expose:i}){i();const e=s,a=Q([]),n=()=>{let k=e.currentPath.split("/");(e.currentPath.endsWith("/")||k[k.length-1].includes("."))&&k.pop(),k.map(d=>{a.value.push(d+"/")})};n(),bs(()=>e.prefix_from_root,()=>{n()}),bs(()=>e.currentPath,()=>{n()});const t=k=>{var d,o;if(typeof k=="string"){if(e.isH1){const g=(o=(d=ne(l(k)))==null?void 0:d.meta)==null?void 0:o.title;if(g&&g!="404")return g}if(!k.length)return"README";let u=decodeURIComponent(k);k.endsWith("/")&&(u=u.slice(0,-1));let c=u.split("/");u=c.pop()??"Error: pathname without shape";let A=u.split("?");return A.length>1&&(u=A[0]),u.length?u.replace(/\.html$/,""):c.pop()??"/"}else return k.prefix.slice(0,-1)},l=k=>k.length?k.startsWith("/")?k:k.endsWith("/")?e.prefix_from_root+k:e.prefix_from_root+k+".html":e.prefix_from_root,p={props:e,unfold_arr:a,onUpdateDeep:n,getText:t,getUrl:l,getIsActive:k=>decodeURIComponent(e.currentPath)==l(k),clickItem:k=>{typeof k!="string"&&(a.value.includes(k.prefix)?a.value=a.value.filter(d=>d!==k.prefix):a.value.push(k.prefix))}};return Object.defineProperty(p,"__isScriptSetup",{enumerable:!1,value:!0}),p}}),vG={class:"sidebar-item-children"},FG={key:0,class:"sidebar-item file"},EG=["relDeep"],bG=["unfold"],CG=["relDeep","onClick"],_G=["title"];function DG(s,i,e,a,n,t){const l=Ws("router-link"),r=Ws("RootSidebarItem",!0);return hs(),us("ul",vG,[(hs(!0),us(Ds,null,bi(e.sidebarData,(h,p)=>(hs(),us("li",{key:p},[ys(" 文件 "),typeof h=="string"?(hs(),us("div",FG,[ys(` <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24">
          <path d="M0 0h24v24H0z" fill="none"/>
          <path d="M12 2C6.48 2 2 6.48 2 12c0 5.52 4.48 10 10 10 5.52 0 10-4.48 10-10 0-5.52-4.48-10-10-10zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-2-9h4v2h-4v-2z"/>
        </svg> `),G("div",{class:Ps(["sidebar-item-name","file",{active:a.getIsActive(h)}]),relDeep:a.props.deep_from_target+1,style:gi("padding-inline-start:"+(a.props.deep_from_target*20+24)+"px")},[ys(" router-link代替a，spa路由切换，避免整个页面刷新 "),ys(' <a :href="item">{{ getText(item) }},deep: {{ deep }}, item: {{ item }}</a> '),Bs(l,{to:a.getUrl(h),title:a.getUrl(h)},{default:Hs(()=>[ki(Ls(a.getText(h)),1)]),_:2},1032,["to","title"])],14,EG)])):(hs(),us(Ds,{key:1},[ys(" 文件夹 "),G("div",{class:"sidebar-item folder",unfold:a.unfold_arr.includes(h.prefix)},[G("div",{class:Ps(["sidebar-item-name","folder",{active:a.getIsActive(h.prefix)}]),relDeep:a.props.deep_from_target+1,style:gi("padding-inline-start:"+(a.props.deep_from_target*20+24)+"px"),onClick:k=>a.clickItem(h)},[G("a",{title:a.getUrl(h.prefix)},Ls(a.getText(h)),9,_G)],14,CG),h.hasOwnProperty("children")&&a.unfold_arr.includes(h.prefix)?(hs(),ri(r,{key:0,deep_from_target:a.props.deep_from_target+1,prefix_from_root:a.props.prefix_from_root+h.prefix,sidebarData:h.children,currentPath:a.props.currentPath,"is-h1":a.props.isH1},null,8,["deep_from_target","prefix_from_root","sidebarData","currentPath","is-h1"])):ys("v-if",!0)],8,bG)],2112))]))),128))])}const wG=ai(mG,[["render",DG],["__scopeId","data-v-b202d335"],["__file","RootSidebarItem.vue"]]),xG=!1,TG=ts({__name:"RootSidebar",setup(s,{expose:i}){i(),Il.hasOwnProperty("/")||console.error('Error: Must be add a {"/": "structure"} in sidebar config');let e=!1;const a=Q(Il["/"]),n=Q(""),t=Q([]),l=Q(0),r=V(()=>t.value.slice(0,l.value+1).join("/")+"/"),h=V(()=>t.value[l.value]),p=Q(a.value);let k=_u().value.base;k!="/"&&(k.startsWith("/")&&(k=k.slice(1)),k.endsWith("/")&&(k=k.slice(0,-1)));function d(I){{k=="/"?n.value=decodeURIComponent(window.location.pathname):n.value=decodeURIComponent(window.location.pathname).replace(new RegExp(`^/${k}/`),"/");let O=n.value.split("/");(n.value.endsWith("/")||O[O.length-1].includes("."))&&O.pop(),t.value=O}{let w=function(z){const b=window.location.search.substring(1).split("&");for(var $=0;$<b.length;$++){var R=b[$].split("=");if(R[0]==z)return R[1]}return null}("deep");I!==void 0&&I>=0?l.value=I:w?l.value=parseInt(w):e||(l.value=l.value=t.value.length-1,l.value<0&&(l.value=0)),e=!0,l.value>t.value.length-1?(l.value=t.value.length-1,console.warn(`Warning: The deep value is too large, reset deep: ${l.value}`)):l.value<0&&(l.value==-1?l.value=t.value.length-1:l.value=0)}(()=>{let O=a.value;for(let w=1;w<l.value+1;w++)for(let z=0;z<O.length;z++){const b=O[z];if(typeof b!="string"){if(b.prefix===t.value[w]+"/"){O=b.children;break}if(z===O.length-1){console.error(`Error: Can't find the deep ${w} in ${n.value}, reset deep: ${w-1>0?w-1:0}`),l.value=w-1>0?w-1:0;return}}}p.value=O})()}const o=De(),u=We(),c=I=>{if(I<0)return;const O={...u.query,deep:I};o.push({path:u.path,query:O,hash:u.hash}),d(I),v()};ws(()=>{d()}),bs(()=>u.fullPath,()=>{d()});const A=Q(!1),g=Q(!1);function f(I){const O=document.querySelector("#sidebar>.vp-sidebar-links"),w=document.querySelector("#sidebar>.root-sidebar>.root-sidebar-content"),z=document.querySelector("#sidebar>.root-sidebar>.root-sidebar-content2");if(!O||!w||!z){console.warn("Warning: can not find sidebar old/new element");return}I!==void 0||(O.style.display==="none"||O.style.display===""?(I=!1,g.value=!0):(I=!0,g.value=!1)),I?(O.style.display="none",w.style.display="block",z.style.display="block"):(w.style.display="none",z.style.display="none",O.style.display="block")}ws(()=>{f(!0)});const m=Q([]);ws(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const I=localStorage.getItem("pinnedTabs");I&&(m.value=JSON.parse(I))}});function y(){const I=n.value+window.location.search+window.location.hash;if(m.value.includes(I)?m.value=m.value.filter(O=>O!==I):m.value.push(I),typeof window<"u"&&typeof localStorage<"u"){const O=JSON.stringify(m.value);localStorage.setItem("pinnedTabs",O)}}async function v(){if(await qs(),!_.value)return;const I=_.value.querySelector(":scope>button[relDeep='0']");I&&I.scrollIntoView({behavior:"smooth",block:"nearest",inline:"start"})}const _=Q(null);ws(()=>{v()});const S=Bi(),N=js(),T=()=>{console.log("debug start ---------------------------------------"),console.log("dataR",a),console.log("dataT",p),console.log("comp2",r),console.log("comp4",n),console.log("route1",window.location),console.log("route2",u),console.log("route3",o),console.log("usePageData1",S.value),console.log("usePageData2",S.value.router),console.log("usePageData3",S.value.path),console.log("usePageFrontmatter",N.value),console.log("debug end -----------------------------------------")};ws(()=>{});const C={get targetDeep_isInit(){return e},set targetDeep_isInit(I){e=I},rootData:a,currentPath:n,currentPathArr:t,targetDeep:l,targetPath:r,targetFolder:h,targetData:p,get orgName(){return k},set orgName(I){k=I},onNewUrl:d,router:o,route:u,emitNewUrl:c,isH1:A,isOldSidebar:g,switchOldSidebar:f,pinData:m,emitPinTab:y,emitScrollBreadcrumb:v,Breadcrumb:_,isDebug:xG,_usePageData:S,_usePageFrontmatter:N,debug:T,RootSidebarItem:wG};return Object.defineProperty(C,"__isScriptSetup",{enumerable:!1,value:!0}),C}}),SG={class:"root-sidebar"},IG={class:"root-sidebar-control"},RG={class:"root-sidebar-btn"},OG=["title"],PG={class:"root-sidebar-breadcrumb",ref:"Breadcrumb"},LG=["onClick","relDeep"],NG=["title"],MG={class:"root-sidebar-content2"},VG={class:"root-sidebar-content"};function $G(s,i,e,a,n,t){return hs(),us("div",SG,[G("div",IG,[G("div",RG,[ys(' <button title="升序/降序排序">Ord</button> '),G("button",{onClick:i[0]||(i[0]=()=>{a.isH1=!a.isH1}),class:Ps({active:a.isH1}),title:a.isH1?"切换显示: H1->文件名":"切换显示: 文件名->H1"},i[5]||(i[5]=[G("svg",{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"20",viewBox:"1 -4 22 22",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-heading"},[G("path",{d:"M6 12h12"}),G("path",{d:"M6 20V4"}),G("path",{d:"M18 20V4"})],-1)]),10,OG),G("button",{onClick:i[1]||(i[1]=l=>a.switchOldSidebar()),class:Ps({active:a.isOldSidebar}),title:"切换新旧侧边栏"},i[6]||(i[6]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="26" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-down-up" data-v-21321ee9><path d="m3 16 4 4 4-4" data-v-21321ee9></path><path d="M7 20V4" data-v-21321ee9></path><path d="m21 8-4-4-4 4" data-v-21321ee9></path><path d="M17 4v16" data-v-21321ee9></path></svg>',1)]),2),G("button",{onClick:i[2]||(i[2]=()=>{a.emitPinTab()}),title:"固定或删除当前标签页"},i[7]||(i[7]=[G("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"26",viewBox:"0 -1 24 24",fill:"none",stroke:"currentColor","stroke-width":"1.6","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-pin"},[G("path",{d:"M12 17v5"}),G("path",{d:"M9 10.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24V16a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V7a1 1 0 0 1 1-1 2 2 0 0 0 0-4H8a2 2 0 0 0 0 4 1 1 0 0 1 1 1z"})],-1)])),G("button",{onClick:i[3]||(i[3]=()=>{a.emitNewUrl(a.targetDeep-1)}),title:"显示更多侧边项"},i[8]||(i[8]=[G("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"26",viewBox:"6 5 12 12",fill:"none",stroke:"currentColor","stroke-width":"1.6","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-chevron-left"},[G("path",{d:"m15 18-6-6 6-6"})],-1)])),G("button",{onClick:i[4]||(i[4]=()=>{a.emitNewUrl(a.targetDeep+1)}),title:"精简更少侧边项"},i[9]||(i[9]=[G("svg",{xmlns:"http://www.w3.org/2000/svg",width:"10",height:"26",viewBox:"5 5 12 12",fill:"none",stroke:"currentColor","stroke-width":"1.6","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-chevron-right"},[G("path",{d:"m9 18 6-6-6-6"})],-1)]))]),G("div",PG,[ys(" TODO: 下拉框，路径下拉表示、排序、固定伪标签页 "),(hs(!0),us(Ds,null,bi(a.currentPathArr,(l,r)=>(hs(),us("button",{onClick:()=>{a.emitNewUrl(r)},relDeep:r-a.targetDeep},[G("span",{title:decodeURIComponent(l)+"/"},Ls(decodeURIComponent(l)+"/"),9,NG)],8,LG))),256))],512)]),G("div",MG,[ys(" 固定标签, 伪标签栏  "),Bs(a.RootSidebarItem,{deep_from_target:0,prefix_from_root:a.targetPath,sidebarData:a.pinData,currentPath:"/",isH1:a.isH1},null,8,["prefix_from_root","sidebarData","isH1"]),di(G("div",null,i[10]||(i[10]=[G("hr",null,null,-1)]),512),[[gn,a.pinData.length>0]])]),G("div",VG,[Bs(a.RootSidebarItem,{deep_from_target:0,prefix_from_root:a.targetPath,sidebarData:a.targetData,currentPath:a.currentPath,isH1:a.isH1},null,8,["prefix_from_root","sidebarData","currentPath","isH1"])])])}const S1=ai(TG,[["render",$G],["__scopeId","data-v-21321ee9"],["__file","RootSidebar.vue"]]),zG=ts({__name:"NewLayout",setup(s,{expose:i}){i();const e={get CommonWrapper(){return ur},get NormalPage(){return Ju},get SkipLink(){return cr},get FadeSlideY(){return Bp},RootSidebar:S1};return Object.defineProperty(e,"__isScriptSetup",{enumerable:!1,value:!0}),e}});function qG(s,i,e,a,n,t){return hs(),us(Ds,null,[Bs(a.SkipLink),Bs(a.CommonWrapper,null,{sidebarTop:Hs(()=>[Bs(a.RootSidebar)]),default:Hs(()=>[Bs(a.FadeSlideY,null,{default:Hs(()=>[Bs(a.NormalPage)]),_:1})]),_:1})],64)}const HG=ai(zG,[["render",qG],["__file","NewLayout.vue"]]),jG=Ti({setup(){},enhance:({app:s,router:i,siteData:e})=>{s.component("RootSidebar",S1)},layouts:{OldLayout:yp,Layout:HG}}),UG=Object.freeze(Object.defineProperty({__proto__:null,default:jG},Symbol.toStringTag,{value:"Module"})),GG=ts({__name:"ReadEnhance",setup(s,{expose:i}){i();const e={},a=Q(!1),n=Q("");ws(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const d=localStorage.getItem("ReadEnahnce_mode");d&&t(d)}});function t(d){n.value==d?n.value="":n.value=d;const o=document.documentElement,u=document.querySelector("#toc"),c=document.querySelector(".vp-page-title"),A=document.querySelector(".backlink-container"),g=document.querySelector("footer.vp-page-meta"),f=document.querySelector("nav.vp-page-nav"),m=document.querySelector("#sidebar"),y=document.querySelector("#main-content");if(document.documentElement.setAttribute("read-mode",n.value),n.value=="side")u&&(u.style.display="block"),c&&(c.style.display="block"),A&&(A.style.display="block"),g&&(g.style.display="block"),f&&(f.style.display="flex"),m&&(m.style.paddingInlineStart="1rem"),y&&(y.style.paddingInlineStart="calc(var(--sidebar-width) + 2rem)",y.style.paddingInlineEnd="calc(var(--sidebar-width) + 2rem)"),o&&(o.style.setProperty("--content-width","calc(820px + 16px)"),o.style.setProperty("--nf-min-height","900px"));else if(n.value=="wide")u&&(u.style.display="block"),c&&(c.style.display="block"),A&&(A.style.display="block"),g&&(g.style.display="block"),f&&(f.style.display="flex"),m&&(m.style.paddingInlineStart="1rem"),y&&(y.style.paddingInlineStart="calc(var(--sidebar-width) + 2rem)",y.style.paddingInlineEnd="calc(var(--sidebar-width) + 2rem)"),o&&(o.style.setProperty("--content-width","calc(100%)"),o.style.setProperty("--nf-min-height","900px"));else if(n.value=="super-wide"){u&&(u.style.display="none"),c&&(c.style.display="none"),A&&(A.style.display="none"),g&&(g.style.display="none"),f&&(f.style.display="none"),m&&(m.style.paddingInlineStart="1rem"),y&&(y.style.paddingInlineStart="calc(var(--sidebar-width) + 2rem)",y.style.paddingInlineEnd="1rem"),o&&(o.style.setProperty("--content-width","calc(100%)"),o.style.setProperty("--nf-min-height","calc(100vh - var(--navbar-height) - 140px)")),y.style.paddingBottom="0";let v=document.querySelector(".theme-hope-content");v&&(v.style.paddingBottom="0"),v=document.querySelector(".pdf-viewer-wrapper"),v&&(v.style.height="calc(100vh - 110px)")}else n.value=="narrow"&&(u&&(u.style.display="block"),c&&(c.style.display="block"),A&&(A.style.display="block"),g&&(g.style.display="block"),f&&(f.style.display="flex"),m&&(m.style.paddingInlineStart="calc(var(--sidebar-space) - var(--sidebar-width))"),y&&(y.style.paddingInlineStart="calc(var(--sidebar-space) + 2rem)",y.style.paddingInlineEnd="calc(100vw - var(--content-width) - var(--sidebar-space) - 6rem)"),o&&(o.style.setProperty("--content-width","calc(820px + 16px)"),o.style.setProperty("--nf-min-height","900px")));typeof window<"u"&&typeof localStorage<"u"&&localStorage.setItem("ReadEnahnce_mode",n.value)}function l(d){const o=document.querySelector("#app>div.theme-container");if(!o){console.warn("没有找到主题主页，无法切换");return}d==null&&(d=!!o.classList.contains("no-sidebar")),d==!0?o.classList.remove("no-sidebar"):d==!1&&o.classList.add("no-sidebar")}function r(d){const o=document.querySelector("#app>div.theme-container");if(!o){console.warn("没有找到主题主页，无法切换");return}d==null&&(d=!o.classList.contains("has-toc")),d==!0?o.classList.add("has-toc"):d==!1&&o.classList.remove("has-toc")}const h=Q("");ws(()=>{if(typeof window<"u"&&typeof localStorage<"u"){const d=localStorage.getItem("ReadEnahnce_color");d&&t(d)}});function p(d){h.value==d?h.value="":h.value=d;const o=document.documentElement;h.value.startsWith("#")&&(o.style.setProperty("--vp-c-bg",h.value),o.style.setProperty("--vp-c-bg-soft",`($color: ${h.value}, $alpha: 1.0)`),o.style.setProperty("--vp-c-bg-elv-soft",`($color: ${h.value}, $alpha: 1.0)`)),typeof window<"u"&&typeof localStorage<"u"&&localStorage.setItem("ReadEnahnce_color",h.value)}const k={props:e,isShowContent:a,mode:n,fn_mode:t,fn_switchShowSidebar:l,fn_switchShowToc:r,bgColor:h,fn_color:p};return Object.defineProperty(k,"__isScriptSetup",{enumerable:!1,value:!0}),k}}),WG={key:0,class:"read-enhance-content"};function KG(s,i,e,a,n,t){return hs(),us(Ds,null,[ys(" 如果要调试就将第二个改成true "),G("div",{class:"read-enhance vp-nav-item",onMouseover:i[14]||(i[14]=l=>a.isShowContent=!0),onMouseleave:i[15]||(i[15]=l=>a.isShowContent=!1)},[i[27]||(i[27]=G("div",{class:"read-enhance-icon"},[G("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round",class:"lucide lucide-book-open"},[G("path",{d:"M12 7v14"}),G("path",{d:"M3 18a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h5a4 4 0 0 1 4 4 4 4 0 0 1 4-4h5a1 1 0 0 1 1 1v13a1 1 0 0 1-1 1h-6a3 3 0 0 0-3 3 3 3 0 0 0-3-3z"})])],-1)),a.isShowContent?(hs(),us("div",WG,[i[23]||(i[23]=G("div",null," 布局切换 ",-1)),G("div",null,[G("button",{onClick:i[0]||(i[0]=l=>a.fn_mode("narrow")),class:Ps({"is-activate":a.mode=="narrow"}),title:"窄栏模式"},i[16]||(i[16]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-shrink" data-v-a8eddcfd><path d="m15 15 6 6m-6-6v4.8m0-4.8h4.8" data-v-a8eddcfd></path><path d="M9 19.8V15m0 0H4.2M9 15l-6 6" data-v-a8eddcfd></path><path d="M15 4.2V9m0 0h4.8M15 9l6-6" data-v-a8eddcfd></path><path d="M9 4.2V9m0 0H4.2M9 9 3 3" data-v-a8eddcfd></path></svg>',1)]),2),G("button",{onClick:i[1]||(i[1]=l=>a.fn_mode("side")),class:Ps({"is-activate":a.mode=="side"}),title:"两侧模式"},i[17]||(i[17]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-maximize-2" data-v-a8eddcfd><polyline points="15 3 21 3 21 9" data-v-a8eddcfd></polyline><polyline points="9 21 3 21 3 15" data-v-a8eddcfd></polyline><line x1="21" x2="14" y1="3" y2="10" data-v-a8eddcfd></line><line x1="3" x2="10" y1="21" y2="14" data-v-a8eddcfd></line></svg>',1)]),2),G("button",{onClick:i[2]||(i[2]=l=>a.fn_mode("wide")),class:Ps({"is-activate":a.mode=="wide"}),title:"宽屏模式"},i[18]||(i[18]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-expand" data-v-a8eddcfd><path d="m15 15 6 6" data-v-a8eddcfd></path><path d="m15 9 6-6" data-v-a8eddcfd></path><path d="M21 16.2V21h-4.8" data-v-a8eddcfd></path><path d="M21 7.8V3h-4.8" data-v-a8eddcfd></path><path d="M3 16.2V21h4.8" data-v-a8eddcfd></path><path d="m3 21 6-6" data-v-a8eddcfd></path><path d="M3 7.8V3h4.8" data-v-a8eddcfd></path><path d="M9 9 3 3" data-v-a8eddcfd></path></svg>',1)]),2),G("button",{onClick:i[3]||(i[3]=l=>a.fn_mode("super-wide")),class:Ps({"is-activate":a.mode=="super-wide"}),title:"超宽屏模式"},i[19]||(i[19]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-maximize" data-v-a8eddcfd><path d="M8 3H5a2 2 0 0 0-2 2v3" data-v-a8eddcfd></path><path d="M21 8V5a2 2 0 0 0-2-2h-3" data-v-a8eddcfd></path><path d="M3 16v3a2 2 0 0 0 2 2h3" data-v-a8eddcfd></path><path d="M16 21h3a2 2 0 0 0 2-2v-3" data-v-a8eddcfd></path></svg>',1)]),2)]),i[24]||(i[24]=G("div",null," 隐藏侧边栏/TOC ",-1)),G("div",null,[G("button",{onClick:i[4]||(i[4]=l=>a.fn_switchShowSidebar()),title:"侧边栏"},i[20]||(i[20]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-panel-left-dashed-icon lucide-panel-left-dashed" data-v-a8eddcfd><rect width="18" height="18" x="3" y="3" rx="2" data-v-a8eddcfd></rect><path d="M9 14v1" data-v-a8eddcfd></path><path d="M9 19v2" data-v-a8eddcfd></path><path d="M9 3v2" data-v-a8eddcfd></path><path d="M9 9v1" data-v-a8eddcfd></path></svg>',1)])),G("button",{onClick:i[5]||(i[5]=l=>a.fn_switchShowToc()),title:"TOC"},i[21]||(i[21]=[ha('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-panel-right-dashed-icon lucide-panel-right-dashed" data-v-a8eddcfd><rect width="18" height="18" x="3" y="3" rx="2" data-v-a8eddcfd></rect><path d="M15 14v1" data-v-a8eddcfd></path><path d="M15 19v2" data-v-a8eddcfd></path><path d="M15 3v2" data-v-a8eddcfd></path><path d="M15 9v1" data-v-a8eddcfd></path></svg>',1)]))]),i[25]||(i[25]=G("div",null," 背景颜色 ",-1)),G("div",null,[G("button",{onClick:i[6]||(i[6]=l=>a.fn_color("#ffffff")),class:Ps({"is-activate":a.bgColor=="#ffffff"}),title:"明亮",style:{"background-color":"#ffffff"}},null,2),G("button",{onClick:i[7]||(i[7]=l=>a.fn_color("#f8f8f2")),class:Ps({"is-activate":a.bgColor=="#f8f8f2"}),title:"非饱和白",style:{"background-color":"#f8f8f2"}},null,2),G("button",{onClick:i[8]||(i[8]=l=>a.fn_color("#faf8df")),class:Ps({"is-activate":a.bgColor=="#faf8df"}),title:"杏仁黄",style:{"background-color":"#faf8df"}},null,2),G("button",{onClick:i[9]||(i[9]=l=>a.fn_color("#cce8cf")),class:Ps({"is-activate":a.bgColor=="#cce8cf"}),title:"豆沙绿",style:{"background-color":"#cce8cf"}},null,2),i[22]||(i[22]=G("br",null,null,-1)),G("button",{onClick:i[10]||(i[10]=l=>a.fn_color("#e3edcd")),class:Ps({"is-activate":a.bgColor=="#e3edcd"}),title:"青草绿",style:{"background-color":"#e3edcd"}},null,2),G("button",{onClick:i[11]||(i[11]=l=>a.fn_color("#e9ecff")),class:Ps({"is-activate":a.bgColor=="#e9ecff"}),title:"葛巾紫",style:{"background-color":"#e9ecff"}},null,2),G("button",{onClick:i[12]||(i[12]=l=>a.fn_color("#eaeaef")),class:Ps({"is-activate":a.bgColor=="#eaeaef"}),title:"极光灰",style:{"background-color":"#eaeaef"}},null,2),G("button",{onClick:i[13]||(i[13]=l=>a.fn_color("#1f1f1f")),class:Ps({"is-activate":a.bgColor=="#1f1f1f"}),title:"非饱和黑",style:{"background-color":"#1f1f1f"}},null,2)]),i[26]||(i[26]=G("div",null,[ki(" tips: 如遇兼容问题，切换明暗模式，"),G("br"),ki("或可重复点击取选，并刷新页面 ")],-1))])):ys("v-if",!0)],32)],2112)}const YG=ai(GG,[["render",KG],["__scopeId","data-v-a8eddcfd"],["__file","ReadEnhance.vue"]]),XG=Ti({setup(){},enhance:({app:s,router:i,siteData:e})=>{s.component("ReadEnhance",YG)},layouts:{}}),ZG=Object.freeze(Object.defineProperty({__proto__:null,default:XG},Symbol.toStringTag,{value:"Module"})),JG=ts({__name:"NewLayout",setup(s,{expose:i}){i();const e={get CommonWrapper(){return ur},get NormalPage(){return Ju},get SkipLink(){return cr},get FadeSlideY(){return Bp},Backlink:e1,LocalRelationshipMap:x1,GlobalGraph:T1};return Object.defineProperty(e,"__isScriptSetup",{enumerable:!1,value:!0}),e}});function QG(s,i,e,a,n,t){const l=Ws("RootSidebar");return hs(),us(Ds,null,[Bs(a.GlobalGraph),Bs(a.SkipLink),Bs(a.CommonWrapper,null,{sidebarTop:Hs(()=>[Bs(l)]),default:Hs(()=>[Bs(a.FadeSlideY,null,{default:Hs(()=>[Bs(a.NormalPage,null,{contentAfter:Hs(()=>[Bs(a.Backlink)]),tocBefore:Hs(()=>[Bs(a.LocalRelationshipMap)]),_:1})]),_:1})]),_:1})],64)}const sW=ai(JG,[["render",QG],["__file","NewLayout.vue"]]),iW=Ti({setup(){},enhance:({app:s,router:i,siteData:e})=>{},layouts:{OldLayout:yp,Layout:sW},rootComponents:[]}),eW=Object.freeze(Object.defineProperty({__proto__:null,default:iW},Symbol.toStringTag,{value:"Module"})),Qr=[v5,F5,E5,o7,u7,f7,Db,wb,xb,H_,W_,s9,a9,A9,R9,$9,W9,Q9,DD,RD,gx,fx,Rz,$z,fG,UG,ZG,eW].map(s=>s.default).filter(Boolean),aW=JSON.parse('{"base":"/rust-course/","lang":"en-US","title":"","description":"","head":[],"locales":{"/":{"lang":"zh-CN","title":"rust-course","description":"rust-course site"}}}');var sl=Ts(aW),nW=_E,tW=()=>{const s=r5({history:nW(vu("/rust-course/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(i,e,a)=>a||(i.hash?{el:i.hash}:{top:0})});return s.beforeResolve(async(i,e)=>{if(i.path!==e.path||e===ta){const a=ne(i.fullPath);if(a.path!==i.fullPath)return a.path;const n=await a.loader();i.meta={...a.meta,_pageChunk:n}}else i.path===e.path&&(i.meta=e.meta)}),s},lW=s=>{s.component("ClientOnly",Du),s.component("Content",Z4),s.component("RouteLink",mi)},rW=(s,i,e)=>{const a=V(()=>i.currentRoute.value.path),n=ku((g,f)=>({get(){return g(),i.currentRoute.value.meta._pageChunk},set(m){i.currentRoute.value.meta._pageChunk=m,f()}})),t=V(()=>kn.resolveLayouts(e)),l=V(()=>kn.resolveRouteLocale(sl.value.locales,a.value)),r=V(()=>kn.resolveSiteLocaleData(sl.value,l.value)),h=V(()=>n.value.comp),p=V(()=>n.value.data),k=V(()=>p.value.frontmatter),d=V(()=>kn.resolvePageHeadTitle(p.value,r.value)),o=V(()=>kn.resolvePageHead(d.value,k.value,r.value)),u=V(()=>kn.resolvePageLang(p.value,r.value)),c=V(()=>kn.resolvePageLayout(p.value,t.value)),A={layouts:t,pageData:p,pageComponent:h,pageFrontmatter:k,pageHead:o,pageHeadTitle:d,pageLang:u,pageLayout:c,redirects:eo,routeLocale:l,routePath:a,routes:Jn,siteData:sl,siteLocaleData:r};return s.provide(bu,A),Object.defineProperties(s.config.globalProperties,{$frontmatter:{get:()=>k.value},$head:{get:()=>o.value},$headTitle:{get:()=>d.value},$lang:{get:()=>u.value},$page:{get:()=>p.value},$routeLocale:{get:()=>l.value},$site:{get:()=>sl.value},$siteLocale:{get:()=>r.value},$withBase:{get:()=>Gs}}),A},hW=([s,i,e=""])=>{const a=Object.entries(i).map(([r,h])=>li(h)?`[${r}=${JSON.stringify(h)}]`:h?`[${r}]`:"").join(""),n=`head > ${s}${a}`;return Array.from(document.querySelectorAll(n)).find(r=>r.innerText===e)??null},pW=([s,i,e])=>{if(!li(s))return null;const a=document.createElement(s);return er(i)&&Object.entries(i).forEach(([n,t])=>{li(t)?a.setAttribute(n,t):t&&a.setAttribute(n,"")}),li(e)&&a.appendChild(document.createTextNode(e)),a},kW=()=>{const s=k5(),i=Cu();let e=[];const a=()=>{s.value.forEach(l=>{const r=hW(l);r&&e.push(r)})},n=()=>{const l=[];return s.value.forEach(r=>{const h=pW(r);h&&l.push(h)}),l},t=()=>{document.documentElement.lang=i.value;const l=n();e.forEach((r,h)=>{const p=l.findIndex(k=>r.isEqualNode(k));p===-1?(r.remove(),delete e[h]):l.splice(p,1)}),l.forEach(r=>document.head.appendChild(r)),e=[...e.filter(r=>!!r),...l]};Di(u5,t),ws(()=>{a(),bs(s,t,{immediate:!1})})},dW=_F,oW=async()=>{var a;const s=dW({name:"Vuepress",setup(){var l;kW();for(const r of Qr)(l=r.setup)==null||l.call(r);const n=Qr.flatMap(({rootComponents:r=[]})=>r.map(h=>B(h))),t=d5();return()=>[B(t.value),n]}}),i=tW();lW(s);const e=rW(s,i,Qr);{const{setupDevtools:n}=await F(async()=>{const{setupDevtools:t}=await import("./setupDevtools-QXEOFQJV-BSoAP_Gt.js");return{setupDevtools:t}},[]);n(s,e)}for(const n of Qr)await((a=n.enhance)==null?void 0:a.call(n,{app:s,router:i,siteData:sl}));return s.use(i),{app:s,router:i}};oW().then(({app:s,router:i})=>{i.isReady().then(()=>{s.mount("#app")})});export{qp as $,f8 as A,oD as B,l7 as C,pD as D,kD as E,cW as F,er as G,dD as H,h7 as I,hD as J,y8 as K,Bi as L,Ts as M,ws as N,aD as O,Tu as P,te as Q,mi as R,rp as S,_i as T,Q5 as U,li as V,Sl as W,KU as X,ua as Y,sG as Z,ai as _,r7 as a,F as a0,m$ as a1,ge as a2,p7 as b,k7 as c,oW as createVueApp,l3 as d,us as e,ha as f,G as g,ki as h,Bs as i,Hs as j,ys as k,ts as l,Be as m,Ke as n,hs as o,Ya as p,Q as q,Ws as r,JC as s,Ms as t,De as u,V as v,bs as w,B as x,gp as y,Is as z};
