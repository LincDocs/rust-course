import{_ as i,e,k as t,o as a}from"./app-Ca5AIWu9.js";const n={};function r(l,s){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="rust-新版解读-1-81-expect-lint" tabindex="-1"><a class="header-anchor" href="#rust-新版解读-1-81-expect-lint"><span>Rust 新版解读 | 1.81 | <code>expect</code> lint</span></a></h1><blockquote><p>Rust 1.81 官方 release doc: <a href="https://blog.rust-lang.org/2024/09/05/Rust-1.81.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.81.0 | Rust Blog</a></p></blockquote><p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.81 版本:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stable</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="core-error-error" tabindex="-1"><a class="header-anchor" href="#core-error-error"><span><code>core::error::Error</code></span></a></h2><p>1.81 版本稳定了 <code>core::error::Error</code> trait，允许在 core 中使用 Error trait，使得库可以在 #![no_std] 环境中使用。这主要是为了让 Rust 生态系统能够在不同的环境中标准化相同的 Error trait，无论库的目标环境是什么。</p><h2 id="新的排序实现" tabindex="-1"><a class="header-anchor" href="#新的排序实现"><span>新的排序实现</span></a></h2><p>标准库中的稳定和不稳定排序实现都已更新为新算法，提高了运行时性能和编译时间。</p><p>此外，新的排序算法都会尝试检测 <code>Ord</code> 的不正确实现，这些实现会阻止它们能够产生有意义的排序结果，并且现在会在这些情况下 panic，而不是返回实际上是随机排列的数据。遇到这些 panic 的用户应该审查他们的排序实现，以确保它们满足 <a href="https://doc.rust-lang.org/nightly/std/cmp/trait.PartialOrd.html" target="_blank" rel="noopener noreferrer"><code>PartialOrd</code></a> 和 <a href="https://doc.rust-lang.org/nightly/std/cmp/trait.Ord.html" target="_blank" rel="noopener noreferrer"><code>Ord</code></a> 的要求。</p><h2 id="expect-lint" tabindex="-1"><a class="header-anchor" href="#expect-lint"><span><code>#[expect(lint)]</code></span></a></h2><p>1.81 版本引入了一个新的 lint 级别 <code>expect</code>，允许显式地指定一个特定的 lint <strong>应该发生</strong>，并在没有发生时发出警告。这个功能的预期用例是暂时消除一个 lint，无论是由于 lint 实现错误还是正在进行的重构，同时希望在不再需要 lint 时得到通知。</p><p>例如，如果您正在移动代码库以符合通过 Clippy lint 强制执行的新限制，比如 <a href="https://rust-lang.github.io/rust-clippy/stable/index.html#/undocumented_unsafe_blocks" target="_blank" rel="noopener noreferrer"><code>undocumented_unsafe_blocks</code></a>，您可以在过渡期间使用 <code>#[expect(clippy::undocumented_unsafe_blocks)]</code>，确保一旦所有的 unsafe 块都被文档化，您可以选择拒绝 lint 以强制执行它。</p><p>Clippy 还有两个 lint 来强制使用这个特性，并帮助迁移现有的属性：</p><p><a href="https://rust-lang.github.io/rust-clippy/master/index.html#/allow_attributes" target="_blank" rel="noopener noreferrer"><code>clippy::allow_attributes</code></a> 限制 <code>#[allow]</code> 属性，鼓励使用 <code>#[expect]</code> 或将 <code>#[allow]</code> 属性迁移到 <code>#[expect]</code><br><a href="https://rust-lang.github.io/rust-clippy/master/index.html#/allow_attributes_without_reason" target="_blank" rel="noopener noreferrer"><code>clippy::allow_attributes_without_reason</code></a> 要求为 <code>#[allow]</code> 属性提供原因</p><h2 id="lint-reasons" tabindex="-1"><a class="header-anchor" href="#lint-reasons"><span><code>Lint reasons</code></span></a></h2><p>更改 lint 级别通常是出于某种特定原因。例如，如果代码在没有浮点支持的环境中运行，您可以使用 Clippy 如 <code>#![deny(clippy::float_arithmetic)]</code> 来阻止此类使用。然而，如果项目中的新开发人员看到这个 lint，他们可能需要在 deny 的注释里（如果有的话）寻找原因。从 Rust 1.81 开始，他们可以直接在编译器消息中得到通知：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> floating-point</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arithmetic</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> detected</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> --</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">src/lib.rs:4:5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |     </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |     </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">^^^^^</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> help:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> further</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> information</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> visit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> note:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> no</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hardware</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> float</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> support</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">note:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> lint</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> level</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> defined</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> here</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> --</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">src/lib.rs:1:9</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#![deny(clippy::float_arithmetic, reason = &quot;no hardware float support&quot;)]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |         </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">^^^^^^^^^^^^^^^^^^^^^^^^</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others"><span>Others</span></a></h2><p>其它更新细节，和稳定的 API 列表，参考<a href="https://blog.rust-lang.org/2024/09/05/Rust-1.81.0.html#stabilized-apis" target="_blank" rel="noopener noreferrer">原Blog</a></p>`,19)]))}const h=i(n,[["render",r],["__file","1.81.html.vue"]]),o=JSON.parse('{"path":"/appendix/rust-versions/1.81.html","title":"Rust 新版解读 | 1.81 | expect lint","lang":"zh-CN","frontmatter":{"description":"Rust 新版解读 | 1.81 | expect lint Rust 1.81 官方 release doc: Announcing Rust 1.81.0 | Rust Blog 通过 rustup 安装的同学可以使用以下命令升级到 1.81 版本: core::error::Error 1.81 版本稳定了 core::error::Error ...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/appendix/rust-versions/1.81.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:title","content":"Rust 新版解读 | 1.81 | expect lint"}],["meta",{"property":"og:description","content":"Rust 新版解读 | 1.81 | expect lint Rust 1.81 官方 release doc: Announcing Rust 1.81.0 | Rust Blog 通过 rustup 安装的同学可以使用以下命令升级到 1.81 版本: core::error::Error 1.81 版本稳定了 core::error::Error ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Rust 新版解读 | 1.81 | expect lint\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.33,"words":700},"filePathRelative":"appendix/rust-versions/1.81.md","excerpt":"\\n<blockquote>\\n<p>Rust 1.81 官方 release doc: <a href=\\"https://blog.rust-lang.org/2024/09/05/Rust-1.81.0.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Announcing Rust 1.81.0 | Rust Blog</a></p>\\n</blockquote>\\n<p>通过 <a href=\\"https://www.rust-lang.org/tools/install\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">rustup</a> 安装的同学可以使用以下命令升级到 1.81 版本:</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"appendix/rust-versions/1.81.md","value":{"title":"1.81","path":"appendix/rust-versions/1.81.md","outlink":[],"backlink":["SUMMARY.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"appendix/rust-versions/1.81.md"}]}}}');export{h as comp,o as data};
