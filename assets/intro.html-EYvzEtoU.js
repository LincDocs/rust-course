import{_ as e,e as o,k as c,o as a}from"./app-Jcta1ofV.js";const n={};function i(r,t){return a(),o("div",null,t[0]||(t[0]=[c('<h1 id="模式匹配" tabindex="-1"><a class="header-anchor" href="#模式匹配"><span>模式匹配</span></a></h1><p>模式匹配，这个词，对于非函数语言编程来说，真的还蛮少听到，因为它经常出现在函数式编程里，用于为复杂的类型系统提供一个轻松的解构能力。</p><p>曾记否？在枚举和流程控制那章，我们遗留了两个问题，都是关于 <code>match</code> 的，第一个是如何对 <code>Option</code> 枚举进行进一步处理，另外一个是如何用 <code>match</code> 来替代 <code>else if</code> 这种丑陋的多重分支使用方式。那么让我们先一起来揭开 <code>match</code> 的神秘面纱。</p>',3)]))}const s=e(n,[["render",i],["__file","intro.html.vue"]]),d=JSON.parse('{"path":"/basic/match-pattern/intro.html","title":"模式匹配","lang":"zh-CN","frontmatter":{"description":"模式匹配 模式匹配，这个词，对于非函数语言编程来说，真的还蛮少听到，因为它经常出现在函数式编程里，用于为复杂的类型系统提供一个轻松的解构能力。 曾记否？在枚举和流程控制那章，我们遗留了两个问题，都是关于 match 的，第一个是如何对 Option 枚举进行进一步处理，另外一个是如何用 match 来替代 else if 这种丑陋的多重分支使用方式。那...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/basic/match-pattern/intro.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:title","content":"模式匹配"}],["meta",{"property":"og:description","content":"模式匹配 模式匹配，这个词，对于非函数语言编程来说，真的还蛮少听到，因为它经常出现在函数式编程里，用于为复杂的类型系统提供一个轻松的解构能力。 曾记否？在枚举和流程控制那章，我们遗留了两个问题，都是关于 match 的，第一个是如何对 Option 枚举进行进一步处理，另外一个是如何用 match 来替代 else if 这种丑陋的多重分支使用方式。那..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模式匹配\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{},"readingTime":{"minutes":0.51,"words":153},"filePathRelative":"basic/match-pattern/intro.md","excerpt":"\\n<p>模式匹配，这个词，对于非函数语言编程来说，真的还蛮少听到，因为它经常出现在函数式编程里，用于为复杂的类型系统提供一个轻松的解构能力。</p>\\n<p>曾记否？在枚举和流程控制那章，我们遗留了两个问题，都是关于 <code>match</code> 的，第一个是如何对 <code>Option</code> 枚举进行进一步处理，另外一个是如何用 <code>match</code> 来替代 <code>else if</code> 这种丑陋的多重分支使用方式。那么让我们先一起来揭开 <code>match</code> 的神秘面纱。</p>\\n","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"basic/match-pattern/intro.md","value":{"title":"intro","path":"basic/match-pattern/intro.md","outlink":[],"backlink":["SUMMARY.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"basic/match-pattern/intro.md"}]}}}');export{s as comp,d as data};
