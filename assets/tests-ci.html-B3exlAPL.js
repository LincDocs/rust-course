import{_ as i,e as a,k as n,o as e}from"./app-CxovID3O.js";const l={};function t(h,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="测试和-ci" tabindex="-1"><a class="header-anchor" href="#测试和-ci"><span>测试和 CI</span></a></h1><p>Cargo 可以通过 <code>cargo test</code> 命令运行项目中的测试文件：它会在 <code>src/</code> 底下的文件寻找单元测试，也会在 <code>tests/</code> 目录下寻找集成测试。</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cargo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> test</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">   Compiling</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> regex</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">https</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//github.com/rust-lang/regex.git#9f9f693)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">   Compiling</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> hello_world</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> v0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">///path/to/package/hello_world)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">     Running</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">hello_world</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">9c2b65bbb79eabce</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">running</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> tests</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">test</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">. </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> passed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> failed</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ignored</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> measured</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> filtered</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> out</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面结果可以看出，项目中实际上还没有任何测试代码。</p><p>事实上，除了单元测试、集成测试，<code>cargo test</code> 还会编译 <code>examples/</code> 下的示例文件以及<a href="https://course.rs/basic/comment.html#%E6%96%87%E6%A1%A3%E6%B5%8B%E8%AF%95doc-test" target="_blank" rel="noopener noreferrer">文档中的示例</a>。</p><p>如果希望深入学习如何在 Rust 编写及运行测试，请查阅<a href="https://course.rs/test/intro.html" target="_blank" rel="noopener noreferrer">该章节</a>。</p><h2 id="ci" tabindex="-1"><a class="header-anchor" href="#ci"><span>CI</span></a></h2><p>持续集成是软件开发中异常重要的一环，大家应该都听说过 Jenkins，它就是一个拥有悠久历史的持续集成工具。简单来说，持续集成会定期拉取同一个项目中所有成员的相关代码，对其进行自动化构建。</p><p>在没有持续集成前，首先开发者需要手动编译代码并运行单元测试、集成测试等基础测试，然后启动项目相关的所有服务，接着测试人员开始介入对整个项目进行回归测试、黑盒测试等系统化的测试，当测试通过后，最后再手动发布到指定的环境中运行，这个过程是非常冗长，且所有成员都需要同时参与的。</p><p>在有了持续集成后，只要编写好相应的编译、测试、发布配置文件，那持续集成平台会自动帮助我们完成整个相关的流程，期间无需任何人介入，高效且可靠。</p><h4 id="github-actions" tabindex="-1"><a class="header-anchor" href="#github-actions"><span>GitHub Actions</span></a></h4><p>关于如何使用 <code>GitHub Actions</code> 进行持续集成，在<a href="https://course.rs/test/ci.html" target="_blank" rel="noopener noreferrer">之前的章节</a>已经有过详细的介绍，这里就不再赘述。</p><h4 id="travis-ci" tabindex="-1"><a class="header-anchor" href="#travis-ci"><span>Travis CI</span></a></h4><p>以下是 <code>Travis CI</code> 需要的一个简单的示例配置文件:</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">language</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rust</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">stable</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">beta</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nightly</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">matrix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  allow_failures</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rust</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nightly</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上配置将测试所有的 <a href="https://course.rs/appendix/rust-version.html" target="_blank" rel="noopener noreferrer">Rust 发布版本</a>，但是 <code>nightly</code> 版本的构建失败不会导致全局测试的失败，可以查看 <a href="https://docs.travis-ci.com/user/languages/rust/" target="_blank" rel="noopener noreferrer">Travis CI Rust 文档</a> 获取更详细的说明。</p><h4 id="gitlab-ci" tabindex="-1"><a class="header-anchor" href="#gitlab-ci"><span>Gitlab CI</span></a></h4><p>以下是一个示例 <code>.gitlab-ci.yml</code> 文件:</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rust-latest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  stage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">build</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rust:latest</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cargo build --verbose</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cargo test --verbose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rust-nightly</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  stage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">build</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">rustlang/rust:nightly</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cargo build --verbose</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cargo test --verbose</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  allow_failure</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里将测试 <code>stable</code> 和 <code>nightly</code> 发布版本，同样的，<code>nightly</code> 下的测试失败不会导致全局测试的失败。查看 <a href="https://docs.gitlab.com/ee/ci/yaml/index.html" target="_blank" rel="noopener noreferrer">Gitlab CI 文档</a> 获取更详细的说明。</p>`,20)]))}const p=i(l,[["render",t],["__file","tests-ci.html.vue"]]),r=JSON.parse('{"path":"/cargo/guide/tests-ci.html","title":"测试和 CI","lang":"zh-CN","frontmatter":{"description":"测试和 CI Cargo 可以通过 cargo test 命令运行项目中的测试文件：它会在 src/ 底下的文件寻找单元测试，也会在 tests/ 目录下寻找集成测试。 从上面结果可以看出，项目中实际上还没有任何测试代码。 事实上，除了单元测试、集成测试，cargo test 还会编译 examples/ 下的示例文件以及文档中的示例。 如果希望深入学...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/cargo/guide/tests-ci.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:title","content":"测试和 CI"}],["meta",{"property":"og:description","content":"测试和 CI Cargo 可以通过 cargo test 命令运行项目中的测试文件：它会在 src/ 底下的文件寻找单元测试，也会在 tests/ 目录下寻找集成测试。 从上面结果可以看出，项目中实际上还没有任何测试代码。 事实上，除了单元测试、集成测试，cargo test 还会编译 examples/ 下的示例文件以及文档中的示例。 如果希望深入学..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"测试和 CI\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.25,"words":676},"filePathRelative":"cargo/guide/tests-ci.md","excerpt":"\\n<p>Cargo 可以通过 <code>cargo test</code> 命令运行项目中的测试文件：它会在 <code>src/</code> 底下的文件寻找单元测试，也会在 <code>tests/</code> 目录下寻找集成测试。</p>\\n<div class=\\"language-rust line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"rust\\" data-title=\\"rust\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">$ </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">cargo</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> test</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#E5C07B\\">   Compiling</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> regex</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> v1</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">5.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">https</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">//github.com/rust-lang/regex.git#9f9f693)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#E5C07B\\">   Compiling</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> hello_world</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> v0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">file</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">///path/to/package/hello_world)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#E5C07B\\">     Running</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> target</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">test</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">/</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">hello_world</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">-</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">9c2b65bbb79eabce</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">running</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 0</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> tests</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">test</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> result</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">: </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">ok</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">. </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> passed</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> failed</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> ignored</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> measured</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">0</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> filtered</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> out</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"SUMMARY.html"}],"localMap":{"nodes":[{"id":"cargo/guide/tests-ci.md","value":{"title":"tests-ci","path":"cargo/guide/tests-ci.md","outlink":[],"backlink":["SUMMARY.md"]}},{"id":"SUMMARY.md","value":{"title":"SUMMARY","path":"SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"SUMMARY.md","target":"cargo/guide/tests-ci.md"}]}}}');export{p as comp,r as data};
