import{_ as i,e as a,f as e,o as t}from"./app-DFfX2bp8.js";const n={};function r(h,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="rust-新版解读-1-77-异步函数支持递归" tabindex="-1"><a class="header-anchor" href="#rust-新版解读-1-77-异步函数支持递归"><span>Rust 新版解读 | 1.77 | 异步函数支持递归</span></a></h1><blockquote><p>Rust 1.77 官方 release doc: <a href="https://blog.rust-lang.org/2024/03/21/Rust-1.77.0.html" target="_blank" rel="noopener noreferrer">Announcing Rust 1.77.0 | Rust Blog</a></p></blockquote><p>通过 <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noopener noreferrer">rustup</a> 安装的同学可以使用以下命令升级到 1.77 版本:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> rustup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stable</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="c-字符串字面量" tabindex="-1"><a class="header-anchor" href="#c-字符串字面量"><span>C 字符串字面量</span></a></h2><p>Rust 现在支持 C 字符串字面量（<code>c&quot;abc&quot;</code>），这些字面量会在内存中扩展为类型为 <code>&amp;&#39;static CStr</code> 的字符串，且有 <code>\\0</code> (nul-byte) 作为终止符。</p><p>这使得编写与需要用到这类具有终止符的字符串的外部语言接口进行交互的代码更容易，所有相关的错误检查（例如，缺少 nul-byte ）都在编译时执行。</p><h2 id="支持递归调用-async-fn" tabindex="-1"><a class="header-anchor" href="#支持递归调用-async-fn"><span>支持递归调用 <code>async fn</code></span></a></h2><p>之前对于一个异步函数的递归调用，编译器会报错并推荐你使用 <a href="https://crates.io/crates/async_recursion" target="_blank" rel="noopener noreferrer">crate: async_recursion</a>。</p><p>现在，这个限制已经被解除，且编译器会提示你使用一些间接的方式来避免函数状态的无限制增加。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error[E0733]:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> recursion</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> async</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requires</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> boxing</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">note:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> recursive</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">async</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fn\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> call</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> must</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> introduce</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> indirection</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> such</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> as</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Box::pin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> avoid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> infinitely</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sized</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> future</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>由此可以正常使用下述代码了：</p><div class="language-rust line-numbers-mode" data-highlighter="shiki" data-ext="rust" data-title="rust" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> fn</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">u32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   match</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">       0</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> |</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">       _</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> + </span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;">Box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">::</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">fib</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">await</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="宏-offset-of" tabindex="-1"><a class="header-anchor" href="#宏-offset-of"><span>宏 <code>offset_of!</code></span></a></h2><p>1.77 版本稳定了 <a href="https://doc.rust-lang.org/stable/std/mem/macro.offset_of.html" target="_blank" rel="noopener noreferrer"><code>offset_of!</code></a> 宏，用于获取结构体字段的字节偏移量，这个宏在需要获取字段的偏移量但没有实例的情况下非常有用。在稳定之前，实现这样的宏需要使用复杂的不安全代码，很容易引入未定义行为。</p><p>用户现在可以使用 <code>offset_of!(StructName, field)</code> 来获取公共字段的偏移量。这会展开为一个 <code>usize</code> 表达式，表示从结构体开始的字节偏移量。</p><h2 id="cargo-profiles-默认启用-strip" tabindex="-1"><a class="header-anchor" href="#cargo-profiles-默认启用-strip"><span>Cargo profiles 默认启用 strip</span></a></h2><p>Cargo profiles 不在输出中启用 <a href="https://doc.rust-lang.org/stable/cargo/reference/profiles.html#debug" target="_blank" rel="noopener noreferrer">debuginfo</a>（例如，debug = 0）的情况下，将默认启用 strip = &quot;debuginfo&quot;。</p><p>这主要是因为（预编译的）标准库附带了 debuginfo，这意味着即使本地编译没有显式请求 debuginfo，静态链接的结果也会包含标准库的 debuginfo。</p><p>想要 debuginfo 的用户可以在相关的 <a href="https://doc.rust-lang.org/stable/cargo/reference/profiles.html#debug" target="_blank" rel="noopener noreferrer">Cargo profile</a> 中显式启用它。</p><h2 id="others" tabindex="-1"><a class="header-anchor" href="#others"><span>Others</span></a></h2><p>其它更新细节，和稳定的API列表，参考<a href="https://blog.rust-lang.org/2024/03/21/Rust-1.77.0.html#stabilized-apis" target="_blank" rel="noopener noreferrer">原Blog</a></p>`,22)]))}const p=i(n,[["render",r],["__file","1.77.html.vue"]]),k=JSON.parse('{"path":"/src/appendix/rust-versions/1.77.html","title":"Rust 新版解读 | 1.77 | 异步函数支持递归","lang":"zh-CN","frontmatter":{"description":"Rust 新版解读 | 1.77 | 异步函数支持递归 Rust 1.77 官方 release doc: Announcing Rust 1.77.0 | Rust Blog 通过 rustup 安装的同学可以使用以下命令升级到 1.77 版本: C 字符串字面量 Rust 现在支持 C 字符串字面量（c\\"abc\\"），这些字面量会在内存中扩展为类型为...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/src/appendix/rust-versions/1.77.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:title","content":"Rust 新版解读 | 1.77 | 异步函数支持递归"}],["meta",{"property":"og:description","content":"Rust 新版解读 | 1.77 | 异步函数支持递归 Rust 1.77 官方 release doc: Announcing Rust 1.77.0 | Rust Blog 通过 rustup 安装的同学可以使用以下命令升级到 1.77 版本: C 字符串字面量 Rust 现在支持 C 字符串字面量（c\\"abc\\"），这些字面量会在内存中扩展为类型为..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-24T15:57:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T15:57:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Rust 新版解读 | 1.77 | 异步函数支持递归\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-24T15:57:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{"createdTime":1745510270000,"updatedTime":1745510270000,"contributors":[{"name":"Linc","username":"Linc","email":"762699299@qq.com","commits":1,"url":"https://github.com/Linc"}]},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"src/appendix/rust-versions/1.77.md","localizedDate":"2025年4月24日","excerpt":"\\n<blockquote>\\n<p>Rust 1.77 官方 release doc: <a href=\\"https://blog.rust-lang.org/2024/03/21/Rust-1.77.0.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Announcing Rust 1.77.0 | Rust Blog</a></p>\\n</blockquote>\\n<p>通过 <a href=\\"https://www.rust-lang.org/tools/install\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">rustup</a> 安装的同学可以使用以下命令升级到 1.77 版本:</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"SUMMARY","link":"src/SUMMARY.html"}],"localMap":{"nodes":[{"id":"src/appendix/rust-versions/1.77.md","value":{"title":"1.77","path":"src/appendix/rust-versions/1.77.md","outlink":[],"backlink":["src/SUMMARY.md"]}},{"id":"src/SUMMARY.md","value":{"title":"SUMMARY","path":"src/SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"src/SUMMARY.md","target":"src/appendix/rust-versions/1.77.md"}]}}}');export{p as comp,k as data};
