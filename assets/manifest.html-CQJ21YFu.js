import{_ as r,e as o,g as i,f as a,h as s,i as n,j as t,r as d,o as h}from"./app-DFfX2bp8.js";const c={};function p(k,e){const l=d("RouteLink");return h(),o("div",null,[e[22]||(e[22]=i("h1",{id:"cargo-toml-格式讲解",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#cargo-toml-格式讲解"},[i("span",null,"Cargo.toml 格式讲解")])],-1)),e[23]||(e[23]=i("p",null,[i("code",null,"Cargo.toml"),s(" 又被称为清单( "),i("code",null,"manifest"),s(" )，文件格式是 "),i("code",null,"TOML"),s("，每一个清单文件都由以下部分组成：")],-1)),i("ul",null,[i("li",null,[n(l,{to:"/src/cargo/reference/unstable.html"},{default:t(()=>e[0]||(e[0]=[i("code",null,"cargo-features",-1)])),_:1}),e[1]||(e[1]=s(" — 只能用于 ")),e[2]||(e[2]=i("code",null,"nightly",-1)),e[3]||(e[3]=s("版本的 ")),e[4]||(e[4]=i("code",null,"feature",-1))]),i("li",null,[e[8]||(e[8]=i("a",{href:"#package"},[i("code",null,"[package]")],-1)),e[9]||(e[9]=s(" — 定义项目( ")),e[10]||(e[10]=i("code",null,"package",-1)),e[11]||(e[11]=s(" )的元信息 ")),i("ul",null,[e[7]||(e[7]=a('<li><a href="#name"><code>name</code></a> — 名称</li><li><a href="#version"><code>version</code></a> — 版本</li><li><a href="#authors"><code>authors</code></a> — 开发作者</li><li><a href="#edition"><code>edition</code></a> — Rust edition.</li><li><a href="#rust-version"><code>rust-version</code></a> — 支持的最小化 Rust 版本</li><li><a href="#description"><code>description</code></a> — 描述</li><li><a href="#documentation"><code>documentation</code></a> — 文档 URL</li><li><a href="#readme"><code>readme</code></a> — README 文件的路径</li><li><a href="#homepage"><code>homepage</code></a> - 主页 URL</li><li><a href="#repository"><code>repository</code></a> — 源代码仓库的 URL</li><li><a href="#license%E5%92%8Clicense-file"><code>license</code></a> — 开源协议 License.</li><li><a href="#license%E5%92%8Clicense-file"><code>license-file</code></a> — License 文件的路径.</li><li><a href="#keywords"><code>keywords</code></a> — 项目的关键词</li><li><a href="#categories"><code>categories</code></a> — 项目分类</li><li><a href="#workspace"><code>workspace</code></a> — 工作空间 workspace 的路径</li><li><a href="#build"><code>build</code></a> — 构建脚本的路径</li><li><a href="#links"><code>links</code></a> — 本地链接库的名称</li><li><a href="#exclude%E5%92%8Cinclude"><code>exclude</code></a> — 发布时排除的文件</li><li><a href="#exclude%E5%92%8Cinclude"><code>include</code></a> — 发布时包含的文件</li><li><a href="#the-publish-field"><code>publish</code></a> — 用于阻止项目的发布</li><li><a href="#metadata"><code>metadata</code></a> — 额外的配置信息，用于提供给外部工具</li><li><a href="#default-run"><code>default-run</code></a> — [<code>cargo run</code>] 所使用的默认可执行文件( binary )</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autobins</code></a> — 禁止可执行文件的自动发现</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autoexamples</code></a> — 禁止示例文件的自动发现</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autotests</code></a> — 禁止测试文件的自动发现</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0" target="_blank" rel="noopener noreferrer"><code>autobenches</code></a> — 禁止 bench 文件的自动发现</li>',26)),i("li",null,[n(l,{to:"/src/cargo/reference/resolver.html#resolver-versions"},{default:t(()=>e[5]||(e[5]=[i("code",null,"resolver",-1)])),_:1}),e[6]||(e[6]=s(" — 设置依赖解析器( dependency resolver)"))])])]),e[12]||(e[12]=a('<li>Cargo Target 列表: (查看 <a href="https://course.rs/cargo/reference/cargo-target.html#Target%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener noreferrer">Target 配置</a> 获取详细设置) <ul><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%BA%93%E5%AF%B9%E8%B1%A1library" target="_blank" rel="noopener noreferrer"><code>[lib]</code></a> — Library target 设置.</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AF%B9%E8%B1%A1binaries" target="_blank" rel="noopener noreferrer"><code>[[bin]]</code></a> — Binary target 设置.</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E7%A4%BA%E4%BE%8B%E5%AF%B9%E8%B1%A1examples" target="_blank" rel="noopener noreferrer"><code>[[example]]</code></a> — Example target 设置.</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E6%B5%8B%E8%AF%95%E5%AF%B9%E8%B1%A1tests" target="_blank" rel="noopener noreferrer"><code>[[test]]</code></a> — Test target 设置.</li><li><a href="https://course.rs/cargo/reference/cargo-target.html#%E5%9F%BA%E5%87%86%E6%80%A7%E8%83%BD%E5%AF%B9%E8%B1%A1benches" target="_blank" rel="noopener noreferrer"><code>[[bench]]</code></a> — Benchmark target 设置.</li></ul></li><li>Dependency tables: <ul><li><a href="https://course.rs/cargo/reference/specify-deps.html" target="_blank" rel="noopener noreferrer"><code>[dependencies]</code></a> — 项目依赖包</li><li><a href="https://course.rs/cargo/reference/specify-deps.html#dev-dependencies" target="_blank" rel="noopener noreferrer"><code>[dev-dependencies]</code></a> — 用于 examples、tests 和 benchmarks 的依赖包</li><li><a href="https://course.rs/cargo/reference/specify-deps.html#build-dependencies" target="_blank" rel="noopener noreferrer"><code>[build-dependencies]</code></a> — 用于构建脚本的依赖包</li><li><a href="https://course.rs/cargo/reference/specify-deps.html#%E6%A0%B9%E6%8D%AE%E5%B9%B3%E5%8F%B0%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96" target="_blank" rel="noopener noreferrer"><code>[target]</code></a> — 平台特定的依赖包</li></ul></li><li><a href="#badges"><code>[badges]</code></a> — 用于在注册服务(例如 crates.io ) 上显示项目的一些状态信息，例如当前的维护状态：活跃中、寻找维护者、deprecated</li><li><a href="https://course.rs/cargo/reference/features/intro.html" target="_blank" rel="noopener noreferrer"><code>[features]</code></a> — <code>features</code> 可以用于条件编译</li><li><a href="https://course.rs/cargo/reference/deps-overriding.html" target="_blank" rel="noopener noreferrer"><code>[patch]</code></a> — 推荐使用的依赖覆盖方式</li><li><a href="https://course.rs/cargo/reference/deps-overriding.html#%E4%B8%8D%E6%8E%A8%E8%8D%90%E7%9A%84replace" target="_blank" rel="noopener noreferrer"><code>[replace]</code></a> — 不推荐使用的依赖覆盖方式 (deprecated).</li><li><a href="https://course.rs/cargo/reference/profiles.html" target="_blank" rel="noopener noreferrer"><code>[profile]</code></a> — 编译器设置和优化</li><li><a href="https://course.rs/cargo/reference/workspaces.html" target="_blank" rel="noopener noreferrer"><code>[workspace]</code></a> — 工作空间的定义</li>',8))]),e[24]||(e[24]=a(`<p>下面，我们将对其中一些部分进行详细讲解。</p><h2 id="package" tabindex="-1"><a class="header-anchor" href="#package"><span>[package]</span></a></h2><p><code>Cargo.toml</code> 中第一个部分就是 <code>package</code>，用于设置项目的相关信息：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello_world&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # the name of the package</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.1.0&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # the current version, obeying semver</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">authors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Alice &lt;a@example.com&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Bob &lt;b@example.com&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),i("p",null,[e[14]||(e[14]=s("其中，只有 ")),e[15]||(e[15]=i("code",null,"name",-1)),e[16]||(e[16]=s(" 和 ")),e[17]||(e[17]=i("code",null,"version",-1)),e[18]||(e[18]=s(" 字段是")),e[19]||(e[19]=i("strong",null,"必须填写的",-1)),e[20]||(e[20]=s("。当发布到注册服务时，可能会有额外的字段要求，具体参见")),n(l,{to:"/src/cargo/reference/publishing-on-crates.io.html"},{default:t(()=>e[13]||(e[13]=[s("发布到 crates.io")])),_:1}),e[21]||(e[21]=s("。"))]),e[25]||(e[25]=a(`<h4 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h4><p>项目名用于引用一个项目( <code>package</code> )，它有几个用途：</p><ul><li>其它项目引用我们的 <code>package</code> 时，会使用该 <code>name</code></li><li>编译出的可执行文件(bin target)的默认名称</li></ul><p><code>name</code> 只能使用 <a href="https://doc.rust-lang.org/stable/std/primitive.char.html#method.is_alphanumeric" target="_blank" rel="noopener noreferrer"><code>alphanumeric</code></a> 字符、 <code>-</code> 和 <code>_</code>，并且不能为空。</p><p>事实上，<code>name</code> 的限制不止如此，例如:</p><ul><li><strong>当使用 <code>cargo new</code> 或 <code>cargo init</code> 创建时</strong>，<code>name</code> 还会被施加额外的限制，例如不能使用 Rust 关键字名称作为 <code>name</code></li><li><strong>如果要发布到 <code>crates.io</code> ，那还有更多的限制</strong>: <code>name</code> 使用 <code>ASCII</code> 码，不能使用已经被使用的名称，例如 <code>uuid</code> 已经在 <code>crates.io</code> 上被使用，因此我们只能使用类如 <code>uuid_v1</code> 的名称，才能将项目发布到 <code>crates.io</code> 上</li></ul><h4 id="version" tabindex="-1"><a class="header-anchor" href="#version"><span>version</span></a></h4><p>Cargo 使用了<a href="https://semver.org" target="_blank" rel="noopener noreferrer">语义化版本控制</a>的概念，例如字符串 <code>&quot;0.1.12&quot;</code> 是一个 <code>semver</code> 格式的版本号，符合 <code>&quot;x.y.z&quot;</code> 的形式，其中 <code>x</code> 被称为主版本<code>major</code>, <code>y</code> 被称为小版本 <code>minor</code> ，而 <code>z</code> 被称为补丁 <code>patch</code>，可以看出从左到右，版本的影响范围逐步降低，补丁的更新是无关痛痒的，并不会造成 API 的兼容性被破坏。</p><p>使用该规则，你还需要遵循一些基本规则:</p><ul><li>使用标准的 <code>x.y.z</code> 形式的版本号，例如 <code>1.0.0</code> 而不是 <code>1.0</code></li><li>在版本到达 <code>1.0.0</code> 之前，怎么都行，但是如果有破坏性变更( breaking changes )，需要增加 <code>minor</code> 版本号。例如，为结构体新增字段或为枚举新增成员就是一种破坏性变更</li><li>在 <code>1.0.0</code> 之后，如果发生破坏性变更，需要增加 <code>major</code> 版本号</li><li>在 <code>1.0.0</code> 之后不要去破坏构建流程</li><li>在 <code>1.0.0</code> 之后，不要在 <code>patch</code> 更新中添加新的 <code>api</code> ( <code>pub</code> 声明)，如果要添加新的 <code>pub</code> 结构体、特征、类型、函数、方法等对象时，增加 <code>minor</code> 版本号</li></ul><p>如果大家想知道 Rust 如何使用版本号来解析依赖，可以查看<a href="https://doc.rust-lang.org/stable/cargo/reference/resolver.html" target="_blank" rel="noopener noreferrer">这里</a>。同时 <a href="https://doc.rust-lang.org/stable/cargo/reference/semver.html" target="_blank" rel="noopener noreferrer">SemVer 兼容性</a> 提供了更为详尽的破坏性变更列表。</p><h4 id="authors" tabindex="-1"><a class="header-anchor" href="#authors"><span>authors</span></a></h4><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">authors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Sunfei &lt;contact@im.dev&gt;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>该字段仅用于项目的元信息描述和 <code>build.rs</code> 用到的 <code>CARGO_PKG_AUTHORS</code> 环境变量，它并不会显示在 <code>crates.io</code> 界面上。</p><blockquote><p>警告：清单中的 <code>[package]</code> 部分一旦发布到 <code>crates.io</code> 就无法进行更改，因此对于已发布的包来说，<code>authors</code> 字段是无法修改的</p></blockquote><h4 id="edition" tabindex="-1"><a class="header-anchor" href="#edition"><span>edition</span></a></h4><p>可选字段，用于指定项目所使用的 <a href="https://course.rs/appendix/rust-version.html" target="_blank" rel="noopener noreferrer">Rust Edition</a>。</p><p>该配置将影响项目中的所有 <code>Cargo Target</code> 和包，前者包含测试用例、benchmark、可执行文件、示例等。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">edition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;2021&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大多数时候，我们都无需手动指定，因为 <code>cargo new</code> 的时候，会自动帮我们添加。若 <code>edition</code> 配置不存在，那 <code>2015 Edition</code> 会被默认使用。</p><h4 id="rust-version" tabindex="-1"><a class="header-anchor" href="#rust-version"><span>rust-version</span></a></h4><p>可选字段，用于说明你的项目支持的最低 Rust 版本(编译器能顺利完成编译)。一旦你使用的 Rust 版本比这个字段设置的要低，<code>Cargo</code> 就会报错，然后告诉用户所需的最低版本。</p><p>该字段是在 Rust 1.56 引入的，若大家使用的 Rust 版本低于该版本，则该字段会被自动忽略时。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">edition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;2021&#39;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rust-version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1.56&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有一点，<code>rust-version</code> 必须比第一个引入 <code>edition</code> 的 Rust 版本要新。例如 Rust Edition 2021 是在 Rust 1.56 版本引入的，若你使用了 <code>edition = &#39;2021&#39;</code> 的 <code>[package]</code> 配置，则指定的 <code>rust version</code> 字段必须要要大于等于 <code>1.56</code> 版本。</p><p>还可以使用 <code>--ignore-rust-version</code> 命令行参数来忽略 <code>rust-version</code>。</p><p>该字段将影响项目中的所有 <code>Cargo Target</code> 和包，前者包含测试用例、benchmark、可执行文件、示例等。</p><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>description</span></a></h2><p>该字段是项目的简介，<code>crates.io</code> 会在项目首页使用该字段包含的内容，<strong>不支持 <code>Markdown</code> 格式</strong>。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;A short description of my package&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意: 若发布 <code>crates.io</code> ，则该字段是必须的</p></blockquote><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation"><span>documentation</span></a></h2><p>该字段用于说明项目文档的地址，若没有设置，<code>crates.io</code> 会自动链接到 <code>docs.rs</code> 上的相应页面。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">documentation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://docs.rs/bitflags&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="readme" tabindex="-1"><a class="header-anchor" href="#readme"><span>readme</span></a></h4><p><code>readme</code> 字段指向项目的 <code>README.md</code> 文件，该文件应该存在项目的根目录下(跟 <code>Cargo.toml</code> 同级)，用于向用户描述项目的详细信息，支持 <code>Markdown</code> 格式。大家看到的 <code>crates.io</code> 上的项目首页就是基于该文件的内容进行渲染的。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">readme</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;README.md&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若该字段未设置且项目根目录下存在 <code>README.md</code>、<code>README.txt</code> 或 <code>README</code> 文件，则该文件的名称将被默认使用。</p><p>你也可以通过将 <code>readme</code> 设置为 <code>false</code> 来禁止该功能，若设置为 <code>true</code> ，则默认值 <code>README.md</code> 将被使用。</p><h4 id="homepage" tabindex="-1"><a class="header-anchor" href="#homepage"><span>homepage</span></a></h4><p>该字段用于设置项目主页的 URL:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">homepage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://serde.rs/&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="repository" tabindex="-1"><a class="header-anchor" href="#repository"><span>repository</span></a></h4><p>设置项目的源代码仓库地址，例如 <code>GitHub</code> 链接:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">repository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/rust-lang/cargo/&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="license-和-license-file" tabindex="-1"><a class="header-anchor" href="#license-和-license-file"><span>license 和 license-file</span></a></h4><p><code>license</code> 字段用于描述项目所遵循的开源协议。而 <code>license-file</code> 则用于指定包含开源协议的文件所在的路径(相对于 <code>Cargo.toml</code>)。</p><p>如果要发布到 <code>crates.io</code> ，则该协议必须是 <a href="https://spdx.dev/spdx-specification-21-web-version/#h.jxpfx0ykyb60" target="_blank" rel="noopener noreferrer">SPDX2.1 协议表达式</a>。同时 <code>license</code> 名称必须是来自于 <a href="https://github.com/spdx/license-list-data/tree/v3.11" target="_blank" rel="noopener noreferrer">SPDX 协议列表 3.11</a>。</p><p>SPDX 只支持使用 <code>AND</code> 、<code>OR</code> 来组合多个开源协议:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">license</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MIT OR Apache-2.0&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>OR</code> 代表用户可以任选一个协议进行遵循，而 <code>AND</code> 表示用户必须要同时遵循两个协议。还可以通过 <code>WITH</code> 来在指定协议之外添加额外的要求:</p><ul><li><code>MIT OR Apache-2.0</code></li><li><code>LGPL-2.1-only AND MIT AND BSD-2-Clause</code></li><li><code>GPL-2.0-or-later WITH Bison-exception-2.2</code></li></ul><p><strong>若项目使用了非标准的协议</strong>，你可以通过指定 <code>license-file</code> 字段来替代 <code>license</code> 的使用:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">license-file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;LICENSE.txt&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：crates.io 要求必须设置 <code>license</code> 或 <code>license-file</code></p></blockquote><h4 id="keywords" tabindex="-1"><a class="header-anchor" href="#keywords"><span>keywords</span></a></h4><p>该字段使用字符串数组的方式来指定项目的关键字列表，当用户在 <code>crates.io</code> 上搜索时，这些关键字可以提供索引的功能。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;gamedev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;graphics&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：<code>crates.io</code> 最多只支持 5 个关键字，每个关键字都必须是合法的 <code>ASCII</code> 文本，且需要使用字母作为开头，只能包含字母、数字、<code>_</code> 和 <code>-</code>，最多支持 20 个字符长度</p></blockquote><h4 id="categories" tabindex="-1"><a class="header-anchor" href="#categories"><span>categories</span></a></h4><p><code>categories</code> 用于描述项目所属的类别:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">categories</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;command-line-utilities&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;development-tools::cargo-plugins&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>注意：<code>crates.io</code> 最多只支持 5 个类别，目前不支持用户随意自定义类别，你所使用的类别需要跟 <a href="https://crates.io/category_slugs" target="_blank" rel="noopener noreferrer">https://crates.io/category_slugs</a> 上的类别<strong>精准匹配</strong>。</p></blockquote><h4 id="workspace" tabindex="-1"><a class="header-anchor" href="#workspace"><span>workspace</span></a></h4><p>该字段用于配置当前项目所属的工作空间。</p><p>若没有设置，则将沿着文件目录向上寻找，直至找到第一个 设置了 <code>[workspace]</code> 的<code>Cargo.toml</code>。因此，当一个成员不在工作空间的子目录时，设置该字段将非常有用。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">workspace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;path/to/workspace/root&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是 <code>Cargo.toml</code> 清单还有一个 <code>[workspace]</code> 部分专门用于设置工作空间，若它被设置了，则 <code>package</code> 中的 <code>workspace</code> 字段将无法被指定。这是因为一个包无法同时满足两个角色：</p><ul><li>该包是工作空间的根包(root crate)，通过 <code>[workspace]</code> 指定)</li><li>该包是另一个工作空间的成员，通过 <code>package.workspace</code> 指定</li></ul><p>若要了解工作空间的更多信息，请参见<a href="https://course.rs/cargo/reference/workspaces.html" target="_blank" rel="noopener noreferrer">这里</a>。</p><h4 id="build" tabindex="-1"><a class="header-anchor" href="#build"><span>build</span></a></h4><p><code>build</code> 用于指定位于项目根目录中的构建脚本，关于构建脚本的更多信息，可以阅读 <a href="https://course.rs/cargo/reference/build-script/intro.html" target="_blank" rel="noopener noreferrer">构建脚本</a> 一章。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;build.rs&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以使用 <code>build = false</code> 来禁止构建脚本的自动检测。</p><h4 id="links" tabindex="-1"><a class="header-anchor" href="#links"><span>links</span></a></h4><p>用于指定项目链接的本地库的名称，更多的信息请看构建脚本章节的 <a href="https://course.rs/cargo/reference/build-script/intro.html#links" target="_blank" rel="noopener noreferrer">links</a></p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">links</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;foo&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="exclude-和-include" tabindex="-1"><a class="header-anchor" href="#exclude-和-include"><span>exclude 和 include</span></a></h4><p>这两个字段可以用于显式地指定想要包含在外或在内的文件列表，往往用于发布到注册服务时。你可以使用 <code>cargo package --list</code> 来检查哪些文件被包含在项目中。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exclude</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/ci&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;images/&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.*&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">include</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/src&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;COPYRIGHT&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/examples&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;!/examples/big_example&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尽管大家可能没有指定 <code>include</code> 或 <code>exclude</code>，但是任然会有些规则自动被应用，一起来看看。</p><p>若 <code>include</code> 没有被指定，则以下文件将被排除在外:</p><ul><li>项目不是 git 仓库，则所有以 <code>.</code> 开头的隐藏文件会被排除</li><li>项目是 git 仓库，通过 <code>.gitignore</code> 配置的文件会被排除</li></ul><p>无论 <code>include</code> 或 <code>exclude</code> 是否被指定，以下文件都会被排除在外:</p><ul><li>任何包含 <code>Cargo.toml</code> 的子目录会被排除</li><li>根目录下的 <code>target</code> 目录会被排除</li></ul><p>以下文件会永远被 <code>include</code> ，你无需显式地指定：</p><ul><li><code>Cargo.toml</code></li><li>若项目包含可执行文件或示例代码，则最小化的 <code>Cargo.lock</code> 会自动被包含</li><li><code>license-file</code> 指定的协议文件</li></ul><blockquote><p>这两个字段很强大，但是对于生产实践而言，我们还是推荐通过 <code>.gitignore</code> 来控制，因为这样协作者更容易看懂。如果大家希望更深入的了解 <code>include/exclude</code>，可以参考下官方的 <code>Cargo</code> <a href="https://doc.rust-lang.org/stable/cargo/reference/manifest.html?search=#the-exclude-and-include-fields" target="_blank" rel="noopener noreferrer">文档</a></p></blockquote><h4 id="publish" tabindex="-1"><a class="header-anchor" href="#publish"><span>publish</span></a></h4><p>该字段常常用于防止项目因为失误被发布到 <code>crates.io</code> 等注册服务上，例如如果希望项目在公司内部私有化，你应该设置：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">publish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以通过字符串数组的方式来指定允许发布到的注册服务名称:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">publish</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;some-registry-name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若 <code>publish</code> 数组中包含了一个注册服务名称，则 <code>cargo publish</code> 命令会使用该注册服务，除非你通过 <code>--registry</code> 来设定额外的规则。</p><h4 id="metadata" tabindex="-1"><a class="header-anchor" href="#metadata"><span>metadata</span></a></h4><p>Cargo 默认情况下会对 <code>Cargo.toml</code> 中未使用的 <code>key</code> 进行警告，以帮助大家提前发现风险。但是 <code>package.metadata</code> 并不在其中，因为它是由用户自定义的提供给外部工具的配置文件。例如：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;...&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以下配置元数据可以在生成安卓 APK 时使用</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">android</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">package-name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;my-awesome-android-app&quot;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">assets</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;path/to/static&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与其相似的还有 <code>[workspace.metadata]</code>，都可以作为外部工具的配置信息来使用。</p><h4 id="default-run" tabindex="-1"><a class="header-anchor" href="#default-run"><span>default-run</span></a></h4><p>当大家使用 <code>cargo run</code> 来运行项目时，该命令会使用默认的二进制可执行文件作为程序启动入口。</p><p>我们可以通过 <code>default-run</code> 来修改默认的入口，例如现在有两个二进制文件 <code>src/bin/a.rs</code> 和 <code>src/bin/b.rs</code>，通过以下配置可以将入口设置为前者:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">default-run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="badges" tabindex="-1"><a class="header-anchor" href="#badges"><span>[badges]</span></a></h2><p>该部分用于指定项目当前的状态，该状态会展示在 <code>crates.io</code> 的项目主页中，例如以下配置可以设置项目的维护状态:</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">badges</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># \`maintenance\` 是项目的当前维护状态，它可能会被其它注册服务所使用，但是目前还没有被 \`crates.io\` 使用:  https://github.com/rust-lang/crates.io/issues/2437</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># \`status\` 字段时必须的，以下是可用的选项:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`actively-developed\`: 新特性正在积极添加中，bug 在持续修复中</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`passively-maintained\`: 目前没有计划去支持新的特性，但是项目维护者可能会回答你提出的 issue</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`as-is\`: 该项目的功能已经完结，维护者不准备继续开发和提供支持了，但是它的功能已经达到了预期</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`experimental\`: 作者希望同大家分享，但是还不准备满足任何人的特殊要求</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`looking-for-maintainer\`: 当前维护者希望将项目转移给新的维护者</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`deprecated\`: 不再推荐使用该项目，需要说明原因以及推荐的替代项目</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># - \`none\`:  不显示任何 badge ，因此维护者没有说明他们的状态，用户需要自己去调查发生了什么</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maintenance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dependencies" tabindex="-1"><a class="header-anchor" href="#dependencies"><span>[dependencies]</span></a></h2><p>在<a href="https://course.rs/cargo/reference/specify-deps.html" target="_blank" rel="noopener noreferrer">之前章节</a>中，我们已经详细介绍过 <code>[dependencies]</code> 、 <code>[dev-dependencies]</code> 和 <code>[build-dependencies]</code>，这里就不再赘述。</p><h2 id="profile" tabindex="-1"><a class="header-anchor" href="#profile"><span>[profile.*]</span></a></h2><p>该部分可以对编译器进行配置，例如 debug 和优化，在后续的<a href="https://course.rs/cargo/reference/profiles.html" target="_blank" rel="noopener noreferrer">编译器优化</a>章节有详细介绍。</p>`,110))])}const u=r(c,[["render",p],["__file","manifest.html.vue"]]),A=JSON.parse('{"path":"/src/cargo/reference/manifest.html","title":"Cargo.toml 格式讲解","lang":"zh-CN","frontmatter":{"description":"Cargo.toml 格式讲解 Cargo.toml 又被称为清单( manifest )，文件格式是 TOML，每一个清单文件都由以下部分组成： — 只能用于 nightly版本的 feature [package] — 定义项目( package )的元信息 name — 名称 version — 版本 authors — 开发作者 edition...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/rust-course/src/cargo/reference/manifest.html"}],["meta",{"property":"og:site_name","content":"rust-course"}],["meta",{"property":"og:title","content":"Cargo.toml 格式讲解"}],["meta",{"property":"og:description","content":"Cargo.toml 格式讲解 Cargo.toml 又被称为清单( manifest )，文件格式是 TOML，每一个清单文件都由以下部分组成： — 只能用于 nightly版本的 feature [package] — 定义项目( package )的元信息 name — 名称 version — 版本 authors — 开发作者 edition..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-24T15:57:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-24T15:57:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cargo.toml 格式讲解\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-24T15:57:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/rust-course/\\"}]}"]]},"git":{"createdTime":1745510270000,"updatedTime":1745510270000,"contributors":[{"name":"Linc","username":"Linc","email":"762699299@qq.com","commits":1,"url":"https://github.com/Linc"}]},"readingTime":{"minutes":12.54,"words":3761},"filePathRelative":"src/cargo/reference/manifest.md","localizedDate":"2025年4月24日","excerpt":"\\n<p><code>Cargo.toml</code> 又被称为清单( <code>manifest</code> )，文件格式是 <code>TOML</code>，每一个清单文件都由以下部分组成：</p>\\n<ul>\\n<li><a href=\\"/rust-course/src/cargo/reference/unstable.html\\" target=\\"_blank\\"><code>cargo-features</code></a> — 只能用于 <code>nightly</code>版本的 <code>feature</code></li>\\n<li><a href=\\"#package\\"><code>[package]</code></a> — 定义项目( <code>package</code> )的元信息\\n<ul>\\n<li><a href=\\"#name\\"><code>name</code></a> — 名称</li>\\n<li><a href=\\"#version\\"><code>version</code></a> — 版本</li>\\n<li><a href=\\"#authors\\"><code>authors</code></a> — 开发作者</li>\\n<li><a href=\\"#edition\\"><code>edition</code></a> — Rust edition.</li>\\n<li><a href=\\"#rust-version\\"><code>rust-version</code></a> — 支持的最小化 Rust 版本</li>\\n<li><a href=\\"#description\\"><code>description</code></a> — 描述</li>\\n<li><a href=\\"#documentation\\"><code>documentation</code></a> — 文档 URL</li>\\n<li><a href=\\"#readme\\"><code>readme</code></a> — README 文件的路径</li>\\n<li><a href=\\"#homepage\\"><code>homepage</code></a> - 主页 URL</li>\\n<li><a href=\\"#repository\\"><code>repository</code></a> — 源代码仓库的 URL</li>\\n<li><a href=\\"#license%E5%92%8Clicense-file\\"><code>license</code></a> — 开源协议 License.</li>\\n<li><a href=\\"#license%E5%92%8Clicense-file\\"><code>license-file</code></a> — License 文件的路径.</li>\\n<li><a href=\\"#keywords\\"><code>keywords</code></a> — 项目的关键词</li>\\n<li><a href=\\"#categories\\"><code>categories</code></a> — 项目分类</li>\\n<li><a href=\\"#workspace\\"><code>workspace</code></a> — 工作空间 workspace 的路径</li>\\n<li><a href=\\"#build\\"><code>build</code></a> — 构建脚本的路径</li>\\n<li><a href=\\"#links\\"><code>links</code></a> — 本地链接库的名称</li>\\n<li><a href=\\"#exclude%E5%92%8Cinclude\\"><code>exclude</code></a> — 发布时排除的文件</li>\\n<li><a href=\\"#exclude%E5%92%8Cinclude\\"><code>include</code></a> — 发布时包含的文件</li>\\n<li><a href=\\"#the-publish-field\\"><code>publish</code></a> — 用于阻止项目的发布</li>\\n<li><a href=\\"#metadata\\"><code>metadata</code></a> — 额外的配置信息，用于提供给外部工具</li>\\n<li><a href=\\"#default-run\\"><code>default-run</code></a> — [<code>cargo run</code>] 所使用的默认可执行文件( binary )</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>autobins</code></a> — 禁止可执行文件的自动发现</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>autoexamples</code></a> — 禁止示例文件的自动发现</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>autotests</code></a> — 禁止测试文件的自动发现</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E5%AF%B9%E8%B1%A1%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>autobenches</code></a> — 禁止 bench 文件的自动发现</li>\\n<li><a href=\\"/rust-course/src/cargo/reference/resolver.html#resolver-versions\\" target=\\"_blank\\"><code>resolver</code></a> — 设置依赖解析器( dependency resolver)</li>\\n</ul>\\n</li>\\n<li>Cargo Target 列表: (查看 <a href=\\"https://course.rs/cargo/reference/cargo-target.html#Target%E9%85%8D%E7%BD%AE\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Target 配置</a> 获取详细设置)\\n<ul>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E5%BA%93%E5%AF%B9%E8%B1%A1library\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[lib]</code></a> — Library target 设置.</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AF%B9%E8%B1%A1binaries\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[[bin]]</code></a> — Binary target 设置.</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E7%A4%BA%E4%BE%8B%E5%AF%B9%E8%B1%A1examples\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[[example]]</code></a> — Example target 设置.</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E6%B5%8B%E8%AF%95%E5%AF%B9%E8%B1%A1tests\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[[test]]</code></a> — Test target 设置.</li>\\n<li><a href=\\"https://course.rs/cargo/reference/cargo-target.html#%E5%9F%BA%E5%87%86%E6%80%A7%E8%83%BD%E5%AF%B9%E8%B1%A1benches\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[[bench]]</code></a> — Benchmark target 设置.</li>\\n</ul>\\n</li>\\n<li>Dependency tables:\\n<ul>\\n<li><a href=\\"https://course.rs/cargo/reference/specify-deps.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[dependencies]</code></a> — 项目依赖包</li>\\n<li><a href=\\"https://course.rs/cargo/reference/specify-deps.html#dev-dependencies\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[dev-dependencies]</code></a> — 用于 examples、tests 和 benchmarks 的依赖包</li>\\n<li><a href=\\"https://course.rs/cargo/reference/specify-deps.html#build-dependencies\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[build-dependencies]</code></a> — 用于构建脚本的依赖包</li>\\n<li><a href=\\"https://course.rs/cargo/reference/specify-deps.html#%E6%A0%B9%E6%8D%AE%E5%B9%B3%E5%8F%B0%E5%BC%95%E5%85%A5%E4%BE%9D%E8%B5%96\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[target]</code></a> — 平台特定的依赖包</li>\\n</ul>\\n</li>\\n<li><a href=\\"#badges\\"><code>[badges]</code></a> — 用于在注册服务(例如 crates.io ) 上显示项目的一些状态信息，例如当前的维护状态：活跃中、寻找维护者、deprecated</li>\\n<li><a href=\\"https://course.rs/cargo/reference/features/intro.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[features]</code></a> — <code>features</code> 可以用于条件编译</li>\\n<li><a href=\\"https://course.rs/cargo/reference/deps-overriding.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[patch]</code></a> — 推荐使用的依赖覆盖方式</li>\\n<li><a href=\\"https://course.rs/cargo/reference/deps-overriding.html#%E4%B8%8D%E6%8E%A8%E8%8D%90%E7%9A%84replace\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[replace]</code></a> — 不推荐使用的依赖覆盖方式 (deprecated).</li>\\n<li><a href=\\"https://course.rs/cargo/reference/profiles.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[profile]</code></a> — 编译器设置和优化</li>\\n<li><a href=\\"https://course.rs/cargo/reference/workspaces.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><code>[workspace]</code></a> — 工作空间的定义</li>\\n</ul>","autoDesc":true,"bioChainData":{"outlink":[{"title":"publishing-on-crates.io","link":"src/cargo/reference/publishing-on-crates.io.html"}],"backlink":[{"title":"SUMMARY","link":"src/SUMMARY.html"}],"localMap":{"nodes":[{"id":"src/cargo/reference/manifest.md","value":{"title":"manifest","path":"src/cargo/reference/manifest.md","outlink":["src/cargo/reference/publishing-on-crates.io.md"],"backlink":["src/SUMMARY.md"]}},{"id":"src/cargo/reference/publishing-on-crates.io.md","value":{"title":"publishing-on-crates.io","path":"src/cargo/reference/publishing-on-crates.io.md","outlink":[],"backlink":[]}},{"id":"src/SUMMARY.md","value":{"title":"SUMMARY","path":"src/SUMMARY.md","outlink":[],"backlink":[]}}],"links":[{"source":"src/cargo/reference/manifest.md","target":"src/cargo/reference/publishing-on-crates.io.md"},{"source":"src/SUMMARY.md","target":"src/cargo/reference/manifest.md"}]}}}');export{u as comp,A as data};
